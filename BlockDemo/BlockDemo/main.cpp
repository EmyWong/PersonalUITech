#ifndef __OBJC2__
#define __OBJC2__
#endif
struct objc_selector; struct objc_class;
struct __rw_objc_super { 
	struct objc_object *object; 
	struct objc_object *superClass; 
	__rw_objc_super(struct objc_object *o, struct objc_object *s) : object(o), superClass(s) {} 
};
#ifndef _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
#define _REWRITER_typedef_Protocol
#endif
#define __OBJC_RW_DLLIMPORT extern
__OBJC_RW_DLLIMPORT void objc_msgSend(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_fpret(void);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getClass(const char *);
__OBJC_RW_DLLIMPORT struct objc_class *class_getSuperclass(struct objc_class *);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getMetaClass(const char *);
__OBJC_RW_DLLIMPORT void objc_exception_throw( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_enter( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_exit( struct objc_object *);
__OBJC_RW_DLLIMPORT Protocol *objc_getProtocol(const char *);
#ifdef _WIN64
typedef unsigned long long  _WIN_NSUInteger;
#else
typedef unsigned int _WIN_NSUInteger;
#endif
#ifndef __FASTENUMERATIONSTATE
struct __objcFastEnumerationState {
	unsigned long state;
	void **itemsPtr;
	unsigned long *mutationsPtr;
	unsigned long extra[5];
};
__OBJC_RW_DLLIMPORT void objc_enumerationMutation(struct objc_object *);
#define __FASTENUMERATIONSTATE
#endif
#ifndef __NSCONSTANTSTRINGIMPL
struct __NSConstantStringImpl {
  int *isa;
  int flags;
  char *str;
#if _WIN64
  long long length;
#else
  long length;
#endif
};
#ifdef CF_EXPORT_CONSTANT_STRING
extern "C" __declspec(dllexport) int __CFConstantStringClassReference[];
#else
__OBJC_RW_DLLIMPORT int __CFConstantStringClassReference[];
#endif
#define __NSCONSTANTSTRINGIMPL
#endif
#ifndef BLOCK_IMPL
#define BLOCK_IMPL
#pragma mark - struct __block_impl -
struct __block_impl {
  void *isa;
  int Flags;
  int Reserved;
  void *FuncPtr;
};
// Runtime copy/destroy helper functions (from Block_private.h)
#ifdef __OBJC_EXPORT_BLOCKS
extern "C" __declspec(dllexport) void _Block_object_assign(void *, const void *, const int);
extern "C" __declspec(dllexport) void _Block_object_dispose(const void *, const int);
extern "C" __declspec(dllexport) void *_NSConcreteGlobalBlock[32];
extern "C" __declspec(dllexport) void *_NSConcreteStackBlock[32];
#else
__OBJC_RW_DLLIMPORT void _Block_object_assign(void *, const void *, const int);
__OBJC_RW_DLLIMPORT void _Block_object_dispose(const void *, const int);
__OBJC_RW_DLLIMPORT void *_NSConcreteGlobalBlock[32];
__OBJC_RW_DLLIMPORT void *_NSConcreteStackBlock[32];
#endif
#endif
#define __block
#define __weak

#include <stdarg.h>
struct __NSContainer_literal {
  void * *arr;
  __NSContainer_literal (unsigned int count, ...) {
	va_list marker;
	va_start(marker, count);
	arr = new void *[count];
	for (unsigned i = 0; i < count; i++)
	  arr[i] = va_arg(marker, void *);
	va_end( marker );
  };
  ~__NSContainer_literal() {
	delete[] arr;
  }
};
extern "C" __declspec(dllimport) void * objc_autoreleasePoolPush(void);
extern "C" __declspec(dllimport) void objc_autoreleasePoolPop(void *);

struct __AtAutoreleasePool {
  __AtAutoreleasePool() {atautoreleasepoolobj = objc_autoreleasePoolPush();}
  ~__AtAutoreleasePool() {objc_autoreleasePoolPop(atautoreleasepoolobj);}
  void * atautoreleasepoolobj;
};

#define __OFFSETOFIVAR__(TYPE, MEMBER) ((long long) &((TYPE *)0)->MEMBER)
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_1b_w5knk2_j31bc6sd266gjwj2w0000gn_T_main_7345c2_mi_0 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello World!",12};
























typedef signed char __int8_t;



typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;

typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
typedef int __darwin_ct_rune_t;





typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;

typedef __mbstate_t __darwin_mbstate_t;


typedef long int __darwin_ptrdiff_t;







typedef long unsigned int __darwin_size_t;





typedef __builtin_va_list __darwin_va_list;





typedef int __darwin_wchar_t;




typedef __darwin_wchar_t __darwin_rune_t;


typedef int __darwin_wint_t;




typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;





typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned long long u_int64_t;


typedef int64_t register_t;






typedef __darwin_intptr_t intptr_t;
typedef unsigned long uintptr_t;



typedef u_int64_t user_addr_t;
typedef u_int64_t user_size_t;
typedef int64_t user_ssize_t;
typedef int64_t user_long_t;
typedef u_int64_t user_ulong_t;
typedef int64_t user_time_t;
typedef int64_t user_off_t;







typedef u_int64_t syscall_arg_t;
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;

typedef __darwin_ino64_t __darwin_ino_t;



typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;
typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];


struct __darwin_pthread_handler_rec {
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};

struct _opaque_pthread_attr_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_cond_t {
 long __sig;
 char __opaque[40];
};

struct _opaque_pthread_condattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_mutex_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_once_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
 long __sig;
 char __opaque[192];
};

struct _opaque_pthread_rwlockattr_t {
 long __sig;
 char __opaque[16];
};

struct _opaque_pthread_t {
 long __sig;
 struct __darwin_pthread_handler_rec *__cleanup_stack;
 char __opaque[8176];
};

typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t *__darwin_pthread_t;

static inline
__uint16_t
_OSSwapInt16(
 __uint16_t _data
 )
{
 return (__uint16_t)((_data << 8) | (_data >> 8));
}

static inline
__uint32_t
_OSSwapInt32(
 __uint32_t _data
 )
{

 return __builtin_bswap32(_data);




}


static inline
__uint64_t
_OSSwapInt64(
 __uint64_t _data
 )
{
 return __builtin_bswap64(_data);
}


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;

typedef unsigned long u_long;


typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;


typedef char * caddr_t;

typedef int32_t daddr_t;


typedef __darwin_dev_t dev_t;

typedef u_int32_t fixpt_t;


typedef __darwin_blkcnt_t blkcnt_t;
typedef __darwin_blksize_t blksize_t;
typedef __darwin_gid_t gid_t;
typedef __uint32_t in_addr_t;
typedef __uint16_t in_port_t;
typedef __darwin_ino_t ino_t;


typedef __darwin_ino64_t ino64_t;


typedef __int32_t key_t;
typedef __darwin_mode_t mode_t;
typedef __uint16_t nlink_t;
typedef __darwin_id_t id_t;
typedef __darwin_pid_t pid_t;
typedef __darwin_off_t off_t;

typedef int32_t segsz_t;
typedef int32_t swblk_t;


typedef __darwin_uid_t uid_t;
static inline __int32_t
major(__uint32_t _x)
{
 return (__int32_t)(((__uint32_t)_x >> 24) & 0xff);
}

static inline __int32_t
minor(__uint32_t _x)
{
 return (__int32_t)((_x) & 0xffffff);
}

static inline dev_t
makedev(__uint32_t _major, __uint32_t _minor)
{
 return (dev_t)(((_major) << 24) | (_minor));
}
typedef __darwin_clock_t clock_t;
typedef __darwin_size_t size_t;
typedef __darwin_ssize_t ssize_t;
typedef __darwin_time_t time_t;

typedef __darwin_useconds_t useconds_t;
typedef __darwin_suseconds_t suseconds_t;


typedef __darwin_size_t rsize_t;
typedef int errno_t;








extern "C" {
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;
}


static inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return _p->fds_bits[(unsigned long)_n / (sizeof(__int32_t) * 8)] & ((__int32_t)(((unsigned long)1) << ((unsigned long)_n % (sizeof(__int32_t) * 8))));
}




typedef __int32_t fd_mask;










typedef __darwin_pthread_attr_t pthread_attr_t;
typedef __darwin_pthread_cond_t pthread_cond_t;
typedef __darwin_pthread_condattr_t pthread_condattr_t;
typedef __darwin_pthread_mutex_t pthread_mutex_t;
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
typedef __darwin_pthread_once_t pthread_once_t;
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
typedef __darwin_pthread_t pthread_t;



typedef __darwin_pthread_key_t pthread_key_t;




typedef __darwin_fsblkcnt_t fsblkcnt_t;
typedef __darwin_fsfilcnt_t fsfilcnt_t;
typedef __builtin_va_list va_list;
typedef __builtin_va_list __gnuc_va_list;


typedef int __darwin_nl_item;
typedef int __darwin_wctrans_t;

typedef __uint32_t __darwin_wctype_t;

typedef enum {
 P_ALL,
 P_PID,
 P_PGID
} idtype_t;
typedef int sig_atomic_t;
struct __darwin_i386_thread_state
{
    unsigned int __eax;
    unsigned int __ebx;
    unsigned int __ecx;
    unsigned int __edx;
    unsigned int __edi;
    unsigned int __esi;
    unsigned int __ebp;
    unsigned int __esp;
    unsigned int __ss;
    unsigned int __eflags;
    unsigned int __eip;
    unsigned int __cs;
    unsigned int __ds;
    unsigned int __es;
    unsigned int __fs;
    unsigned int __gs;
};
struct __darwin_fp_control
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
      :2,
    __pc :2,





    __rc :2,






             :1,
      :3;
};
typedef struct __darwin_fp_control __darwin_fp_control_t;
struct __darwin_fp_status
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
    __stkflt :1,
    __errsumm :1,
    __c0 :1,
    __c1 :1,
    __c2 :1,
    __tos :3,
    __c3 :1,
    __busy :1;
};
typedef struct __darwin_fp_status __darwin_fp_status_t;
struct __darwin_mmst_reg
{
 char __mmst_reg[10];
 char __mmst_rsrv[6];
};
struct __darwin_xmm_reg
{
 char __xmm_reg[16];
};
struct __darwin_ymm_reg
{
 char __ymm_reg[32];
};
struct __darwin_zmm_reg
{
 char __zmm_reg[64];
};
struct __darwin_opmask_reg
{
 char __opmask_reg[8];
};
struct __darwin_i386_float_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
};


struct __darwin_i386_avx_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
};


struct __darwin_i386_avx512_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_opmask_reg __fpu_k0;
 struct __darwin_opmask_reg __fpu_k1;
 struct __darwin_opmask_reg __fpu_k2;
 struct __darwin_opmask_reg __fpu_k3;
 struct __darwin_opmask_reg __fpu_k4;
 struct __darwin_opmask_reg __fpu_k5;
 struct __darwin_opmask_reg __fpu_k6;
 struct __darwin_opmask_reg __fpu_k7;
 struct __darwin_ymm_reg __fpu_zmmh0;
 struct __darwin_ymm_reg __fpu_zmmh1;
 struct __darwin_ymm_reg __fpu_zmmh2;
 struct __darwin_ymm_reg __fpu_zmmh3;
 struct __darwin_ymm_reg __fpu_zmmh4;
 struct __darwin_ymm_reg __fpu_zmmh5;
 struct __darwin_ymm_reg __fpu_zmmh6;
 struct __darwin_ymm_reg __fpu_zmmh7;
};
struct __darwin_i386_exception_state
{
 __uint16_t __trapno;
 __uint16_t __cpu;
 __uint32_t __err;
 __uint32_t __faultvaddr;
};
struct __darwin_x86_debug_state32
{
 unsigned int __dr0;
 unsigned int __dr1;
 unsigned int __dr2;
 unsigned int __dr3;
 unsigned int __dr4;
 unsigned int __dr5;
 unsigned int __dr6;
 unsigned int __dr7;
};
struct __x86_pagein_state
{
 int __pagein_error;
};







struct __darwin_x86_thread_state64
{
 __uint64_t __rax;
 __uint64_t __rbx;
 __uint64_t __rcx;
 __uint64_t __rdx;
 __uint64_t __rdi;
 __uint64_t __rsi;
 __uint64_t __rbp;
 __uint64_t __rsp;
 __uint64_t __r8;
 __uint64_t __r9;
 __uint64_t __r10;
 __uint64_t __r11;
 __uint64_t __r12;
 __uint64_t __r13;
 __uint64_t __r14;
 __uint64_t __r15;
 __uint64_t __rip;
 __uint64_t __rflags;
 __uint64_t __cs;
 __uint64_t __fs;
 __uint64_t __gs;
};
struct __darwin_x86_thread_full_state64
{
 struct __darwin_x86_thread_state64 __ss64;
 __uint64_t __ds;
 __uint64_t __es;
 __uint64_t __ss;
 __uint64_t __gsbase;
};
struct __darwin_x86_float_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
};


struct __darwin_x86_avx_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_xmm_reg __fpu_ymmh8;
 struct __darwin_xmm_reg __fpu_ymmh9;
 struct __darwin_xmm_reg __fpu_ymmh10;
 struct __darwin_xmm_reg __fpu_ymmh11;
 struct __darwin_xmm_reg __fpu_ymmh12;
 struct __darwin_xmm_reg __fpu_ymmh13;
 struct __darwin_xmm_reg __fpu_ymmh14;
 struct __darwin_xmm_reg __fpu_ymmh15;
};


struct __darwin_x86_avx512_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_xmm_reg __fpu_ymmh8;
 struct __darwin_xmm_reg __fpu_ymmh9;
 struct __darwin_xmm_reg __fpu_ymmh10;
 struct __darwin_xmm_reg __fpu_ymmh11;
 struct __darwin_xmm_reg __fpu_ymmh12;
 struct __darwin_xmm_reg __fpu_ymmh13;
 struct __darwin_xmm_reg __fpu_ymmh14;
 struct __darwin_xmm_reg __fpu_ymmh15;
 struct __darwin_opmask_reg __fpu_k0;
 struct __darwin_opmask_reg __fpu_k1;
 struct __darwin_opmask_reg __fpu_k2;
 struct __darwin_opmask_reg __fpu_k3;
 struct __darwin_opmask_reg __fpu_k4;
 struct __darwin_opmask_reg __fpu_k5;
 struct __darwin_opmask_reg __fpu_k6;
 struct __darwin_opmask_reg __fpu_k7;
 struct __darwin_ymm_reg __fpu_zmmh0;
 struct __darwin_ymm_reg __fpu_zmmh1;
 struct __darwin_ymm_reg __fpu_zmmh2;
 struct __darwin_ymm_reg __fpu_zmmh3;
 struct __darwin_ymm_reg __fpu_zmmh4;
 struct __darwin_ymm_reg __fpu_zmmh5;
 struct __darwin_ymm_reg __fpu_zmmh6;
 struct __darwin_ymm_reg __fpu_zmmh7;
 struct __darwin_ymm_reg __fpu_zmmh8;
 struct __darwin_ymm_reg __fpu_zmmh9;
 struct __darwin_ymm_reg __fpu_zmmh10;
 struct __darwin_ymm_reg __fpu_zmmh11;
 struct __darwin_ymm_reg __fpu_zmmh12;
 struct __darwin_ymm_reg __fpu_zmmh13;
 struct __darwin_ymm_reg __fpu_zmmh14;
 struct __darwin_ymm_reg __fpu_zmmh15;
 struct __darwin_zmm_reg __fpu_zmm16;
 struct __darwin_zmm_reg __fpu_zmm17;
 struct __darwin_zmm_reg __fpu_zmm18;
 struct __darwin_zmm_reg __fpu_zmm19;
 struct __darwin_zmm_reg __fpu_zmm20;
 struct __darwin_zmm_reg __fpu_zmm21;
 struct __darwin_zmm_reg __fpu_zmm22;
 struct __darwin_zmm_reg __fpu_zmm23;
 struct __darwin_zmm_reg __fpu_zmm24;
 struct __darwin_zmm_reg __fpu_zmm25;
 struct __darwin_zmm_reg __fpu_zmm26;
 struct __darwin_zmm_reg __fpu_zmm27;
 struct __darwin_zmm_reg __fpu_zmm28;
 struct __darwin_zmm_reg __fpu_zmm29;
 struct __darwin_zmm_reg __fpu_zmm30;
 struct __darwin_zmm_reg __fpu_zmm31;
};
struct __darwin_x86_exception_state64
{
    __uint16_t __trapno;
    __uint16_t __cpu;
    __uint32_t __err;
    __uint64_t __faultvaddr;
};
struct __darwin_x86_debug_state64
{
 __uint64_t __dr0;
 __uint64_t __dr1;
 __uint64_t __dr2;
 __uint64_t __dr3;
 __uint64_t __dr4;
 __uint64_t __dr5;
 __uint64_t __dr6;
 __uint64_t __dr7;
};
struct __darwin_x86_cpmu_state64
{
 __uint64_t __ctrs[16];
};




struct __darwin_mcontext32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_float_state __fs;
};


struct __darwin_mcontext_avx32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_avx_state __fs;
};



struct __darwin_mcontext_avx512_32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_avx512_state __fs;
};
struct __darwin_mcontext64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};


struct __darwin_mcontext64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};


struct __darwin_mcontext_avx64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_avx_state64 __fs;
};


struct __darwin_mcontext_avx64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_avx_state64 __fs;
};



struct __darwin_mcontext_avx512_64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_avx512_state64 __fs;
};


struct __darwin_mcontext_avx512_64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_avx512_state64 __fs;
};
typedef struct __darwin_mcontext64 *mcontext_t;



struct __darwin_sigaltstack
{
 void *ss_sp;
 __darwin_size_t ss_size;
 int ss_flags;
};
typedef struct __darwin_sigaltstack stack_t;


struct __darwin_ucontext
{
 int uc_onstack;
 __darwin_sigset_t uc_sigmask;
 struct __darwin_sigaltstack uc_stack;
 struct __darwin_ucontext *uc_link;
 __darwin_size_t uc_mcsize;
 struct __darwin_mcontext64 *uc_mcontext;



};


typedef struct __darwin_ucontext ucontext_t;


typedef __darwin_sigset_t sigset_t;



union sigval {

 int sival_int;
 void *sival_ptr;
};





struct sigevent {
 int sigev_notify;
 int sigev_signo;
 union sigval sigev_value;
 void (*sigev_notify_function)(union sigval);
 pthread_attr_t *sigev_notify_attributes;
};


typedef struct __siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 pid_t si_pid;
 uid_t si_uid;
 int si_status;
 void *si_addr;
 union sigval si_value;
 long si_band;
 unsigned long __pad[7];
} siginfo_t;
union __sigaction_u {
 void (*__sa_handler)(int);
 void (*__sa_sigaction)(int, struct __siginfo *,
     void *);
};


struct __sigaction {
 union __sigaction_u __sigaction_u;
 void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
 sigset_t sa_mask;
 int sa_flags;
};




struct sigaction {
 union __sigaction_u __sigaction_u;
 sigset_t sa_mask;
 int sa_flags;
};
typedef void (*sig_t)(int);
struct sigvec {
 void (*sv_handler)(int);
 int sv_mask;
 int sv_flags;
};
struct sigstack {
 char *ss_sp;
 int ss_onstack;
};
extern "C" {
    void(*signal(int, void (*)(int)))(int);
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;


typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;



typedef int8_t int_fast8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
typedef long int intmax_t;
typedef long unsigned int uintmax_t;







struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};








typedef __uint64_t rlim_t;
struct rusage {
 struct timeval ru_utime;
 struct timeval ru_stime;
 long ru_maxrss;

 long ru_ixrss;
 long ru_idrss;
 long ru_isrss;
 long ru_minflt;
 long ru_majflt;
 long ru_nswap;
 long ru_inblock;
 long ru_oublock;
 long ru_msgsnd;
 long ru_msgrcv;
 long ru_nsignals;
 long ru_nvcsw;
 long ru_nivcsw;


};
typedef void *rusage_info_t;

struct rusage_info_v0 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
};

struct rusage_info_v1 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
};

struct rusage_info_v2 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
};

struct rusage_info_v3 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
};

struct rusage_info_v4 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
 uint64_t ri_logical_writes;
 uint64_t ri_lifetime_max_phys_footprint;
 uint64_t ri_instructions;
 uint64_t ri_cycles;
 uint64_t ri_billed_energy;
 uint64_t ri_serviced_energy;
 uint64_t ri_interval_max_phys_footprint;
 uint64_t ri_runnable_time;
};

typedef struct rusage_info_v4 rusage_info_current;
struct rlimit {
 rlim_t rlim_cur;
 rlim_t rlim_max;
};
struct proc_rlimit_control_wakeupmon {
 uint32_t wm_flags;
 int32_t wm_rate;
};
extern "C" {
int getpriority(int, id_t);

int getiopolicy_np(int, int) __attribute__((availability(ios,introduced=2.0)));

int getrlimit(int, struct rlimit *) __asm("_" "getrlimit" );
int getrusage(int, struct rusage *);
int setpriority(int, id_t, int);

int setiopolicy_np(int, int, int) __attribute__((availability(ios,introduced=2.0)));

int setrlimit(int, const struct rlimit *) __asm("_" "setrlimit" );
}
union wait {
 int w_status;



 struct {

  unsigned int w_Termsig:7,
      w_Coredump:1,
      w_Retcode:8,
      w_Filler:16;







 } w_T;





 struct {

  unsigned int w_Stopval:8,
      w_Stopsig:8,
      w_Filler:16;






 } w_S;
};
extern "C" {
pid_t wait(int *) __asm("_" "wait" );
pid_t waitpid(pid_t, int *, int) __asm("_" "waitpid" );

int waitid(idtype_t, id_t, siginfo_t *, int) __asm("_" "waitid" );


pid_t wait3(int *, int, struct rusage *);
pid_t wait4(pid_t, int *, int, struct rusage *);

}

extern "C" {
void *alloca(size_t);
}








typedef __darwin_ct_rune_t ct_rune_t;
typedef __darwin_rune_t rune_t;



typedef struct {
 int quot;
 int rem;
} div_t;

typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef struct {
 long long quot;
 long long rem;
} lldiv_t;



extern int __mb_cur_max;
extern "C" {

void *malloc(size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1)));
void *calloc(size_t __count, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1,2)));
void free(void *);
void *realloc(void *__ptr, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));

void *valloc(size_t) __attribute__((alloc_size(1)));






int posix_memalign(void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(ios,introduced=3.0)));

}

extern "C" {
void abort(void) __attribute__((__cold__)) __attribute__((__noreturn__));
int abs(int) __attribute__((__const__));
int atexit(void (* _Nonnull)(void));
double atof(const char *);
int atoi(const char *);
long atol(const char *);

long long
  atoll(const char *);

void *bsearch(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (* _Nonnull __compar)(const void *, const void *));

div_t div(int, int) __attribute__((__const__));
void exit(int) __attribute__((__noreturn__));

char *getenv(const char *);
long labs(long) __attribute__((__const__));
ldiv_t ldiv(long, long) __attribute__((__const__));

long long
  llabs(long long);
lldiv_t lldiv(long long, long long);


int mblen(const char *__s, size_t __n);
size_t mbstowcs(wchar_t * , const char * , size_t);
int mbtowc(wchar_t * , const char * , size_t);

void qsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));
int rand(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

void srand(unsigned) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
double strtod(const char *, char **) __asm("_" "strtod" );
float strtof(const char *, char **) __asm("_" "strtof" );
long strtol(const char *__str, char **__endptr, int __base);
long double
  strtold(const char *, char **);

long long
  strtoll(const char *__str, char **__endptr, int __base);

unsigned long
  strtoul(const char *__str, char **__endptr, int __base);

unsigned long long
  strtoull(const char *__str, char **__endptr, int __base);
__attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")))
__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
int system(const char *) __asm("_" "system" );



size_t wcstombs(char * , const wchar_t * , size_t);
int wctomb(char *, wchar_t);


void _Exit(int) __attribute__((__noreturn__));
long a64l(const char *);
double drand48(void);
char *ecvt(double, int, int *, int *);
double erand48(unsigned short[3]);
char *fcvt(double, int, int *, int *);
char *gcvt(double, int, char *);
int getsubopt(char **, char * const *, char **);
int grantpt(int);

char *initstate(unsigned, char *, size_t);



long jrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *l64a(long);
void lcong48(unsigned short[7]);
long lrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *mktemp(char *);
int mkstemp(char *);
long mrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
long nrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int posix_openpt(int);
char *ptsname(int);


int ptsname_r(int fildes, char *buffer, size_t buflen) __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3))) __attribute__((availability(watchos,introduced=4.3)));


int putenv(char *) __asm("_" "putenv" );
long random(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int rand_r(unsigned *) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

char *realpath(const char * , char * ) __asm("_" "realpath" "$DARWIN_EXTSN");



unsigned short
 *seed48(unsigned short[3]);
int setenv(const char * __name, const char * __value, int __overwrite) __asm("_" "setenv" );

void setkey(const char *) __asm("_" "setkey" );



char *setstate(const char *);
void srand48(long);

void srandom(unsigned);



int unlockpt(int);

int unsetenv(const char *) __asm("_" "unsetenv" );
uint32_t arc4random(void);
void arc4random_addrandom(unsigned char * , int )
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(macosx,deprecated=10.12,message="use arc4random_stir")))
    __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(ios,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(watchos,introduced=1.0))) __attribute__((availability(watchos,deprecated=3.0,message="use arc4random_stir")));
void arc4random_buf(void * __buf, size_t __nbytes) __attribute__((availability(ios,introduced=4.3)));
void arc4random_stir(void);
uint32_t
  arc4random_uniform(uint32_t __upper_bound) __attribute__((availability(ios,introduced=4.3)));

int atexit_b(void (^ _Nonnull)(void)) __attribute__((availability(ios,introduced=3.2)));
void *bsearch_b(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));



char *cgetcap(char *, const char *, int);
int cgetclose(void);
int cgetent(char **, char **, const char *);
int cgetfirst(char **, char **);
int cgetmatch(const char *, const char *);
int cgetnext(char **, char **);
int cgetnum(char *, const char *, long *);
int cgetset(const char *);
int cgetstr(char *, const char *, char **);
int cgetustr(char *, const char *, char **);

int daemon(int, int) __asm("_" "daemon" ) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use posix_spawn APIs instead."))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *devname(dev_t, mode_t);
char *devname_r(dev_t, mode_t, char *buf, int len);
char *getbsize(int *, long *);
int getloadavg(double [], int);
const char
 *getprogname(void);
void setprogname(const char *);
int heapsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int heapsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(ios,introduced=3.2)));

int mergesort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int mergesort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(ios,introduced=3.2)));

void psort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *))
     __attribute__((availability(ios,introduced=3.2)));

void psort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(ios,introduced=3.2)));

void psort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *))
     __attribute__((availability(ios,introduced=3.2)));

void qsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(ios,introduced=3.2)));

void qsort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *));
int radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
int rpmatch(const char *)
 __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
int sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
void sranddev(void);
void srandomdev(void);
void *reallocf(void *__ptr, size_t __size) __attribute__((alloc_size(2)));

long long
  strtoq(const char *__str, char **__endptr, int __base);
unsigned long long
  strtouq(const char *__str, char **__endptr, int __base);

extern char *suboptarg;







}
extern "C" {
void __assert_rtn(const char *, const char *, int, const char *) __attribute__((__noreturn__)) __attribute__((__cold__)) __attribute__((__disable_tail_calls__));



}
typedef __darwin_wint_t wint_t;
typedef struct {
 __darwin_rune_t __min;
 __darwin_rune_t __max;
 __darwin_rune_t __map;
 __uint32_t *__types;
} _RuneEntry;

typedef struct {
 int __nranges;
 _RuneEntry *__ranges;
} _RuneRange;

typedef struct {
 char __name[14];
 __uint32_t __mask;
} _RuneCharClass;

typedef struct {
 char __magic[8];
 char __encoding[32];

 __darwin_rune_t (*__sgetrune)(const char *, __darwin_size_t, char const **);
 int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);
 __darwin_rune_t __invalid_rune;

 __uint32_t __runetype[(1 <<8 )];
 __darwin_rune_t __maplower[(1 <<8 )];
 __darwin_rune_t __mapupper[(1 <<8 )];






 _RuneRange __runetype_ext;
 _RuneRange __maplower_ext;
 _RuneRange __mapupper_ext;

 void *__variable;
 int __variable_len;




 int __ncharclasses;
 _RuneCharClass *__charclasses;
} _RuneLocale;



extern "C" {
extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;
}
extern "C" {
unsigned long ___runetype(__darwin_ct_rune_t);
__darwin_ct_rune_t ___tolower(__darwin_ct_rune_t);
__darwin_ct_rune_t ___toupper(__darwin_ct_rune_t);
}

inline int
isascii(int _c)
{
 return ((_c & ~0x7F) == 0);
}
extern "C" {
int __maskrune(__darwin_ct_rune_t, unsigned long);
}


inline int
__istype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (isascii(_c) ? !!(_DefaultRuneLocale.__runetype[_c] & _f)
  : !!__maskrune(_c, _f));

}

inline __darwin_ct_rune_t
__isctype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (_c < 0 || _c >= (1 <<8 )) ? 0 :
  !!(_DefaultRuneLocale.__runetype[_c] & _f);

}
extern "C" {
__darwin_ct_rune_t __toupper(__darwin_ct_rune_t);
__darwin_ct_rune_t __tolower(__darwin_ct_rune_t);
}


inline int
__wcwidth(__darwin_ct_rune_t _c)
{
 unsigned int _x;

 if (_c == 0)
  return (0);
 _x = (unsigned int)__maskrune(_c, 0xe0000000L|0x00040000L);
 if ((_x & 0xe0000000L) != 0)
  return ((_x & 0xe0000000L) >> 30);
 return ((_x & 0x00040000L) != 0 ? 1 : -1);
}






inline int
isalnum(int _c)
{
 return (__istype(_c, 0x00000100L|0x00000400L));
}

inline int
isalpha(int _c)
{
 return (__istype(_c, 0x00000100L));
}

inline int
isblank(int _c)
{
 return (__istype(_c, 0x00020000L));
}

inline int
iscntrl(int _c)
{
 return (__istype(_c, 0x00000200L));
}


inline int
isdigit(int _c)
{
 return (__isctype(_c, 0x00000400L));
}

inline int
isgraph(int _c)
{
 return (__istype(_c, 0x00000800L));
}

inline int
islower(int _c)
{
 return (__istype(_c, 0x00001000L));
}

inline int
isprint(int _c)
{
 return (__istype(_c, 0x00040000L));
}

inline int
ispunct(int _c)
{
 return (__istype(_c, 0x00002000L));
}

inline int
isspace(int _c)
{
 return (__istype(_c, 0x00004000L));
}

inline int
isupper(int _c)
{
 return (__istype(_c, 0x00008000L));
}


inline int
isxdigit(int _c)
{
 return (__isctype(_c, 0x00010000L));
}

inline int
toascii(int _c)
{
 return (_c & 0x7F);
}

inline int
tolower(int _c)
{
        return (__tolower(_c));
}

inline int
toupper(int _c)
{
        return (__toupper(_c));
}


inline int
digittoint(int _c)
{
 return (__maskrune(_c, 0x0F));
}

inline int
ishexnumber(int _c)
{
 return (__istype(_c, 0x00010000L));
}

inline int
isideogram(int _c)
{
 return (__istype(_c, 0x00080000L));
}

inline int
isnumber(int _c)
{
 return (__istype(_c, 0x00000400L));
}

inline int
isphonogram(int _c)
{
 return (__istype(_c, 0x00200000L));
}

inline int
isrune(int _c)
{
 return (__istype(_c, 0xFFFFFFF0L));
}

inline int
isspecial(int _c)
{
 return (__istype(_c, 0x00100000L));
}
extern "C" {
extern int * __error(void);

}





struct lconv {
 char *decimal_point;
 char *thousands_sep;
 char *grouping;
 char *int_curr_symbol;
 char *currency_symbol;
 char *mon_decimal_point;
 char *mon_thousands_sep;
 char *mon_grouping;
 char *positive_sign;
 char *negative_sign;
 char int_frac_digits;
 char frac_digits;
 char p_cs_precedes;
 char p_sep_by_space;
 char n_cs_precedes;
 char n_sep_by_space;
 char p_sign_posn;
 char n_sign_posn;
 char int_p_cs_precedes;
 char int_n_cs_precedes;
 char int_p_sep_by_space;
 char int_n_sep_by_space;
 char int_p_sign_posn;
 char int_n_sign_posn;
};



extern "C" {
struct lconv *localeconv(void);
}
extern "C" {
char *setlocale(int, const char *);
}
extern "C" {
    typedef float float_t;
    typedef double double_t;
extern int __math_errhandling(void);
extern int __fpclassifyf(float);
extern int __fpclassifyd(double);
extern int __fpclassifyl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float);
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double);
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double);
inline __attribute__ ((__always_inline__)) int __inline_isinff(float);
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double);
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnand(double);
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double);
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double);
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float);
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double);
inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double);

inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float __x) {
    return __x == __x && __builtin_fabsf(__x) != __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double __x) {
    return __x == __x && __builtin_fabs(__x) != __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double __x) {
    return __x == __x && __builtin_fabsl(__x) != __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isinff(float __x) {
    return __builtin_fabsf(__x) == __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double __x) {
    return __builtin_fabs(__x) == __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double __x) {
    return __builtin_fabsl(__x) == __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnand(double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float __x) {
    union { float __f; unsigned int __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 31);
}
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double __x) {
    union { double __f; unsigned long long __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 63);
}

inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double __x) {
    union {
        long double __ld;
        struct{ unsigned long long __m; unsigned short __sexp; } __p;
    } __u;
    __u.__ld = __x;
    return (int)(__u.__p.__sexp >> 15);
}







inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float __x) {
    return __inline_isfinitef(__x) && __builtin_fabsf(__x) >= 1.17549435e-38F;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double __x) {
    return __inline_isfinited(__x) && __builtin_fabs(__x) >= 2.2250738585072014e-308;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double __x) {
    return __inline_isfinitel(__x) && __builtin_fabsl(__x) >= 3.36210314311209350626e-4932L;
}
extern float acosf(float);
extern double acos(double);
extern long double acosl(long double);

extern float asinf(float);
extern double asin(double);
extern long double asinl(long double);

extern float atanf(float);
extern double atan(double);
extern long double atanl(long double);

extern float atan2f(float, float);
extern double atan2(double, double);
extern long double atan2l(long double, long double);

extern float cosf(float);
extern double cos(double);
extern long double cosl(long double);

extern float sinf(float);
extern double sin(double);
extern long double sinl(long double);

extern float tanf(float);
extern double tan(double);
extern long double tanl(long double);

extern float acoshf(float);
extern double acosh(double);
extern long double acoshl(long double);

extern float asinhf(float);
extern double asinh(double);
extern long double asinhl(long double);

extern float atanhf(float);
extern double atanh(double);
extern long double atanhl(long double);

extern float coshf(float);
extern double cosh(double);
extern long double coshl(long double);

extern float sinhf(float);
extern double sinh(double);
extern long double sinhl(long double);

extern float tanhf(float);
extern double tanh(double);
extern long double tanhl(long double);

extern float expf(float);
extern double exp(double);
extern long double expl(long double);

extern float exp2f(float);
extern double exp2(double);
extern long double exp2l(long double);

extern float expm1f(float);
extern double expm1(double);
extern long double expm1l(long double);

extern float logf(float);
extern double log(double);
extern long double logl(long double);

extern float log10f(float);
extern double log10(double);
extern long double log10l(long double);

extern float log2f(float);
extern double log2(double);
extern long double log2l(long double);

extern float log1pf(float);
extern double log1p(double);
extern long double log1pl(long double);

extern float logbf(float);
extern double logb(double);
extern long double logbl(long double);

extern float modff(float, float *);
extern double modf(double, double *);
extern long double modfl(long double, long double *);

extern float ldexpf(float, int);
extern double ldexp(double, int);
extern long double ldexpl(long double, int);

extern float frexpf(float, int *);
extern double frexp(double, int *);
extern long double frexpl(long double, int *);

extern int ilogbf(float);
extern int ilogb(double);
extern int ilogbl(long double);

extern float scalbnf(float, int);
extern double scalbn(double, int);
extern long double scalbnl(long double, int);

extern float scalblnf(float, long int);
extern double scalbln(double, long int);
extern long double scalblnl(long double, long int);

extern float fabsf(float);
extern double fabs(double);
extern long double fabsl(long double);

extern float cbrtf(float);
extern double cbrt(double);
extern long double cbrtl(long double);

extern float hypotf(float, float);
extern double hypot(double, double);
extern long double hypotl(long double, long double);

extern float powf(float, float);
extern double pow(double, double);
extern long double powl(long double, long double);

extern float sqrtf(float);
extern double sqrt(double);
extern long double sqrtl(long double);

extern float erff(float);
extern double erf(double);
extern long double erfl(long double);

extern float erfcf(float);
extern double erfc(double);
extern long double erfcl(long double);




extern float lgammaf(float);
extern double lgamma(double);
extern long double lgammal(long double);

extern float tgammaf(float);
extern double tgamma(double);
extern long double tgammal(long double);

extern float ceilf(float);
extern double ceil(double);
extern long double ceill(long double);

extern float floorf(float);
extern double floor(double);
extern long double floorl(long double);

extern float nearbyintf(float);
extern double nearbyint(double);
extern long double nearbyintl(long double);

extern float rintf(float);
extern double rint(double);
extern long double rintl(long double);

extern long int lrintf(float);
extern long int lrint(double);
extern long int lrintl(long double);

extern float roundf(float);
extern double round(double);
extern long double roundl(long double);

extern long int lroundf(float);
extern long int lround(double);
extern long int lroundl(long double);




extern long long int llrintf(float);
extern long long int llrint(double);
extern long long int llrintl(long double);

extern long long int llroundf(float);
extern long long int llround(double);
extern long long int llroundl(long double);


extern float truncf(float);
extern double trunc(double);
extern long double truncl(long double);

extern float fmodf(float, float);
extern double fmod(double, double);
extern long double fmodl(long double, long double);

extern float remainderf(float, float);
extern double remainder(double, double);
extern long double remainderl(long double, long double);

extern float remquof(float, float, int *);
extern double remquo(double, double, int *);
extern long double remquol(long double, long double, int *);

extern float copysignf(float, float);
extern double copysign(double, double);
extern long double copysignl(long double, long double);

extern float nanf(const char *);
extern double nan(const char *);
extern long double nanl(const char *);

extern float nextafterf(float, float);
extern double nextafter(double, double);
extern long double nextafterl(long double, long double);

extern double nexttoward(double, long double);
extern float nexttowardf(float, long double);
extern long double nexttowardl(long double, long double);

extern float fdimf(float, float);
extern double fdim(double, double);
extern long double fdiml(long double, long double);

extern float fmaxf(float, float);
extern double fmax(double, double);
extern long double fmaxl(long double, long double);

extern float fminf(float, float);
extern double fmin(double, double);
extern long double fminl(long double, long double);

extern float fmaf(float, float, float);
extern double fma(double, double, double);
extern long double fmal(long double, long double, long double);
extern float __inff(void)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="use `(float)INFINITY` instead"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern double __inf(void)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="use `INFINITY` instead"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern long double __infl(void)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="use `(long double)INFINITY` instead"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern float __nan(void)
__attribute__((availability(macos,introduced=10.0,deprecated=10.14,message="use `NAN` instead"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern float __exp10f(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern double __exp10(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));





inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp);
extern float __cospif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern double __cospi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern float __sinpif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern double __sinpi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern float __tanpif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern double __tanpi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp);






struct __float2 { float __sinval; float __cosval; };
struct __double2 { double __sinval; double __cosval; };

extern struct __float2 __sincosf_stret(float);
extern struct __double2 __sincos_stret(double);
extern struct __float2 __sincospif_stret(float);
extern struct __double2 __sincospi_stret(double);

inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincosf_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincos_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincospif_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincospi_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}







extern double j0(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double j1(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double jn(int, double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double y0(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double y1(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double yn(int, double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));
extern double scalb(double, double);
extern int signgam;
extern long int rinttol(double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,replacement="lrint"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern long int roundtol(double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,replacement="lround"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern double drem(double, double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,replacement="remainder"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern int finite(double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use `isfinite((double)x)` instead."))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern double gamma(double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,replacement="tgamma"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern double significand(double)
__attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use `2*frexp( )` or `scalbn(x, -ilogb(x))` instead."))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
}
typedef int jmp_buf[((9 * 2) + 3 + 16)];
typedef int sigjmp_buf[((9 * 2) + 3 + 16) + 1];
extern "C" {
extern int setjmp(jmp_buf);
extern void longjmp(jmp_buf, int) __attribute__((__noreturn__));


int _setjmp(jmp_buf);
void _longjmp(jmp_buf, int) __attribute__((__noreturn__));
int sigsetjmp(sigjmp_buf, int);
void siglongjmp(sigjmp_buf, int) __attribute__((__noreturn__));



void longjmperror(void);

}
extern const char *const sys_signame[32];
extern const char *const sys_siglist[32];


extern "C" {
int raise(int);
}


extern "C" {
void (* _Nullable bsd_signal(int, void (* _Nullable)(int)))(int);
int kill(pid_t, int) __asm("_" "kill" );
int killpg(pid_t, int) __asm("_" "killpg" );
int pthread_kill(pthread_t, int);
int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
int sigaction(int, const struct sigaction * ,
     struct sigaction * );
int sigaddset(sigset_t *, int);
int sigaltstack(const stack_t * , stack_t * ) __asm("_" "sigaltstack" ) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int sigdelset(sigset_t *, int);
int sigemptyset(sigset_t *);
int sigfillset(sigset_t *);
int sighold(int);
int sigignore(int);
int siginterrupt(int, int);
int sigismember(const sigset_t *, int);
int sigpause(int) __asm("_" "sigpause" );
int sigpending(sigset_t *);
int sigprocmask(int, const sigset_t * , sigset_t * );
int sigrelse(int);
void (* _Nullable sigset(int, void (* _Nullable)(int)))(int);
int sigsuspend(const sigset_t *) __asm("_" "sigsuspend" );
int sigwait(const sigset_t * , int * ) __asm("_" "sigwait" );

void psignal(unsigned int, const char *);
int sigblock(int);
int sigsetmask(int);
int sigvec(int, struct sigvec *, struct sigvec *);

}




inline __attribute__ ((__always_inline__)) int
__sigbits(int __signo)
{
    return __signo > 32 ? 0 : (1 << (__signo - 1));
}
typedef long int ptrdiff_t;
typedef __darwin_va_list va_list;



extern "C" {

int renameat(int, const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));






int renamex_np(const char *, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int renameatx_np(int, const char *, int, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));



}

typedef __darwin_off_t fpos_t;
struct __sbuf {
 unsigned char *_base;
 int _size;
};


struct __sFILEX;
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (* _Nullable _close)(void *);
 int (* _Nullable _read) (void *, char *, int);
 fpos_t (* _Nullable _seek) (void *, fpos_t, int);
 int (* _Nullable _write)(void *, const char *, int);


 struct __sbuf _ub;
 struct __sFILEX *_extra;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;

extern "C" {
extern FILE *__stdinp;
extern FILE *__stdoutp;
extern FILE *__stderrp;
}
extern "C" {
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE * , fpos_t *);
char *fgets(char * , int, FILE *);



FILE *fopen(const char * __filename, const char * __mode) __asm("_" "fopen" );

int fprintf(FILE * , const char * , ...) __attribute__((__format__ (__printf__, 2, 3)));
int fputc(int, FILE *);
int fputs(const char * , FILE * ) __asm("_" "fputs" );
size_t fread(void * __ptr, size_t __size, size_t __nitems, FILE * __stream);
FILE *freopen(const char * , const char * ,
                 FILE * ) __asm("_" "freopen" );
int fscanf(FILE * , const char * , ...) __attribute__((__format__ (__scanf__, 2, 3)));
int fseek(FILE *, long, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
size_t fwrite(const void * __ptr, size_t __size, size_t __nitems, FILE * __stream) __asm("_" "fwrite" );
int getc(FILE *);
int getchar(void);
char *gets(char *);
void perror(const char *) __attribute__((__cold__));
int printf(const char * , ...) __attribute__((__format__ (__printf__, 1, 2)));
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename (const char *__old, const char *__new);
void rewind(FILE *);
int scanf(const char * , ...) __attribute__((__format__ (__scanf__, 1, 2)));
void setbuf(FILE * , char * );
int setvbuf(FILE * , char * , int, size_t);
int sprintf(char * , const char * , ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((__availability__(swift, unavailable, message="Use snprintf instead.")));
int sscanf(const char * , const char * , ...) __attribute__((__format__ (__scanf__, 2, 3)));
FILE *tmpfile(void);

__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE * , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0)));
int vprintf(const char * , va_list) __attribute__((__format__ (__printf__, 1, 0)));
int vsprintf(char * , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((__availability__(swift, unavailable, message="Use vsnprintf instead.")));
}
extern "C" {

char *ctermid(char *);




FILE *fdopen(int, const char *) __asm("_" "fdopen" );

int fileno(FILE *);
}
extern "C" {
int pclose(FILE *) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));



FILE *popen(const char *, const char *) __asm("_" "popen" ) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));

}
extern "C" {
int __srget(FILE *);
int __svfscanf(FILE *, const char *, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int __swbuf(int, FILE *);
}







inline __attribute__ ((__always_inline__)) int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
extern "C" {
void flockfile(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);
int getc_unlocked(FILE *);
int getchar_unlocked(void);
int putc_unlocked(int, FILE *);
int putchar_unlocked(int);



int getw(FILE *);
int putw(int, FILE *);


__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tempnam(const char *__dir, const char *__prefix) __asm("_" "tempnam" );
}
extern "C" {
int fseeko(FILE * __stream, off_t __offset, int __whence);
off_t ftello(FILE * __stream);
}



extern "C" {
int snprintf(char * __str, size_t __size, const char * __format, ...) __attribute__((__format__ (__printf__, 3, 4)));
int vfscanf(FILE * __stream, const char * __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int vscanf(const char * __format, va_list) __attribute__((__format__ (__scanf__, 1, 0)));
int vsnprintf(char * __str, size_t __size, const char * __format, va_list) __attribute__((__format__ (__printf__, 3, 0)));
int vsscanf(const char * __str, const char * __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
}
extern "C" {
int dprintf(int, const char * , ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((availability(ios,introduced=4.3)));
int vdprintf(int, const char * , va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((availability(ios,introduced=4.3)));
ssize_t getdelim(char ** __linep, size_t * __linecapp, int __delimiter, FILE * __stream) __attribute__((availability(ios,introduced=4.3)));
ssize_t getline(char ** __linep, size_t * __linecapp, FILE * __stream) __attribute__((availability(ios,introduced=4.3)));
FILE *fmemopen(void * __buf, size_t __size, const char * __mode) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
FILE *open_memstream(char **__bufp, size_t *__sizep) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
}







extern "C" {
extern const int sys_nerr;
extern const char *const sys_errlist[];

int asprintf(char ** , const char * , ...) __attribute__((__format__ (__printf__, 2, 3)));
char *ctermid_r(char *);
char *fgetln(FILE *, size_t *);
const char *fmtcheck(const char *, const char *);
int fpurge(FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);
int vasprintf(char ** , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0)));
FILE *zopen(const char *, const char *, int);





FILE *funopen(const void *,
                 int (* _Nullable)(void *, char *, int),
                 int (* _Nullable)(void *, const char *, int),
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                 int (* _Nullable)(void *));
}

extern "C" {
void *memchr(const void *__s, int __c, size_t __n);
int memcmp(const void *__s1, const void *__s2, size_t __n);
void *memcpy(void *__dst, const void *__src, size_t __n);
void *memmove(void *__dst, const void *__src, size_t __len);
void *memset(void *__b, int __c, size_t __len);
char *strcat(char *__s1, const char *__s2);
char *strchr(const char *__s, int __c);
int strcmp(const char *__s1, const char *__s2);
int strcoll(const char *__s1, const char *__s2);
char *strcpy(char *__dst, const char *__src);
size_t strcspn(const char *__s, const char *__charset);
char *strerror(int __errnum) __asm("_" "strerror" );
size_t strlen(const char *__s);
char *strncat(char *__s1, const char *__s2, size_t __n);
int strncmp(const char *__s1, const char *__s2, size_t __n);
char *strncpy(char *__dst, const char *__src, size_t __n);
char *strpbrk(const char *__s, const char *__charset);
char *strrchr(const char *__s, int __c);
size_t strspn(const char *__s, const char *__charset);
char *strstr(const char *__big, const char *__little);
char *strtok(char *__str, const char *__sep);
size_t strxfrm(char *__s1, const char *__s2, size_t __n);
}
extern "C" {
char *strtok_r(char *__str, const char *__sep, char **__lasts);
}
extern "C" {
int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);
char *strdup(const char *__s1);
void *memccpy(void *__dst, const void *__src, int __c, size_t __n);
}
extern "C" {
char *stpcpy(char *__dst, const char *__src);
char *stpncpy(char *__dst, const char *__src, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strndup(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
size_t strnlen(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strsignal(int __sig);
}
extern "C" {
errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(ios,introduced=7.0)));
}







extern "C" {
void *memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(ios,introduced=4.3)));
void memset_pattern4(void *__b, const void *__pattern4, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern8(void *__b, const void *__pattern8, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern16(void *__b, const void *__pattern16, size_t __len) __attribute__((availability(ios,introduced=3.0)));

char *strcasestr(const char *__big, const char *__little);
char *strnstr(const char *__big, const char *__little, size_t __len);
size_t strlcat(char *__dst, const char *__source, size_t __size);
size_t strlcpy(char *__dst, const char *__source, size_t __size);
void strmode(int __mode, char *__bp);
char *strsep(char **__stringp, const char *__delim);


void swab(const void * , void * , ssize_t);

__attribute__((availability(macosx,introduced=10.12.1))) __attribute__((availability(ios,introduced=10.1)))
__attribute__((availability(tvos,introduced=10.0.1))) __attribute__((availability(watchos,introduced=3.1)))
int timingsafe_bcmp(const void *__b1, const void *__b2, size_t __len);
}







extern "C" {


int bcmp(const void *, const void *, size_t) ;
void bcopy(const void *, void *, size_t) ;
void bzero(void *, size_t) ;
char *index(const char *, int) ;
char *rindex(const char *, int) ;


int ffs(int);
int strcasecmp(const char *, const char *);
int strncasecmp(const char *, const char *, size_t);
}



extern "C" {
int ffsl(long) __attribute__((availability(ios,introduced=2.0)));
int ffsll(long long) __attribute__((availability(ios,introduced=7.0)));
int fls(int) __attribute__((availability(ios,introduced=2.0)));
int flsl(long) __attribute__((availability(ios,introduced=2.0)));
int flsll(long long) __attribute__((availability(ios,introduced=7.0)));
}


struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};

struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long tm_gmtoff;
 char *tm_zone;
};
extern char *tzname[];


extern int getdate_err;

extern long timezone __asm("_" "timezone" );

extern int daylight;

extern "C" {
char *asctime(const struct tm *);
clock_t clock(void) __asm("_" "clock" );
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *getdate(const char *);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *) __asm("_" "mktime" );
size_t strftime(char * , size_t, const char * , const struct tm * ) __asm("_" "strftime" );
char *strptime(const char * , const char * , struct tm * ) __asm("_" "strptime" );
time_t time(time_t *);


void tzset(void);



char *asctime_r(const struct tm * , char * );
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t * , struct tm * );
struct tm *localtime_r(const time_t * , struct tm * );


time_t posix2time(time_t);



void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);



int nanosleep(const struct timespec *__rqtp, struct timespec *__rmtp) __asm("_" "nanosleep" );
typedef enum {
_CLOCK_REALTIME __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0,

_CLOCK_MONOTONIC __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 6,


_CLOCK_MONOTONIC_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 4,

_CLOCK_MONOTONIC_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 5,

_CLOCK_UPTIME_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 8,

_CLOCK_UPTIME_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 9,


_CLOCK_PROCESS_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 12,

_CLOCK_THREAD_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 16

} clockid_t;

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_getres(clockid_t __clock_id, struct timespec *__res);

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_gettime(clockid_t __clock_id, struct timespec *__tp);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
__uint64_t clock_gettime_nsec_np(clockid_t __clock_id);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
int clock_settime(clockid_t __clock_id, const struct timespec *__tp);
}





extern "C" {





extern "C" void *_Block_copy(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void _Block_release(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));



extern "C" void _Block_object_assign(void *, const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void _Block_object_dispose(const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void * _NSConcreteGlobalBlock[32]
    __attribute__((availability(ios,introduced=3.2)));
extern "C" void * _NSConcreteStackBlock[32]
    __attribute__((availability(ios,introduced=3.2)));



}




extern "C" {


#pragma pack(push, 2)
typedef unsigned char UInt8;
typedef signed char SInt8;
typedef unsigned short UInt16;
typedef signed short SInt16;


typedef unsigned int UInt32;
typedef signed int SInt32;
struct wide {
  UInt32 lo;
  SInt32 hi;
};
typedef struct wide wide;
struct UnsignedWide {
  UInt32 lo;
  UInt32 hi;
};
typedef struct UnsignedWide UnsignedWide;
      typedef signed long long SInt64;
        typedef unsigned long long UInt64;
typedef SInt32 Fixed;
typedef Fixed * FixedPtr;
typedef SInt32 Fract;
typedef Fract * FractPtr;
typedef UInt32 UnsignedFixed;
typedef UnsignedFixed * UnsignedFixedPtr;
typedef short ShortFixed;
typedef ShortFixed * ShortFixedPtr;
typedef float Float32;
typedef double Float64;
struct Float80 {
    SInt16 exp;
    UInt16 man[4];
};
typedef struct Float80 Float80;

struct Float96 {
    SInt16 exp[2];
    UInt16 man[4];
};
typedef struct Float96 Float96;
struct Float32Point {
    Float32 x;
    Float32 y;
};
typedef struct Float32Point Float32Point;
typedef char * Ptr;
typedef Ptr * Handle;
typedef long Size;
typedef SInt16 OSErr;
typedef SInt32 OSStatus;
typedef void * LogicalAddress;
typedef const void * ConstLogicalAddress;
typedef void * PhysicalAddress;
typedef UInt8 * BytePtr;
typedef unsigned long ByteCount;
typedef unsigned long ByteOffset;
typedef SInt32 Duration;
typedef UnsignedWide AbsoluteTime;
typedef UInt32 OptionBits;
typedef unsigned long ItemCount;
typedef UInt32 PBVersion;
typedef SInt16 ScriptCode;
typedef SInt16 LangCode;
typedef SInt16 RegionCode;
typedef UInt32 FourCharCode;
typedef FourCharCode OSType;
typedef FourCharCode ResType;
typedef OSType * OSTypePtr;
typedef ResType * ResTypePtr;
typedef unsigned char Boolean;
typedef long ( * ProcPtr)(void);
typedef void ( * Register68kProcPtr)(void);




typedef ProcPtr UniversalProcPtr;


typedef ProcPtr * ProcHandle;
typedef UniversalProcPtr * UniversalProcHandle;
typedef void * PRefCon;

typedef void * URefCon;
typedef void * SRefCon;
enum {
  noErr = 0
};

enum {
  kNilOptions = 0
};


enum {
  kVariableLengthArray


  __attribute__((deprecated))


  = 1
};

enum {
  kUnknownType = 0x3F3F3F3F
};
typedef UInt32 UnicodeScalarValue;
typedef UInt32 UTF32Char;
typedef UInt16 UniChar;
typedef UInt16 UTF16Char;
typedef UInt8 UTF8Char;
typedef UniChar * UniCharPtr;
typedef unsigned long UniCharCount;
typedef UniCharCount * UniCharCountPtr;
typedef unsigned char Str255[256];
typedef unsigned char Str63[64];
typedef unsigned char Str32[33];
typedef unsigned char Str31[32];
typedef unsigned char Str27[28];
typedef unsigned char Str15[16];
typedef unsigned char Str32Field[34];
typedef Str63 StrFileName;
typedef unsigned char * StringPtr;
typedef StringPtr * StringHandle;
typedef const unsigned char * ConstStringPtr;
typedef const unsigned char * ConstStr255Param;
typedef const unsigned char * ConstStr63Param;
typedef const unsigned char * ConstStr32Param;
typedef const unsigned char * ConstStr31Param;
typedef const unsigned char * ConstStr27Param;
typedef const unsigned char * ConstStr15Param;
typedef ConstStr63Param ConstStrFileNameParam;

inline unsigned char StrLength(ConstStr255Param string) { return (*string); }
struct ProcessSerialNumber {
  UInt32 highLongOfPSN;
  UInt32 lowLongOfPSN;
};
typedef struct ProcessSerialNumber ProcessSerialNumber;
typedef ProcessSerialNumber * ProcessSerialNumberPtr;
struct Point {
  short v;
  short h;
};
typedef struct Point Point;
typedef Point * PointPtr;
struct Rect {
  short top;
  short left;
  short bottom;
  short right;
};
typedef struct Rect Rect;
typedef Rect * RectPtr;
struct FixedPoint {
  Fixed x;
  Fixed y;
};
typedef struct FixedPoint FixedPoint;
struct FixedRect {
  Fixed left;
  Fixed top;
  Fixed right;
  Fixed bottom;
};
typedef struct FixedRect FixedRect;

typedef short CharParameter;
enum {
  normal = 0,
  bold = 1,
  italic = 2,
  underline = 4,
  outline = 8,
  shadow = 0x10,
  condense = 0x20,
  extend = 0x40
};

typedef unsigned char Style;
typedef short StyleParameter;
typedef Style StyleField;
typedef SInt32 TimeValue;
typedef SInt32 TimeScale;
typedef wide CompTimeValue;
typedef SInt64 TimeValue64;
typedef struct TimeBaseRecord* TimeBase;
struct TimeRecord {
  CompTimeValue value;
  TimeScale scale;
  TimeBase base;
};
typedef struct TimeRecord TimeRecord;
struct NumVersion {

  UInt8 nonRelRev;
  UInt8 stage;
  UInt8 minorAndBugRev;
  UInt8 majorRev;
};
typedef struct NumVersion NumVersion;


enum {

  developStage = 0x20,
  alphaStage = 0x40,
  betaStage = 0x60,
  finalStage = 0x80
};

union NumVersionVariant {

  NumVersion parts;
  UInt32 whole;
};
typedef union NumVersionVariant NumVersionVariant;
typedef NumVersionVariant * NumVersionVariantPtr;
typedef NumVersionVariantPtr * NumVersionVariantHandle;
struct VersRec {

  NumVersion numericVersion;
  short countryCode;
  Str255 shortVersion;
  Str255 reserved;
};
typedef struct VersRec VersRec;
typedef VersRec * VersRecPtr;
typedef VersRecPtr * VersRecHndl;





typedef UInt8 Byte;
typedef SInt8 SignedByte;
typedef wide * WidePtr;
typedef UnsignedWide * UnsignedWidePtr;
typedef Float80 extended80;
typedef Float96 extended96;
typedef SInt8 VHSelect;
extern void
Debugger(void) __attribute__((availability(ios,unavailable)));
extern void
DebugStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
extern void
SysBreak(void) __attribute__((availability(ios,unavailable)));
extern void
SysBreakStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
extern void
SysBreakFunc(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
#pragma pack(pop)


}
extern "C" {
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSNull;
#ifndef _REWRITER_typedef_NSNull
#define _REWRITER_typedef_NSNull
typedef struct objc_object NSNull;
typedef struct {} _objc_exc_NSNull;
#endif

// @class NSCharacterSet;
#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSTimeZone;
#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

// @class NSNumber;
#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

// @class NSSet;
#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

extern double kCFCoreFoundationVersionNumber;
typedef unsigned long CFTypeID;
typedef unsigned long CFOptionFlags;
typedef unsigned long CFHashCode;
typedef signed long CFIndex;



typedef const __attribute__((objc_bridge(id))) void * CFTypeRef;

typedef const struct __attribute__((objc_bridge(NSString))) __CFString * CFStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableString))) __CFString * CFMutableStringRef;






typedef __attribute__((objc_bridge(id))) CFTypeRef CFPropertyListRef;


typedef CFIndex CFComparisonResult; enum {
    kCFCompareLessThan = -1L,
    kCFCompareEqualTo = 0,
    kCFCompareGreaterThan = 1
};


typedef CFComparisonResult (*CFComparatorFunction)(const void *val1, const void *val2, void *context);


static const CFIndex kCFNotFound = -1;



typedef struct {
    CFIndex location;
    CFIndex length;
} CFRange;


static __inline__ __attribute__((always_inline)) CFRange CFRangeMake(CFIndex loc, CFIndex len) {
    CFRange range;
    range.location = loc;
    range.length = len;
    return range;
}





extern
CFRange __CFRangeMake(CFIndex loc, CFIndex len);




typedef const struct __attribute__((objc_bridge(NSNull))) __CFNull * CFNullRef;

extern
CFTypeID CFNullGetTypeID(void);

extern
const CFNullRef kCFNull;
typedef const struct __attribute__((objc_bridge(id))) __CFAllocator * CFAllocatorRef;


extern
const CFAllocatorRef kCFAllocatorDefault;


extern
const CFAllocatorRef kCFAllocatorSystemDefault;







extern
const CFAllocatorRef kCFAllocatorMalloc;





extern
const CFAllocatorRef kCFAllocatorMallocZone;





extern
const CFAllocatorRef kCFAllocatorNull;





extern
const CFAllocatorRef kCFAllocatorUseContext;

typedef const void * (*CFAllocatorRetainCallBack)(const void *info);
typedef void (*CFAllocatorReleaseCallBack)(const void *info);
typedef CFStringRef (*CFAllocatorCopyDescriptionCallBack)(const void *info);
typedef void * (*CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);
typedef void * (*CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);
typedef void (*CFAllocatorDeallocateCallBack)(void *ptr, void *info);
typedef CFIndex (*CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFAllocatorRetainCallBack retain;
    CFAllocatorReleaseCallBack release;
    CFAllocatorCopyDescriptionCallBack copyDescription;
    CFAllocatorAllocateCallBack allocate;
    CFAllocatorReallocateCallBack reallocate;
    CFAllocatorDeallocateCallBack deallocate;
    CFAllocatorPreferredSizeCallBack preferredSize;
} CFAllocatorContext;

extern
CFTypeID CFAllocatorGetTypeID(void);
extern
void CFAllocatorSetDefault(CFAllocatorRef allocator);

extern
CFAllocatorRef CFAllocatorGetDefault(void);

extern
CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context);

extern
void *CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void *CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);

extern
void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr);

extern
CFIndex CFAllocatorGetPreferredSizeForSize(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void CFAllocatorGetContext(CFAllocatorRef allocator, CFAllocatorContext *context);






extern
CFTypeID CFGetTypeID(CFTypeRef cf);

extern
CFStringRef CFCopyTypeIDDescription(CFTypeID type_id);

extern
CFTypeRef CFRetain(CFTypeRef cf);

extern
void CFRelease(CFTypeRef cf);



extern
CFTypeRef CFAutorelease(CFTypeRef __attribute__((cf_consumed)) arg) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFIndex CFGetRetainCount(CFTypeRef cf);


extern
Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2);

extern
CFHashCode CFHash(CFTypeRef cf);

extern
CFStringRef CFCopyDescription(CFTypeRef cf);

extern
CFAllocatorRef CFGetAllocator(CFTypeRef cf);




extern
CFTypeRef CFMakeCollectable(CFTypeRef cf) ;







}
extern "C" {
typedef const void * (*CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFArrayCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFArrayEqualCallBack)(const void *value1, const void *value2);
typedef struct {
    CFIndex version;
    CFArrayRetainCallBack retain;
    CFArrayReleaseCallBack release;
    CFArrayCopyDescriptionCallBack copyDescription;
    CFArrayEqualCallBack equal;
} CFArrayCallBacks;






extern
const CFArrayCallBacks kCFTypeArrayCallBacks;
typedef void (*CFArrayApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSArray))) __CFArray * CFArrayRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableArray))) __CFArray * CFMutableArrayRef;





extern
CFTypeID CFArrayGetTypeID(void);
extern
CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks);
extern
CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray);
extern
CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
extern
CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray);
extern
CFIndex CFArrayGetCount(CFArrayRef theArray);
extern
CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value);
extern
const void *CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx);
extern
void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values);
extern
void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction __attribute__((noescape)) applier, void *context);
extern
CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context);
extern
void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value);
extern
void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
extern
void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
extern
void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx);
extern
void CFArrayRemoveAllValues(CFMutableArrayRef theArray);
extern
void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount);
extern
void CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2);
extern
void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context);
extern
void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange);

}
extern "C" {

typedef const void * (*CFBagRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFBagReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFBagCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFBagEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFBagHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFBagRetainCallBack retain;
    CFBagReleaseCallBack release;
    CFBagCopyDescriptionCallBack copyDescription;
    CFBagEqualCallBack equal;
    CFBagHashCallBack hash;
} CFBagCallBacks;

extern
const CFBagCallBacks kCFTypeBagCallBacks;
extern
const CFBagCallBacks kCFCopyStringBagCallBacks;

typedef void (*CFBagApplierFunction)(const void *value, void *context);

typedef const struct __attribute__((objc_bridge(id))) __CFBag * CFBagRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBag * CFMutableBagRef;

extern
CFTypeID CFBagGetTypeID(void);

extern
CFBagRef CFBagCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks);

extern
CFBagRef CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag);

extern
CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks);

extern
CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag);

extern
CFIndex CFBagGetCount(CFBagRef theBag);

extern
CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagContainsValue(CFBagRef theBag, const void *value);

extern
const void *CFBagGetValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagGetValueIfPresent(CFBagRef theBag, const void *candidate, const void **value);

extern
void CFBagGetValues(CFBagRef theBag, const void **values);

extern
void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction __attribute__((noescape)) applier, void *context);

extern
void CFBagAddValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagReplaceValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagSetValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveAllValues(CFMutableBagRef theBag);

}
extern "C" {

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFBinaryHeapCompareContext;
typedef struct {
    CFIndex version;
    const void *(*retain)(CFAllocatorRef allocator, const void *ptr);
    void (*release)(CFAllocatorRef allocator, const void *ptr);
    CFStringRef (*copyDescription)(const void *ptr);
    CFComparisonResult (*compare)(const void *ptr1, const void *ptr2, void *context);
} CFBinaryHeapCallBacks;







extern const CFBinaryHeapCallBacks kCFStringBinaryHeapCallBacks;
typedef void (*CFBinaryHeapApplierFunction)(const void *val, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFBinaryHeap * CFBinaryHeapRef;





extern CFTypeID CFBinaryHeapGetTypeID(void);
extern CFBinaryHeapRef CFBinaryHeapCreate(CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext);
extern CFBinaryHeapRef CFBinaryHeapCreateCopy(CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap);
extern CFIndex CFBinaryHeapGetCount(CFBinaryHeapRef heap);
extern CFIndex CFBinaryHeapGetCountOfValue(CFBinaryHeapRef heap, const void *value);
extern Boolean CFBinaryHeapContainsValue(CFBinaryHeapRef heap, const void *value);
extern const void * CFBinaryHeapGetMinimum(CFBinaryHeapRef heap);
extern Boolean CFBinaryHeapGetMinimumIfPresent(CFBinaryHeapRef heap, const void **value);
extern void CFBinaryHeapGetValues(CFBinaryHeapRef heap, const void **values);
extern void CFBinaryHeapApplyFunction(CFBinaryHeapRef heap, CFBinaryHeapApplierFunction __attribute__((noescape)) applier, void *context);
extern void CFBinaryHeapAddValue(CFBinaryHeapRef heap, const void *value);







extern void CFBinaryHeapRemoveMinimumValue(CFBinaryHeapRef heap);
extern void CFBinaryHeapRemoveAllValues(CFBinaryHeapRef heap);

}
extern "C" {

typedef UInt32 CFBit;

typedef const struct __attribute__((objc_bridge(id))) __CFBitVector * CFBitVectorRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBitVector * CFMutableBitVectorRef;

extern CFTypeID CFBitVectorGetTypeID(void);

extern CFBitVectorRef CFBitVectorCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits);
extern CFBitVectorRef CFBitVectorCreateCopy(CFAllocatorRef allocator, CFBitVectorRef bv);
extern CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
extern CFMutableBitVectorRef CFBitVectorCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv);

extern CFIndex CFBitVectorGetCount(CFBitVectorRef bv);
extern CFIndex CFBitVectorGetCountOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern Boolean CFBitVectorContainsBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFBit CFBitVectorGetBitAtIndex(CFBitVectorRef bv, CFIndex idx);
extern void CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes);
extern CFIndex CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFIndex CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);

extern void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count);
extern void CFBitVectorFlipBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx);
extern void CFBitVectorFlipBits(CFMutableBitVectorRef bv, CFRange range);
extern void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value);
extern void CFBitVectorSetBits(CFMutableBitVectorRef bv, CFRange range, CFBit value);
extern void CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value);

}



static __inline__
uint16_t
OSReadSwapInt16(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 uint16_t result;

 result = *(volatile uint16_t *)((uintptr_t)base + byteOffset);
 return _OSSwapInt16(result);
}

static __inline__
uint32_t
OSReadSwapInt32(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 uint32_t result;

 result = *(volatile uint32_t *)((uintptr_t)base + byteOffset);
 return _OSSwapInt32(result);
}

static __inline__
uint64_t
OSReadSwapInt64(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 uint64_t result;

 result = *(volatile uint64_t *)((uintptr_t)base + byteOffset);
 return _OSSwapInt64(result);
}



static __inline__
void
OSWriteSwapInt16(
 volatile void * base,
 uintptr_t byteOffset,
 uint16_t data
 )
{
 *(volatile uint16_t *)((uintptr_t)base + byteOffset) = _OSSwapInt16(data);
}

static __inline__
void
OSWriteSwapInt32(
 volatile void * base,
 uintptr_t byteOffset,
 uint32_t data
 )
{
 *(volatile uint32_t *)((uintptr_t)base + byteOffset) = _OSSwapInt32(data);
}

static __inline__
void
OSWriteSwapInt64(
 volatile void * base,
 uintptr_t byteOffset,
 uint64_t data
 )
{
 *(volatile uint64_t *)((uintptr_t)base + byteOffset) = _OSSwapInt64(data);
}
enum {
 OSUnknownByteOrder,
 OSLittleEndian,
 OSBigEndian
};

static __inline__
int32_t
OSHostByteOrder(void)
{

 return OSLittleEndian;





}
static __inline__
uint16_t
_OSReadInt16(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 return *(volatile uint16_t *)((uintptr_t)base + byteOffset);
}

static __inline__
uint32_t
_OSReadInt32(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 return *(volatile uint32_t *)((uintptr_t)base + byteOffset);
}

static __inline__
uint64_t
_OSReadInt64(
 const volatile void * base,
 uintptr_t byteOffset
 )
{
 return *(volatile uint64_t *)((uintptr_t)base + byteOffset);
}



static __inline__
void
_OSWriteInt16(
 volatile void * base,
 uintptr_t byteOffset,
 uint16_t data
 )
{
 *(volatile uint16_t *)((uintptr_t)base + byteOffset) = data;
}

static __inline__
void
_OSWriteInt32(
 volatile void * base,
 uintptr_t byteOffset,
 uint32_t data
 )
{
 *(volatile uint32_t *)((uintptr_t)base + byteOffset) = data;
}

static __inline__
void
_OSWriteInt64(
 volatile void * base,
 uintptr_t byteOffset,
 uint64_t data
 )
{
 *(volatile uint64_t *)((uintptr_t)base + byteOffset) = data;
}



extern "C" {

enum __CFByteOrder {
    CFByteOrderUnknown,
    CFByteOrderLittleEndian,
    CFByteOrderBigEndian
};
typedef CFIndex CFByteOrder;

static __inline__ __attribute__((always_inline)) CFByteOrder CFByteOrderGetCurrent(void) {

    int32_t byteOrder = OSHostByteOrder();
    switch (byteOrder) {
    case OSLittleEndian: return CFByteOrderLittleEndian;
    case OSBigEndian: return CFByteOrderBigEndian;
    default: break;
    }
    return CFByteOrderUnknown;
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16BigToHost(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32BigToHost(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64BigToHost(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToBig(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToBig(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToBig(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16LittleToHost(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32LittleToHost(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64LittleToHost(uint64_t arg) {

    return ((uint64_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToLittle(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToLittle(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToLittle(uint64_t arg) {

    return ((uint64_t)(arg));





}

typedef struct {uint32_t v;} CFSwappedFloat32;
typedef struct {uint64_t v;} CFSwappedFloat64;

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloat32HostToSwapped(Float32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float32 CFConvertFloat32SwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertFloat64HostToSwapped(Float64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float64 CFConvertFloat64SwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloatHostToSwapped(float arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) float CFConvertFloatSwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertDoubleHostToSwapped(double arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) double CFConvertDoubleSwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

}
extern "C" {
typedef const void * (*CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFDictionaryCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFDictionaryEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFDictionaryHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
    CFDictionaryHashCallBack hash;
} CFDictionaryKeyCallBacks;







extern
const CFDictionaryKeyCallBacks kCFTypeDictionaryKeyCallBacks;
extern
const CFDictionaryKeyCallBacks kCFCopyStringDictionaryKeyCallBacks;
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
} CFDictionaryValueCallBacks;







extern
const CFDictionaryValueCallBacks kCFTypeDictionaryValueCallBacks;
typedef void (*CFDictionaryApplierFunction)(const void *key, const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSDictionary))) __CFDictionary * CFDictionaryRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableDictionary))) __CFDictionary * CFMutableDictionaryRef;





extern
CFTypeID CFDictionaryGetTypeID(void);
extern
CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
extern
CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict);
extern
CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
extern
CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict);
extern
CFIndex CFDictionaryGetCount(CFDictionaryRef theDict);
extern
CFIndex CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key);
extern
CFIndex CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value);
extern
Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key);
extern
Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value);
extern
const void *CFDictionaryGetValue(CFDictionaryRef theDict, const void *key);
extern
Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value);
extern
void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values);
extern
void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction __attribute__((noescape)) applier, void *context);
extern
void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key);
extern
void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict);

}
extern "C" {

typedef CFStringRef CFNotificationName __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNotificationCenter * CFNotificationCenterRef;

typedef void (*CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFNotificationName name, const void *object, CFDictionaryRef userInfo);

typedef CFIndex CFNotificationSuspensionBehavior; enum {
    CFNotificationSuspensionBehaviorDrop = 1,

    CFNotificationSuspensionBehaviorCoalesce = 2,

    CFNotificationSuspensionBehaviorHold = 3,

    CFNotificationSuspensionBehaviorDeliverImmediately = 4

};

extern CFTypeID CFNotificationCenterGetTypeID(void);

extern CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void);





extern CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void);
extern void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);

extern void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object);
extern void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);

extern void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);

enum {
    kCFNotificationDeliverImmediately = (1UL << 0),
    kCFNotificationPostToAllSessions = (1UL << 1)
};

extern void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options);


}


extern "C" {

typedef CFStringRef CFLocaleIdentifier __attribute__((swift_wrapper(struct)));
typedef CFStringRef CFLocaleKey __attribute__((swift_wrapper(enum)));

typedef const struct __attribute__((objc_bridge(NSLocale))) __CFLocale *CFLocaleRef;

extern
CFTypeID CFLocaleGetTypeID(void);

extern
CFLocaleRef CFLocaleGetSystem(void);


extern
CFLocaleRef CFLocaleCopyCurrent(void);
extern
CFArrayRef CFLocaleCopyAvailableLocaleIdentifiers(void);



extern
CFArrayRef CFLocaleCopyISOLanguageCodes(void);




extern
CFArrayRef CFLocaleCopyISOCountryCodes(void);




extern
CFArrayRef CFLocaleCopyISOCurrencyCodes(void);




extern
CFArrayRef CFLocaleCopyCommonISOCurrencyCodes(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFArrayRef CFLocaleCopyPreferredLanguages(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
CFLocaleIdentifier CFLocaleCreateCanonicalLanguageIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(CFAllocatorRef allocator, LangCode lcode, RegionCode rcode);


extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode(CFAllocatorRef allocator, uint32_t lcid) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
uint32_t CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier(CFLocaleIdentifier localeIdentifier) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef CFIndex CFLocaleLanguageDirection; enum {
    kCFLocaleLanguageDirectionUnknown = 0,
    kCFLocaleLanguageDirectionLeftToRight = 1,
    kCFLocaleLanguageDirectionRightToLeft = 2,
    kCFLocaleLanguageDirectionTopToBottom = 3,
    kCFLocaleLanguageDirectionBottomToTop = 4
};

extern
CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection(CFStringRef isoLangCode) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection(CFStringRef isoLangCode) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier(CFAllocatorRef allocator, CFLocaleIdentifier localeID);
extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromComponents(CFAllocatorRef allocator, CFDictionaryRef dictionary);






extern
CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier);


extern
CFLocaleRef CFLocaleCreateCopy(CFAllocatorRef allocator, CFLocaleRef locale);




extern
CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale);



extern
CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFLocaleKey key);



extern
CFStringRef CFLocaleCopyDisplayNameForPropertyValue(CFLocaleRef displayLocale, CFLocaleKey key, CFStringRef value);





extern const CFNotificationName kCFLocaleCurrentLocaleDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern const CFLocaleKey kCFLocaleIdentifier;
extern const CFLocaleKey kCFLocaleLanguageCode;
extern const CFLocaleKey kCFLocaleCountryCode;
extern const CFLocaleKey kCFLocaleScriptCode;
extern const CFLocaleKey kCFLocaleVariantCode;

extern const CFLocaleKey kCFLocaleExemplarCharacterSet;
extern const CFLocaleKey kCFLocaleCalendarIdentifier;
extern const CFLocaleKey kCFLocaleCalendar;
extern const CFLocaleKey kCFLocaleCollationIdentifier;
extern const CFLocaleKey kCFLocaleUsesMetricSystem;
extern const CFLocaleKey kCFLocaleMeasurementSystem;
extern const CFLocaleKey kCFLocaleDecimalSeparator;
extern const CFLocaleKey kCFLocaleGroupingSeparator;
extern const CFLocaleKey kCFLocaleCurrencySymbol;
extern const CFLocaleKey kCFLocaleCurrencyCode;
extern const CFLocaleKey kCFLocaleCollatorIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef CFStringRef CFCalendarIdentifier __attribute__((swift_wrapper(enum)));

extern const CFCalendarIdentifier kCFGregorianCalendar;
extern const CFCalendarIdentifier kCFBuddhistCalendar;
extern const CFCalendarIdentifier kCFChineseCalendar;
extern const CFCalendarIdentifier kCFHebrewCalendar;
extern const CFCalendarIdentifier kCFIslamicCalendar;
extern const CFCalendarIdentifier kCFIslamicCivilCalendar;
extern const CFCalendarIdentifier kCFJapaneseCalendar;
extern const CFCalendarIdentifier kCFRepublicOfChinaCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFPersianCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIndianCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFISO8601Calendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIslamicTabularCalendar __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIslamicUmmAlQuraCalendar __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef double CFTimeInterval;
typedef CFTimeInterval CFAbsoluteTime;



extern
CFAbsoluteTime CFAbsoluteTimeGetCurrent(void);

extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1970;
extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1904;

typedef const struct __attribute__((objc_bridge(NSDate))) __CFDate * CFDateRef;

extern
CFTypeID CFDateGetTypeID(void);

extern
CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at);

extern
CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate);

extern
CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate);

extern
CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context);



typedef const struct __attribute__((objc_bridge(NSTimeZone))) __CFTimeZone * CFTimeZoneRef;
typedef struct {
    SInt32 year;
    SInt8 month;
    SInt8 day;
    SInt8 hour;
    SInt8 minute;
    double second;
} CFGregorianDate __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

typedef struct {
    SInt32 years;
    SInt32 months;
    SInt32 days;
    SInt32 hours;
    SInt32 minutes;
    double seconds;
} CFGregorianUnits __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

typedef CFOptionFlags CFGregorianUnitFlags; enum {
    kCFGregorianUnitsYears __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 0),
    kCFGregorianUnitsMonths __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 1),
    kCFGregorianUnitsDays __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 2),
    kCFGregorianUnitsHours __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 3),
    kCFGregorianUnitsMinutes __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 4),
    kCFGregorianUnitsSeconds __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = (1UL << 5),
    kCFGregorianAllUnits __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead"))) = 0x00FFFFFF
};

extern
Boolean CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianDate CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFCalendar or NSCalendar API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFCalendar or NSCalendar API instead")));

}
extern "C" {

typedef const struct __attribute__((objc_bridge(NSData))) __CFData * CFDataRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableData))) __CFData * CFMutableDataRef;

extern
CFTypeID CFDataGetTypeID(void);

extern
CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);

extern
CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData);

extern
CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity);

extern
CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData);

extern
CFIndex CFDataGetLength(CFDataRef theData);

extern
const UInt8 *CFDataGetBytePtr(CFDataRef theData);

extern
UInt8 *CFDataGetMutableBytePtr(CFMutableDataRef theData);

extern
void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer);

extern
void CFDataSetLength(CFMutableDataRef theData, CFIndex length);

extern
void CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength);

extern
void CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);

extern
void CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength);

extern
void CFDataDeleteBytes(CFMutableDataRef theData, CFRange range);

typedef CFOptionFlags CFDataSearchFlags; enum {
    kCFDataSearchBackwards = 1UL << 0,
    kCFDataSearchAnchored = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFRange CFDataFind(CFDataRef theData, CFDataRef dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}


extern "C" {





typedef const struct __attribute__((objc_bridge(NSCharacterSet))) __CFCharacterSet * CFCharacterSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableCharacterSet))) __CFCharacterSet * CFMutableCharacterSetRef;






typedef CFIndex CFCharacterSetPredefinedSet; enum {
    kCFCharacterSetControl = 1,
    kCFCharacterSetWhitespace,
    kCFCharacterSetWhitespaceAndNewline,
    kCFCharacterSetDecimalDigit,
    kCFCharacterSetLetter,
    kCFCharacterSetLowercaseLetter,
    kCFCharacterSetUppercaseLetter,
    kCFCharacterSetNonBase,
    kCFCharacterSetDecomposable,
    kCFCharacterSetAlphaNumeric,
    kCFCharacterSetPunctuation,
    kCFCharacterSetCapitalizedLetter = 13,
    kCFCharacterSetSymbol = 14,
    kCFCharacterSetNewline __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    kCFCharacterSetIllegal = 12
};





extern
CFTypeID CFCharacterSetGetTypeID(void);
extern
CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier);
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange);
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString);
extern
CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData);
extern CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern Boolean CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset);
extern Boolean CFCharacterSetHasMemberInPlane(CFCharacterSetRef theSet, CFIndex thePlane);
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutable(CFAllocatorRef alloc);
extern
CFCharacterSetRef CFCharacterSetCreateCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar);
extern Boolean CFCharacterSetIsLongCharacterMember(CFCharacterSetRef theSet, UTF32Char theChar);
extern
CFDataRef CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
void CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
extern
void CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
extern
void CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
extern
void CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
extern
void CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
extern
void CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
extern
void CFCharacterSetInvert(CFMutableCharacterSetRef theSet);

}




extern "C" {
typedef UInt32 CFStringEncoding;





typedef CFStringEncoding CFStringBuiltInEncodings; enum {
    kCFStringEncodingMacRoman = 0,
    kCFStringEncodingWindowsLatin1 = 0x0500,
    kCFStringEncodingISOLatin1 = 0x0201,
    kCFStringEncodingNextStepLatin = 0x0B01,
    kCFStringEncodingASCII = 0x0600,
    kCFStringEncodingUnicode = 0x0100,
    kCFStringEncodingUTF8 = 0x08000100,
    kCFStringEncodingNonLossyASCII = 0x0BFF,

    kCFStringEncodingUTF16 = 0x0100,
    kCFStringEncodingUTF16BE = 0x10000100,
    kCFStringEncodingUTF16LE = 0x14000100,

    kCFStringEncodingUTF32 = 0x0c000100,
    kCFStringEncodingUTF32BE = 0x18000100,
    kCFStringEncodingUTF32LE = 0x1c000100
};



extern
CFTypeID CFStringGetTypeID(void);
extern
CFStringRef CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding);

extern
CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);



extern
CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);

extern
CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars);
extern
CFStringRef CFStringCreateWithPascalStringNoCopy(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range);

extern
CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString);



extern
CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
CFStringRef CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));



extern
CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);

extern
CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString);







extern
CFMutableStringRef CFStringCreateMutableWithExternalCharactersNoCopy(CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator);





extern
CFIndex CFStringGetLength(CFStringRef theString);






extern
UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx);

extern
void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer);
extern
Boolean CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding);

extern
Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding);






extern
ConstStringPtr CFStringGetPascalStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const char *CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const UniChar *CFStringGetCharactersPtr(CFStringRef theString);
extern
CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen);







extern
CFStringRef CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding);

extern
CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte);



extern
CFStringEncoding CFStringGetSmallestEncoding(CFStringRef theString);

extern
CFStringEncoding CFStringGetFastestEncoding(CFStringRef theString);



extern
CFStringEncoding CFStringGetSystemEncoding(void);

extern
CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding);






extern
Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen);



extern
CFIndex CFStringGetMaximumSizeOfFileSystemRepresentation(CFStringRef string);



extern
CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer);






typedef CFOptionFlags CFStringCompareFlags; enum {
    kCFCompareCaseInsensitive = 1,
    kCFCompareBackwards = 4,
    kCFCompareAnchored = 8,
    kCFCompareNonliteral = 16,
    kCFCompareLocalized = 32,
    kCFCompareNumerically = 64,
    kCFCompareDiacriticInsensitive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 128,
    kCFCompareWidthInsensitive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 256,
    kCFCompareForcedOrdering __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 512
};







extern
CFComparisonResult CFStringCompareWithOptionsAndLocale(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions);





extern
CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);







extern
Boolean CFStringFindWithOptionsAndLocale(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef locale, CFRange *result) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
extern
CFArrayRef CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions);



extern
CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions);

extern
Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix);

extern
Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix);
extern CFRange CFStringGetRangeOfComposedCharactersAtIndex(CFStringRef theString, CFIndex theIndex);
extern Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
extern
void CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex);



extern
void CFStringGetParagraphBounds(CFStringRef string, CFRange range, CFIndex *parBeginIndex, CFIndex *parEndIndex, CFIndex *contentsEndIndex) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFIndex CFStringGetHyphenationLocationBeforeIndex(CFStringRef string, CFIndex location, CFRange limitRange, CFOptionFlags options, CFLocaleRef locale, UTF32Char *character) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
Boolean CFStringIsHyphenationAvailableForLocale(CFLocaleRef locale) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString);

extern
CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString);




extern
SInt32 CFStringGetIntValue(CFStringRef str);

extern
double CFStringGetDoubleValue(CFStringRef str);
extern
void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString);

extern
void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars);

extern
void CFStringAppendPascalString(CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding);

extern
void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding);

extern
void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
void CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));

extern
void CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr);

extern
void CFStringDelete(CFMutableStringRef theString, CFRange range);

extern
void CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement);

extern
void CFStringReplaceAll(CFMutableStringRef theString, CFStringRef replacement);
extern
CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions);
extern
void CFStringSetExternalCharactersNoCopy(CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity);
extern
void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad);

extern
void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString);

extern
void CFStringTrimWhitespace(CFMutableStringRef theString);

extern
void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringUppercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringCapitalize(CFMutableStringRef theString, CFLocaleRef locale);







typedef CFIndex CFStringNormalizationForm; enum {
 kCFStringNormalizationFormD = 0,
 kCFStringNormalizationFormKD,
 kCFStringNormalizationFormC,
 kCFStringNormalizationFormKC
};
extern void CFStringNormalize(CFMutableStringRef theString, CFStringNormalizationForm theForm);
extern
void CFStringFold(CFMutableStringRef theString, CFStringCompareFlags theFlags, CFLocaleRef theLocale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse);



extern const CFStringRef kCFStringTransformStripCombiningMarks;
extern const CFStringRef kCFStringTransformToLatin;
extern const CFStringRef kCFStringTransformFullwidthHalfwidth;
extern const CFStringRef kCFStringTransformLatinKatakana;
extern const CFStringRef kCFStringTransformLatinHiragana;
extern const CFStringRef kCFStringTransformHiraganaKatakana;
extern const CFStringRef kCFStringTransformMandarinLatin;
extern const CFStringRef kCFStringTransformLatinHangul;
extern const CFStringRef kCFStringTransformLatinArabic;
extern const CFStringRef kCFStringTransformLatinHebrew;
extern const CFStringRef kCFStringTransformLatinThai;
extern const CFStringRef kCFStringTransformLatinCyrillic;
extern const CFStringRef kCFStringTransformLatinGreek;
extern const CFStringRef kCFStringTransformToXMLHex;
extern const CFStringRef kCFStringTransformToUnicodeName;
extern const CFStringRef kCFStringTransformStripDiacritics __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFStringIsEncodingAvailable(CFStringEncoding encoding);



extern
const CFStringEncoding *CFStringGetListOfAvailableEncodings(void);



extern
CFStringRef CFStringGetNameOfEncoding(CFStringEncoding encoding);



extern
unsigned long CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertNSStringEncodingToEncoding(unsigned long encoding);



extern
UInt32 CFStringConvertEncodingToWindowsCodepage(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertWindowsCodepageToEncoding(UInt32 codepage);



extern
CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString);

extern
CFStringRef CFStringConvertEncodingToIANACharSetName(CFStringEncoding encoding);





extern
CFStringEncoding CFStringGetMostCompatibleMacStringEncoding(CFStringEncoding encoding);
typedef struct {
    UniChar buffer[64];
    CFStringRef theString;
    const UniChar *directUniCharBuffer;
    const char *directCStringBuffer;
    CFRange rangeToBuffer;
    CFIndex bufferedRangeStart;
    CFIndex bufferedRangeEnd;
} CFStringInlineBuffer;


static __inline__ __attribute__((always_inline)) void CFStringInitInlineBuffer(CFStringRef str, CFStringInlineBuffer *buf, CFRange range) {
    buf->theString = str;
    buf->rangeToBuffer = range;
    buf->directCStringBuffer = (buf->directUniCharBuffer = CFStringGetCharactersPtr(str)) ? __null : CFStringGetCStringPtr(str, kCFStringEncodingASCII);
    buf->bufferedRangeStart = buf->bufferedRangeEnd = 0;
}

static __inline__ __attribute__((always_inline)) UniChar CFStringGetCharacterFromInlineBuffer(CFStringInlineBuffer *buf, CFIndex idx) {
    if (idx < 0 || idx >= buf->rangeToBuffer.length) return 0;
    if (buf->directUniCharBuffer) return buf->directUniCharBuffer[idx + buf->rangeToBuffer.location];
    if (buf->directCStringBuffer) return (UniChar)(buf->directCStringBuffer[idx + buf->rangeToBuffer.location]);
    if (idx >= buf->bufferedRangeEnd || idx < buf->bufferedRangeStart) {
 if ((buf->bufferedRangeStart = idx - 4) < 0) buf->bufferedRangeStart = 0;
 buf->bufferedRangeEnd = buf->bufferedRangeStart + 64;
 if (buf->bufferedRangeEnd > buf->rangeToBuffer.length) buf->bufferedRangeEnd = buf->rangeToBuffer.length;
 CFStringGetCharacters(buf->theString, CFRangeMake(buf->rangeToBuffer.location + buf->bufferedRangeStart, buf->bufferedRangeEnd - buf->bufferedRangeStart), buf->buffer);
    }
    return buf->buffer[idx - buf->bufferedRangeStart];
}
static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateHighCharacter(UniChar character) {
    return ((character >= 0xD800UL) && (character <= 0xDBFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateLowCharacter(UniChar character) {
    return ((character >= 0xDC00UL) && (character <= 0xDFFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) UTF32Char CFStringGetLongCharacterForSurrogatePair(UniChar surrogateHigh, UniChar surrogateLow) {
    return (UTF32Char)(((surrogateHigh - 0xD800UL) << 10) + (surrogateLow - 0xDC00UL) + 0x0010000UL);
}


static __inline__ __attribute__((always_inline)) Boolean CFStringGetSurrogatePairForLongCharacter(UTF32Char character, UniChar *surrogates) {
    if ((character > 0xFFFFUL) && (character < 0x110000UL)) {
        character -= 0x10000;
        if (__null != surrogates) {
            surrogates[0] = (UniChar)((character >> 10) + 0xD800UL);
            surrogates[1] = (UniChar)((character & 0x3FF) + 0xDC00UL);
        }
        return true;
    } else {
        if (__null != surrogates) *surrogates = (UniChar)character;
        return false;
    }
}







extern
void CFShow(CFTypeRef obj);

extern
void CFShowStr(CFStringRef str);


extern
CFStringRef __CFStringMakeConstantString(const char *cStr) __attribute__((format_arg(1)));

}




extern "C" {

extern
CFTypeID CFTimeZoneGetTypeID(void);

extern
CFTimeZoneRef CFTimeZoneCopySystem(void);

extern
void CFTimeZoneResetSystem(void);

extern
CFTimeZoneRef CFTimeZoneCopyDefault(void);

extern
void CFTimeZoneSetDefault(CFTimeZoneRef tz);

extern
CFArrayRef CFTimeZoneCopyKnownNames(void);

extern
CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary(void);

extern
void CFTimeZoneSetAbbreviationDictionary(CFDictionaryRef dict);

extern
CFTimeZoneRef CFTimeZoneCreate(CFAllocatorRef allocator, CFStringRef name, CFDataRef data);

extern
CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti);

extern
CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev);

extern
CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz);

extern
CFDataRef CFTimeZoneGetData(CFTimeZoneRef tz);

extern
CFTimeInterval CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFStringRef CFTimeZoneCopyAbbreviation(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
Boolean CFTimeZoneIsDaylightSavingTime(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFTimeInterval CFTimeZoneGetDaylightSavingTimeOffset(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFAbsoluteTime CFTimeZoneGetNextDaylightSavingTimeTransition(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFIndex CFTimeZoneNameStyle; enum {
 kCFTimeZoneNameStyleStandard,
 kCFTimeZoneNameStyleShortStandard,
 kCFTimeZoneNameStyleDaylightSaving,
 kCFTimeZoneNameStyleShortDaylightSaving,
 kCFTimeZoneNameStyleGeneric,
 kCFTimeZoneNameStyleShortGeneric
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFStringRef CFTimeZoneCopyLocalizedName(CFTimeZoneRef tz, CFTimeZoneNameStyle style, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
const CFNotificationName kCFTimeZoneSystemTimeZoneDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}


extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSCalendar))) __CFCalendar * CFCalendarRef;

extern
CFTypeID CFCalendarGetTypeID(void);

extern
CFCalendarRef CFCalendarCopyCurrent(void);

extern
CFCalendarRef CFCalendarCreateWithIdentifier(CFAllocatorRef allocator, CFCalendarIdentifier identifier);



extern
CFCalendarIdentifier CFCalendarGetIdentifier(CFCalendarRef calendar);


extern
CFLocaleRef CFCalendarCopyLocale(CFCalendarRef calendar);

extern
void CFCalendarSetLocale(CFCalendarRef calendar, CFLocaleRef locale);

extern
CFTimeZoneRef CFCalendarCopyTimeZone(CFCalendarRef calendar);

extern
void CFCalendarSetTimeZone(CFCalendarRef calendar, CFTimeZoneRef tz);

extern
CFIndex CFCalendarGetFirstWeekday(CFCalendarRef calendar);

extern
void CFCalendarSetFirstWeekday(CFCalendarRef calendar, CFIndex wkdy);

extern
CFIndex CFCalendarGetMinimumDaysInFirstWeek(CFCalendarRef calendar);

extern
void CFCalendarSetMinimumDaysInFirstWeek(CFCalendarRef calendar, CFIndex mwd);


typedef CFOptionFlags CFCalendarUnit; enum {
 kCFCalendarUnitEra = (1UL << 1),
 kCFCalendarUnitYear = (1UL << 2),
 kCFCalendarUnitMonth = (1UL << 3),
 kCFCalendarUnitDay = (1UL << 4),
 kCFCalendarUnitHour = (1UL << 5),
 kCFCalendarUnitMinute = (1UL << 6),
 kCFCalendarUnitSecond = (1UL << 7),
 kCFCalendarUnitWeek __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) = (1UL << 8),
 kCFCalendarUnitWeekday = (1UL << 9),
 kCFCalendarUnitWeekdayOrdinal = (1UL << 10),
 kCFCalendarUnitQuarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 11),
 kCFCalendarUnitWeekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 12),
 kCFCalendarUnitWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 13),
 kCFCalendarUnitYearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 14),
};

extern
CFRange CFCalendarGetMinimumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetMaximumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
CFIndex CFCalendarGetOrdinalityOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
Boolean CFCalendarGetTimeRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit, CFAbsoluteTime at, CFAbsoluteTime *startp, CFTimeInterval *tip) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
Boolean CFCalendarComposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime *at, const char *componentDesc, ...);

extern
Boolean CFCalendarDecomposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...);


enum {
    kCFCalendarComponentsWrap = (1UL << 0)
};

extern
Boolean CFCalendarAddComponents(CFCalendarRef calendar, CFAbsoluteTime *at, CFOptionFlags options, const char *componentDesc, ...);

extern
Boolean CFCalendarGetComponentDifference(CFCalendarRef calendar, CFAbsoluteTime startingAT, CFAbsoluteTime resultAT, CFOptionFlags options, const char *componentDesc, ...);


}



extern "C" {

typedef CFStringRef CFDateFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFDateFormatter *CFDateFormatterRef;



extern
CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
CFTypeID CFDateFormatterGetTypeID(void);
typedef CFIndex CFDateFormatterStyle; enum {
    kCFDateFormatterNoStyle = 0,
    kCFDateFormatterShortStyle = 1,
    kCFDateFormatterMediumStyle = 2,
    kCFDateFormatterLongStyle = 3,
    kCFDateFormatterFullStyle = 4
};

typedef CFOptionFlags CFISO8601DateFormatOptions; enum {




    kCFISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 0),
    kCFISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 1),

    kCFISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 2),






    kCFISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 4),

    kCFISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 5),
    kCFISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 6),

    kCFISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 7),
    kCFISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 8),
    kCFISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 9),
    kCFISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 10),
    kCFISO8601DateFormatWithFractionalSeconds __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = (1UL << 11),

    kCFISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear | kCFISO8601DateFormatWithMonth | kCFISO8601DateFormatWithDay | kCFISO8601DateFormatWithDashSeparatorInDate,
    kCFISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime | kCFISO8601DateFormatWithColonSeparatorInTime | kCFISO8601DateFormatWithTimeZone | kCFISO8601DateFormatWithColonSeparatorInTimeZone,

    kCFISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate | kCFISO8601DateFormatWithFullTime,
};

extern
CFDateFormatterRef CFDateFormatterCreateISO8601Formatter(CFAllocatorRef allocator, CFISO8601DateFormatOptions formatOptions) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

extern
CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);



extern
CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetDateStyle(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetTimeStyle(CFDateFormatterRef formatter);


extern
CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter);

extern
void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString);







extern
CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date);

extern
CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at);




extern
CFDateRef CFDateFormatterCreateDateFromString(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);

extern
Boolean CFDateFormatterGetAbsoluteTimeFromString(CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep, CFAbsoluteTime *atp);
extern
void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);

extern
CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFDateFormatterKey key);



extern const CFDateFormatterKey kCFDateFormatterIsLenient;
extern const CFDateFormatterKey kCFDateFormatterTimeZone;
extern const CFDateFormatterKey kCFDateFormatterCalendarName;
extern const CFDateFormatterKey kCFDateFormatterDefaultFormat;
extern const CFDateFormatterKey kCFDateFormatterTwoDigitStartDate;
extern const CFDateFormatterKey kCFDateFormatterDefaultDate;
extern const CFDateFormatterKey kCFDateFormatterCalendar;
extern const CFDateFormatterKey kCFDateFormatterEraSymbols;
extern const CFDateFormatterKey kCFDateFormatterMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterShortMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterShortWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterAMSymbol;
extern const CFDateFormatterKey kCFDateFormatterPMSymbol;
extern const CFDateFormatterKey kCFDateFormatterLongEraSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterGregorianStartDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterDoesRelativeDateFormattingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
}

extern "C" {

typedef CFStringRef CFErrorDomain __attribute__((swift_wrapper(struct)));





typedef struct __attribute__((objc_bridge(NSError))) __CFError * CFErrorRef;





extern
CFTypeID CFErrorGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern const CFErrorDomain kCFErrorDomainPOSIX __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainOSStatus __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainMach __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainCocoa __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorLocalizedDescriptionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorLocalizedFailureKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern const CFStringRef kCFErrorLocalizedFailureReasonKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorLocalizedRecoverySuggestionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorDescriptionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorUnderlyingErrorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorURLKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorFilePathKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef CFErrorCreateWithUserInfoKeysAndValues(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







extern
CFErrorDomain CFErrorGetDomain(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







extern
CFIndex CFErrorGetCode(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyDescription(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyFailureReason(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyRecoverySuggestion(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}

extern "C" {

typedef const struct __attribute__((objc_bridge(NSNumber))) __CFBoolean * CFBooleanRef;

extern
const CFBooleanRef kCFBooleanTrue;
extern
const CFBooleanRef kCFBooleanFalse;

extern
CFTypeID CFBooleanGetTypeID(void);

extern
Boolean CFBooleanGetValue(CFBooleanRef boolean);

typedef CFIndex CFNumberType; enum {

    kCFNumberSInt8Type = 1,
    kCFNumberSInt16Type = 2,
    kCFNumberSInt32Type = 3,
    kCFNumberSInt64Type = 4,
    kCFNumberFloat32Type = 5,
    kCFNumberFloat64Type = 6,

    kCFNumberCharType = 7,
    kCFNumberShortType = 8,
    kCFNumberIntType = 9,
    kCFNumberLongType = 10,
    kCFNumberLongLongType = 11,
    kCFNumberFloatType = 12,
    kCFNumberDoubleType = 13,

    kCFNumberCFIndexType = 14,
    kCFNumberNSIntegerType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    kCFNumberCGFloatType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 16,
    kCFNumberMaxType = 16
};

typedef const struct __attribute__((objc_bridge(NSNumber))) __CFNumber * CFNumberRef;

extern
const CFNumberRef kCFNumberPositiveInfinity;
extern
const CFNumberRef kCFNumberNegativeInfinity;
extern
const CFNumberRef kCFNumberNaN;

extern
CFTypeID CFNumberGetTypeID(void);
extern
CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);





extern
CFNumberType CFNumberGetType(CFNumberRef number);




extern
CFIndex CFNumberGetByteSize(CFNumberRef number);





extern
Boolean CFNumberIsFloatType(CFNumberRef number);
extern
Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr);
extern
CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context);

}
extern "C" {

typedef CFStringRef CFNumberFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNumberFormatter *CFNumberFormatterRef;



extern
CFTypeID CFNumberFormatterGetTypeID(void);

typedef CFIndex CFNumberFormatterStyle; enum {
 kCFNumberFormatterNoStyle = 0,
 kCFNumberFormatterDecimalStyle = 1,
 kCFNumberFormatterCurrencyStyle = 2,
 kCFNumberFormatterPercentStyle = 3,
 kCFNumberFormatterScientificStyle = 4,
 kCFNumberFormatterSpellOutStyle = 5,
 kCFNumberFormatterOrdinalStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 6,
 kCFNumberFormatterCurrencyISOCodeStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 8,
 kCFNumberFormatterCurrencyPluralStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 9,
 kCFNumberFormatterCurrencyAccountingStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 10,
};


extern
CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style);



extern
CFLocaleRef CFNumberFormatterGetLocale(CFNumberFormatterRef formatter);

extern
CFNumberFormatterStyle CFNumberFormatterGetStyle(CFNumberFormatterRef formatter);


extern
CFStringRef CFNumberFormatterGetFormat(CFNumberFormatterRef formatter);

extern
void CFNumberFormatterSetFormat(CFNumberFormatterRef formatter, CFStringRef formatString);
extern
CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number);

extern
CFStringRef CFNumberFormatterCreateStringWithValue(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberType numberType, const void *valuePtr);




typedef CFOptionFlags CFNumberFormatterOptionFlags; enum {
    kCFNumberFormatterParseIntegersOnly = 1
};

extern
CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options);

extern
Boolean CFNumberFormatterGetValueFromString(CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFNumberType numberType, void *valuePtr);
extern
void CFNumberFormatterSetProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key, CFTypeRef value);

extern
CFTypeRef CFNumberFormatterCopyProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key);



extern const CFNumberFormatterKey kCFNumberFormatterCurrencyCode;
extern const CFNumberFormatterKey kCFNumberFormatterDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterAlwaysShowDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterUseGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterPercentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterZeroSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterNaNSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInfinitySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinusSign;
extern const CFNumberFormatterKey kCFNumberFormatterPlusSign;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterExponentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMinFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterSecondaryGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingMode;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingIncrement;
extern const CFNumberFormatterKey kCFNumberFormatterFormatWidth;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingPosition;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingCharacter;
extern const CFNumberFormatterKey kCFNumberFormatterDefaultFormat;
extern const CFNumberFormatterKey kCFNumberFormatterMultiplier;
extern const CFNumberFormatterKey kCFNumberFormatterPositivePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterPositiveSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativeSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterPerMillSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInternationalCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyGroupingSeparator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterIsLenient __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterUseSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterMinSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterMaxSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFIndex CFNumberFormatterRoundingMode; enum {
    kCFNumberFormatterRoundCeiling = 0,
    kCFNumberFormatterRoundFloor = 1,
    kCFNumberFormatterRoundDown = 2,
    kCFNumberFormatterRoundUp = 3,
    kCFNumberFormatterRoundHalfEven = 4,
    kCFNumberFormatterRoundHalfDown = 5,
    kCFNumberFormatterRoundHalfUp = 6
};

typedef CFIndex CFNumberFormatterPadPosition; enum {
    kCFNumberFormatterPadBeforePrefix = 0,
    kCFNumberFormatterPadAfterPrefix = 1,
    kCFNumberFormatterPadBeforeSuffix = 2,
    kCFNumberFormatterPadAfterSuffix = 3
};


extern
Boolean CFNumberFormatterGetDecimalInfoForCurrencyCode(CFStringRef currencyCode, int32_t *defaultFractionDigits, double *roundingIncrement);






}
#pragma clang assume_nonnull begin
extern "C" {

extern
const CFStringRef kCFPreferencesAnyApplication;
extern
const CFStringRef kCFPreferencesCurrentApplication;
extern
const CFStringRef kCFPreferencesAnyHost;
extern
const CFStringRef kCFPreferencesCurrentHost;
extern
const CFStringRef kCFPreferencesAnyUser;
extern
const CFStringRef kCFPreferencesCurrentUser;
extern
_Nullable CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID);




extern
Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
void CFPreferencesSetAppValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID);





extern
void CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID);

extern
void CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID);



extern
Boolean CFPreferencesAppSynchronize(CFStringRef applicationID);





extern
_Nullable CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
CFDictionaryRef CFPreferencesCopyMultiple(_Nullable CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetMultiple(_Nullable CFDictionaryRef keysToSet, _Nullable CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);

extern
Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
_Nullable CFArrayRef CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Unsupported API"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Unsupported API"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Unsupported API"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Unsupported API")));




extern
_Nullable CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);







extern
Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID);



}
#pragma clang assume_nonnull end
extern "C" {

typedef CFIndex CFURLPathStyle; enum {
    kCFURLPOSIXPathStyle = 0,
    kCFURLHFSPathStyle __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))),
    kCFURLWindowsPathStyle
};

typedef const struct __attribute__((objc_bridge(NSURL))) __CFURL * CFURLRef;
extern
CFTypeID CFURLGetTypeID(void);
extern
CFURLRef CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL);





extern
CFDataRef CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace);


extern
CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL);
extern
CFURLRef CFURLCreateAbsoluteURLWithBytes(CFAllocatorRef alloc, const UInt8 *relativeURLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL, Boolean useCompatibilityMode);







extern
CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory);

extern
CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);







extern
CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);

extern
CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL);
extern
Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen);


extern
CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL);


extern
CFStringRef CFURLGetString(CFURLRef anURL);


extern
CFURLRef CFURLGetBaseURL(CFURLRef anURL);
extern
Boolean CFURLCanBeDecomposed(CFURLRef anURL);

extern
CFStringRef CFURLCopyScheme(CFURLRef anURL);


extern
CFStringRef CFURLCopyNetLocation(CFURLRef anURL);
extern
CFStringRef CFURLCopyPath(CFURLRef anURL);


extern
CFStringRef CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute);




extern
CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle);



extern
Boolean CFURLHasDirectoryPath(CFURLRef anURL);




extern
CFStringRef CFURLCopyResourceSpecifier(CFURLRef anURL);


extern
CFStringRef CFURLCopyHostName(CFURLRef anURL);

extern
SInt32 CFURLGetPortNumber(CFURLRef anURL);


extern
CFStringRef CFURLCopyUserName(CFURLRef anURL);


extern
CFStringRef CFURLCopyPassword(CFURLRef anURL);







extern
CFStringRef CFURLCopyParameterString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped) __attribute__((availability(macosx,introduced=10.2,deprecated=10.15,message="The CFURLCopyParameterString function is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, CFURLCopyParameterString will always return NULL, and the CFURLCopyPath(), CFURLCopyStrictPath(), and CFURLCopyFileSystemPath() functions will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="The CFURLCopyParameterString function is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, CFURLCopyParameterString will always return NULL, and the CFURLCopyPath(), CFURLCopyStrictPath(), and CFURLCopyFileSystemPath() functions will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="The CFURLCopyParameterString function is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, CFURLCopyParameterString will always return NULL, and the CFURLCopyPath(), CFURLCopyStrictPath(), and CFURLCopyFileSystemPath() functions will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="The CFURLCopyParameterString function is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, CFURLCopyParameterString will always return NULL, and the CFURLCopyPath(), CFURLCopyStrictPath(), and CFURLCopyFileSystemPath() functions will return the complete path including the semicolon separator and params component if the URL string contains them.")));
extern
CFStringRef CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyFragment(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCopyLastPathComponent(CFURLRef url);


extern
CFStringRef CFURLCopyPathExtension(CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);

extern
CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathExtension(CFAllocatorRef allocator, CFURLRef url, CFStringRef extension);

extern
CFURLRef CFURLCreateCopyDeletingPathExtension(CFAllocatorRef allocator, CFURLRef url);







extern
CFIndex CFURLGetBytes(CFURLRef url, UInt8 *buffer, CFIndex bufferLength);

typedef CFIndex CFURLComponentType; enum {
 kCFURLComponentScheme = 1,
 kCFURLComponentNetLocation = 2,
 kCFURLComponentPath = 3,
 kCFURLComponentResourceSpecifier = 4,

 kCFURLComponentUser = 5,
 kCFURLComponentPassword = 6,
 kCFURLComponentUserInfo = 7,
 kCFURLComponentHost = 8,
 kCFURLComponentPort = 9,
 kCFURLComponentParameterString = 10,
 kCFURLComponentQuery = 11,
 kCFURLComponentFragment = 12
};
extern
CFRange CFURLGetByteRangeForComponent(CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators);
extern
CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCreateStringByReplacingPercentEscapesUsingEncoding(CFAllocatorRef allocator, CFStringRef origString, CFStringRef charsToLeaveEscaped, CFStringEncoding encoding) __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")));
extern
CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding) __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")));
extern
Boolean CFURLIsFileReferenceURL(CFURLRef url) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFURLCreateFileReferenceURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







struct FSRef;



extern
CFURLRef CFURLCreateFromFSRef(CFAllocatorRef allocator, const struct FSRef *fsRef) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

extern
Boolean CFURLGetFSRef(CFURLRef url, struct FSRef *fsRef) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));
extern
Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFDictionaryRef CFURLCopyResourcePropertiesForKeys(CFURLRef url, CFArrayRef keys, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLSetResourcePropertiesForKeys(CFURLRef url, CFDictionaryRef keyedPropertyValues, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLKeysOfUnsetValuesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLClearResourcePropertyCacheForKey(CFURLRef url, CFStringRef key) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLClearResourcePropertyCache(CFURLRef url) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLSetTemporaryResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLResourceIsReachable(CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
const CFStringRef kCFURLNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLocalizedNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsRegularFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsDirectoryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsSymbolicLinkKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsVolumeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsPackageKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsApplicationKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLApplicationIsScriptableKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLIsSystemImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsUserImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsHiddenKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLHasHiddenExtensionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLCreationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLContentAccessDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLContentModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLAttributeModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLinkCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLParentDirectoryURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTypeIdentifierKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLocalizedTypeDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLabelNumberKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLabelColorKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLLabelColorKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLLabelColorKey")));


extern
const CFStringRef kCFURLLocalizedLabelKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLEffectiveIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLEffectiveIconKey")));


extern
const CFStringRef kCFURLCustomIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLCustomIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLCustomIconKey")));


extern
const CFStringRef kCFURLFileResourceIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLPreferredIOBlockSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsReadableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsWritableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsExecutableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsExcludedFromBackupKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.1))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTagNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLPathKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLIsMountTriggerKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLGenerationIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLDocumentIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLAddedToDirectoryDateKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLQuarantinePropertiesKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLFileResourceTypeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
const CFStringRef kCFURLFileResourceTypeNamedPipe __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeCharacterSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeBlockSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeRegular __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeSymbolicLink __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeSocket __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeUnknown __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
const CFStringRef kCFURLFileSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTotalFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTotalFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsAliasFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileProtectionKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));



extern
const CFStringRef kCFURLFileProtectionNone __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionComplete __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));





extern
const CFStringRef kCFURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeTotalCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeAvailableCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeAvailableCapacityForImportantUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






extern
const CFStringRef kCFURLVolumeAvailableCapacityForOpportunisticUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern
const CFStringRef kCFURLVolumeResourceCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsPersistentIDsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsSymbolicLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsHardLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsSparseFilesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsZeroRunsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsVolumeSizesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsRenamingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsExtendedSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsBrowsableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeMaximumFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsEjectableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsRemovableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsInternalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsAutomountedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsLocalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsReadOnlyKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeURLForRemountingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeUUIDStringKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeLocalizedNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsImmutableFilesKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


extern
const CFStringRef kCFURLVolumeSupportsAccessPermissionsKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));




extern
const CFStringRef kCFURLIsUbiquitousItemKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead")));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFURLBookmarkCreationOptions; enum {
    kCFURLBookmarkCreationMinimalBookmarkMask = ( 1UL << 9 ),
    kCFURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    kCFURLBookmarkCreationWithSecurityScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1UL << 11 ),
    kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1UL << 12 ),


    kCFURLBookmarkCreationPreferFileIDResolutionMask
    __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="kCFURLBookmarkCreationPreferFileIDResolutionMask does nothing and has no effect on bookmark resolution"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="kCFURLBookmarkCreationPreferFileIDResolutionMask does nothing and has no effect on bookmark resolution"))) = ( 1UL << 8 ),
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFOptionFlags CFURLBookmarkResolutionOptions; enum {
    kCFURLBookmarkResolutionWithoutUIMask = ( 1UL << 8 ),
    kCFURLBookmarkResolutionWithoutMountingMask = ( 1UL << 9 ),
    kCFURLBookmarkResolutionWithSecurityScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1UL << 10 ),

    kCFBookmarkResolutionWithoutUIMask = kCFURLBookmarkResolutionWithoutUIMask,
    kCFBookmarkResolutionWithoutMountingMask = kCFURLBookmarkResolutionWithoutMountingMask,
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFOptionFlags CFURLBookmarkFileCreationOptions;





extern
CFDataRef CFURLCreateBookmarkData ( CFAllocatorRef allocator, CFURLRef url, CFURLBookmarkCreationOptions options, CFArrayRef resourcePropertiesToInclude, CFURLRef relativeToURL, CFErrorRef* error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFURLRef CFURLCreateByResolvingBookmarkData ( CFAllocatorRef allocator, CFDataRef bookmark, CFURLBookmarkResolutionOptions options, CFURLRef relativeToURL, CFArrayRef resourcePropertiesToInclude, Boolean* isStale, CFErrorRef* error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDictionaryRef CFURLCreateResourcePropertiesForKeysFromBookmarkData ( CFAllocatorRef allocator, CFArrayRef resourcePropertiesToReturn, CFDataRef bookmark ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFTypeRef CFURLCreateResourcePropertyForKeyFromBookmarkData( CFAllocatorRef allocator, CFStringRef resourcePropertyKey, CFDataRef bookmark ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFURLCreateBookmarkDataFromFile(CFAllocatorRef allocator, CFURLRef fileURL, CFErrorRef *errorRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
Boolean CFURLWriteBookmarkDataToFile( CFDataRef bookmarkRef, CFURLRef fileURL, CFURLBookmarkFileCreationOptions options, CFErrorRef *errorRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFURLCreateBookmarkDataFromAliasRecord ( CFAllocatorRef allocatorRef, CFDataRef aliasRecordDataRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern
Boolean CFURLStartAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
void CFURLStopAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}
typedef unsigned int boolean_t;
typedef __darwin_natural_t natural_t;
typedef int integer_t;






typedef uintptr_t vm_offset_t;
typedef uintptr_t vm_size_t;
typedef uint64_t mach_vm_address_t;
typedef uint64_t mach_vm_offset_t;
typedef uint64_t mach_vm_size_t;

typedef uint64_t vm_map_offset_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_map_size_t;

typedef mach_vm_address_t mach_port_context_t;
typedef natural_t mach_port_name_t;
typedef mach_port_name_t *mach_port_name_array_t;
typedef __darwin_mach_port_t mach_port_t;


typedef mach_port_t *mach_port_array_t;
typedef natural_t mach_port_right_t;
typedef natural_t mach_port_type_t;
typedef mach_port_type_t *mach_port_type_array_t;
typedef natural_t mach_port_urefs_t;
typedef integer_t mach_port_delta_t;



typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef natural_t mach_port_rights_t;






typedef unsigned int mach_port_srights_t;

typedef struct mach_port_status {
 mach_port_rights_t mps_pset;
 mach_port_seqno_t mps_seqno;
 mach_port_mscount_t mps_mscount;
 mach_port_msgcount_t mps_qlimit;
 mach_port_msgcount_t mps_msgcount;
 mach_port_rights_t mps_sorights;
 boolean_t mps_srights;
 boolean_t mps_pdrequest;
 boolean_t mps_nsrequest;
 natural_t mps_flags;
} mach_port_status_t;
typedef struct mach_port_limits {
 mach_port_msgcount_t mpl_qlimit;
} mach_port_limits_t;
typedef struct mach_port_info_ext {
 mach_port_status_t mpie_status;
 mach_port_msgcount_t mpie_boost_cnt;
 uint32_t reserved[6];
} mach_port_info_ext_t;

typedef integer_t *mach_port_info_t;


typedef int mach_port_flavor_t;
typedef struct mach_port_qos {
 unsigned int name:1;
 unsigned int prealloc:1;
 boolean_t pad1:30;
 natural_t len;
} mach_port_qos_t;
typedef struct mach_port_options {
 uint32_t flags;
 mach_port_limits_t mpl;
 uint64_t reserved[2];
}mach_port_options_t;

typedef mach_port_options_t *mach_port_options_ptr_t;
enum mach_port_guard_exception_codes {
 kGUARD_EXC_DESTROY = 1u << 0,
 kGUARD_EXC_MOD_REFS = 1u << 1,
 kGUARD_EXC_SET_CONTEXT = 1u << 2,
 kGUARD_EXC_UNGUARDED = 1u << 3,
 kGUARD_EXC_INCORRECT_GUARD = 1u << 4,
 kGUARD_EXC_IMMOVABLE = 1u << 5,
 kGUARD_EXC_STRICT_REPLY = 1u << 6,

 kGUARD_EXC_INVALID_RIGHT = 1u << 8,
 kGUARD_EXC_INVALID_NAME = 1u << 9,
 kGUARD_EXC_INVALID_VALUE = 1u << 10,
 kGUARD_EXC_INVALID_ARGUMENT = 1u << 11,
 kGUARD_EXC_RIGHT_EXISTS = 1u << 12,
 kGUARD_EXC_KERN_NO_SPACE = 1u << 13,
 kGUARD_EXC_KERN_FAILURE = 1u << 14,
 kGUARD_EXC_KERN_RESOURCE = 1u << 15,
 kGUARD_EXC_SEND_INVALID_REPLY = 1u << 16,
 kGUARD_EXC_SEND_INVALID_VOUCHER = 1u << 17,
 kGUARD_EXC_SEND_INVALID_RIGHT = 1u << 18,
 kGUARD_EXC_RCV_INVALID_NAME = 1u << 19,
 kGUARD_EXC_RCV_GUARDED_DESC = 1u << 20,
};



extern "C" {

typedef CFStringRef CFRunLoopMode __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoop * CFRunLoopRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopSource * CFRunLoopSourceRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopObserver * CFRunLoopObserverRef;

typedef struct __attribute__((objc_bridge_mutable(NSTimer))) __CFRunLoopTimer * CFRunLoopTimerRef;


typedef SInt32 CFRunLoopRunResult; enum {
    kCFRunLoopRunFinished = 1,
    kCFRunLoopRunStopped = 2,
    kCFRunLoopRunTimedOut = 3,
    kCFRunLoopRunHandledSource = 4
};


typedef CFOptionFlags CFRunLoopActivity; enum {
    kCFRunLoopEntry = (1UL << 0),
    kCFRunLoopBeforeTimers = (1UL << 1),
    kCFRunLoopBeforeSources = (1UL << 2),
    kCFRunLoopBeforeWaiting = (1UL << 5),
    kCFRunLoopAfterWaiting = (1UL << 6),
    kCFRunLoopExit = (1UL << 7),
    kCFRunLoopAllActivities = 0x0FFFFFFFU
};

extern const CFRunLoopMode kCFRunLoopDefaultMode;
extern const CFRunLoopMode kCFRunLoopCommonModes;

extern CFTypeID CFRunLoopGetTypeID(void);

extern CFRunLoopRef CFRunLoopGetCurrent(void);
extern CFRunLoopRef CFRunLoopGetMain(void);

extern CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl);

extern CFArrayRef CFRunLoopCopyAllModes(CFRunLoopRef rl);

extern void CFRunLoopAddCommonMode(CFRunLoopRef rl, CFRunLoopMode mode);

extern CFAbsoluteTime CFRunLoopGetNextTimerFireDate(CFRunLoopRef rl, CFRunLoopMode mode);

extern void CFRunLoopRun(void);
extern CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled);
extern Boolean CFRunLoopIsWaiting(CFRunLoopRef rl);
extern void CFRunLoopWakeUp(CFRunLoopRef rl);
extern void CFRunLoopStop(CFRunLoopRef rl);


extern void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void (*block)(void)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern Boolean CFRunLoopContainsSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);
    void (*schedule)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*cancel)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*perform)(void *info);
} CFRunLoopSourceContext;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);

    mach_port_t (*getPort)(void *info);
    void * (*perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);




} CFRunLoopSourceContext1;

extern CFTypeID CFRunLoopSourceGetTypeID(void);

extern CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context);

extern CFIndex CFRunLoopSourceGetOrder(CFRunLoopSourceRef source);
extern void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source);
extern Boolean CFRunLoopSourceIsValid(CFRunLoopSourceRef source);
extern void CFRunLoopSourceGetContext(CFRunLoopSourceRef source, CFRunLoopSourceContext *context);
extern void CFRunLoopSourceSignal(CFRunLoopSourceRef source);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopObserverContext;

typedef void (*CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);

extern CFTypeID CFRunLoopObserverGetTypeID(void);

extern CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context);

extern CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void (*block) (CFRunLoopObserverRef observer, CFRunLoopActivity activity)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern CFOptionFlags CFRunLoopObserverGetActivities(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverDoesRepeat(CFRunLoopObserverRef observer);
extern CFIndex CFRunLoopObserverGetOrder(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverIsValid(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverGetContext(CFRunLoopObserverRef observer, CFRunLoopObserverContext *context);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopTimerContext;

typedef void (*CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);

extern CFTypeID CFRunLoopTimerGetTypeID(void);

extern CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context);

extern CFRunLoopTimerRef CFRunLoopTimerCreateWithHandler(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, void (*block) (CFRunLoopTimerRef timer)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern CFAbsoluteTime CFRunLoopTimerGetNextFireDate(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerSetNextFireDate(CFRunLoopTimerRef timer, CFAbsoluteTime fireDate);
extern CFTimeInterval CFRunLoopTimerGetInterval(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerDoesRepeat(CFRunLoopTimerRef timer);
extern CFIndex CFRunLoopTimerGetOrder(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerIsValid(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerGetContext(CFRunLoopTimerRef timer, CFRunLoopTimerContext *context);



extern CFTimeInterval CFRunLoopTimerGetTolerance(CFRunLoopTimerRef timer) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern void CFRunLoopTimerSetTolerance(CFRunLoopTimerRef timer, CFTimeInterval tolerance) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef struct __attribute__((objc_bridge_mutable(id))) __CFSocket * CFSocketRef;
typedef CFIndex CFSocketError; enum {
    kCFSocketSuccess = 0,
    kCFSocketError = -1L,
    kCFSocketTimeout = -2L
};

typedef struct {
    SInt32 protocolFamily;
    SInt32 socketType;
    SInt32 protocol;
    CFDataRef address;
} CFSocketSignature;


typedef CFOptionFlags CFSocketCallBackType; enum {
    kCFSocketNoCallBack = 0,
    kCFSocketReadCallBack = 1,
    kCFSocketAcceptCallBack = 2,
    kCFSocketDataCallBack = 3,
    kCFSocketConnectCallBack = 4,
    kCFSocketWriteCallBack = 8
};


enum {
    kCFSocketAutomaticallyReenableReadCallBack = 1,
    kCFSocketAutomaticallyReenableAcceptCallBack = 2,
    kCFSocketAutomaticallyReenableDataCallBack = 3,
    kCFSocketAutomaticallyReenableWriteCallBack = 8,
    kCFSocketLeaveErrors __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 64,
    kCFSocketCloseOnInvalidate = 128
};

typedef void (*CFSocketCallBack)(CFSocketRef s, CFSocketCallBackType type, CFDataRef address, const void *data, void *info);


typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFSocketContext;


typedef int CFSocketNativeHandle;


extern CFTypeID CFSocketGetTypeID(void);

extern CFSocketRef CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);

extern CFSocketRef CFSocketCreateConnectedToSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout);


extern CFSocketError CFSocketSetAddress(CFSocketRef s, CFDataRef address);
extern CFSocketError CFSocketConnectToAddress(CFSocketRef s, CFDataRef address, CFTimeInterval timeout);
extern void CFSocketInvalidate(CFSocketRef s);

extern Boolean CFSocketIsValid(CFSocketRef s);
extern CFDataRef CFSocketCopyAddress(CFSocketRef s);
extern CFDataRef CFSocketCopyPeerAddress(CFSocketRef s);
extern void CFSocketGetContext(CFSocketRef s, CFSocketContext *context);
extern CFSocketNativeHandle CFSocketGetNative(CFSocketRef s);

extern CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order);

extern CFOptionFlags CFSocketGetSocketFlags(CFSocketRef s);
extern void CFSocketSetSocketFlags(CFSocketRef s, CFOptionFlags flags);
extern void CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
extern void CFSocketEnableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);



extern CFSocketError CFSocketSendData(CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout);
extern CFSocketError CFSocketRegisterValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value);
extern CFSocketError CFSocketCopyRegisteredValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketRegisterSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature);
extern CFSocketError CFSocketCopyRegisteredSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketUnregister(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name);

extern void CFSocketSetDefaultNameRegistryPortNumber(UInt16 port);
extern UInt16 CFSocketGetDefaultNameRegistryPortNumber(void);


extern const CFStringRef kCFSocketCommandKey;
extern const CFStringRef kCFSocketNameKey;
extern const CFStringRef kCFSocketValueKey;
extern const CFStringRef kCFSocketResultKey;
extern const CFStringRef kCFSocketErrorKey;
extern const CFStringRef kCFSocketRegisterCommand;
extern const CFStringRef kCFSocketRetrieveCommand;

}

typedef void (*os_function_t)(void *_Nullable);
typedef void (*os_block_t)(void);











struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
extern "C" {

int getattrlistbulk(int, void *, void *, size_t, uint64_t) __attribute__((availability(ios,introduced=8.0)));
int getattrlistat(int, const char *, void *, void *, size_t, unsigned long) __attribute__((availability(ios,introduced=8.0)));
int setattrlistat(int, const char *, void *, void *, size_t, uint32_t) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

}
extern "C" {

int faccessat(int, const char *, int, int) __attribute__((availability(ios,introduced=8.0)));
int fchownat(int, const char *, uid_t, gid_t, int) __attribute__((availability(ios,introduced=8.0)));
int linkat(int, const char *, int, const char *, int) __attribute__((availability(ios,introduced=8.0)));
ssize_t readlinkat(int, const char *, char *, size_t) __attribute__((availability(ios,introduced=8.0)));
int symlinkat(const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));
int unlinkat(int, const char *, int) __attribute__((availability(ios,introduced=8.0)));

}
extern "C" {
void _exit(int) __attribute__((__noreturn__));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);

int close(int) __asm("_" "close" );

int dup(int);
int dup2(int, int);
int execl(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execle(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execlp(const char * __file, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execv(const char * __path, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execve(const char * __file, char * const * __argv, char * const * __envp) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execvp(const char * __file, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
pid_t fork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
long fpathconf(int, int);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);



int getgroups(int, gid_t []);

char *getlogin(void);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
int isatty(int);
int link(const char *, const char *);
off_t lseek(int, off_t, int);
long pathconf(const char *, int);

int pause(void) __asm("_" "pause" );

int pipe(int [2]);

ssize_t read(int, void *, size_t) __asm("_" "read" );

int rmdir(const char *);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
int setuid(uid_t);

unsigned int
  sleep(unsigned int) __asm("_" "sleep" );

long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
char *ttyname(int);


int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );




int unlink(const char *);

ssize_t write(int __fd, const void * __buf, size_t __nbyte) __asm("_" "write" );
}
extern "C" {
size_t confstr(int, char *, size_t) __asm("_" "confstr" );

int getopt(int, char * const [], const char *) __asm("_" "getopt" );

extern char *optarg;
extern int optind, opterr, optopt;
}
 extern "C" {





__attribute__((__deprecated__)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *brk(const void *);
int chroot(const char *) ;


char *crypt(const char *, const char *);

void encrypt(char *, int) __asm("_" "encrypt" );



int fchdir(int);
long gethostid(void);
pid_t getpgid(pid_t);
pid_t getsid(pid_t);



int getdtablesize(void) ;
int getpagesize(void) __attribute__((__const__)) ;
char *getpass(const char *) ;




char *getwd(char *) ;


int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );

int lockf(int, int, off_t) __asm("_" "lockf" );

int nice(int) __asm("_" "nice" );

ssize_t pread(int __fd, void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pread" );

ssize_t pwrite(int __fd, const void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pwrite" );






__attribute__((__deprecated__)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *sbrk(int);



pid_t setpgrp(void) __asm("_" "setpgrp" );




int setregid(gid_t, gid_t) __asm("_" "setregid" );

int setreuid(uid_t, uid_t) __asm("_" "setreuid" );

void swab(const void * , void * , ssize_t);
void sync(void);
int truncate(const char *, off_t);
useconds_t ualarm(useconds_t, useconds_t);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


int fsync(int) __asm("_" "fsync" );

int ftruncate(int, off_t);
int getlogin_r(char *, size_t);
}
extern "C" {
int fchown(int, uid_t, gid_t);
int gethostname(char *, size_t);
ssize_t readlink(const char * , char * , size_t);
int setegid(gid_t);
int seteuid(uid_t);
int symlink(const char *, const char *);
}








extern "C" {


int pselect(int, fd_set * , fd_set * ,
    fd_set * , const struct timespec * ,
    const sigset_t * )




__asm("_" "pselect" )




;



int select(int, fd_set * , fd_set * ,
    fd_set * , struct timeval * )




__asm("_" "select" )




;

}



typedef __darwin_uuid_t uuid_t;

extern "C" {
void _Exit(int) __attribute__((__noreturn__));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void endusershell(void);
int execvP(const char * __file, const char * __searchpath, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *fflagstostr(unsigned long);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);





int gethostuuid(uuid_t, const struct timespec *) __attribute__((availability(ios,unavailable)));




mode_t getmode(const void *, mode_t);
int getpeereid(int, uid_t *, gid_t *);
int getsgroups_np(int *, uuid_t);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkpath_np(const char *path, mode_t omode) __attribute__((availability(ios,introduced=5.0)));
int mkpathat_np(int dfd, const char *path, mode_t omode)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int mkostemp(char *path, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkostemps(char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

int mkstemp_dprotected_np(char *path, int dpclass, int dpflags)
  __attribute__((availability(macosx,unavailable))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
char *mkdtempat_np(int dfd, char *path)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkstempsat_np(int dfd, char *path, int slen)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkostempsat_np(int dfd, char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);

__attribute__((__deprecated__("Use of per-thread security contexts is error-prone and discouraged.")))
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);

int reboot(int);
int revoke(const char *);

__attribute__((__deprecated__)) int rcmd(char **, int, const char *, const char *, const char *, int *);
__attribute__((__deprecated__)) int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
__attribute__((__deprecated__)) int rresvport(int *);
__attribute__((__deprecated__)) int rresvport_af(int *, int);
__attribute__((__deprecated__)) int iruserok(unsigned long, int, const char *, const char *);
__attribute__((__deprecated__)) int iruserok_sa(const void *, int, int, const char *, const char *);
__attribute__((__deprecated__)) int ruserok(const char *, int, const char *, const char *);

int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);

void setkey(const char *) __asm("_" "setkey" );



int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);

__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
__attribute__((availability(ios,deprecated=10.0,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

__attribute__((availability(macosx,deprecated=10.12,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

int syscall(int, ...);

extern char *suboptarg;
int getsubopt(char **, char * const *, char **);



int fgetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int fsetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
struct fssearchblock;
struct searchstate;

int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int) __attribute__((availability(ios,introduced=3.0)));




int fsync_volume_np(int, int) __attribute__((availability(ios,introduced=6.0)));
int sync_volume_np(const char *, int) __attribute__((availability(ios,introduced=6.0)));

extern int optreset;

}






struct flock {
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
 short l_type;
 short l_whence;
};
struct flocktimeout {
 struct flock fl;
 struct timespec timeout;
};
struct radvisory {
 off_t ra_offset;
 int ra_count;
};



typedef struct fcodeblobs {
 void *f_cd_hash;
 size_t f_hash_size;
 void *f_cd_buffer;
 size_t f_cd_size;
 unsigned int *f_out_size;
 int f_arch;
 int __padding;
} fcodeblobs_t;
typedef struct fsignatures {
 off_t fs_file_start;
 void *fs_blob_start;
 size_t fs_blob_size;
} fsignatures_t;
typedef struct fchecklv {
 off_t lv_file_start;
 size_t lv_error_message_size;
 void *lv_error_message;
} fchecklv_t;
typedef struct fstore {
 unsigned int fst_flags;
 int fst_posmode;
 off_t fst_offset;
 off_t fst_length;
 off_t fst_bytesalloc;
} fstore_t;


typedef struct fpunchhole {
 unsigned int fp_flags;
 unsigned int reserved;
 off_t fp_offset;
 off_t fp_length;
} fpunchhole_t;


typedef struct ftrimactivefile {
 off_t fta_offset;
 off_t fta_length;
} ftrimactivefile_t;


typedef struct fspecread {
 unsigned int fsr_flags;
 unsigned int reserved;
 off_t fsr_offset;
 off_t fsr_length;
} fspecread_t;



typedef struct fbootstraptransfer {
 off_t fbt_offset;
 size_t fbt_length;
 void *fbt_buffer;
} fbootstraptransfer_t;
#pragma pack(4)

struct log2phys {
 unsigned int l2p_flags;
 off_t l2p_contigbytes;


 off_t l2p_devoffset;


};

#pragma pack()
struct _filesec;
typedef struct _filesec *filesec_t;

typedef enum {
 FILESEC_OWNER = 1,
 FILESEC_GROUP = 2,
 FILESEC_UUID = 3,
 FILESEC_MODE = 4,
 FILESEC_ACL = 5,
 FILESEC_GRPUUID = 6,


 FILESEC_ACL_RAW = 100,
 FILESEC_ACL_ALLOCSIZE = 101
} filesec_property_t;





extern "C" {
int open(const char *, int, ...) __asm("_" "open" );

int openat(int, const char *, int, ...) __asm("_" "openat" ) __attribute__((availability(ios,introduced=8.0)));

int creat(const char *, mode_t) __asm("_" "creat" );
int fcntl(int, int, ...) __asm("_" "fcntl" );


int openx_np(const char *, int, filesec_t);




int open_dprotected_np( const char *, int, int, int, ...);
int flock(int, int);
filesec_t filesec_init(void);
filesec_t filesec_dup(filesec_t);
void filesec_free(filesec_t);
int filesec_get_property(filesec_t, filesec_property_t, void *);
int filesec_query_property(filesec_t, filesec_property_t, int *);
int filesec_set_property(filesec_t, filesec_property_t, const void *);
int filesec_unset_property(filesec_t, filesec_property_t) __attribute__((availability(ios,introduced=3.2)));



}




typedef struct objc_class *Class;


struct objc_object {
    Class _Nonnull isa __attribute__((deprecated));
};


typedef struct objc_object *id;



typedef struct objc_selector *SEL;



typedef void (*IMP)(void );
    typedef bool BOOL;
extern "C" __attribute__((visibility("default"))) const char * _Nonnull sel_getName(SEL _Nonnull sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
extern "C" __attribute__((visibility("default"))) SEL _Nonnull sel_registerName(const char * _Nonnull str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
extern "C" __attribute__((visibility("default"))) const char * _Nonnull object_getClassName(id _Nullable obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
extern "C" __attribute__((visibility("default"))) void * _Nullable object_getIndexedIvars(id _Nullable obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)))
                        ;
extern "C" __attribute__((visibility("default"))) BOOL sel_isMapped(SEL _Nonnull sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
extern "C" __attribute__((visibility("default"))) SEL _Nonnull sel_getUid(const char * _Nonnull str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));

typedef const void* objc_objectptr_t;




extern "C" __attribute__((visibility("default"))) id _Nullable objc_retainedObject(objc_objectptr_t _Nullable obj)

    __attribute__((unavailable("use CFBridgingRelease() or a (__bridge_transfer id) cast instead")))

    ;
extern "C" __attribute__((visibility("default"))) id _Nullable objc_unretainedObject(objc_objectptr_t _Nullable obj)

    __attribute__((unavailable("use a (__bridge id) cast instead")))

    ;
extern "C" __attribute__((visibility("default"))) objc_objectptr_t _Nullable objc_unretainedPointer(id _Nullable obj)

    __attribute__((unavailable("use a __bridge cast instead")))

    ;
typedef long NSInteger;
typedef unsigned long NSUInteger;

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif


// @protocol NSObject

// - (BOOL)isEqual:(id)object;
// @property (readonly) NSUInteger hash;

// @property (readonly) Class superclass;
// - (Class)class __attribute__((availability(swift, unavailable, message="use 'type(of: anObject)' instead")));
// - (instancetype)self;

// - (id)performSelector:(SEL)aSelector;
// - (id)performSelector:(SEL)aSelector withObject:(id)object;
// - (id)performSelector:(SEL)aSelector withObject:(id)object1 withObject:(id)object2;

// - (BOOL)isProxy;

// - (BOOL)isKindOfClass:(Class)aClass;
// - (BOOL)isMemberOfClass:(Class)aClass;
// - (BOOL)conformsToProtocol:(Protocol *)aProtocol;

// - (BOOL)respondsToSelector:(SEL)aSelector;

// - (instancetype)retain ;
// - (oneway void)release ;
// - (instancetype)autorelease ;
// - (NSUInteger)retainCount ;

// - (struct _NSZone *)zone ;

// @property (readonly, copy) NSString *description;
/* @optional */
// @property (readonly, copy) NSString *debugDescription;

/* @end */



__attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)))
__attribute__((objc_root_class))
extern "C" __attribute__((visibility("default")))

#ifndef _REWRITER_typedef_NSObject
#define _REWRITER_typedef_NSObject
typedef struct objc_object NSObject;
typedef struct {} _objc_exc_NSObject;
#endif

struct NSObject_IMPL {
	Class isa;
};


// + (void)load;

// + (void)initialize;
#if 0
- (instancetype)init

    __attribute__((objc_designated_initializer))

    ;
#endif


// + (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// + (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// + (instancetype)alloc __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// - (void)dealloc __attribute__((availability(swift, unavailable, message="use 'deinit' to define a de-initializer")));

// - (void)finalize __attribute__((deprecated("Objective-C garbage collection is no longer supported")));

// - (id)copy;
// - (id)mutableCopy;

// + (id)copyWithZone:(struct _NSZone *)zone ;
// + (id)mutableCopyWithZone:(struct _NSZone *)zone ;

// + (BOOL)instancesRespondToSelector:(SEL)aSelector;
// + (BOOL)conformsToProtocol:(Protocol *)protocol;
// - (IMP)methodForSelector:(SEL)aSelector;
// + (IMP)instanceMethodForSelector:(SEL)aSelector;
// - (void)doesNotRecognizeSelector:(SEL)aSelector;

// - (id)forwardingTargetForSelector:(SEL)aSelector __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
// - (void)forwardInvocation:(NSInvocation *)anInvocation __attribute__((availability(swift, unavailable, message="")));
// - (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

// + (NSMethodSignature *)instanceMethodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

// - (BOOL)allowsWeakReference __attribute__((unavailable));
// - (BOOL)retainWeakReference __attribute__((unavailable));

// + (BOOL)isSubclassOfClass:(Class)aClass;

// + (BOOL)resolveClassMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
// + (BOOL)resolveInstanceMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));

// + (NSUInteger)hash;
// + (Class)superclass;
// + (Class)class __attribute__((availability(swift, unavailable, message="use 'aClass.self' instead")));
// + (NSString *)description;
// + (NSString *)debugDescription;

/* @end */

extern "C" {
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default"))) __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void*
os_retain(void *object);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default")))
void __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
os_release(void *object);





}
typedef void (*dispatch_function_t)(void *_Nullable);
struct time_value {
 integer_t seconds;
 integer_t microseconds;
};

typedef struct time_value time_value_t;




typedef int alarm_type_t;
typedef int sleep_type_t;
typedef int clock_id_t;
typedef int clock_flavor_t;
typedef int *clock_attr_t;
typedef int clock_res_t;




struct mach_timespec {
 unsigned int tv_sec;
 clock_res_t tv_nsec;
};
typedef struct mach_timespec mach_timespec_t;


#pragma clang assume_nonnull begin
extern "C" {

struct timespec;
typedef uint64_t dispatch_time_t;

enum {
 DISPATCH_WALLTIME_NOW __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) = ~1ull,

};
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_time(dispatch_time_t when, int64_t delta);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_walltime(const struct timespec *_Nullable when, int64_t delta);

}
#pragma clang assume_nonnull end
typedef enum : unsigned int { QOS_CLASS_USER_INTERACTIVE __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x21, QOS_CLASS_USER_INITIATED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x19, QOS_CLASS_DEFAULT __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x15, QOS_CLASS_UTILITY __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x11, QOS_CLASS_BACKGROUND __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x09, QOS_CLASS_UNSPECIFIED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x00, } qos_class_t;
extern "C" {
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_self(void);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_main(void);

}


#pragma clang assume_nonnull begin
// @protocol OS_dispatch_object <NSObject> /* @end */
 typedef NSObject/*<OS_dispatch_object>*/ * __attribute__((objc_independent_class)) dispatch_object_t;
static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
_dispatch_object_validate(dispatch_object_t object)
{
 void *isa = *(void *volatile*)( void*)object;
 (void)isa;
}
typedef void (*dispatch_block_t)(void);


extern "C" {






typedef qos_class_t dispatch_qos_class_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_retain(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_release(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_get_context(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_context(dispatch_object_t object, void *_Nullable context);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_finalizer_f(dispatch_object_t object,
  dispatch_function_t _Nullable finalizer);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_activate(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_suspend(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_resume(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_qos_class_floor(dispatch_object_t object,
  dispatch_qos_class_t qos_class, int relative_priority);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_wait(void *object, dispatch_time_t timeout);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_notify(void *object, dispatch_object_t queue,
  dispatch_block_t notification_block);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_cancel(void *object);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_testcancel(void *object);
__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__)) __attribute__((__cold__))
__attribute__((__format__(printf,2,3)))
void
dispatch_debug(dispatch_object_t object, const char *message, ...);

__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__)) __attribute__((__cold__))
__attribute__((__format__(printf,2,0)))
void
dispatch_debugv(dispatch_object_t object, const char *message, va_list ap);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @protocol OS_dispatch_queue <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_queue>*/ * __attribute__((objc_independent_class)) dispatch_queue_t;
// @protocol OS_dispatch_queue_global <OS_dispatch_queue> /* @end */
 typedef NSObject/*<OS_dispatch_queue_global>*/ * __attribute__((objc_independent_class)) dispatch_queue_global_t;
// @protocol OS_dispatch_queue_serial <OS_dispatch_queue> /* @end */
 typedef NSObject/*<OS_dispatch_queue_serial>*/ * __attribute__((objc_independent_class)) dispatch_queue_serial_t;
// @protocol OS_dispatch_queue_main <OS_dispatch_queue_serial> /* @end */
 typedef NSObject/*<OS_dispatch_queue_main>*/ * __attribute__((objc_independent_class)) dispatch_queue_main_t;
// @protocol OS_dispatch_queue_concurrent <OS_dispatch_queue> /* @end */
 typedef NSObject/*<OS_dispatch_queue_concurrent>*/ * __attribute__((objc_independent_class)) dispatch_queue_concurrent_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_async(dispatch_queue_t queue, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_async_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_sync(dispatch_queue_t queue, __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_sync_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_async_and_wait(dispatch_queue_t queue,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_async_and_wait_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_apply(size_t iterations,
  dispatch_queue_t _Nullable queue,
  __attribute__((__noescape__)) void (^block)(size_t));
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_apply_f(size_t iterations,
  dispatch_queue_t _Nullable queue,
  void *_Nullable context, void (*work)(void *_Nullable, size_t));
__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_current_queue(void);

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default")))
struct dispatch_queue_s _dispatch_main_q;
static __inline__ __attribute__((__always_inline__)) __attribute__((__const__)) __attribute__((__nothrow__))
dispatch_queue_main_t
dispatch_get_main_queue(void)
{
 return (( dispatch_queue_main_t)&(_dispatch_main_q));
}
typedef long dispatch_queue_priority_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__const__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_global_t
dispatch_get_global_queue(long identifier, unsigned long flags);







// @protocol OS_dispatch_queue_attr <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_queue_attr>*/ * __attribute__((objc_independent_class)) dispatch_queue_attr_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default")))
struct dispatch_queue_attr_s _dispatch_queue_attr_concurrent;
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_initially_inactive(
  dispatch_queue_attr_t _Nullable attr);
typedef enum : unsigned long { DISPATCH_AUTORELEASE_FREQUENCY_INHERIT __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 1, DISPATCH_AUTORELEASE_FREQUENCY_NEVER __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 2, } __attribute__((__enum_extensibility__(open))) dispatch_autorelease_frequency_t;
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_autorelease_frequency(
  dispatch_queue_attr_t _Nullable attr,
  dispatch_autorelease_frequency_t frequency);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t _Nullable attr,
  dispatch_qos_class_t qos_class, int relative_priority);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create_with_target(const char *_Nullable label,
  dispatch_queue_attr_t _Nullable attr, dispatch_queue_t _Nullable target)
  __asm__("_" "dispatch_queue_create_with_target" "$V2");
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create(const char *_Nullable label,
  dispatch_queue_attr_t _Nullable attr);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
const char *
dispatch_queue_get_label(dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
dispatch_qos_class_t
dispatch_queue_get_qos_class(dispatch_queue_t queue,
  int *_Nullable relative_priority_ptr);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_target_queue(dispatch_object_t object,
  dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__)) __attribute__((__noreturn__))
void
dispatch_main(void);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_after(dispatch_time_t when, dispatch_queue_t queue,
  dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_after_f(dispatch_time_t when, dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_async_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_sync(dispatch_queue_t queue,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_sync_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_async_and_wait(dispatch_queue_t queue,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_async_and_wait_f(dispatch_queue_t queue,
  void *_Nullable context, dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_queue_set_specific(dispatch_queue_t queue, const void *key,
  void *_Nullable context, dispatch_function_t _Nullable destructor);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_queue_get_specific(dispatch_queue_t queue, const void *key);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
void *_Nullable
dispatch_get_specific(const void *key);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue(dispatch_queue_t queue)
  __asm__("_" "dispatch_assert_queue" "$V2");
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_barrier(dispatch_queue_t queue);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_not(dispatch_queue_t queue)
  __asm__("_" "dispatch_assert_queue_not" "$V2");
}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef enum : unsigned long { DISPATCH_BLOCK_BARRIER __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x1, DISPATCH_BLOCK_DETACHED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x2, DISPATCH_BLOCK_ASSIGN_CURRENT __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x4, DISPATCH_BLOCK_NO_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x8, DISPATCH_BLOCK_INHERIT_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x10, DISPATCH_BLOCK_ENFORCE_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x20, } __attribute__((__flag_enum__)) __attribute__((__enum_extensibility__(open))) dispatch_block_flags_t;
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create_with_qos_class(dispatch_block_flags_t flags,
  dispatch_qos_class_t qos_class, int relative_priority,
  dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
void
dispatch_block_perform(dispatch_block_flags_t flags,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_block_wait(dispatch_block_t block, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_notify(dispatch_block_t block, dispatch_queue_t queue,
  dispatch_block_t notification_block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_cancel(dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_block_testcancel(dispatch_block_t block);

}
#pragma clang assume_nonnull end
typedef int kern_return_t;
typedef natural_t mach_msg_timeout_t;
typedef unsigned int mach_msg_bits_t;
typedef natural_t mach_msg_size_t;
typedef integer_t mach_msg_id_t;



typedef unsigned int mach_msg_priority_t;



typedef unsigned int mach_msg_type_name_t;
typedef unsigned int mach_msg_copy_options_t;
typedef unsigned int mach_msg_guard_flags_t;
typedef unsigned int mach_msg_descriptor_type_t;







#pragma pack(push, 4)

typedef struct{
 natural_t pad1;
 mach_msg_size_t pad2;
 unsigned int pad3 : 24;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_type_descriptor_t;

typedef struct{
 mach_port_t name;

 mach_msg_size_t pad1;
 unsigned int pad2 : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_port_descriptor_t;

typedef struct{
 uint32_t address;
 mach_msg_size_t size;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;
} mach_msg_ool_descriptor32_t;

typedef struct{
 uint64_t address;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;
 mach_msg_size_t size;
} mach_msg_ool_descriptor64_t;

typedef struct{
 void* address;



 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;

 mach_msg_size_t size;

} mach_msg_ool_descriptor_t;

typedef struct{
 uint32_t address;
 mach_msg_size_t count;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_ool_ports_descriptor32_t;

typedef struct{
 uint64_t address;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
 mach_msg_size_t count;
} mach_msg_ool_ports_descriptor64_t;

typedef struct{
 void* address;



 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;

 mach_msg_size_t count;

} mach_msg_ool_ports_descriptor_t;

typedef struct{
 uint32_t context;
 mach_port_name_t name;
 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_guarded_port_descriptor32_t;

typedef struct{
 uint64_t context;
 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
 mach_port_name_t name;
} mach_msg_guarded_port_descriptor64_t;

typedef struct{
 mach_port_context_t context;



 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;

 mach_port_name_t name;

} mach_msg_guarded_port_descriptor_t;






typedef union{
 mach_msg_port_descriptor_t port;
 mach_msg_ool_descriptor_t out_of_line;
 mach_msg_ool_ports_descriptor_t ool_ports;
 mach_msg_type_descriptor_t type;
 mach_msg_guarded_port_descriptor_t guarded_port;
} mach_msg_descriptor_t;

typedef struct{
 mach_msg_size_t msgh_descriptor_count;
} mach_msg_body_t;




typedef struct{
 mach_msg_bits_t msgh_bits;
 mach_msg_size_t msgh_size;
 mach_port_t msgh_remote_port;
 mach_port_t msgh_local_port;
 mach_port_name_t msgh_voucher_port;
 mach_msg_id_t msgh_id;
} mach_msg_header_t;




typedef struct{
 mach_msg_header_t header;
 mach_msg_body_t body;
} mach_msg_base_t;

typedef unsigned int mach_msg_trailer_type_t;



typedef unsigned int mach_msg_trailer_size_t;
typedef char *mach_msg_trailer_info_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
} mach_msg_trailer_t;
typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
} mach_msg_seqno_trailer_t;

typedef struct{
 unsigned int val[2];
} security_token_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
} mach_msg_security_trailer_t;
typedef struct{
 unsigned int val[8];
} audit_token_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
} mach_msg_audit_trailer_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
 mach_port_context_t msgh_context;
} mach_msg_context_trailer_t;



typedef struct{
 mach_port_name_t sender;
} msg_labels_t;






typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
 mach_port_context_t msgh_context;
 int msgh_ad;
 msg_labels_t msgh_labels;
} mach_msg_mac_trailer_t;
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;







extern const security_token_t KERNEL_SECURITY_TOKEN;


extern const audit_token_t KERNEL_AUDIT_TOKEN;

typedef integer_t mach_msg_options_t;

typedef struct{
 mach_msg_header_t header;
} mach_msg_empty_send_t;

typedef struct{
 mach_msg_header_t header;
 mach_msg_trailer_t trailer;
} mach_msg_empty_rcv_t;

typedef union{
 mach_msg_empty_send_t send;
 mach_msg_empty_rcv_t rcv;
} mach_msg_empty_t;

#pragma pack(pop)
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_msg_type_number_t;
typedef integer_t mach_msg_option_t;
typedef kern_return_t mach_msg_return_t;
extern "C" {
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg_overwrite(
 mach_msg_header_t *msg,
 mach_msg_option_t option,
 mach_msg_size_t send_size,
 mach_msg_size_t rcv_size,
 mach_port_name_t rcv_name,
 mach_msg_timeout_t timeout,
 mach_port_name_t notify,
 mach_msg_header_t *rcv_msg,
 mach_msg_size_t rcv_limit);
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg(
 mach_msg_header_t *msg,
 mach_msg_option_t option,
 mach_msg_size_t send_size,
 mach_msg_size_t rcv_size,
 mach_port_name_t rcv_name,
 mach_msg_timeout_t timeout,
 mach_port_name_t notify);







__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern kern_return_t mach_voucher_deallocate(
 mach_port_name_t voucher);


}






#pragma clang assume_nonnull begin
// @protocol OS_dispatch_source <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_source>*/ * __attribute__((objc_independent_class)) dispatch_source_t;;

extern "C" {
typedef const struct dispatch_source_type_s *dispatch_source_type_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_add;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_or;
__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_replace;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_send;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_recv;
__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_memorypressure;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_proc;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_read;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_signal;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_timer;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_vnode;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_write;
typedef unsigned long dispatch_source_mach_send_flags_t;





typedef unsigned long dispatch_source_mach_recv_flags_t;
typedef unsigned long dispatch_source_memorypressure_flags_t;
typedef unsigned long dispatch_source_proc_flags_t;
typedef unsigned long dispatch_source_vnode_flags_t;
typedef unsigned long dispatch_source_timer_flags_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_source_t
dispatch_source_create(dispatch_source_type_t type,
 uintptr_t handle,
 unsigned long mask,
 dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_cancel(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_source_testcancel(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
uintptr_t
dispatch_source_get_handle(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_mask(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_data(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_merge_data(dispatch_source_t source, unsigned long value);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_set_timer(dispatch_source_t source,
 dispatch_time_t start,
 uint64_t interval,
 uint64_t leeway);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin






// @protocol OS_dispatch_group <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_group>*/ * __attribute__((objc_independent_class)) dispatch_group_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_group_t
dispatch_group_create(void);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_async(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_async_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_notify(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_notify_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_enter(dispatch_group_t group);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_leave(dispatch_group_t group);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







// @protocol OS_dispatch_semaphore <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_semaphore>*/ * __attribute__((objc_independent_class)) dispatch_semaphore_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_semaphore_t
dispatch_semaphore_create(long value);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_signal(dispatch_semaphore_t dsema);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef intptr_t dispatch_once_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block);


static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
_dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once(predicate, block);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}





__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))

void
dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function);


static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3)))
__attribute__((__nothrow__))

void
_dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once_f(predicate, context, function);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}




}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
// @protocol OS_dispatch_data <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_data>*/ * __attribute__((objc_independent_class)) dispatch_data_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) struct dispatch_data_s _dispatch_data_empty;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_free;







__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_munmap;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create(const void *buffer,
 size_t size,
 dispatch_queue_t _Nullable queue,
 dispatch_block_t _Nullable destructor);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
size_t
dispatch_data_get_size(dispatch_data_t data);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_map(dispatch_data_t data,
 const void *_Nullable *_Nullable buffer_ptr,
 size_t *_Nullable size_ptr);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_subrange(dispatch_data_t data,
 size_t offset,
 size_t length);
typedef bool (*dispatch_data_applier_t)(dispatch_data_t region,
 size_t offset,
 const void *buffer,
 size_t size);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
bool
dispatch_data_apply(dispatch_data_t data,
 __attribute__((__noescape__)) dispatch_data_applier_t applier);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_copy_region(dispatch_data_t data,
 size_t location,
 size_t *offset_ptr);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef int dispatch_fd_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_read(dispatch_fd_t fd,
 size_t length,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t data, int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_write(dispatch_fd_t fd,
 dispatch_data_t data,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t _Nullable data, int error));
// @protocol OS_dispatch_io <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_io>*/ * __attribute__((objc_independent_class)) dispatch_io_t;
typedef unsigned long dispatch_io_type_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create(dispatch_io_type_t type,
 dispatch_fd_t fd,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_path(dispatch_io_type_t type,
 const char *path, int oflag, mode_t mode,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_io(dispatch_io_type_t type,
 dispatch_io_t io,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
typedef void (*dispatch_io_handler_t)(bool done, dispatch_data_t _Nullable data,
  int error);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(4))) __attribute__((__nonnull__(5)))
__attribute__((__nothrow__))
void
dispatch_io_read(dispatch_io_t channel,
 off_t offset,
 size_t length,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nonnull__(5))) __attribute__((__nothrow__))
void
dispatch_io_write(dispatch_io_t channel,
 off_t offset,
 dispatch_data_t data,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
typedef unsigned long dispatch_io_close_flags_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_close(dispatch_io_t channel, dispatch_io_close_flags_t flags);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_io_barrier(dispatch_io_t channel, dispatch_block_t barrier);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_fd_t
dispatch_io_get_descriptor(dispatch_io_t channel);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_high_water(dispatch_io_t channel, size_t high_water);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_low_water(dispatch_io_t channel, size_t low_water);
typedef unsigned long dispatch_io_interval_flags_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_interval(dispatch_io_t channel,
 uint64_t interval,
 dispatch_io_interval_flags_t flags);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
// @protocol OS_dispatch_workloop <OS_dispatch_queue> /* @end */
 typedef NSObject/*<OS_dispatch_workloop>*/ * __attribute__((objc_independent_class)) dispatch_workloop_t;
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_workloop_t
dispatch_workloop_create(const char *_Nullable label);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_workloop_t
dispatch_workloop_create_inactive(const char *_Nullable label);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_workloop_set_autorelease_frequency(dispatch_workloop_t workloop,
  dispatch_autorelease_frequency_t frequency);

}
#pragma clang assume_nonnull end


extern "C" {

typedef struct {
    CFIndex domain;
    SInt32 error;
} CFStreamError;

typedef CFStringRef CFStreamPropertyKey __attribute__((swift_wrapper(struct)));

typedef CFIndex CFStreamStatus; enum {
    kCFStreamStatusNotOpen = 0,
    kCFStreamStatusOpening,
    kCFStreamStatusOpen,
    kCFStreamStatusReading,
    kCFStreamStatusWriting,
    kCFStreamStatusAtEnd,
    kCFStreamStatusClosed,
    kCFStreamStatusError
};

typedef CFOptionFlags CFStreamEventType; enum {
    kCFStreamEventNone = 0,
    kCFStreamEventOpenCompleted = 1,
    kCFStreamEventHasBytesAvailable = 2,
    kCFStreamEventCanAcceptBytes = 4,
    kCFStreamEventErrorOccurred = 8,
    kCFStreamEventEndEncountered = 16
};

typedef struct {
    CFIndex version;
    void * _Null_unspecified info;
    void *_Null_unspecified(* _Null_unspecified retain)(void * _Null_unspecified info);
    void (* _Null_unspecified release)(void * _Null_unspecified info);
    CFStringRef _Null_unspecified (* _Null_unspecified copyDescription)(void * _Null_unspecified info);
} CFStreamClientContext;

typedef struct __attribute__((objc_bridge_mutable(NSInputStream))) __CFReadStream * CFReadStreamRef;
typedef struct __attribute__((objc_bridge_mutable(NSOutputStream))) __CFWriteStream * CFWriteStreamRef;

typedef void (*CFReadStreamClientCallBack)(CFReadStreamRef _Null_unspecified stream, CFStreamEventType type, void * _Null_unspecified clientCallBackInfo);
typedef void (*CFWriteStreamClientCallBack)(CFWriteStreamRef _Null_unspecified stream, CFStreamEventType type, void * _Null_unspecified clientCallBackInfo);

extern
CFTypeID CFReadStreamGetTypeID(void);
extern
CFTypeID CFWriteStreamGetTypeID(void);




extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertyDataWritten;


extern
CFReadStreamRef _Null_unspecified CFReadStreamCreateWithBytesNoCopy(CFAllocatorRef _Null_unspecified alloc, const UInt8 * _Null_unspecified bytes, CFIndex length, CFAllocatorRef _Null_unspecified bytesDeallocator);


extern
CFWriteStreamRef _Null_unspecified CFWriteStreamCreateWithBuffer(CFAllocatorRef _Null_unspecified alloc, UInt8 * _Null_unspecified buffer, CFIndex bufferCapacity);


extern
CFWriteStreamRef _Null_unspecified CFWriteStreamCreateWithAllocatedBuffers(CFAllocatorRef _Null_unspecified alloc, CFAllocatorRef _Null_unspecified bufferAllocator);


extern
CFReadStreamRef _Null_unspecified CFReadStreamCreateWithFile(CFAllocatorRef _Null_unspecified alloc, CFURLRef _Null_unspecified fileURL);
extern
CFWriteStreamRef _Null_unspecified CFWriteStreamCreateWithFile(CFAllocatorRef _Null_unspecified alloc, CFURLRef _Null_unspecified fileURL);

extern
void CFStreamCreateBoundPair(CFAllocatorRef _Null_unspecified alloc, CFReadStreamRef _Null_unspecified * _Null_unspecified readStream, CFWriteStreamRef _Null_unspecified * _Null_unspecified writeStream, CFIndex transferBufferSize);



extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertyAppendToFile;

extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertyFileCurrentOffset;





extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertySocketNativeHandle;


extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertySocketRemoteHostName;


extern
const CFStreamPropertyKey _Null_unspecified kCFStreamPropertySocketRemotePortNumber;







extern const int kCFStreamErrorDomainSOCKS __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSProxy __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSProxyHost __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSProxyPort __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSVersion __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamSocketSOCKSVersion4 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamSocketSOCKSVersion5 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSUser __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySOCKSPassword __attribute__((availability(ios,introduced=2_0)));
extern const int kCFStreamErrorDomainSSL __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertySocketSecurityLevel __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamSocketSecurityLevelNone __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamSocketSecurityLevelSSLv2 __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" )));
extern const CFStringRef _Nonnull kCFStreamSocketSecurityLevelSSLv3 __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" )));
extern const CFStringRef _Nonnull kCFStreamSocketSecurityLevelTLSv1 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef _Nonnull kCFStreamPropertyShouldCloseNativeSocket __attribute__((availability(ios,introduced=2_0)));



extern
void CFStreamCreatePairWithSocket(CFAllocatorRef _Null_unspecified alloc, CFSocketNativeHandle sock, CFReadStreamRef _Null_unspecified * _Null_unspecified readStream, CFWriteStreamRef _Null_unspecified * _Null_unspecified writeStream);
extern
void CFStreamCreatePairWithSocketToHost(CFAllocatorRef _Null_unspecified alloc, CFStringRef _Null_unspecified host, UInt32 port, CFReadStreamRef _Null_unspecified * _Null_unspecified readStream, CFWriteStreamRef _Null_unspecified * _Null_unspecified writeStream);
extern
void CFStreamCreatePairWithPeerSocketSignature(CFAllocatorRef _Null_unspecified alloc, const CFSocketSignature * _Null_unspecified signature, CFReadStreamRef _Null_unspecified * _Null_unspecified readStream, CFWriteStreamRef _Null_unspecified * _Null_unspecified writeStream);




extern
CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef _Null_unspecified stream);
extern
CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef _Null_unspecified stream);


extern
CFErrorRef _Null_unspecified CFReadStreamCopyError(CFReadStreamRef _Null_unspecified stream) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef _Null_unspecified CFWriteStreamCopyError(CFWriteStreamRef _Null_unspecified stream) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFReadStreamOpen(CFReadStreamRef _Null_unspecified stream);
extern
Boolean CFWriteStreamOpen(CFWriteStreamRef _Null_unspecified stream);




extern
void CFReadStreamClose(CFReadStreamRef _Null_unspecified stream);
extern
void CFWriteStreamClose(CFWriteStreamRef _Null_unspecified stream);



extern
Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef _Null_unspecified stream);
extern
CFIndex CFReadStreamRead(CFReadStreamRef _Null_unspecified stream, UInt8 * _Null_unspecified buffer, CFIndex bufferLength);
extern
const UInt8 * _Null_unspecified CFReadStreamGetBuffer(CFReadStreamRef _Null_unspecified stream, CFIndex maxBytesToRead, CFIndex * _Null_unspecified numBytesRead);



extern
Boolean CFWriteStreamCanAcceptBytes(CFWriteStreamRef _Null_unspecified stream);






extern
CFIndex CFWriteStreamWrite(CFWriteStreamRef _Null_unspecified stream, const UInt8 * _Null_unspecified buffer, CFIndex bufferLength);
extern
CFTypeRef _Null_unspecified CFReadStreamCopyProperty(CFReadStreamRef _Null_unspecified stream, CFStreamPropertyKey _Null_unspecified propertyName);
extern
CFTypeRef _Null_unspecified CFWriteStreamCopyProperty(CFWriteStreamRef _Null_unspecified stream, CFStreamPropertyKey _Null_unspecified propertyName);



extern
Boolean CFReadStreamSetProperty(CFReadStreamRef _Null_unspecified stream, CFStreamPropertyKey _Null_unspecified propertyName, CFTypeRef _Null_unspecified propertyValue);
extern
Boolean CFWriteStreamSetProperty(CFWriteStreamRef _Null_unspecified stream, CFStreamPropertyKey _Null_unspecified propertyName, CFTypeRef _Null_unspecified propertyValue);
extern
Boolean CFReadStreamSetClient(CFReadStreamRef _Null_unspecified stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack _Null_unspecified clientCB, CFStreamClientContext * _Null_unspecified clientContext);
extern
Boolean CFWriteStreamSetClient(CFWriteStreamRef _Null_unspecified stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack _Null_unspecified clientCB, CFStreamClientContext * _Null_unspecified clientContext);

extern
void CFReadStreamScheduleWithRunLoop(CFReadStreamRef _Null_unspecified stream, CFRunLoopRef _Null_unspecified runLoop, CFRunLoopMode _Null_unspecified runLoopMode);
extern
void CFWriteStreamScheduleWithRunLoop(CFWriteStreamRef _Null_unspecified stream, CFRunLoopRef _Null_unspecified runLoop, _Null_unspecified CFRunLoopMode runLoopMode);

extern
void CFReadStreamUnscheduleFromRunLoop(CFReadStreamRef _Null_unspecified stream, CFRunLoopRef _Null_unspecified runLoop, CFRunLoopMode _Null_unspecified runLoopMode);
extern
void CFWriteStreamUnscheduleFromRunLoop(CFWriteStreamRef _Null_unspecified stream, CFRunLoopRef _Null_unspecified runLoop, CFRunLoopMode _Null_unspecified runLoopMode);
extern
void CFReadStreamSetDispatchQueue(CFReadStreamRef _Null_unspecified stream, dispatch_queue_t _Null_unspecified q) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
void CFWriteStreamSetDispatchQueue(CFWriteStreamRef _Null_unspecified stream, dispatch_queue_t _Null_unspecified q) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
dispatch_queue_t _Null_unspecified CFReadStreamCopyDispatchQueue(CFReadStreamRef _Null_unspecified stream) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
dispatch_queue_t _Null_unspecified CFWriteStreamCopyDispatchQueue(CFWriteStreamRef _Null_unspecified stream) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFIndex CFStreamErrorDomain; enum {
    kCFStreamErrorDomainCustom = -1L,
    kCFStreamErrorDomainPOSIX = 1,
    kCFStreamErrorDomainMacOSStatus
};

extern
CFStreamError CFReadStreamGetError(CFReadStreamRef _Null_unspecified stream);
extern
CFStreamError CFWriteStreamGetError(CFWriteStreamRef _Null_unspecified stream);


}


extern "C" {

typedef CFOptionFlags CFPropertyListMutabilityOptions; enum {
    kCFPropertyListImmutable = 0,
    kCFPropertyListMutableContainers = 1 << 0,
    kCFPropertyListMutableContainersAndLeaves = 1 << 1,
};
extern
CFPropertyListRef CFPropertyListCreateFromXMLData(CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateWithData instead.")));
extern
CFDataRef CFPropertyListCreateXMLData(CFAllocatorRef allocator, CFPropertyListRef propertyList) __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateData instead.")));
extern
CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption);

typedef CFIndex CFPropertyListFormat; enum {
    kCFPropertyListOpenStepFormat = 1,
    kCFPropertyListXMLFormat_v1_0 = 100,
    kCFPropertyListBinaryFormat_v1_0 = 200
};






extern
Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format);
extern
CFIndex CFPropertyListWriteToStream(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use CFPropertyListWrite instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListWrite instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListWrite instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListWrite instead.")));
extern
CFPropertyListRef CFPropertyListCreateFromStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateWithStream instead.")));





enum {
    kCFPropertyListReadCorruptError = 3840,
    kCFPropertyListReadUnknownVersionError = 3841,
    kCFPropertyListReadStreamError = 3842,
    kCFPropertyListWriteStreamError = 3851,
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}
extern "C" {
typedef const void * (*CFSetRetainCallBack)(CFAllocatorRef allocator, const void *value);







typedef void (*CFSetReleaseCallBack)(CFAllocatorRef allocator, const void *value);







typedef CFStringRef (*CFSetCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFSetEqualCallBack)(const void *value1, const void *value2);







typedef CFHashCode (*CFSetHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFSetRetainCallBack retain;
    CFSetReleaseCallBack release;
    CFSetCopyDescriptionCallBack copyDescription;
    CFSetEqualCallBack equal;
    CFSetHashCallBack hash;
} CFSetCallBacks;






extern
const CFSetCallBacks kCFTypeSetCallBacks;







extern
const CFSetCallBacks kCFCopyStringSetCallBacks;
typedef void (*CFSetApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSSet))) __CFSet * CFSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableSet))) __CFSet * CFMutableSetRef;





extern
CFTypeID CFSetGetTypeID(void);
extern
CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks);
extern
CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet);
extern
CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks);
extern
CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet);
extern
CFIndex CFSetGetCount(CFSetRef theSet);
extern
CFIndex CFSetGetCountOfValue(CFSetRef theSet, const void *value);
extern
Boolean CFSetContainsValue(CFSetRef theSet, const void *value);
extern
const void *CFSetGetValue(CFSetRef theSet, const void *value);
extern
Boolean CFSetGetValueIfPresent(CFSetRef theSet, const void *candidate, const void **value);
extern
void CFSetGetValues(CFSetRef theSet, const void **values);
extern
void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction __attribute__((noescape)) applier, void *context);
extern
void CFSetAddValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetReplaceValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetSetValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetRemoveValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetRemoveAllValues(CFMutableSetRef theSet);

}

extern "C" {

typedef CFIndex CFStringEncodings; enum {

    kCFStringEncodingMacJapanese = 1,
    kCFStringEncodingMacChineseTrad = 2,
    kCFStringEncodingMacKorean = 3,
    kCFStringEncodingMacArabic = 4,
    kCFStringEncodingMacHebrew = 5,
    kCFStringEncodingMacGreek = 6,
    kCFStringEncodingMacCyrillic = 7,
    kCFStringEncodingMacDevanagari = 9,
    kCFStringEncodingMacGurmukhi = 10,
    kCFStringEncodingMacGujarati = 11,
    kCFStringEncodingMacOriya = 12,
    kCFStringEncodingMacBengali = 13,
    kCFStringEncodingMacTamil = 14,
    kCFStringEncodingMacTelugu = 15,
    kCFStringEncodingMacKannada = 16,
    kCFStringEncodingMacMalayalam = 17,
    kCFStringEncodingMacSinhalese = 18,
    kCFStringEncodingMacBurmese = 19,
    kCFStringEncodingMacKhmer = 20,
    kCFStringEncodingMacThai = 21,
    kCFStringEncodingMacLaotian = 22,
    kCFStringEncodingMacGeorgian = 23,
    kCFStringEncodingMacArmenian = 24,
    kCFStringEncodingMacChineseSimp = 25,
    kCFStringEncodingMacTibetan = 26,
    kCFStringEncodingMacMongolian = 27,
    kCFStringEncodingMacEthiopic = 28,
    kCFStringEncodingMacCentralEurRoman = 29,
    kCFStringEncodingMacVietnamese = 30,
    kCFStringEncodingMacExtArabic = 31,

    kCFStringEncodingMacSymbol = 33,
    kCFStringEncodingMacDingbats = 34,
    kCFStringEncodingMacTurkish = 35,
    kCFStringEncodingMacCroatian = 36,
    kCFStringEncodingMacIcelandic = 37,
    kCFStringEncodingMacRomanian = 38,
    kCFStringEncodingMacCeltic = 39,
    kCFStringEncodingMacGaelic = 40,

    kCFStringEncodingMacFarsi = 0x8C,

    kCFStringEncodingMacUkrainian = 0x98,

    kCFStringEncodingMacInuit = 0xEC,
    kCFStringEncodingMacVT100 = 0xFC,

    kCFStringEncodingMacHFS = 0xFF,






    kCFStringEncodingISOLatin2 = 0x0202,
    kCFStringEncodingISOLatin3 = 0x0203,
    kCFStringEncodingISOLatin4 = 0x0204,
    kCFStringEncodingISOLatinCyrillic = 0x0205,
    kCFStringEncodingISOLatinArabic = 0x0206,
    kCFStringEncodingISOLatinGreek = 0x0207,
    kCFStringEncodingISOLatinHebrew = 0x0208,
    kCFStringEncodingISOLatin5 = 0x0209,
    kCFStringEncodingISOLatin6 = 0x020A,
    kCFStringEncodingISOLatinThai = 0x020B,
    kCFStringEncodingISOLatin7 = 0x020D,
    kCFStringEncodingISOLatin8 = 0x020E,
    kCFStringEncodingISOLatin9 = 0x020F,
    kCFStringEncodingISOLatin10 = 0x0210,


    kCFStringEncodingDOSLatinUS = 0x0400,
    kCFStringEncodingDOSGreek = 0x0405,
    kCFStringEncodingDOSBalticRim = 0x0406,
    kCFStringEncodingDOSLatin1 = 0x0410,
    kCFStringEncodingDOSGreek1 = 0x0411,
    kCFStringEncodingDOSLatin2 = 0x0412,
    kCFStringEncodingDOSCyrillic = 0x0413,
    kCFStringEncodingDOSTurkish = 0x0414,
    kCFStringEncodingDOSPortuguese = 0x0415,
    kCFStringEncodingDOSIcelandic = 0x0416,
    kCFStringEncodingDOSHebrew = 0x0417,
    kCFStringEncodingDOSCanadianFrench = 0x0418,
    kCFStringEncodingDOSArabic = 0x0419,
    kCFStringEncodingDOSNordic = 0x041A,
    kCFStringEncodingDOSRussian = 0x041B,
    kCFStringEncodingDOSGreek2 = 0x041C,
    kCFStringEncodingDOSThai = 0x041D,
    kCFStringEncodingDOSJapanese = 0x0420,
    kCFStringEncodingDOSChineseSimplif = 0x0421,
    kCFStringEncodingDOSKorean = 0x0422,
    kCFStringEncodingDOSChineseTrad = 0x0423,

    kCFStringEncodingWindowsLatin2 = 0x0501,
    kCFStringEncodingWindowsCyrillic = 0x0502,
    kCFStringEncodingWindowsGreek = 0x0503,
    kCFStringEncodingWindowsLatin5 = 0x0504,
    kCFStringEncodingWindowsHebrew = 0x0505,
    kCFStringEncodingWindowsArabic = 0x0506,
    kCFStringEncodingWindowsBalticRim = 0x0507,
    kCFStringEncodingWindowsVietnamese = 0x0508,
    kCFStringEncodingWindowsKoreanJohab = 0x0510,



    kCFStringEncodingANSEL = 0x0601,
    kCFStringEncodingJIS_X0201_76 = 0x0620,
    kCFStringEncodingJIS_X0208_83 = 0x0621,
    kCFStringEncodingJIS_X0208_90 = 0x0622,
    kCFStringEncodingJIS_X0212_90 = 0x0623,
    kCFStringEncodingJIS_C6226_78 = 0x0624,
    kCFStringEncodingShiftJIS_X0213 __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x0628,
    kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x0629,
    kCFStringEncodingGB_2312_80 = 0x0630,
    kCFStringEncodingGBK_95 = 0x0631,
    kCFStringEncodingGB_18030_2000 = 0x0632,
    kCFStringEncodingKSC_5601_87 = 0x0640,
    kCFStringEncodingKSC_5601_92_Johab = 0x0641,
    kCFStringEncodingCNS_11643_92_P1 = 0x0651,
    kCFStringEncodingCNS_11643_92_P2 = 0x0652,
    kCFStringEncodingCNS_11643_92_P3 = 0x0653,


    kCFStringEncodingISO_2022_JP = 0x0820,
    kCFStringEncodingISO_2022_JP_2 = 0x0821,
    kCFStringEncodingISO_2022_JP_1 = 0x0822,
    kCFStringEncodingISO_2022_JP_3 = 0x0823,
    kCFStringEncodingISO_2022_CN = 0x0830,
    kCFStringEncodingISO_2022_CN_EXT = 0x0831,
    kCFStringEncodingISO_2022_KR = 0x0840,


    kCFStringEncodingEUC_JP = 0x0920,
    kCFStringEncodingEUC_CN = 0x0930,
    kCFStringEncodingEUC_TW = 0x0931,
    kCFStringEncodingEUC_KR = 0x0940,


    kCFStringEncodingShiftJIS = 0x0A01,
    kCFStringEncodingKOI8_R = 0x0A02,
    kCFStringEncodingBig5 = 0x0A03,
    kCFStringEncodingMacRomanLatin1 = 0x0A04,
    kCFStringEncodingHZ_GB_2312 = 0x0A05,
    kCFStringEncodingBig5_HKSCS_1999 = 0x0A06,
    kCFStringEncodingVISCII = 0x0A07,
    kCFStringEncodingKOI8_U = 0x0A08,
    kCFStringEncodingBig5_E = 0x0A09,



    kCFStringEncodingNextStepJapanese = 0x0B02,


    kCFStringEncodingEBCDIC_US = 0x0C01,
    kCFStringEncodingEBCDIC_CP037 = 0x0C02,

    kCFStringEncodingUTF7 __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04000100,
    kCFStringEncodingUTF7_IMAP __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x0A10,


    kCFStringEncodingShiftJIS_X0213_00 = 0x0628
};

}

extern "C" {
typedef const void * (*CFTreeRetainCallBack)(const void *info);







typedef void (*CFTreeReleaseCallBack)(const void *info);
typedef CFStringRef (*CFTreeCopyDescriptionCallBack)(const void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFTreeRetainCallBack retain;
    CFTreeReleaseCallBack release;
    CFTreeCopyDescriptionCallBack copyDescription;
} CFTreeContext;
typedef void (*CFTreeApplierFunction)(const void *value, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFTree * CFTreeRef;





extern
CFTypeID CFTreeGetTypeID(void);
extern
CFTreeRef CFTreeCreate(CFAllocatorRef allocator, const CFTreeContext *context);
extern
CFTreeRef CFTreeGetParent(CFTreeRef tree);
extern
CFTreeRef CFTreeGetNextSibling(CFTreeRef tree);
extern
CFTreeRef CFTreeGetFirstChild(CFTreeRef tree);
extern
void CFTreeGetContext(CFTreeRef tree, CFTreeContext *context);
extern
CFIndex CFTreeGetChildCount(CFTreeRef tree);
extern
CFTreeRef CFTreeGetChildAtIndex(CFTreeRef tree, CFIndex idx);
extern
void CFTreeGetChildren(CFTreeRef tree, CFTreeRef *children);
extern
void CFTreeApplyFunctionToChildren(CFTreeRef tree, CFTreeApplierFunction __attribute__((noescape)) applier, void *context);
extern
CFTreeRef CFTreeFindRoot(CFTreeRef tree);
extern
void CFTreeSetContext(CFTreeRef tree, const CFTreeContext *context);
extern
void CFTreePrependChild(CFTreeRef tree, CFTreeRef newChild);
extern
void CFTreeAppendChild(CFTreeRef tree, CFTreeRef newChild);
extern
void CFTreeInsertSibling(CFTreeRef tree, CFTreeRef newSibling);







extern
void CFTreeRemove(CFTreeRef tree);







extern
void CFTreeRemoveAllChildren(CFTreeRef tree);
extern
void CFTreeSortChildren(CFTreeRef tree, CFComparatorFunction comparator, void *context);

}

extern "C" {
extern
Boolean CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")));
extern
Boolean CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")));





extern
Boolean CFURLDestroyResource(CFURLRef url, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead.")));





extern
CFTypeRef CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey.")));



typedef CFIndex CFURLError; enum {
    kCFURLUnknownError = -10L,
    kCFURLUnknownSchemeError = -11L,
    kCFURLResourceNotFoundError = -12L,
    kCFURLResourceAccessViolationError = -13L,
    kCFURLRemoteHostUnavailableError = -14L,
    kCFURLImproperArgumentsError = -15L,
    kCFURLUnknownPropertyKeyError = -16L,
    kCFURLPropertyKeyUnavailableError = -17L,
    kCFURLTimeoutError = -18L
} __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFError codes instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFError codes instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFError codes instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFError codes instead")));



extern
const CFStringRef kCFURLFileExists __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLResourceIsReachable instead.")));
extern
const CFStringRef kCFURLFileDirectoryContents __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use the CFURLEnumerator API instead.")));
extern
const CFStringRef kCFURLFileLength __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead.")));
extern
const CFStringRef kCFURLFileLastModificationTime __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead.")));
extern
const CFStringRef kCFURLFilePOSIXMode __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLFileOwnerID __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLHTTPStatusCode __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSHTTPURLResponse methods instead.")));
extern
const CFStringRef kCFURLHTTPStatusLine __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSHTTPURLResponse methods instead.")));
}
extern "C" {

typedef const struct __attribute__((objc_bridge(id))) __CFUUID * CFUUIDRef;

typedef struct {
    UInt8 byte0;
    UInt8 byte1;
    UInt8 byte2;
    UInt8 byte3;
    UInt8 byte4;
    UInt8 byte5;
    UInt8 byte6;
    UInt8 byte7;
    UInt8 byte8;
    UInt8 byte9;
    UInt8 byte10;
    UInt8 byte11;
    UInt8 byte12;
    UInt8 byte13;
    UInt8 byte14;
    UInt8 byte15;
} CFUUIDBytes;






extern
CFTypeID CFUUIDGetTypeID(void);

extern
CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc);


extern
CFUUIDRef CFUUIDCreateWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr);


extern
CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid);


extern
CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid);

extern
CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes);

}
extern "C" {

extern
CFURLRef CFCopyHomeDirectoryURL(void) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

}
extern "C" {

typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFBundleRef;
typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFPlugInRef;


extern
const CFStringRef kCFBundleInfoDictionaryVersionKey;

extern
const CFStringRef kCFBundleExecutableKey;

extern
const CFStringRef kCFBundleIdentifierKey;

extern
const CFStringRef kCFBundleVersionKey;



extern
const CFStringRef kCFBundleDevelopmentRegionKey;

extern
const CFStringRef kCFBundleNameKey;

extern
const CFStringRef kCFBundleLocalizationsKey;




extern
CFBundleRef CFBundleGetMainBundle(void);

extern
CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID);







extern
CFArrayRef CFBundleGetAllBundles(void);





extern
CFTypeID CFBundleGetTypeID(void);

extern
CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL);


extern
CFArrayRef CFBundleCreateBundlesFromDirectory(CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType);





extern
CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle);

extern
CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key);



extern
CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle);



extern
CFDictionaryRef CFBundleGetLocalInfoDictionary(CFBundleRef bundle);


extern
void CFBundleGetPackageInfo(CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator);

extern
CFStringRef CFBundleGetIdentifier(CFBundleRef bundle);

extern
UInt32 CFBundleGetVersionNumber(CFBundleRef bundle);

extern
CFStringRef CFBundleGetDevelopmentRegion(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySupportFilesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyResourcesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyPrivateFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedSupportURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle);






extern
CFDictionaryRef CFBundleCopyInfoDictionaryInDirectory(CFURLRef bundleURL);

extern
Boolean CFBundleGetPackageInfoInDirectory(CFURLRef url, UInt32 *packageType, UInt32 *packageCreator);



extern
CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName);

extern
CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName) __attribute__((format_arg(2)));
extern
CFURLRef CFBundleCopyResourceURLInDirectory(CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeInDirectory(CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName);






extern
CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle);


extern
CFArrayRef CFBundleCopyPreferredLocalizationsFromArray(CFArrayRef locArray);






extern
CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray);
extern
CFURLRef CFBundleCopyResourceURLForLocalization(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeForLocalization(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
extern
CFDictionaryRef CFBundleCopyInfoDictionaryForURL(CFURLRef url);




extern
CFArrayRef CFBundleCopyLocalizationsForURL(CFURLRef url);





extern
CFArrayRef CFBundleCopyExecutableArchitecturesForURL(CFURLRef url) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle);

enum {
    kCFBundleExecutableArchitectureI386 = 0x00000007,
    kCFBundleExecutableArchitecturePPC = 0x00000012,
    kCFBundleExecutableArchitectureX86_64 = 0x01000007,
    kCFBundleExecutableArchitecturePPC64 = 0x01000012
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFArrayRef CFBundleCopyExecutableArchitectures(CFBundleRef bundle) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFBundlePreflightExecutable(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFBundleLoadExecutableAndReturnError(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFBundleLoadExecutable(CFBundleRef bundle);

extern
Boolean CFBundleIsExecutableLoaded(CFBundleRef bundle);

extern
void CFBundleUnloadExecutable(CFBundleRef bundle);

extern
void *CFBundleGetFunctionPointerForName(CFBundleRef bundle, CFStringRef functionName);

extern
void CFBundleGetFunctionPointersForNames(CFBundleRef bundle, CFArrayRef functionNames, void *ftbl[]);

extern
void *CFBundleGetDataPointerForName(CFBundleRef bundle, CFStringRef symbolName);

extern
void CFBundleGetDataPointersForNames(CFBundleRef bundle, CFArrayRef symbolNames, void *stbl[]);

extern
CFURLRef CFBundleCopyAuxiliaryExecutableURL(CFBundleRef bundle, CFStringRef executableName);
extern
CFPlugInRef CFBundleGetPlugIn(CFBundleRef bundle);




typedef int CFBundleRefNum;




extern
CFBundleRefNum CFBundleOpenBundleResourceMap(CFBundleRef bundle) __attribute__((availability(macosx,introduced=10.0,deprecated=10.15,message="The Carbon Resource Manager is deprecated. This should only be used to access Resource Manager-style resources in old bundles."))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






extern
SInt32 CFBundleOpenBundleResourceFiles(CFBundleRef bundle, CFBundleRefNum *refNum, CFBundleRefNum *localizedRefNum) __attribute__((availability(macosx,introduced=10.0,deprecated=10.15,message="The Carbon Resource Manager is deprecated. This should only be used to access Resource Manager-style resources in old bundles."))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern
void CFBundleCloseBundleResourceMap(CFBundleRef bundle, CFBundleRefNum refNum) __attribute__((availability(macosx,introduced=10.0,deprecated=10.15,message="The Carbon Resource Manager is deprecated. This should only be used to access Resource Manager-style resources in old bundles."))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

}


extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSMessagePort))) __CFMessagePort * CFMessagePortRef;

enum {
    kCFMessagePortSuccess = 0,
    kCFMessagePortSendTimeout = -1,
    kCFMessagePortReceiveTimeout = -2,
    kCFMessagePortIsInvalid = -3,
    kCFMessagePortTransportError = -4,
    kCFMessagePortBecameInvalidError = -5
};

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMessagePortContext;

typedef CFDataRef (*CFMessagePortCallBack)(CFMessagePortRef local, SInt32 msgid, CFDataRef data, void *info);

typedef void (*CFMessagePortInvalidationCallBack)(CFMessagePortRef ms, void *info);

extern CFTypeID CFMessagePortGetTypeID(void);

extern CFMessagePortRef CFMessagePortCreateLocal(CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo);
extern CFMessagePortRef CFMessagePortCreateRemote(CFAllocatorRef allocator, CFStringRef name);

extern Boolean CFMessagePortIsRemote(CFMessagePortRef ms);
extern CFStringRef CFMessagePortGetName(CFMessagePortRef ms);
extern Boolean CFMessagePortSetName(CFMessagePortRef ms, CFStringRef newName);
extern void CFMessagePortGetContext(CFMessagePortRef ms, CFMessagePortContext *context);
extern void CFMessagePortInvalidate(CFMessagePortRef ms);
extern Boolean CFMessagePortIsValid(CFMessagePortRef ms);
extern CFMessagePortInvalidationCallBack CFMessagePortGetInvalidationCallBack(CFMessagePortRef ms);
extern void CFMessagePortSetInvalidationCallBack(CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout);


extern SInt32 CFMessagePortSendRequest(CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData);

extern CFRunLoopSourceRef CFMessagePortCreateRunLoopSource(CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order);

extern void CFMessagePortSetDispatchQueue(CFMessagePortRef ms, dispatch_queue_t queue) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {



extern const CFStringRef kCFPlugInDynamicRegistrationKey;
extern const CFStringRef kCFPlugInDynamicRegisterFunctionKey;
extern const CFStringRef kCFPlugInUnloadFunctionKey;
extern const CFStringRef kCFPlugInFactoriesKey;
extern const CFStringRef kCFPlugInTypesKey;




typedef void (*CFPlugInDynamicRegisterFunction)(CFPlugInRef plugIn);
typedef void (*CFPlugInUnloadFunction)(CFPlugInRef plugIn);
typedef void *(*CFPlugInFactoryFunction)(CFAllocatorRef allocator, CFUUIDRef typeUUID);



extern CFTypeID CFPlugInGetTypeID(void);

extern CFPlugInRef CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL);


extern CFBundleRef CFPlugInGetBundle(CFPlugInRef plugIn);







extern void CFPlugInSetLoadOnDemand(CFPlugInRef plugIn, Boolean flag);

extern Boolean CFPlugInIsLoadOnDemand(CFPlugInRef plugIn);






extern CFArrayRef CFPlugInFindFactoriesForPlugInType(CFUUIDRef typeUUID) __attribute__((cf_returns_retained));



extern CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn) __attribute__((cf_returns_retained));


extern void *CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern Boolean CFPlugInRegisterFactoryFunction(CFUUIDRef factoryUUID, CFPlugInFactoryFunction func);

extern Boolean CFPlugInRegisterFactoryFunctionByName(CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName);

extern Boolean CFPlugInUnregisterFactory(CFUUIDRef factoryUUID);

extern Boolean CFPlugInRegisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);

extern Boolean CFPlugInUnregisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern void CFPlugInAddInstanceForFactory(CFUUIDRef factoryID);

extern void CFPlugInRemoveInstanceForFactory(CFUUIDRef factoryID);




typedef struct __attribute__((objc_bridge(id))) __CFPlugInInstance *CFPlugInInstanceRef;

typedef Boolean (*CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
typedef void (*CFPlugInInstanceDeallocateInstanceDataFunction)(void *instanceData);

extern Boolean CFPlugInInstanceGetInterfaceFunctionTable(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);


extern CFStringRef CFPlugInInstanceGetFactoryName(CFPlugInInstanceRef instance) __attribute__((cf_returns_retained));

extern void *CFPlugInInstanceGetInstanceData(CFPlugInInstanceRef instance);

extern CFTypeID CFPlugInInstanceGetTypeID(void);

extern CFPlugInInstanceRef CFPlugInInstanceCreateWithInstanceDataSize(CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction);

}



extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSMachPort))) __CFMachPort * CFMachPortRef;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMachPortContext;

typedef void (*CFMachPortCallBack)(CFMachPortRef port, void *msg, CFIndex size, void *info);
typedef void (*CFMachPortInvalidationCallBack)(CFMachPortRef port, void *info);

extern CFTypeID CFMachPortGetTypeID(void);

extern CFMachPortRef CFMachPortCreate(CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
extern CFMachPortRef CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);

extern mach_port_t CFMachPortGetPort(CFMachPortRef port);
extern void CFMachPortGetContext(CFMachPortRef port, CFMachPortContext *context);
extern void CFMachPortInvalidate(CFMachPortRef port);
extern Boolean CFMachPortIsValid(CFMachPortRef port);
extern CFMachPortInvalidationCallBack CFMachPortGetInvalidationCallBack(CFMachPortRef port);
extern void CFMachPortSetInvalidationCallBack(CFMachPortRef port, CFMachPortInvalidationCallBack callout);

extern CFRunLoopSourceRef CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order);

}

extern "C" {




typedef const struct __attribute__((objc_bridge(NSAttributedString))) __CFAttributedString *CFAttributedStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableAttributedString))) __CFAttributedString *CFMutableAttributedStringRef;




extern CFTypeID CFAttributedStringGetTypeID(void);
extern CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes);




extern CFAttributedStringRef CFAttributedStringCreateWithSubstring(CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range);




extern CFAttributedStringRef CFAttributedStringCreateCopy(CFAllocatorRef alloc, CFAttributedStringRef aStr);




extern CFStringRef CFAttributedStringGetString(CFAttributedStringRef aStr);




extern CFIndex CFAttributedStringGetLength(CFAttributedStringRef aStr);






extern CFDictionaryRef CFAttributedStringGetAttributes(CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange);




extern CFTypeRef CFAttributedStringGetAttribute(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange);




extern CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange);




extern CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange);
extern CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr);




extern CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);






extern void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement);






extern CFMutableStringRef CFAttributedStringGetMutableString(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringSetAttributes(CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes);




extern void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value);




extern void CFAttributedStringRemoveAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName);




extern void CFAttributedStringReplaceAttributedString(CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement);




extern void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr);


}


extern "C" {


typedef const struct __attribute__((objc_bridge_mutable(id))) __CFURLEnumerator *CFURLEnumeratorRef;


extern
CFTypeID CFURLEnumeratorGetTypeID( void ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFURLEnumeratorOptions; enum {
    kCFURLEnumeratorDefaultBehavior = 0,
    kCFURLEnumeratorDescendRecursively = 1UL << 0,
    kCFURLEnumeratorSkipInvisibles = 1UL << 1,
    kCFURLEnumeratorGenerateFileReferenceURLs = 1UL << 2,
    kCFURLEnumeratorSkipPackageContents = 1UL << 3,
    kCFURLEnumeratorIncludeDirectoriesPreOrder = 1UL << 4,
    kCFURLEnumeratorIncludeDirectoriesPostOrder = 1UL << 5,

    kCFURLEnumeratorGenerateRelativePathURLs __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 1UL << 6,
};







extern
CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL( CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLEnumeratorRef CFURLEnumeratorCreateForMountedVolumes( CFAllocatorRef alloc, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFIndex CFURLEnumeratorResult; enum {
    kCFURLEnumeratorSuccess = 1,
    kCFURLEnumeratorEnd = 2,
    kCFURLEnumeratorError = 3,
    kCFURLEnumeratorDirectoryPostOrderSuccess = 4,
};





extern
CFURLEnumeratorResult CFURLEnumeratorGetNextURL( CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLEnumeratorSkipDescendents( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern
CFIndex CFURLEnumeratorGetDescendentLevel( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFURLEnumeratorGetSourceDidChange( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6,deprecated=10.7,message="Use File System Events API instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=5.0,message="Use File System Events API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use File System Events API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use File System Events API instead")));


}






typedef union {

 unsigned char g_guid[16];
 unsigned int g_guid_asint[16 / sizeof(unsigned int)];
} guid_t;


#pragma pack(1)
typedef struct {
 u_int8_t sid_kind;
 u_int8_t sid_authcount;
 u_int8_t sid_authority[6];

 u_int32_t sid_authorities[16];
} ntsid_t;
#pragma pack()
struct kauth_identity_extlookup {
 u_int32_t el_seqno;
 u_int32_t el_result;





 u_int32_t el_flags;
 __darwin_pid_t el_info_pid;
 u_int64_t el_extend;
 u_int32_t el_info_reserved_1;

 uid_t el_uid;
 guid_t el_uguid;
 u_int32_t el_uguid_valid;
 ntsid_t el_usid;
 u_int32_t el_usid_valid;
 gid_t el_gid;
 guid_t el_gguid;
 u_int32_t el_gguid_valid;
 ntsid_t el_gsid;
 u_int32_t el_gsid_valid;
 u_int32_t el_member_valid;
 u_int32_t el_sup_grp_cnt;
 gid_t el_sup_groups[16];
};

struct kauth_cache_sizes {
 u_int32_t kcs_group_size;
 u_int32_t kcs_id_size;
};
typedef u_int32_t kauth_ace_rights_t;


struct kauth_ace {
 guid_t ace_applicable;
 u_int32_t ace_flags;
 kauth_ace_rights_t ace_rights;





};



typedef struct kauth_ace *kauth_ace_t;




struct kauth_acl {
 u_int32_t acl_entrycount;
 u_int32_t acl_flags;

 struct kauth_ace acl_ace[1];
};
typedef struct kauth_acl *kauth_acl_t;
struct kauth_filesec {
 u_int32_t fsec_magic;

 guid_t fsec_owner;
 guid_t fsec_group;

 struct kauth_acl fsec_acl;
};
typedef struct kauth_filesec *kauth_filesec_t;
typedef enum {
 ACL_READ_DATA = (1<<1),
 ACL_LIST_DIRECTORY = (1<<1),
 ACL_WRITE_DATA = (1<<2),
 ACL_ADD_FILE = (1<<2),
 ACL_EXECUTE = (1<<3),
 ACL_SEARCH = (1<<3),
 ACL_DELETE = (1<<4),
 ACL_APPEND_DATA = (1<<5),
 ACL_ADD_SUBDIRECTORY = (1<<5),
 ACL_DELETE_CHILD = (1<<6),
 ACL_READ_ATTRIBUTES = (1<<7),
 ACL_WRITE_ATTRIBUTES = (1<<8),
 ACL_READ_EXTATTRIBUTES = (1<<9),
 ACL_WRITE_EXTATTRIBUTES = (1<<10),
 ACL_READ_SECURITY = (1<<11),
 ACL_WRITE_SECURITY = (1<<12),
 ACL_CHANGE_OWNER = (1<<13),
 ACL_SYNCHRONIZE = (1<<20),
} acl_perm_t;


typedef enum {
 ACL_UNDEFINED_TAG = 0,
 ACL_EXTENDED_ALLOW = 1,
 ACL_EXTENDED_DENY = 2
} acl_tag_t;


typedef enum {
 ACL_TYPE_EXTENDED = 0x00000100,

 ACL_TYPE_ACCESS = 0x00000000,
 ACL_TYPE_DEFAULT = 0x00000001,

 ACL_TYPE_AFS = 0x00000002,
 ACL_TYPE_CODA = 0x00000003,
 ACL_TYPE_NTFS = 0x00000004,
 ACL_TYPE_NWFS = 0x00000005
} acl_type_t;






typedef enum {
 ACL_FIRST_ENTRY = 0,
 ACL_NEXT_ENTRY = -1,
 ACL_LAST_ENTRY = -2
} acl_entry_id_t;


typedef enum {
 ACL_FLAG_DEFER_INHERIT = (1 << 0),
 ACL_FLAG_NO_INHERIT = (1<<17),
 ACL_ENTRY_INHERITED = (1<<4),
 ACL_ENTRY_FILE_INHERIT = (1<<5),
 ACL_ENTRY_DIRECTORY_INHERIT = (1<<6),
 ACL_ENTRY_LIMIT_INHERIT = (1<<7),
 ACL_ENTRY_ONLY_INHERIT = (1<<8)
} acl_flag_t;



struct _acl;
struct _acl_entry;
struct _acl_permset;
struct _acl_flagset;

typedef struct _acl *acl_t;
typedef struct _acl_entry *acl_entry_t;
typedef struct _acl_permset *acl_permset_t;
typedef struct _acl_flagset *acl_flagset_t;

typedef u_int64_t acl_permset_mask_t;

extern "C" {

extern acl_t acl_dup(acl_t acl);
extern int acl_free(void *obj_p);
extern acl_t acl_init(int count);


extern int acl_copy_entry(acl_entry_t dest_d, acl_entry_t src_d);
extern int acl_create_entry(acl_t *acl_p, acl_entry_t *entry_p);
extern int acl_create_entry_np(acl_t *acl_p, acl_entry_t *entry_p, int entry_index);
extern int acl_delete_entry(acl_t acl, acl_entry_t entry_d);
extern int acl_get_entry(acl_t acl, int entry_id, acl_entry_t *entry_p);
extern int acl_valid(acl_t acl);
extern int acl_valid_fd_np(int fd, acl_type_t type, acl_t acl);
extern int acl_valid_file_np(const char *path, acl_type_t type, acl_t acl);
extern int acl_valid_link_np(const char *path, acl_type_t type, acl_t acl);


extern int acl_add_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_calc_mask(acl_t *acl_p);
extern int acl_clear_perms(acl_permset_t permset_d);
extern int acl_delete_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_perm_np(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_permset(acl_entry_t entry_d, acl_permset_t *permset_p);
extern int acl_set_permset(acl_entry_t entry_d, acl_permset_t permset_d);


extern int acl_maximal_permset_mask_np(acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_get_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_set_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t mask) __attribute__((availability(ios,introduced=4.3)));


extern int acl_add_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_clear_flags_np(acl_flagset_t flagset_d);
extern int acl_delete_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flagset_np(void *obj_p, acl_flagset_t *flagset_p);
extern int acl_set_flagset_np(void *obj_p, acl_flagset_t flagset_d);


extern void *acl_get_qualifier(acl_entry_t entry_d);
extern int acl_get_tag_type(acl_entry_t entry_d, acl_tag_t *tag_type_p);
extern int acl_set_qualifier(acl_entry_t entry_d, const void *tag_qualifier_p);
extern int acl_set_tag_type(acl_entry_t entry_d, acl_tag_t tag_type);


extern int acl_delete_def_file(const char *path_p);
extern acl_t acl_get_fd(int fd);
extern acl_t acl_get_fd_np(int fd, acl_type_t type);
extern acl_t acl_get_file(const char *path_p, acl_type_t type);
extern acl_t acl_get_link_np(const char *path_p, acl_type_t type);
extern int acl_set_fd(int fd, acl_t acl);
extern int acl_set_fd_np(int fd, acl_t acl, acl_type_t acl_type);
extern int acl_set_file(const char *path_p, acl_type_t type, acl_t acl);
extern int acl_set_link_np(const char *path_p, acl_type_t type, acl_t acl);


extern ssize_t acl_copy_ext(void *buf_p, acl_t acl, ssize_t size);
extern ssize_t acl_copy_ext_native(void *buf_p, acl_t acl, ssize_t size);
extern acl_t acl_copy_int(const void *buf_p);
extern acl_t acl_copy_int_native(const void *buf_p);
extern acl_t acl_from_text(const char *buf_p);
extern ssize_t acl_size(acl_t acl);
extern char *acl_to_text(acl_t acl, ssize_t *len_p);
}




extern "C" {





typedef struct __attribute__((objc_bridge_mutable(NSFileSecurity))) __CFFileSecurity* CFFileSecurityRef;







extern
CFTypeID CFFileSecurityGetTypeID(void) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFFileSecurityRef CFFileSecurityCreate(CFAllocatorRef allocator) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFFileSecurityRef CFFileSecurityCreateCopy(CFAllocatorRef allocator, CFFileSecurityRef fileSec) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef *ownerUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef ownerUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef *groupUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef groupUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyAccessControlList(CFFileSecurityRef fileSec, acl_t *accessControlList) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetAccessControlList(CFFileSecurityRef fileSec, acl_t accessControlList) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetOwner(CFFileSecurityRef fileSec, uid_t *owner) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetOwner(CFFileSecurityRef fileSec, uid_t owner) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetGroup(CFFileSecurityRef fileSec, gid_t *group) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetGroup(CFFileSecurityRef fileSec, gid_t group) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetMode(CFFileSecurityRef fileSec, mode_t *mode) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetMode(CFFileSecurityRef fileSec, mode_t mode) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFFileSecurityClearOptions; enum {
    kCFFileSecurityClearOwner = 1UL << 0,
    kCFFileSecurityClearGroup = 1UL << 1,
    kCFFileSecurityClearMode = 1UL << 2,
    kCFFileSecurityClearOwnerUUID = 1UL << 3,
    kCFFileSecurityClearGroupUUID = 1UL << 4,
    kCFFileSecurityClearAccessControlList = 1UL << 5
} __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityClearProperties(CFFileSecurityRef fileSec, CFFileSecurityClearOptions clearPropertyMask) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


}
extern "C" {
extern
CFStringRef CFStringTokenizerCopyBestStringLanguage(CFStringRef string, CFRange range) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







typedef struct __attribute__((objc_bridge_mutable(id))) __CFStringTokenizer * CFStringTokenizerRef;




enum {






    kCFStringTokenizerUnitWord = 0,
    kCFStringTokenizerUnitSentence = 1,
    kCFStringTokenizerUnitParagraph = 2,
    kCFStringTokenizerUnitLineBreak = 3,




    kCFStringTokenizerUnitWordBoundary = 4,
    kCFStringTokenizerAttributeLatinTranscription = 1UL << 16,


    kCFStringTokenizerAttributeLanguage = 1UL << 17,
};






typedef CFOptionFlags CFStringTokenizerTokenType; enum {

    kCFStringTokenizerTokenNone = 0,


    kCFStringTokenizerTokenNormal = 1UL << 0,





    kCFStringTokenizerTokenHasSubTokensMask = 1UL << 1,






    kCFStringTokenizerTokenHasDerivedSubTokensMask = 1UL << 2,

    kCFStringTokenizerTokenHasHasNumbersMask = 1UL << 3,
    kCFStringTokenizerTokenHasNonLettersMask = 1UL << 4,
    kCFStringTokenizerTokenIsCJWordMask = 1UL << 5
};






extern
CFTypeID CFStringTokenizerGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex(CFStringTokenizerRef tokenizer, CFIndex index) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFTypeRef CFStringTokenizerCopyCurrentTokenAttribute(CFStringTokenizerRef tokenizer, CFOptionFlags attribute) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFIndex CFStringTokenizerGetCurrentSubTokens(CFStringTokenizerRef tokenizer, CFRange *ranges, CFIndex maxRangeLength, CFMutableArrayRef derivedSubTokens) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef int CFFileDescriptorNativeDescriptor;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFFileDescriptor * CFFileDescriptorRef;


enum {
    kCFFileDescriptorReadCallBack = 1UL << 0,
    kCFFileDescriptorWriteCallBack = 1UL << 1
};

typedef void (*CFFileDescriptorCallBack)(CFFileDescriptorRef f, CFOptionFlags callBackTypes, void *info);

typedef struct {
    CFIndex version;
    void * info;
    void * (*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFFileDescriptorContext;

extern CFTypeID CFFileDescriptorGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFFileDescriptorRef CFFileDescriptorCreate(CFAllocatorRef allocator, CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate, CFFileDescriptorCallBack callout, const CFFileDescriptorContext *context) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFFileDescriptorNativeDescriptor CFFileDescriptorGetNativeDescriptor(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorGetContext(CFFileDescriptorRef f, CFFileDescriptorContext *context) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorEnableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern void CFFileDescriptorDisableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorInvalidate(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern Boolean CFFileDescriptorIsValid(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFRunLoopSourceRef CFFileDescriptorCreateRunLoopSource(CFAllocatorRef allocator, CFFileDescriptorRef f, CFIndex order) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


}



extern "C" {

typedef struct __attribute__((objc_bridge_mutable(id))) __CFUserNotification * CFUserNotificationRef;
typedef void (*CFUserNotificationCallBack)(CFUserNotificationRef userNotification, CFOptionFlags responseFlags);

extern
CFTypeID CFUserNotificationGetTypeID(void) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
CFStringRef CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
CFDictionaryRef CFUserNotificationGetResponseDictionary(CFUserNotificationRef userNotification) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
SInt32 CFUserNotificationUpdate(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags flags, CFDictionaryRef dictionary) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern
SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




enum {
    kCFUserNotificationStopAlertLevel __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 0,
    kCFUserNotificationNoteAlertLevel __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 1,
    kCFUserNotificationCautionAlertLevel __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 2,
    kCFUserNotificationPlainAlertLevel __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 3
};

enum {
    kCFUserNotificationDefaultResponse __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 0,
    kCFUserNotificationAlternateResponse __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 1,
    kCFUserNotificationOtherResponse __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 2,
    kCFUserNotificationCancelResponse __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 3
};

enum {
    kCFUserNotificationNoDefaultButtonFlag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = (1UL << 5),
    kCFUserNotificationUseRadioButtonsFlag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = (1UL << 6)
};

static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationCheckBoxChecked(CFIndex i) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) {return ((CFOptionFlags)(1UL << (8 + i)));}
static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationSecureTextField(CFIndex i) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) {return ((CFOptionFlags)(1UL << (16 + i)));}
static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationPopUpSelection(CFIndex n) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) {return ((CFOptionFlags)(n << 24));}




extern
const CFStringRef kCFUserNotificationIconURLKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationSoundURLKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationLocalizationURLKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationAlertHeaderKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationAlertMessageKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationDefaultButtonTitleKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationAlternateButtonTitleKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationOtherButtonTitleKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationProgressIndicatorValueKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationPopUpTitlesKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationTextFieldTitlesKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationCheckBoxTitlesKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationTextFieldValuesKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationPopUpSelectionKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationAlertTopMostKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern
const CFStringRef kCFUserNotificationKeyboardTypesKey __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

}

#pragma clang assume_nonnull begin

extern "C" double NSFoundationVersionNumber;
// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_Protocol
#define _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
typedef struct {} _objc_exc_Protocol;
#endif


typedef NSString * NSExceptionName __attribute__((swift_wrapper(struct)));
typedef NSString * NSRunLoopMode __attribute__((swift_wrapper(struct)));

extern "C" NSString *NSStringFromSelector(SEL aSelector);
extern "C" SEL NSSelectorFromString(NSString *aSelectorName);

extern "C" NSString *NSStringFromClass(Class aClass);
extern "C" Class _Nullable NSClassFromString(NSString *aClassName);

extern "C" NSString *NSStringFromProtocol(Protocol *proto) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" Protocol * _Nullable NSProtocolFromString(NSString *namestr) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" const char *NSGetSizeAndAlignment(const char *typePtr, NSUInteger * _Nullable sizep, NSUInteger * _Nullable alignp);

extern "C" void NSLog(NSString *format, ...) __attribute__((format(__NSString__, 1, 2))) __attribute__((not_tail_called));
extern "C" void NSLogv(NSString *format, va_list args) __attribute__((format(__NSString__, 1, 0))) __attribute__((not_tail_called));
typedef NSInteger NSComparisonResult; enum {
    NSOrderedAscending = -1L,
    NSOrderedSame,
    NSOrderedDescending
};


typedef NSComparisonResult (*NSComparator)(id obj1, id obj2);


typedef NSUInteger NSEnumerationOptions; enum {
    NSEnumerationConcurrent = (1UL << 0),
    NSEnumerationReverse = (1UL << 1),
};

typedef NSUInteger NSSortOptions; enum {
    NSSortConcurrent = (1UL << 0),
    NSSortStable = (1UL << 4),
};

typedef NSInteger NSQualityOfService; enum {
    NSQualityOfServiceUserInteractive = 0x21,
    NSQualityOfServiceUserInitiated = 0x19,
    NSQualityOfServiceUtility = 0x11,
    NSQualityOfServiceBackground = 0x09,
    NSQualityOfServiceDefault = -1
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

static const NSInteger NSNotFound = 9223372036854775807L;
#pragma clang assume_nonnull end



















// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef struct _NSZone NSZone;

extern "C" NSZone *NSDefaultMallocZone(void) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSZone *NSCreateZone(NSUInteger startSize, NSUInteger granularity, BOOL canFree) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void NSRecycleZone(NSZone *zone)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern "C" void NSSetZoneName(NSZone * _Nullable zone, NSString *name)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSString *NSZoneName(NSZone * _Nullable zone) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSZone * _Nullable NSZoneFromPointer(void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern "C" void *NSZoneMalloc(NSZone * _Nullable zone, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void *NSZoneCalloc(NSZone * _Nullable zone, NSUInteger numElems, NSUInteger byteSize) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void *NSZoneRealloc(NSZone * _Nullable zone, void * _Nullable ptr, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void NSZoneFree(NSZone * _Nullable zone, void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) __attribute__((availability(swift, unavailable, message="Garbage Collection is not supported")));
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) {



    return (id)cf;

}

extern "C" NSUInteger NSPageSize(void);
extern "C" NSUInteger NSLogPageSize(void);
extern "C" NSUInteger NSRoundUpToMultipleOfPageSize(NSUInteger bytes);
extern "C" NSUInteger NSRoundDownToMultipleOfPageSize(NSUInteger bytes);
extern "C" void *NSAllocateMemoryPages(NSUInteger bytes);
extern "C" void NSDeallocateMemoryPages(void *ptr, NSUInteger bytes);
extern "C" void NSCopyMemoryPages(const void *source, void *dest, NSUInteger bytes);
extern "C" NSUInteger NSRealMemoryAvailable(void) __attribute__((availability(macos,introduced=10.0,deprecated=10.8,message="Use NSProcessInfo instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message="Use NSProcessInfo instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSProcessInfo instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSProcessInfo instead")));
#pragma clang assume_nonnull end

// @class NSInvocation;
#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSCoder
#define _REWRITER_typedef_NSCoder
typedef struct objc_object NSCoder;
typedef struct {} _objc_exc_NSCoder;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

// @class Protocol;
#ifndef _REWRITER_typedef_Protocol
#define _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
typedef struct {} _objc_exc_Protocol;
#endif


#pragma clang assume_nonnull begin



// @protocol NSCopying

// - (id)copyWithZone:(nullable NSZone *)zone;

/* @end */


// @protocol NSMutableCopying

// - (id)mutableCopyWithZone:(nullable NSZone *)zone;

/* @end */


// @protocol NSCoding

// - (void)encodeWithCoder:(NSCoder *)coder;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder;

/* @end */





// @protocol NSSecureCoding <NSCoding>
/* @required */


@property (class, readonly) BOOL supportsSecureCoding;
/* @end */




// @interface NSObject (NSCoderMethods)

// + (NSInteger)version;
// + (void)setVersion:(NSInteger)aVersion;
// @property (readonly) Class classForCoder;
// - (nullable id)replacementObjectForCoder:(NSCoder *)coder;
// - (nullable id)awakeAfterUsingCoder:(NSCoder *)coder __attribute__((ns_consumes_self)) __attribute__((ns_returns_retained));

/* @end */

// @protocol NSDiscardableContent
/* @required */
// - (BOOL)beginContentAccess;
// - (void)endContentAccess;
// - (void)discardContentIfPossible;
// - (BOOL)isContentDiscarded;
/* @end */


// @interface NSObject (NSDiscardableContentProxy)
// @property (readonly, retain) id autoContentAccessingProxy __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */





extern "C" id NSAllocateObject(Class aClass, NSUInteger extraBytes, NSZone * _Nullable zone) ;

extern "C" void NSDeallocateObject(id object) ;

extern "C" id NSCopyObject(id object, NSUInteger extraBytes, NSZone * _Nullable zone) __attribute__((availability(macos,introduced=10.0,deprecated=10.8,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

extern "C" BOOL NSShouldRetainWithZone(id anObject, NSZone * _Nullable requestedZone) ;

extern "C" void NSIncrementExtraRefCount(id object) ;

extern "C" BOOL NSDecrementExtraRefCountWasZero(id object) ;

extern "C" NSUInteger NSExtraRefCount(id object) ;
static __inline__ __attribute__((always_inline)) __attribute__((cf_returns_retained)) CFTypeRef _Nullable CFBridgingRetain(id _Nullable X) {
    return X ? CFRetain((CFTypeRef)X) : __null;
}


static __inline__ __attribute__((always_inline)) id _Nullable CFBridgingRelease(CFTypeRef __attribute__((cf_consumed)) _Nullable X) __attribute__((ns_returns_retained)) {
    return ((id (*)(id, SEL))(void *)objc_msgSend)((id)CFMakeCollectable(X), sel_registerName("autorelease"));
}
#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin
typedef struct {
    unsigned long state;
    id __attribute__((objc_ownership(none))) _Nullable * _Nullable itemsPtr;
    unsigned long * _Nullable mutationsPtr;
    unsigned long extra[5];
} NSFastEnumerationState;

// @protocol NSFastEnumeration

// - (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id __attribute__((objc_ownership(none))) _Nullable [_Nonnull])buffer count:(NSUInteger)len;

/* @end */



#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

struct NSEnumerator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable ObjectType)nextObject;

/* @end */


// @interface NSEnumerator<ObjectType> (NSExtendedEnumerator)

// @property (readonly, copy) NSArray<ObjectType> *allObjects;

/* @end */

#pragma clang assume_nonnull end










// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSValue
#define _REWRITER_typedef_NSValue
typedef struct objc_object NSValue;
typedef struct {} _objc_exc_NSValue;
#endif

struct NSValue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)getValue:(void *)value size:(NSUInteger)size __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));

// - (instancetype)initWithBytes:(const void *)value objCType:(const char *)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSValue (NSValueCreation)

// + (NSValue *)valueWithBytes:(const void *)value objCType:(const char *)type;
// + (NSValue *)value:(const void *)value withObjCType:(const char *)type;

/* @end */


// @interface NSValue (NSValueExtensionMethods)

// + (NSValue *)valueWithNonretainedObject:(nullable id)anObject;
// @property (nullable, readonly) id nonretainedObjectValue;

// + (NSValue *)valueWithPointer:(nullable const void *)pointer;
// @property (nullable, readonly) void *pointerValue;

// - (BOOL)isEqualToValue:(NSValue *)value;

/* @end */



#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

struct NSNumber_IMPL {
	struct NSValue_IMPL NSValue_IVARS;
};


// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithChar:(char)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedChar:(unsigned char)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithShort:(short)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedShort:(unsigned short)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithInt:(int)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedInt:(unsigned int)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithLong:(long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedLong:(unsigned long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithLongLong:(long long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedLongLong:(unsigned long long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithFloat:(float)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithDouble:(double)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithBool:(BOOL)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithInteger:(NSInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedInteger:(NSUInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

// @property (readonly) char charValue;
// @property (readonly) unsigned char unsignedCharValue;
// @property (readonly) short shortValue;
// @property (readonly) unsigned short unsignedShortValue;
// @property (readonly) int intValue;
// @property (readonly) unsigned int unsignedIntValue;
// @property (readonly) long longValue;
// @property (readonly) unsigned long unsignedLongValue;
// @property (readonly) long long longLongValue;
// @property (readonly) unsigned long long unsignedLongLongValue;
// @property (readonly) float floatValue;
// @property (readonly) double doubleValue;
// @property (readonly) BOOL boolValue;
// @property (readonly) NSInteger integerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSUInteger unsignedIntegerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *stringValue;

// - (NSComparisonResult)compare:(NSNumber *)otherNumber;

// - (BOOL)isEqualToNumber:(NSNumber *)number;

// - (NSString *)descriptionWithLocale:(nullable id)locale;

/* @end */


// @interface NSNumber (NSNumberCreation)

// + (NSNumber *)numberWithChar:(char)value;
// + (NSNumber *)numberWithUnsignedChar:(unsigned char)value;
// + (NSNumber *)numberWithShort:(short)value;
// + (NSNumber *)numberWithUnsignedShort:(unsigned short)value;
// + (NSNumber *)numberWithInt:(int)value;
// + (NSNumber *)numberWithUnsignedInt:(unsigned int)value;
// + (NSNumber *)numberWithLong:(long)value;
// + (NSNumber *)numberWithUnsignedLong:(unsigned long)value;
// + (NSNumber *)numberWithLongLong:(long long)value;
// + (NSNumber *)numberWithUnsignedLongLong:(unsigned long long)value;
// + (NSNumber *)numberWithFloat:(float)value;
// + (NSNumber *)numberWithDouble:(double)value;
// + (NSNumber *)numberWithBool:(BOOL)value;
// + (NSNumber *)numberWithInteger:(NSInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSNumber *)numberWithUnsignedInteger:(NSUInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSValue (NSDeprecated)


// - (void)getValue:(void *)value __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="getValue:size:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="getValue:size:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="getValue:size:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="getValue:size:")));
/* @end */

#pragma clang assume_nonnull end


// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef struct _NSRange {
    NSUInteger location;
    NSUInteger length;
} NSRange;

typedef NSRange *NSRangePointer;

static __inline__ __attribute__((always_inline)) NSRange NSMakeRange(NSUInteger loc, NSUInteger len) {
    NSRange r;
    r.location = loc;
    r.length = len;
    return r;
}

static __inline__ __attribute__((always_inline)) NSUInteger NSMaxRange(NSRange range) {
    return (range.location + range.length);
}

static __inline__ __attribute__((always_inline)) BOOL NSLocationInRange(NSUInteger loc, NSRange range) {
    return (!(loc < range.location) && (loc - range.location) < range.length) ? ((bool)1) : ((bool)0);
}

static __inline__ __attribute__((always_inline)) BOOL NSEqualRanges(NSRange range1, NSRange range2) {
    return (range1.location == range2.location && range1.length == range2.length);
}

extern "C" NSRange NSUnionRange(NSRange range1, NSRange range2);
extern "C" NSRange NSIntersectionRange(NSRange range1, NSRange range2);
extern "C" NSString *NSStringFromRange(NSRange range);
extern "C" NSRange NSRangeFromString(NSString *aString);

// @interface NSValue (NSValueRangeExtensions)

// + (NSValue *)valueWithRange:(NSRange)range;
// @property (readonly) NSRange rangeValue;

/* @end */

#pragma clang assume_nonnull end





// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif









#pragma clang assume_nonnull begin

typedef NSInteger NSCollectionChangeType; enum {
    NSCollectionChangeInsert,
    NSCollectionChangeRemove
} __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSOrderedCollectionChange
#define _REWRITER_typedef_NSOrderedCollectionChange
typedef struct objc_object NSOrderedCollectionChange;
typedef struct {} _objc_exc_NSOrderedCollectionChange;
#endif

struct NSOrderedCollectionChange_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (NSOrderedCollectionChange<ObjectType> *)changeWithObject:(nullable ObjectType)anObject
                                                       type:(NSCollectionChangeType)type
                                                      index:(NSUInteger)index;
#endif


#if 0
+ (NSOrderedCollectionChange<ObjectType> *)changeWithObject:(nullable ObjectType)anObject
                                                       type:(NSCollectionChangeType)type
                                                      index:(NSUInteger)index
                                            associatedIndex:(NSUInteger)associatedIndex;
#endif



// @property (readonly, strong, nullable) ObjectType object;


// @property (readonly) NSCollectionChangeType changeType;



// @property (readonly) NSUInteger index;





// @property (readonly) NSUInteger associatedIndex;

// - (id)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

#if 0
- (instancetype)initWithObject:(nullable ObjectType)anObject
                          type:(NSCollectionChangeType)type
                         index:(NSUInteger)index;
#endif


#if 0
- (instancetype)initWithObject:(nullable ObjectType)anObject
                          type:(NSCollectionChangeType)type
                         index:(NSUInteger)index
               associatedIndex:(NSUInteger)associatedIndex __attribute__((objc_designated_initializer));
#endif

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

struct NSIndexSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct  {
	NSUInteger _isEmpty : 1;
	NSUInteger _hasSingleRange : 1;
	NSUInteger _cacheValid : 1;
	NSUInteger _reservedArrayBinderController : 29;
	} _indexSetFlags;

	union  {

	struct  {
	NSRange _range;
	} _singleRange;

	struct  {
	void * _Nonnull _data;
	void * _Nonnull _reserved;
	} _multipleRanges;
	} _internal;
};


// + (instancetype)indexSet;
// + (instancetype)indexSetWithIndex:(NSUInteger)value;
// + (instancetype)indexSetWithIndexesInRange:(NSRange)range;

// - (instancetype)initWithIndexesInRange:(NSRange)range __attribute__((objc_designated_initializer));
// - (instancetype)initWithIndexSet:(NSIndexSet *)indexSet __attribute__((objc_designated_initializer));

// - (instancetype)initWithIndex:(NSUInteger)value;

// - (BOOL)isEqualToIndexSet:(NSIndexSet *)indexSet;

// @property (readonly) NSUInteger count;



// @property (readonly) NSUInteger firstIndex;
// @property (readonly) NSUInteger lastIndex;
// - (NSUInteger)indexGreaterThanIndex:(NSUInteger)value;
// - (NSUInteger)indexLessThanIndex:(NSUInteger)value;
// - (NSUInteger)indexGreaterThanOrEqualToIndex:(NSUInteger)value;
// - (NSUInteger)indexLessThanOrEqualToIndex:(NSUInteger)value;



// - (NSUInteger)getIndexes:(NSUInteger *)indexBuffer maxCount:(NSUInteger)bufferSize inIndexRange:(nullable NSRangePointer)range;

// - (NSUInteger)countOfIndexesInRange:(NSRange)range __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)containsIndex:(NSUInteger)value;
// - (BOOL)containsIndexesInRange:(NSRange)range;
// - (BOOL)containsIndexes:(NSIndexSet *)indexSet;

// - (BOOL)intersectsIndexesInRange:(NSRange)range;

// - (void)enumerateIndexesUsingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateIndexesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateIndexesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSUInteger)indexPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSIndexSet *)indexesPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)enumerateRangesUsingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateRangesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateRangesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSMutableIndexSet
#define _REWRITER_typedef_NSMutableIndexSet
typedef struct objc_object NSMutableIndexSet;
typedef struct {} _objc_exc_NSMutableIndexSet;
#endif

struct NSMutableIndexSet_IMPL {
	struct NSIndexSet_IMPL NSIndexSet_IVARS;
	void *_reserved;
};


// - (void)addIndexes:(NSIndexSet *)indexSet;
// - (void)removeIndexes:(NSIndexSet *)indexSet;
// - (void)removeAllIndexes;
// - (void)addIndex:(NSUInteger)value;
// - (void)removeIndex:(NSUInteger)value;
// - (void)addIndexesInRange:(NSRange)range;
// - (void)removeIndexesInRange:(NSRange)range;



// - (void)shiftIndexesStartingAtIndex:(NSUInteger)index by:(NSInteger)delta;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin


typedef NSUInteger NSOrderedCollectionDifferenceCalculationOptions; enum {

    NSOrderedCollectionDifferenceCalculationOmitInsertedObjects = (1 << 0UL),

    NSOrderedCollectionDifferenceCalculationOmitRemovedObjects = (1 << 1UL),


    NSOrderedCollectionDifferenceCalculationInferMoves = (1 << 2UL)
} __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSOrderedCollectionDifference
#define _REWRITER_typedef_NSOrderedCollectionDifference
typedef struct objc_object NSOrderedCollectionDifference;
typedef struct {} _objc_exc_NSOrderedCollectionDifference;
#endif

struct NSOrderedCollectionDifference_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithChanges:(NSArray<NSOrderedCollectionChange<ObjectType> *> *)changes;

#if 0
- (instancetype)initWithInsertIndexes:(NSIndexSet *)inserts
                      insertedObjects:(nullable NSArray<ObjectType> *)insertedObjects
                        removeIndexes:(NSIndexSet *)removes
                       removedObjects:(nullable NSArray<ObjectType> *)removedObjects
                    additionalChanges:(NSArray<NSOrderedCollectionChange<ObjectType> *> *)changes __attribute__((objc_designated_initializer));
#endif


#if 0
- (instancetype)initWithInsertIndexes:(NSIndexSet *)inserts
                      insertedObjects:(nullable NSArray<ObjectType> *)insertedObjects
                        removeIndexes:(NSIndexSet *)removes
                       removedObjects:(nullable NSArray<ObjectType> *)removedObjects;
#endif


// @property (strong, readonly) NSArray<NSOrderedCollectionChange<ObjectType> *> *insertions __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (strong, readonly) NSArray<NSOrderedCollectionChange<ObjectType> *> *removals __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

// @property (assign, readonly) BOOL hasChanges;


// - (NSOrderedCollectionDifference<id> *)differenceByTransformingChangesWithBlock:(NSOrderedCollectionChange<id> *(__attribute__((noescape)) ^)(NSOrderedCollectionChange<ObjectType> *))block;







// - (instancetype)inverseDifference __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

struct NSArray_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (ObjectType)objectAtIndex:(NSUInteger)index;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSArray<ObjectType> (NSExtendedArray)

// - (NSArray<ObjectType> *)arrayByAddingObject:(ObjectType)anObject;
// - (NSArray<ObjectType> *)arrayByAddingObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (NSString *)componentsJoinedByString:(NSString *)separator;
// - (BOOL)containsObject:(ObjectType)anObject;
// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
// - (nullable ObjectType)firstObjectCommonWithArray:(NSArray<ObjectType> *)otherArray;
// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nonnull])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'subarrayWithRange()' instead")));
// - (NSUInteger)indexOfObject:(ObjectType)anObject;
// - (NSUInteger)indexOfObject:(ObjectType)anObject inRange:(NSRange)range;
// - (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject;
// - (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
// - (BOOL)isEqualToArray:(NSArray<ObjectType> *)otherArray;
// @property (nullable, nonatomic, readonly) ObjectType firstObject __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, nonatomic, readonly) ObjectType lastObject;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSEnumerator<ObjectType> *)reverseObjectEnumerator;
// @property (readonly, copy) NSData *sortedArrayHint;
// - (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context;
// - (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context hint:(nullable NSData *)hint;
// - (NSArray<ObjectType> *)sortedArrayUsingSelector:(SEL)comparator;
// - (NSArray<ObjectType> *)subarrayWithRange:(NSRange)range;

// - (BOOL)writeToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
// - (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

// - (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;

// - (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape))^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSBinarySearchingOptions; enum {
 NSBinarySearchingFirstEqual = (1UL << 8),
 NSBinarySearchingLastEqual = (1UL << 9),
 NSBinarySearchingInsertionIndex = (1UL << 10),
};

// - (NSUInteger)indexOfObject:(ObjectType)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSArrayCreation)

// + (instancetype)array;
// + (instancetype)arrayWithObject:(ObjectType)anObject;
// + (instancetype)arrayWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)arrayWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)arrayWithArray:(NSArray<ObjectType> *)array;

// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array copyItems:(BOOL)flag;


// - (nullable NSArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// + (nullable NSArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(swift, unavailable, message="Use initializer instead")));

/* @end */


__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
__attribute__((availability(swift, unavailable, message="NSArray diffing methods are not available in Swift, use Collection.difference(from:) instead")))
// @interface NSArray<ObjectType> (NSArrayDiffing)

// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromArray:(NSArray<ObjectType> *)other withOptions:(NSOrderedCollectionDifferenceCalculationOptions)options usingEquivalenceTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj1, ObjectType obj2))block;

// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromArray:(NSArray<ObjectType> *)other withOptions:(NSOrderedCollectionDifferenceCalculationOptions)options;


// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromArray:(NSArray<ObjectType> *)other;

// - (nullable NSArray<ObjectType> *)arrayByApplyingDifference:(NSOrderedCollectionDifference<ObjectType> *)difference;

/* @end */


// @interface NSArray<ObjectType> (NSDeprecated)




// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nonnull])objects __attribute__((availability(swift, unavailable, message="Use 'as [AnyObject]' instead"))) __attribute__((availability(macos,introduced=10.0,deprecated=10.13,message="Use -getObjects:range: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="Use -getObjects:range: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=4.0,message="Use -getObjects:range: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Use -getObjects:range: instead")));


// + (nullable NSArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:")));
// + (nullable NSArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="arrayWithContentsOfURL:error:")));
// - (nullable NSArray<ObjectType> *)initWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="initWithContentsOfURL:error:")));
// - (nullable NSArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="initWithContentsOfURL:error:")));
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="writeToURL:error:")));
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="writeToURL:error:")));

/* @end */





#ifndef _REWRITER_typedef_NSMutableArray
#define _REWRITER_typedef_NSMutableArray
typedef struct objc_object NSMutableArray;
typedef struct {} _objc_exc_NSMutableArray;
#endif

struct NSMutableArray_IMPL {
	struct NSArray_IMPL NSArray_IVARS;
};


// - (void)addObject:(ObjectType)anObject;
// - (void)insertObject:(ObjectType)anObject atIndex:(NSUInteger)index;
// - (void)removeLastObject;
// - (void)removeObjectAtIndex:(NSUInteger)index;
// - (void)replaceObjectAtIndex:(NSUInteger)index withObject:(ObjectType)anObject;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableArray<ObjectType> (NSExtendedMutableArray)

// - (void)addObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
// - (void)removeAllObjects;
// - (void)removeObject:(ObjectType)anObject inRange:(NSRange)range;
// - (void)removeObject:(ObjectType)anObject;
// - (void)removeObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
// - (void)removeObjectIdenticalTo:(ObjectType)anObject;
// - (void)removeObjectsFromIndices:(NSUInteger *)indices numIndices:(NSUInteger)cnt __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));
// - (void)removeObjectsInArray:(NSArray<ObjectType> *)otherArray;
// - (void)removeObjectsInRange:(NSRange)range;
// - (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray range:(NSRange)otherRange;
// - (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (void)setArray:(NSArray<ObjectType> *)otherArray;
// - (void)sortUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))compare context:(nullable void *)context;
// - (void)sortUsingSelector:(SEL)comparator;

// - (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;
// - (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
// - (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

// - (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableArray<ObjectType> (NSMutableArrayCreation)

// + (instancetype)arrayWithCapacity:(NSUInteger)numItems;

// + (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path;
// + (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url;
// - (nullable NSMutableArray<ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSMutableArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url;

/* @end */


__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
__attribute__((availability(swift, unavailable, message="NSMutableArray diffing methods are not available in Swift")))
// @interface NSMutableArray<ObjectType> (NSMutableArrayDiffing)

// - (void)applyDifference:(NSOrderedCollectionDifference<ObjectType> *)difference;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin



#ifndef _REWRITER_typedef_NSAutoreleasePool
#define _REWRITER_typedef_NSAutoreleasePool
typedef struct objc_object NSAutoreleasePool;
typedef struct {} _objc_exc_NSAutoreleasePool;
#endif

struct NSAutoreleasePool_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_token;
	void *_reserved3;
	void *_reserved2;
	void *_reserved;
};


// + (void)addObject:(id)anObject;

// - (void)addObject:(id)anObject;

// - (void)drain;

/* @end */

#pragma clang assume_nonnull end





typedef unsigned short unichar;





#pragma clang assume_nonnull begin

// @class NSItemProvider;
#ifndef _REWRITER_typedef_NSItemProvider
#define _REWRITER_typedef_NSItemProvider
typedef struct objc_object NSItemProvider;
typedef struct {} _objc_exc_NSItemProvider;
#endif

#ifndef _REWRITER_typedef_NSProgress
#define _REWRITER_typedef_NSProgress
typedef struct objc_object NSProgress;
typedef struct {} _objc_exc_NSProgress;
#endif



typedef NSInteger NSItemProviderRepresentationVisibility; enum {
    NSItemProviderRepresentationVisibilityAll = 0,
    NSItemProviderRepresentationVisibilityTeam
    __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(macos,unavailable))) = 1,
    NSItemProviderRepresentationVisibilityGroup
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 2 ,
    NSItemProviderRepresentationVisibilityOwnProcess = 3,
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



typedef NSInteger NSItemProviderFileOptions; enum {
    NSItemProviderFileOptionOpenInPlace = 1,
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol NSItemProviderWriting <NSObject>

@property (class, nonatomic, readonly, copy) NSArray<NSString *> *writableTypeIdentifiersForItemProvider;

/* @optional */


// @property (nonatomic, readonly, copy) NSArray<NSString *> *writableTypeIdentifiersForItemProvider;

// + (NSItemProviderRepresentationVisibility)itemProviderVisibilityForRepresentationWithTypeIdentifier:(NSString *)typeIdentifier;


// - (NSItemProviderRepresentationVisibility)itemProviderVisibilityForRepresentationWithTypeIdentifier:(NSString *)typeIdentifier;

/* @required */

#if 0
- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier
                   forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler;
#endif


/* @end */




__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol NSItemProviderReading <NSObject>

@property (class, nonatomic, readonly, copy) NSArray<NSString *> *readableTypeIdentifiersForItemProvider;

#if 0
+ (nullable instancetype)objectWithItemProviderData:(NSData *)data
                                     typeIdentifier:(NSString *)typeIdentifier
                                              error:(NSError **)outError;
#endif


/* @end */



typedef void (*NSItemProviderCompletionHandler)(_Nullable id /*<NSSecureCoding>*/ item, NSError * _Null_unspecified error);
typedef void (*NSItemProviderLoadHandler)(_Null_unspecified NSItemProviderCompletionHandler completionHandler, _Null_unspecified Class expectedValueClass, NSDictionary * _Null_unspecified options);



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSItemProvider
#define _REWRITER_typedef_NSItemProvider
typedef struct objc_object NSItemProvider;
typedef struct {} _objc_exc_NSItemProvider;
#endif

struct NSItemProvider_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};








// - (instancetype)init __attribute__((objc_designated_initializer));




#if 0
- (void)registerDataRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                         visibility:(NSItemProviderRepresentationVisibility)visibility
                                        loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(NSData * _Nullable data, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif





#if 0
- (void)registerFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                        fileOptions:(NSItemProviderFileOptions)fileOptions
                                         visibility:(NSItemProviderRepresentationVisibility)visibility
                                        loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(NSURL * _Nullable url, BOOL coordinated, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif







// @property (copy, readonly, atomic) NSArray<NSString *> *registeredTypeIdentifiers;

// - (NSArray<NSString *> *)registeredTypeIdentifiersWithFileOptions:(NSItemProviderFileOptions)fileOptions __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (BOOL)hasItemConformingToTypeIdentifier:(NSString *)typeIdentifier;

#if 0
- (BOOL)hasRepresentationConformingToTypeIdentifier:(NSString *)typeIdentifier
                                        fileOptions:(NSItemProviderFileOptions)fileOptions __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif



#if 0
- (NSProgress *)loadDataRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                      completionHandler:(void(^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif



#if 0
- (NSProgress *)loadFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                      completionHandler:(void(^)(NSURL * _Nullable url, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif




#if 0
- (NSProgress *)loadInPlaceFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                             completionHandler:(void (^)(NSURL * _Nullable url, BOOL isInPlace, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif






// @property (atomic, copy, nullable) NSString *suggestedName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






// - (instancetype)initWithObject:(id<NSItemProviderWriting>)object __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)registerObject:(id<NSItemProviderWriting>)object visibility:(NSItemProviderRepresentationVisibility)visibility __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


#if 0
- (void)registerObjectOfClass:(Class<NSItemProviderWriting>)aClass
                   visibility:(NSItemProviderRepresentationVisibility)visibility
                  loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(id<NSItemProviderWriting> _Nullable object, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif


// - (BOOL)canLoadObjectOfClass:(Class<NSItemProviderReading>)aClass __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


#if 0
- (NSProgress *)loadObjectOfClass:(Class<NSItemProviderReading>)aClass
                completionHandler:(void (^)(id<NSItemProviderReading> _Nullable object, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

// - (instancetype)initWithItem:(nullable id<NSSecureCoding>)item typeIdentifier:(nullable NSString *)typeIdentifier __attribute__((objc_designated_initializer));


// - (nullable instancetype)initWithContentsOfURL:(null_unspecified NSURL *)fileURL;


// - (void)registerItemForTypeIdentifier:(NSString *)typeIdentifier loadHandler:(NSItemProviderLoadHandler)loadHandler;







// - (void)loadItemForTypeIdentifier:(NSString *)typeIdentifier options:(nullable NSDictionary *)options completionHandler:(nullable NSItemProviderCompletionHandler)completionHandler;


/* @end */




extern "C" NSString * const NSItemProviderPreferredImageSizeKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @interface NSItemProvider(NSPreviewSupport)


// @property (nullable, copy, atomic) NSItemProviderLoadHandler previewImageHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (void)loadPreviewImageWithOptions:(null_unspecified NSDictionary *)options completionHandler:(null_unspecified NSItemProviderCompletionHandler)completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */






extern "C" NSString * _Null_unspecified const NSExtensionJavaScriptPreprocessingResultsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * _Null_unspecified const NSExtensionJavaScriptFinalizeArgumentKey __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));






extern "C" NSString * const NSItemProviderErrorDomain __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSItemProviderErrorCode; enum {
    NSItemProviderUnknownError = -1,
    NSItemProviderItemUnavailableError = -1000,
    NSItemProviderUnexpectedValueClassError = -1100,
    NSItemProviderUnavailableCoercionError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1200
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSStringCompareOptions; enum {
    NSCaseInsensitiveSearch = 1,
    NSLiteralSearch = 2,
    NSBackwardsSearch = 4,
    NSAnchoredSearch = 8,
    NSNumericSearch = 64,
    NSDiacriticInsensitiveSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 128,
    NSWidthInsensitiveSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 256,
    NSForcedOrderingSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 512,
    NSRegularExpressionSearch __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1024
};





typedef NSUInteger NSStringEncoding;
enum {
    NSASCIIStringEncoding = 1,
    NSNEXTSTEPStringEncoding = 2,
    NSJapaneseEUCStringEncoding = 3,
    NSUTF8StringEncoding = 4,
    NSISOLatin1StringEncoding = 5,
    NSSymbolStringEncoding = 6,
    NSNonLossyASCIIStringEncoding = 7,
    NSShiftJISStringEncoding = 8,
    NSISOLatin2StringEncoding = 9,
    NSUnicodeStringEncoding = 10,
    NSWindowsCP1251StringEncoding = 11,
    NSWindowsCP1252StringEncoding = 12,
    NSWindowsCP1253StringEncoding = 13,
    NSWindowsCP1254StringEncoding = 14,
    NSWindowsCP1250StringEncoding = 15,
    NSISO2022JPStringEncoding = 21,
    NSMacOSRomanStringEncoding = 30,

    NSUTF16StringEncoding = NSUnicodeStringEncoding,

    NSUTF16BigEndianStringEncoding = 0x90000100,
    NSUTF16LittleEndianStringEncoding = 0x94000100,

    NSUTF32StringEncoding = 0x8c000100,
    NSUTF32BigEndianStringEncoding = 0x98000100,
    NSUTF32LittleEndianStringEncoding = 0x9c000100
};

typedef NSUInteger NSStringEncodingConversionOptions; enum {
    NSStringEncodingConversionAllowLossy = 1,
    NSStringEncodingConversionExternalRepresentation = 2
};



#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

struct NSString_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






// @property (readonly) NSUInteger length;
// - (unichar)characterAtIndex:(NSUInteger)index;



// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSString (NSStringExtensionMethods)
// - (NSString *)substringFromIndex:(NSUInteger)from;
// - (NSString *)substringToIndex:(NSUInteger)to;
// - (NSString *)substringWithRange:(NSRange)range;

// - (void)getCharacters:(unichar *)buffer range:(NSRange)range;






// - (NSComparisonResult)compare:(NSString *)string;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare locale:(nullable id)locale;
// - (NSComparisonResult)caseInsensitiveCompare:(NSString *)string;
// - (NSComparisonResult)localizedCompare:(NSString *)string;
// - (NSComparisonResult)localizedCaseInsensitiveCompare:(NSString *)string;



// - (NSComparisonResult)localizedStandardCompare:(NSString *)string __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)isEqualToString:(NSString *)aString;






// - (BOOL)hasPrefix:(NSString *)str;
// - (BOOL)hasSuffix:(NSString *)str;

// - (NSString *)commonPrefixWithString:(NSString *)str options:(NSStringCompareOptions)mask;



// - (BOOL)containsString:(NSString *)str __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)localizedCaseInsensitiveContainsString:(NSString *)str __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)localizedStandardContainsString:(NSString *)str __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)localizedStandardRangeOfString:(NSString *)str __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSRange)rangeOfString:(NSString *)searchString;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet;
// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask;
// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;

// - (NSRange)rangeOfComposedCharacterSequenceAtIndex:(NSUInteger)index;
// - (NSRange)rangeOfComposedCharacterSequencesForRange:(NSRange)range __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSString *)stringByAppendingString:(NSString *)aString;
// - (NSString *)stringByAppendingFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));






// @property (readonly) double doubleValue;
// @property (readonly) float floatValue;
// @property (readonly) int intValue;
// @property (readonly) NSInteger integerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) long long longLongValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) BOOL boolValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property (readonly, copy) NSString *uppercaseString;
// @property (readonly, copy) NSString *lowercaseString;
// @property (readonly, copy) NSString *capitalizedString;



// @property (readonly, copy) NSString *localizedUppercaseString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *localizedLowercaseString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *localizedCapitalizedString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)uppercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSString *)lowercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSString *)capitalizedStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)getLineStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)lineEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
// - (NSRange)lineRangeForRange:(NSRange)range;

// - (void)getParagraphStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)parEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
// - (NSRange)paragraphRangeForRange:(NSRange)range;

typedef NSUInteger NSStringEnumerationOptions; enum {

    NSStringEnumerationByLines = 0,
    NSStringEnumerationByParagraphs = 1,
    NSStringEnumerationByComposedCharacterSequences = 2,
    NSStringEnumerationByWords = 3,
    NSStringEnumerationBySentences = 4,

    NSStringEnumerationReverse = 1UL << 8,
    NSStringEnumerationSubstringNotRequired = 1UL << 9,
    NSStringEnumerationLocalized = 1UL << 10
};



// - (void)enumerateSubstringsInRange:(NSRange)range options:(NSStringEnumerationOptions)opts usingBlock:(void (^)(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateLinesUsingBlock:(void (^)(NSString *line, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, readonly) const char *UTF8String __attribute__((objc_returns_inner_pointer));

// @property (readonly) NSStringEncoding fastestEncoding;
// @property (readonly) NSStringEncoding smallestEncoding;

// - (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding allowLossyConversion:(BOOL)lossy;
// - (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding;

// - (BOOL)canBeConvertedToEncoding:(NSStringEncoding)encoding;



// - (nullable const char *)cStringUsingEncoding:(NSStringEncoding)encoding __attribute__((objc_returns_inner_pointer));
// - (BOOL)getCString:(char *)buffer maxLength:(NSUInteger)maxBufferCount encoding:(NSStringEncoding)encoding;
// - (BOOL)getBytes:(nullable void *)buffer maxLength:(NSUInteger)maxBufferCount usedLength:(nullable NSUInteger *)usedBufferCount encoding:(NSStringEncoding)encoding options:(NSStringEncodingConversionOptions)options range:(NSRange)range remainingRange:(nullable NSRangePointer)leftover;



// - (NSUInteger)maximumLengthOfBytesUsingEncoding:(NSStringEncoding)enc;
// - (NSUInteger)lengthOfBytesUsingEncoding:(NSStringEncoding)enc;

@property (class, readonly) const NSStringEncoding *availableStringEncodings;

// + (NSString *)localizedNameOfStringEncoding:(NSStringEncoding)encoding;



@property (class, readonly) NSStringEncoding defaultCStringEncoding;



// @property (readonly, copy) NSString *decomposedStringWithCanonicalMapping;
// @property (readonly, copy) NSString *precomposedStringWithCanonicalMapping;
// @property (readonly, copy) NSString *decomposedStringWithCompatibilityMapping;
// @property (readonly, copy) NSString *precomposedStringWithCompatibilityMapping;

// - (NSArray<NSString *> *)componentsSeparatedByString:(NSString *)separator;
// - (NSArray<NSString *> *)componentsSeparatedByCharactersInSet:(NSCharacterSet *)separator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSString *)stringByTrimmingCharactersInSet:(NSCharacterSet *)set;
// - (NSString *)stringByPaddingToLength:(NSUInteger)newLength withString:(NSString *)padString startingAtIndex:(NSUInteger)padIndex;



// - (NSString *)stringByFoldingWithOptions:(NSStringCompareOptions)options locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingCharactersInRange:(NSRange)range withString:(NSString *)replacement __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString *NSStringTransform __attribute__((swift_wrapper(struct)));



// - (nullable NSString *)stringByApplyingTransform:(NSStringTransform)transform reverse:(BOOL)reverse __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStringTransform const NSStringTransformLatinToKatakana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHiragana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHangul __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToArabic __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHebrew __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToThai __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToCyrillic __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToGreek __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToLatin __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformMandarinToLatin __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformHiraganaToKatakana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformFullwidthToHalfwidth __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToXMLHex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToUnicodeName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformStripCombiningMarks __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformStripDiacritics __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;

// @property (readonly, copy) NSString *description;

// @property (readonly) NSUInteger hash;






// - (instancetype)initWithCharactersNoCopy:(unichar *)characters length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer;
// - (instancetype)initWithCharacters:(const unichar *)characters length:(NSUInteger)length;
// - (nullable instancetype)initWithUTF8String:(const char *)nullTerminatedCString;
// - (instancetype)initWithString:(NSString *)aString;
// - (instancetype)initWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// - (instancetype)initWithFormat:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
// - (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale, ... __attribute__((format(__NSString__, 1, 3)));
// - (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
// - (nullable instancetype)initWithData:(NSData *)data encoding:(NSStringEncoding)encoding;
// - (nullable instancetype)initWithBytes:(const void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding;
// - (nullable instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding freeWhenDone:(BOOL)freeBuffer;

// + (instancetype)string;
// + (instancetype)stringWithString:(NSString *)string;
// + (instancetype)stringWithCharacters:(const unichar *)characters length:(NSUInteger)length;
// + (nullable instancetype)stringWithUTF8String:(const char *)nullTerminatedCString;
// + (instancetype)stringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// + (instancetype)localizedStringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));

// - (nullable instancetype)initWithCString:(const char *)nullTerminatedCString encoding:(NSStringEncoding)encoding;
// + (nullable instancetype)stringWithCString:(const char *)cString encoding:(NSStringEncoding)enc;



// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;



// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;

/* @end */


typedef NSString * NSStringEncodingDetectionOptionsKey __attribute__((swift_wrapper(enum)));

// @interface NSString (NSStringEncodingDetection)
#if 0
+ (NSStringEncoding)stringEncodingForData:(NSData *)data
                          encodingOptions:(nullable NSDictionary<NSStringEncodingDetectionOptionsKey, id> *)opts
                          convertedString:(NSString * _Nullable * _Nullable)string
                      usedLossyConversion:(nullable BOOL *)usedLossyConversion __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#endif




extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionSuggestedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionDisallowedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionUseOnlySuggestedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionAllowLossyKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionFromWindowsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLossySubstitutionKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLikelyLanguageKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSString (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */




#ifndef _REWRITER_typedef_NSMutableString
#define _REWRITER_typedef_NSMutableString
typedef struct objc_object NSMutableString;
typedef struct {} _objc_exc_NSMutableString;
#endif

struct NSMutableString_IMPL {
	struct NSString_IMPL NSString_IVARS;
};






// - (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)aString;

/* @end */


// @interface NSMutableString (NSMutableStringExtensionMethods)



// - (void)insertString:(NSString *)aString atIndex:(NSUInteger)loc;
// - (void)deleteCharactersInRange:(NSRange)range;
// - (void)appendString:(NSString *)aString;
// - (void)appendFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// - (void)setString:(NSString *)aString;



// - (NSUInteger)replaceOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange;



// - (BOOL)applyTransform:(NSStringTransform)transform reverse:(BOOL)reverse range:(NSRange)range updatedRange:(nullable NSRangePointer)resultingRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSMutableString *)initWithCapacity:(NSUInteger)capacity;
// + (NSMutableString *)stringWithCapacity:(NSUInteger)capacity;

/* @end */




extern "C" NSExceptionName const NSCharacterConversionException;
extern "C" NSExceptionName const NSParseErrorException;




// @interface NSString (NSExtendedStringPropertyListParsing)



// - (id)propertyList;
// - (nullable NSDictionary *)propertyListFromStringsFileFormat;

/* @end */


// @interface NSString (NSStringDeprecated)



// - (nullable const char *)cString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -cStringUsingEncoding: instead")));
// - (nullable const char *)lossyCString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -cStringUsingEncoding: instead")));
// - (NSUInteger)cStringLength __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -lengthOfBytesUsingEncoding: instead")));
// - (void)getCString:(char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));
// - (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));
// - (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength range:(NSRange)aRange remainingRange:(nullable NSRangePointer)leftoverRange __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));

// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -writeToFile:atomically:error: instead")));
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -writeToURL:atomically:error: instead")));

// - (nullable id)initWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfFile:encoding:error: instead")));
// - (nullable id)initWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfURL:encoding:error: instead")));
// + (nullable id)stringWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithContentsOfFile:encoding:error: instead")));
// + (nullable id)stringWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithContentsOfURL:encoding:error: instead")));

// - (nullable id)initWithCStringNoCopy:(char *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// - (nullable id)initWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// - (nullable id)initWithCString:(const char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// + (nullable id)stringWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithCString:encoding:"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithCString:encoding:")));
// + (nullable id)stringWithCString:(const char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithCString:encoding: instead")));



// - (void)getCharacters:(unichar *)buffer;

/* @end */


enum {
    NSProprietaryStringEncoding = 65536
};
__attribute__((availability(swift, unavailable, message="Use String or NSString instead.")))

#ifndef _REWRITER_typedef_NSSimpleCString
#define _REWRITER_typedef_NSSimpleCString
typedef struct objc_object NSSimpleCString;
typedef struct {} _objc_exc_NSSimpleCString;
#endif

struct NSSimpleCString_IMPL {
	struct NSString_IMPL NSString_IVARS;
	char *bytes;
	int numBytes;
	int _unused;
};

/* @end */


__attribute__((availability(swift, unavailable, message="Use String or NSString instead.")))

#ifndef _REWRITER_typedef_NSConstantString
#define _REWRITER_typedef_NSConstantString
typedef struct objc_object NSConstantString;
typedef struct {} _objc_exc_NSConstantString;
#endif

struct NSConstantString_IMPL {
	struct NSSimpleCString_IMPL NSSimpleCString_IVARS;
};

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

struct NSDictionary_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (nullable ObjectType)objectForKey:(KeyType)aKey;
// - (NSEnumerator<KeyType> *)keyEnumerator;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects forKeys:(const KeyType <NSCopying> _Nonnull [_Nullable])keys count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSExtendedDictionary)

// @property (readonly, copy) NSArray<KeyType> *allKeys;
// - (NSArray<KeyType> *)allKeysForObject:(ObjectType)anObject;
// @property (readonly, copy) NSArray<ObjectType> *allValues;
// @property (readonly, copy) NSString *description;
// @property (readonly, copy) NSString *descriptionInStringsFileFormat;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
// - (BOOL)isEqualToDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSArray<ObjectType> *)objectsForKeys:(NSArray<KeyType> *)keys notFoundMarker:(ObjectType)marker;


// - (BOOL)writeToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (NSArray<KeyType> *)keysSortedByValueUsingSelector:(SEL)comparator;

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects andKeys:(KeyType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])keys count:(NSUInteger)count __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead")));

// - (nullable ObjectType)objectForKeyedSubscript:(KeyType)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateKeysAndObjectsUsingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSArray<KeyType> *)keysSortedByValueUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<KeyType> *)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSSet<KeyType> *)keysOfEntriesPassingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<KeyType> *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSDeprecated)

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects andKeys:(KeyType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])keys __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead"))) __attribute__((availability(macos,introduced=10.0,deprecated=10.13,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=4.0,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Use -getObjects:andKeys:count: instead")));


// + (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:")));
// + (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="dictionaryWithContentsOfURL:error:")));
// - (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="initWithContentsOfURL:error:")));
// - (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="initWithContentsOfURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="initWithContentsOfURL:error:")));

// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="writeToURL:error:")));
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="writeToURL:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="writeToURL:error:")));
/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSDictionaryCreation)

// + (instancetype)dictionary;
// + (instancetype)dictionaryWithObject:(ObjectType)object forKey:(KeyType <NSCopying>)key;
// + (instancetype)dictionaryWithObjects:(const ObjectType _Nonnull [_Nullable])objects forKeys:(const KeyType <NSCopying> _Nonnull [_Nullable])keys count:(NSUInteger)cnt;

// + (instancetype)dictionaryWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="Use dictionary literals instead")));

// + (instancetype)dictionaryWithDictionary:(NSDictionary<KeyType, ObjectType> *)dict;
// + (instancetype)dictionaryWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;

// - (instancetype)initWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary copyItems:(BOOL)flag;
// - (instancetype)initWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;


// - (nullable NSDictionary<NSString *, ObjectType> *)initWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// + (nullable NSDictionary<NSString *, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(swift, unavailable, message="Use initializer instead")));

/* @end */





#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

struct NSMutableDictionary_IMPL {
	struct NSDictionary_IMPL NSDictionary_IVARS;
};


// - (void)removeObjectForKey:(KeyType)aKey;
// - (void)setObject:(ObjectType)anObject forKey:(KeyType <NSCopying>)aKey;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSExtendedMutableDictionary)

// - (void)addEntriesFromDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (void)removeAllObjects;
// - (void)removeObjectsForKeys:(NSArray<KeyType> *)keyArray;
// - (void)setDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (void)setObject:(nullable ObjectType)obj forKeyedSubscript:(KeyType <NSCopying>)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSMutableDictionaryCreation)

// + (instancetype)dictionaryWithCapacity:(NSUInteger)numItems;

// + (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path;
// + (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url;
// - (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url;

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)
// + (id)sharedKeySetForKeys:(NSArray<KeyType <NSCopying>> *)keys __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)







// + (NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithSharedKeySet:(id)keyset __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSDictionary<K, V> (NSGenericFastEnumeraiton) <NSFastEnumeration>
// - (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(K __attribute__((objc_ownership(none))) _Nullable [_Nonnull])buffer count:(NSUInteger)len;
/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

struct NSSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (nullable ObjectType)member:(ObjectType)object;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSSet<ObjectType> (NSExtendedSet)

// @property (readonly, copy) NSArray<ObjectType> *allObjects;
// - (nullable ObjectType)anyObject;
// - (BOOL)containsObject:(ObjectType)anObject;
// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (BOOL)intersectsSet:(NSSet<ObjectType> *)otherSet;
// - (BOOL)isEqualToSet:(NSSet<ObjectType> *)otherSet;
// - (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)otherSet;

// - (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
// - (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

// - (NSSet<ObjectType> *)setByAddingObject:(ObjectType)anObject __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)setByAddingObjectsFromSet:(NSSet<ObjectType> *)other __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)setByAddingObjectsFromArray:(NSArray<ObjectType> *)other __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSSet<ObjectType> *)objectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSSet<ObjectType> (NSSetCreation)

// + (instancetype)set;
// + (instancetype)setWithObject:(ObjectType)object;
// + (instancetype)setWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)setWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)setWithSet:(NSSet<ObjectType> *)set;
// + (instancetype)setWithArray:(NSArray<ObjectType> *)array;

// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;

/* @end */





#ifndef _REWRITER_typedef_NSMutableSet
#define _REWRITER_typedef_NSMutableSet
typedef struct objc_object NSMutableSet;
typedef struct {} _objc_exc_NSMutableSet;
#endif

struct NSMutableSet_IMPL {
	struct NSSet_IMPL NSSet_IVARS;
};


// - (void)addObject:(ObjectType)object;
// - (void)removeObject:(ObjectType)object;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableSet<ObjectType> (NSExtendedMutableSet)

// - (void)addObjectsFromArray:(NSArray<ObjectType> *)array;
// - (void)intersectSet:(NSSet<ObjectType> *)otherSet;
// - (void)minusSet:(NSSet<ObjectType> *)otherSet;
// - (void)removeAllObjects;
// - (void)unionSet:(NSSet<ObjectType> *)otherSet;

// - (void)setSet:(NSSet<ObjectType> *)otherSet;

/* @end */


// @interface NSMutableSet<ObjectType> (NSMutableSetCreation)

// + (instancetype)setWithCapacity:(NSUInteger)numItems;

/* @end */





#ifndef _REWRITER_typedef_NSCountedSet
#define _REWRITER_typedef_NSCountedSet
typedef struct objc_object NSCountedSet;
typedef struct {} _objc_exc_NSCountedSet;
#endif

struct NSCountedSet_IMPL {
	struct NSMutableSet_IMPL NSMutableSet_IVARS;
	id _table;
	void *_reserved;
};


// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;

// - (NSUInteger)countForObject:(ObjectType)object;

// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (void)addObject:(ObjectType)object;
// - (void)removeObject:(ObjectType)object;

/* @end */

#pragma clang assume_nonnull end
// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableSet
#define _REWRITER_typedef_NSMutableSet
typedef struct objc_object NSMutableSet;
typedef struct {} _objc_exc_NSMutableSet;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif


typedef NSString * NSProgressKind __attribute__((swift_wrapper(struct)));
typedef NSString * NSProgressUserInfoKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSProgressFileOperationKind __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSProgress
#define _REWRITER_typedef_NSProgress
typedef struct objc_object NSProgress;
typedef struct {} _objc_exc_NSProgress;
#endif

struct NSProgress_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (nullable NSProgress *)currentProgress;





// + (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount;



// + (NSProgress *)discreteProgressWithTotalUnitCount:(int64_t)unitCount __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount parent:(NSProgress *)parent pendingUnitCount:(int64_t)portionOfParentTotalUnitCount __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (instancetype)initWithParent:(nullable NSProgress *)parentProgressOrNil userInfo:(nullable NSDictionary<NSProgressUserInfoKey, id> *)userInfoOrNil __attribute__((objc_designated_initializer));





// - (void)becomeCurrentWithPendingUnitCount:(int64_t)unitCount;



// - (void)performAsCurrentWithPendingUnitCount:(int64_t)unitCount usingBlock:(void (__attribute__((noescape)) ^)(void))work __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));



// - (void)resignCurrent;



// - (void)addChild:(NSProgress *)child withPendingUnitCount:(int64_t)inUnitCount __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property int64_t totalUnitCount;
// @property int64_t completedUnitCount;
// @property (null_resettable, copy) NSString *localizedDescription;
// @property (null_resettable, copy) NSString *localizedAdditionalDescription;



// @property (getter=isCancellable) BOOL cancellable;
// @property (getter=isPausable) BOOL pausable;



// @property (readonly, getter=isCancelled) BOOL cancelled;
// @property (readonly, getter=isPaused) BOOL paused;



// @property (nullable, copy) void (^cancellationHandler)(void);



// @property (nullable, copy) void (^pausingHandler)(void);



// @property (nullable, copy) void (^resumingHandler)(void) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setUserInfoObject:(nullable id)objectOrNil forKey:(NSProgressUserInfoKey)key;





// @property (readonly, getter=isIndeterminate) BOOL indeterminate;



// @property (readonly) double fractionCompleted;



// @property (readonly, getter=isFinished) BOOL finished;




// - (void)cancel;



// - (void)pause;



// - (void)resume __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSDictionary<NSProgressUserInfoKey, id> *userInfo;



// @property (nullable, copy) NSProgressKind kind;





// @property (nullable, copy) NSNumber *estimatedTimeRemaining __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));





// @property (nullable, copy) NSNumber *throughput __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));






// @property (nullable, copy) NSProgressFileOperationKind fileOperationKind __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (nullable, copy) NSURL *fileURL __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (nullable, copy) NSNumber *fileTotalCount __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));






// @property (nullable, copy) NSNumber *fileCompletedCount __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));
// - (void)publish __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (void)unpublish __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



typedef void (*NSProgressUnpublishingHandler)(void);
typedef _Nullable NSProgressUnpublishingHandler (*NSProgressPublishingHandler)(NSProgress *progress);



// + (id)addSubscriberForFileURL:(NSURL *)url withPublishingHandler:(NSProgressPublishingHandler)publishingHandler __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (void)removeSubscriber:(id)subscriber __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// @property (readonly, getter=isOld) BOOL old __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @protocol NSProgressReporting <NSObject>
// @property (readonly) NSProgress *progress;
/* @end */






extern "C" NSProgressUserInfoKey const NSProgressEstimatedTimeRemainingKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressUserInfoKey const NSProgressThroughputKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSProgressKind const NSProgressKindFile __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressUserInfoKey const NSProgressFileOperationKindKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindDownloading __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindDecompressingAfterDownloading __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindReceiving __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindCopying __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressUserInfoKey const NSProgressFileURLKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressUserInfoKey const NSProgressFileTotalCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSProgressUserInfoKey const NSProgressFileCompletedCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSProgressUserInfoKey const NSProgressFileAnimationImageKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSProgressUserInfoKey const NSProgressFileAnimationImageOriginalRectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern "C" NSProgressUserInfoKey const NSProgressFileIconKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end






typedef NSString *NSNotificationName __attribute__((swift_wrapper(struct)));

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


#pragma clang assume_nonnull begin




#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif

struct NSNotification_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSNotificationName name;
// @property (nullable, readonly, retain) id object;
// @property (nullable, readonly, copy) NSDictionary *userInfo;

// - (instancetype)initWithName:(NSNotificationName)name object:(nullable id)object userInfo:(nullable NSDictionary *)userInfo __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSNotification (NSNotificationCreation)

// + (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject;
// + (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

// - (instancetype)init ;

/* @end */





#ifndef _REWRITER_typedef_NSNotificationCenter
#define _REWRITER_typedef_NSNotificationCenter
typedef struct objc_object NSNotificationCenter;
typedef struct {} _objc_exc_NSNotificationCenter;
#endif

struct NSNotificationCenter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
	void *_callback;
	void *_pad[11];
};


@property (class, readonly, strong) NSNotificationCenter *defaultCenter;

// - (void)addObserver:(id)observer selector:(SEL)aSelector name:(nullable NSNotificationName)aName object:(nullable id)anObject;

// - (void)postNotification:(NSNotification *)notification;
// - (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject;
// - (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

// - (void)removeObserver:(id)observer;
// - (void)removeObserver:(id)observer name:(nullable NSNotificationName)aName object:(nullable id)anObject;

// - (id <NSObject>)addObserverForName:(nullable NSNotificationName)name object:(nullable id)obj queue:(nullable NSOperationQueue *)queue usingBlock:(void (^)(NSNotification *note))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif


#pragma clang assume_nonnull begin




#ifndef _REWRITER_typedef_NSBundle
#define _REWRITER_typedef_NSBundle
typedef struct objc_object NSBundle;
typedef struct {} _objc_exc_NSBundle;
#endif

struct NSBundle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _flags;
	id _cfBundle;
	NSUInteger _reserved2;
	Class _principalClass;
	id _initialPath;
	id _resolvedPath;
	NSString *_firstClassName;
};



@property (class, readonly, strong) NSBundle *mainBundle;

// + (nullable instancetype)bundleWithPath:(NSString *)path;
// - (nullable instancetype)initWithPath:(NSString *)path __attribute__((objc_designated_initializer));

// + (nullable instancetype)bundleWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSBundle *)bundleForClass:(Class)aClass;
// + (nullable NSBundle *)bundleWithIdentifier:(NSString *)identifier;

@property (class, readonly, copy) NSArray<NSBundle *> *allBundles;
@property (class, readonly, copy) NSArray<NSBundle *> *allFrameworks;


// - (BOOL)load;
// @property (readonly, getter=isLoaded) BOOL loaded;
// - (BOOL)unload;

// - (BOOL)preflightAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)loadAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSURL *bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *resourceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *executableURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForAuxiliaryExecutable:(NSString *)executableName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSURL *privateFrameworksURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *sharedFrameworksURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *sharedSupportURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *builtInPlugInsURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSURL *appStoreReceiptURL __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *bundlePath;
// @property (nullable, readonly, copy) NSString *resourcePath;
// @property (nullable, readonly, copy) NSString *executablePath;
// - (nullable NSString *)pathForAuxiliaryExecutable:(NSString *)executableName;

// @property (nullable, readonly, copy) NSString *privateFrameworksPath;
// @property (nullable, readonly, copy) NSString *sharedFrameworksPath;
// @property (nullable, readonly, copy) NSString *sharedSupportPath;
// @property (nullable, readonly, copy) NSString *builtInPlugInsPath;



// + (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;
// + (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;

// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext;
// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;

// - (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
// - (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;


// - (NSString *)localizedStringForKey:(NSString *)key value:(nullable NSString *)value table:(nullable NSString *)tableName __attribute__ ((format_arg(1)));


// @property (nullable, readonly, copy) NSString *bundleIdentifier;
// @property (nullable, readonly, copy) NSDictionary<NSString *, id> *infoDictionary;
// @property (nullable, readonly, copy) NSDictionary<NSString *, id> *localizedInfoDictionary;
// - (nullable id)objectForInfoDictionaryKey:(NSString *)key;
// - (nullable Class)classNamed:(NSString *)className;
// @property (nullable, readonly) Class principalClass;


// @property (readonly, copy) NSArray<NSString *> *preferredLocalizations;

// @property (readonly, copy) NSArray<NSString *> *localizations;
// @property (nullable, readonly, copy) NSString *developmentLocalization;

// + (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray;
// + (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray forPreferences:(nullable NSArray<NSString *> *)preferencesArray;


enum {
    NSBundleExecutableArchitectureI386 = 0x00000007,
    NSBundleExecutableArchitecturePPC = 0x00000012,
    NSBundleExecutableArchitectureX86_64 = 0x01000007,
    NSBundleExecutableArchitecturePPC64 = 0x01000012
};

// @property (nullable, readonly, copy) NSArray<NSNumber *> *executableArchitectures __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSString (NSBundleExtensionMethods)



// - (NSString *)variantFittingPresentationWidth:(NSInteger)width __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSNotificationName const NSBundleDidLoadNotification;
extern "C" NSString * const NSLoadedClasses;
__attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)))

#ifndef _REWRITER_typedef_NSBundleResourceRequest
#define _REWRITER_typedef_NSBundleResourceRequest
typedef struct objc_object NSBundleResourceRequest;
typedef struct {} _objc_exc_NSBundleResourceRequest;
#endif

struct NSBundleResourceRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




// - (instancetype)initWithTags:(NSSet<NSString *> *)tags;
// - (instancetype)initWithTags:(NSSet<NSString *> *)tags bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));






// @property double loadingPriority;




// @property (readonly, copy) NSSet<NSString *> *tags;




// @property (readonly, strong) NSBundle *bundle;
// - (void)beginAccessingResourcesWithCompletionHandler:(void (^)(NSError * _Nullable error))completionHandler;






// - (void)conditionallyBeginAccessingResourcesWithCompletionHandler:(void (^)(BOOL resourcesAvailable))completionHandler;




// - (void)endAccessingResources;




// @property (readonly, strong) NSProgress *progress;

/* @end */


// @interface NSBundle (NSBundleResourceRequestAdditions)







// - (void)setPreservationPriority:(double)priority forTags:(NSSet<NSString *> *)tags __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
// - (double)preservationPriorityForTag:(NSString *)tag __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */

extern "C" NSNotificationName const NSBundleResourceRequestLowDiskSpaceNotification __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));



extern "C" double const NSBundleResourceRequestLoadingPriorityUrgent __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
#pragma clang assume_nonnull end







enum {
    NS_UnknownByteOrder = CFByteOrderUnknown,
    NS_LittleEndian = CFByteOrderLittleEndian,
    NS_BigEndian = CFByteOrderBigEndian
};

static __inline__ __attribute__((always_inline)) long NSHostByteOrder(void) {
    return CFByteOrderGetCurrent();
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapShort(unsigned short inv) {
    return CFSwapInt16(inv);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapInt(unsigned int inv) {
    return CFSwapInt32(inv);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLong(unsigned long inv) {

    return CFSwapInt64(inv);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLongLong(unsigned long long inv) {
    return CFSwapInt64(inv);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapBigShortToHost(unsigned short x) {
    return CFSwapInt16BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapBigIntToHost(unsigned int x) {
    return CFSwapInt32BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapBigLongToHost(unsigned long x) {

    return CFSwapInt64BigToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapBigLongLongToHost(unsigned long long x) {
    return CFSwapInt64BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToBig(unsigned short x) {
    return CFSwapInt16HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToBig(unsigned int x) {
    return CFSwapInt32HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToBig(unsigned long x) {

    return CFSwapInt64HostToBig(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToBig(unsigned long long x) {
    return CFSwapInt64HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapLittleShortToHost(unsigned short x) {
    return CFSwapInt16LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapLittleIntToHost(unsigned int x) {
    return CFSwapInt32LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLittleLongToHost(unsigned long x) {

    return CFSwapInt64LittleToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLittleLongLongToHost(unsigned long long x) {
    return CFSwapInt64LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToLittle(unsigned short x) {
    return CFSwapInt16HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToLittle(unsigned int x) {
    return CFSwapInt32HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToLittle(unsigned long x) {

    return CFSwapInt64HostToLittle(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToLittle(unsigned long long x) {
    return CFSwapInt64HostToLittle(x);
}


typedef struct {unsigned int v;} NSSwappedFloat;
typedef struct {unsigned long long v;} NSSwappedDouble;

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSConvertHostFloatToSwapped(float x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->sf;
}

static __inline__ __attribute__((always_inline)) float NSConvertSwappedFloatToHost(NSSwappedFloat x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSConvertHostDoubleToSwapped(double x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->sd;
}

static __inline__ __attribute__((always_inline)) double NSConvertSwappedDoubleToHost(NSSwappedDouble x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapFloat(NSSwappedFloat x) {
    x.v = NSSwapInt(x.v);
    return x;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapDouble(NSSwappedDouble x) {
    x.v = NSSwapLongLong(x.v);
    return x;
}
static __inline__ __attribute__((always_inline)) double NSSwapBigDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(NSSwapDouble(x));
}

static __inline__ __attribute__((always_inline)) float NSSwapBigFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(NSSwapFloat(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToBig(double x) {
    return NSSwapDouble(NSConvertHostDoubleToSwapped(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToBig(float x) {
    return NSSwapFloat(NSConvertHostFloatToSwapped(x));
}

static __inline__ __attribute__((always_inline)) double NSSwapLittleDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(x);
}

static __inline__ __attribute__((always_inline)) float NSSwapLittleFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToLittle(double x) {
    return NSConvertHostDoubleToSwapped(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToLittle(float x) {
    return NSConvertHostFloatToSwapped(x);
}













// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

extern "C" NSNotificationName const NSSystemClockDidChangeNotification __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef double NSTimeInterval;




#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

struct NSDate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSTimeInterval timeIntervalSinceReferenceDate;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSDate (NSExtendedDate)

// - (NSTimeInterval)timeIntervalSinceDate:(NSDate *)anotherDate;
// @property (readonly) NSTimeInterval timeIntervalSinceNow;
// @property (readonly) NSTimeInterval timeIntervalSince1970;

// - (id)addTimeInterval:(NSTimeInterval)seconds __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use dateByAddingTimeInterval instead")));
// - (instancetype)dateByAddingTimeInterval:(NSTimeInterval)ti __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSDate *)earlierDate:(NSDate *)anotherDate;
// - (NSDate *)laterDate:(NSDate *)anotherDate;
// - (NSComparisonResult)compare:(NSDate *)other;
// - (BOOL)isEqualToDate:(NSDate *)otherDate;

// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;

@property (class, readonly) NSTimeInterval timeIntervalSinceReferenceDate;

/* @end */


// @interface NSDate (NSDateCreation)

// + (instancetype)date;
// + (instancetype)dateWithTimeIntervalSinceNow:(NSTimeInterval)secs;
// + (instancetype)dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti;
// + (instancetype)dateWithTimeIntervalSince1970:(NSTimeInterval)secs;
// + (instancetype)dateWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;

@property (class, readonly, copy) NSDate *distantFuture;
@property (class, readonly, copy) NSDate *distantPast;

@property (class, readonly, copy) NSDate *now __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

// - (instancetype)initWithTimeIntervalSinceNow:(NSTimeInterval)secs;
// - (instancetype)initWithTimeIntervalSince1970:(NSTimeInterval)secs;
// - (instancetype)initWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;

/* @end */

#pragma clang assume_nonnull end



// @class NSDateComponents;
#ifndef _REWRITER_typedef_NSDateComponents
#define _REWRITER_typedef_NSDateComponents
typedef struct objc_object NSDateComponents;
typedef struct {} _objc_exc_NSDateComponents;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin
typedef NSString * NSCalendarIdentifier __attribute__((swift_wrapper(struct)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierGregorian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierBuddhist __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierChinese __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierCoptic __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteMihret __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteAlem __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierHebrew __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierISO8601 __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIndian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamic __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicCivil __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierJapanese __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierPersian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierRepublicOfChina __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicTabular __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicUmmAlQura __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSCalendarUnit; enum {
        NSCalendarUnitEra = kCFCalendarUnitEra,
        NSCalendarUnitYear = kCFCalendarUnitYear,
        NSCalendarUnitMonth = kCFCalendarUnitMonth,
        NSCalendarUnitDay = kCFCalendarUnitDay,
        NSCalendarUnitHour = kCFCalendarUnitHour,
        NSCalendarUnitMinute = kCFCalendarUnitMinute,
        NSCalendarUnitSecond = kCFCalendarUnitSecond,
        NSCalendarUnitWeekday = kCFCalendarUnitWeekday,
        NSCalendarUnitWeekdayOrdinal = kCFCalendarUnitWeekdayOrdinal,
        NSCalendarUnitQuarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitQuarter,
        NSCalendarUnitWeekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitWeekOfMonth,
        NSCalendarUnitWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitWeekOfYear,
        NSCalendarUnitYearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitYearForWeekOfYear,
        NSCalendarUnitNanosecond __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 15),
        NSCalendarUnitCalendar __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 20),
        NSCalendarUnitTimeZone __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 21),

 NSEraCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitEra"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitEra"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitEra"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitEra"))) = NSCalendarUnitEra,
 NSYearCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitYear"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitYear"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitYear"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitYear"))) = NSCalendarUnitYear,
 NSMonthCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitMonth"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitMonth"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitMonth"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitMonth"))) = NSCalendarUnitMonth,
 NSDayCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitDay"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitDay"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitDay"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitDay"))) = NSCalendarUnitDay,
 NSHourCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitHour"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitHour"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitHour"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitHour"))) = NSCalendarUnitHour,
 NSMinuteCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitMinute"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitMinute"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitMinute"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitMinute"))) = NSCalendarUnitMinute,
 NSSecondCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitSecond"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitSecond"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitSecond"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitSecond"))) = NSCalendarUnitSecond,
 NSWeekCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) = kCFCalendarUnitWeek,
 NSWeekdayCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitWeekday"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitWeekday"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitWeekday"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitWeekday"))) = NSCalendarUnitWeekday,
 NSWeekdayOrdinalCalendarUnit __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarUnitWeekdayOrdinal"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarUnitWeekdayOrdinal"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitWeekdayOrdinal"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitWeekdayOrdinal"))) = NSCalendarUnitWeekdayOrdinal,
 NSQuarterCalendarUnit __attribute__((availability(macos,introduced=10.6,deprecated=10.10,replacement="NSCalendarUnitQuarter"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarUnitQuarter"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitQuarter"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitQuarter"))) = NSCalendarUnitQuarter,
 NSWeekOfMonthCalendarUnit __attribute__((availability(macos,introduced=10.7,deprecated=10.10,replacement="NSCalendarUnitWeekOfMonth"))) __attribute__((availability(ios,introduced=5.0,deprecated=8.0,replacement="NSCalendarUnitWeekOfMonth"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitWeekOfMonth"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitWeekOfMonth"))) = NSCalendarUnitWeekOfMonth,
 NSWeekOfYearCalendarUnit __attribute__((availability(macos,introduced=10.7,deprecated=10.10,replacement="NSCalendarUnitWeekOfYear"))) __attribute__((availability(ios,introduced=5.0,deprecated=8.0,replacement="NSCalendarUnitWeekOfYear"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitWeekOfYear"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitWeekOfYear"))) = NSCalendarUnitWeekOfYear,
 NSYearForWeekOfYearCalendarUnit __attribute__((availability(macos,introduced=10.7,deprecated=10.10,replacement="NSCalendarUnitYearForWeekOfYear"))) __attribute__((availability(ios,introduced=5.0,deprecated=8.0,replacement="NSCalendarUnitYearForWeekOfYear"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitYearForWeekOfYear"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitYearForWeekOfYear"))) = NSCalendarUnitYearForWeekOfYear,
 NSCalendarCalendarUnit __attribute__((availability(macos,introduced=10.7,deprecated=10.10,replacement="NSCalendarUnitCalendar"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarUnitCalendar"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitCalendar"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitCalendar"))) = NSCalendarUnitCalendar,
 NSTimeZoneCalendarUnit __attribute__((availability(macos,introduced=10.7,deprecated=10.10,replacement="NSCalendarUnitTimeZone"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarUnitTimeZone"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarUnitTimeZone"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarUnitTimeZone"))) = NSCalendarUnitTimeZone,
};

typedef NSUInteger NSCalendarOptions; enum {
 NSCalendarWrapComponents = (1UL << 0),

 NSCalendarMatchStrictly __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 1),
 NSCalendarSearchBackwards __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 2),

 NSCalendarMatchPreviousTimePreservingSmallerUnits __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 8),
 NSCalendarMatchNextTimePreservingSmallerUnits __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 9),
 NSCalendarMatchNextTime __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 10),

 NSCalendarMatchFirst __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 12),
 NSCalendarMatchLast __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 13)
};

enum {
 NSWrapCalendarComponents __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarWrapComponents"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarWrapComponents"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarWrapComponents"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarWrapComponents"))) = NSCalendarWrapComponents,
};



#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

struct NSCalendar_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, copy) NSCalendar *currentCalendar;
@property (class, readonly, strong) NSCalendar *autoupdatingCurrentCalendar __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// + (nullable NSCalendar *)calendarWithIdentifier:(NSCalendarIdentifier)calendarIdentifierConstant __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (nullable id)initWithCalendarIdentifier:(NSCalendarIdentifier)ident __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSCalendarIdentifier calendarIdentifier;
// @property (nullable, copy) NSLocale *locale;
// @property (copy) NSTimeZone *timeZone;
// @property NSUInteger firstWeekday;
// @property NSUInteger minimumDaysInFirstWeek;



// @property (readonly, copy) NSArray<NSString *> *eraSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *monthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *weekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *AMSymbol __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *PMSymbol __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (NSRange)minimumRangeOfUnit:(NSCalendarUnit)unit;
// - (NSRange)maximumRangeOfUnit:(NSCalendarUnit)unit;

// - (NSRange)rangeOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;
// - (NSUInteger)ordinalityOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;

// - (BOOL)rangeOfUnit:(NSCalendarUnit)unit startDate:(NSDate * _Nullable * _Nullable)datep interval:(nullable NSTimeInterval *)tip forDate:(NSDate *)date __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSDate *)dateFromComponents:(NSDateComponents *)comps;
// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)date;

// - (nullable NSDate *)dateByAddingComponents:(NSDateComponents *)comps toDate:(NSDate *)date options:(NSCalendarOptions)opts;

// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)startingDate toDate:(NSDate *)resultDate options:(NSCalendarOptions)opts;






// - (void)getEra:(out nullable NSInteger *)eraValuePointer year:(out nullable NSInteger *)yearValuePointer month:(out nullable NSInteger *)monthValuePointer day:(out nullable NSInteger *)dayValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)getEra:(out nullable NSInteger *)eraValuePointer yearForWeekOfYear:(out nullable NSInteger *)yearValuePointer weekOfYear:(out nullable NSInteger *)weekValuePointer weekday:(out nullable NSInteger *)weekdayValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)getHour:(out nullable NSInteger *)hourValuePointer minute:(out nullable NSInteger *)minuteValuePointer second:(out nullable NSInteger *)secondValuePointer nanosecond:(out nullable NSInteger *)nanosecondValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSInteger)component:(NSCalendarUnit)unit fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateWithEra:(NSInteger)eraValue year:(NSInteger)yearValue month:(NSInteger)monthValue day:(NSInteger)dayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateWithEra:(NSInteger)eraValue yearForWeekOfYear:(NSInteger)yearValue weekOfYear:(NSInteger)weekValue weekday:(NSInteger)weekdayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSDate *)startOfDayForDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSDateComponents *)componentsInTimeZone:(NSTimeZone *)timezone fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSComparisonResult)compareDate:(NSDate *)date1 toDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDate:(NSDate *)date1 equalToDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDate:(NSDate *)date1 inSameDayAsDate:(NSDate *)date2 __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInToday:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInYesterday:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInTomorrow:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInWeekend:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (BOOL)rangeOfWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip containingDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)nextWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip options:(NSCalendarOptions)options afterDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDateComponents:(NSDateComponents *)startingDateComp toDateComponents:(NSDateComponents *)resultDateComp options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateByAddingUnit:(NSCalendarUnit)unit value:(NSInteger)value toDate:(NSDate *)date options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateDatesStartingAfterDate:(NSDate *)start matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDate * _Nullable date, BOOL exactMatch, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingUnit:(NSCalendarUnit)unit value:(NSInteger)value options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingHour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDate *)dateBySettingUnit:(NSCalendarUnit)unit value:(NSInteger)v ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)dateBySettingHour:(NSInteger)h minute:(NSInteger)m second:(NSInteger)s ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (BOOL)date:(NSDate *)date matchesComponents:(NSDateComponents *)components __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

extern "C" NSNotificationName const NSCalendarDayChangedNotification __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
enum {
 NSDateComponentUndefined = 9223372036854775807L,

 NSUndefinedDateComponent __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSDateComponentUndefined"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSDateComponentUndefined"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSDateComponentUndefined"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSDateComponentUndefined"))) = NSDateComponentUndefined
};



#ifndef _REWRITER_typedef_NSDateComponents
#define _REWRITER_typedef_NSDateComponents
typedef struct objc_object NSDateComponents;
typedef struct {} _objc_exc_NSDateComponents;
#endif

struct NSDateComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nullable, copy) NSCalendar *calendar __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSTimeZone *timeZone __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger era;
// @property NSInteger year;
// @property NSInteger month;
// @property NSInteger day;
// @property NSInteger hour;
// @property NSInteger minute;
// @property NSInteger second;
// @property NSInteger nanosecond __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekday;
// @property NSInteger weekdayOrdinal;
// @property NSInteger quarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger yearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isLeapMonth) BOOL leapMonth __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSDate *date __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSInteger)week __attribute__((availability(macos,introduced=10.4,deprecated=10.9,message="Use -weekOfMonth or -weekOfYear, depending on which you mean"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use -weekOfMonth or -weekOfYear, depending on which you mean"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -weekOfMonth or -weekOfYear, depending on which you mean"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -weekOfMonth or -weekOfYear, depending on which you mean")));
// - (void)setWeek:(NSInteger)v __attribute__((availability(macos,introduced=10.4,deprecated=10.9,message="Use -setWeekOfMonth: or -setWeekOfYear:, depending on which you mean"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use -setWeekOfMonth: or -setWeekOfYear:, depending on which you mean"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -setWeekOfMonth: or -setWeekOfYear:, depending on which you mean"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -setWeekOfMonth: or -setWeekOfYear:, depending on which you mean")));





// - (void)setValue:(NSInteger)value forComponent:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (NSInteger)valueForComponent:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isValidDate, readonly) BOOL validDate __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)isValidDateInCalendar:(NSCalendar *)calendar __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */

#pragma clang assume_nonnull end
// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin

enum {
    NSOpenStepUnicodeReservedBase = 0xF400
};


#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

struct NSCharacterSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (readonly, class, copy) NSCharacterSet *controlCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceAndNewlineCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decimalDigitCharacterSet;
@property (readonly, class, copy) NSCharacterSet *letterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *lowercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *uppercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *nonBaseCharacterSet;
@property (readonly, class, copy) NSCharacterSet *alphanumericCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decomposableCharacterSet;
@property (readonly, class, copy) NSCharacterSet *illegalCharacterSet;
@property (readonly, class, copy) NSCharacterSet *punctuationCharacterSet;
@property (readonly, class, copy) NSCharacterSet *capitalizedLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *symbolCharacterSet;
@property (readonly, class, copy) NSCharacterSet *newlineCharacterSet __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSCharacterSet *)characterSetWithRange:(NSRange)aRange;
// + (NSCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
// + (NSCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
// + (nullable NSCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

// - (instancetype) initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (BOOL)characterIsMember:(unichar)aCharacter;
// @property (readonly, copy) NSData *bitmapRepresentation;
// @property (readonly, copy) NSCharacterSet *invertedSet;


// - (BOOL)longCharacterIsMember:(UTF32Char)theLongChar;

// - (BOOL)isSupersetOfSet:(NSCharacterSet *)theOtherSet;
// - (BOOL)hasMemberInPlane:(uint8_t)thePlane;
/* @end */



#ifndef _REWRITER_typedef_NSMutableCharacterSet
#define _REWRITER_typedef_NSMutableCharacterSet
typedef struct objc_object NSMutableCharacterSet;
typedef struct {} _objc_exc_NSMutableCharacterSet;
#endif

struct NSMutableCharacterSet_IMPL {
	struct NSCharacterSet_IMPL NSCharacterSet_IVARS;
};


// - (void)addCharactersInRange:(NSRange)aRange;
// - (void)removeCharactersInRange:(NSRange)aRange;
// - (void)addCharactersInString:(NSString *)aString;
// - (void)removeCharactersInString:(NSString *)aString;
// - (void)formUnionWithCharacterSet:(NSCharacterSet *)otherSet;
// - (void)formIntersectionWithCharacterSet:(NSCharacterSet *)otherSet;
// - (void)invert;

// + (NSMutableCharacterSet *)controlCharacterSet;
// + (NSMutableCharacterSet *)whitespaceCharacterSet;
// + (NSMutableCharacterSet *)whitespaceAndNewlineCharacterSet;
// + (NSMutableCharacterSet *)decimalDigitCharacterSet;
// + (NSMutableCharacterSet *)letterCharacterSet;
// + (NSMutableCharacterSet *)lowercaseLetterCharacterSet;
// + (NSMutableCharacterSet *)uppercaseLetterCharacterSet;
// + (NSMutableCharacterSet *)nonBaseCharacterSet;
// + (NSMutableCharacterSet *)alphanumericCharacterSet;
// + (NSMutableCharacterSet *)decomposableCharacterSet;
// + (NSMutableCharacterSet *)illegalCharacterSet;
// + (NSMutableCharacterSet *)punctuationCharacterSet;
// + (NSMutableCharacterSet *)capitalizedLetterCharacterSet;
// + (NSMutableCharacterSet *)symbolCharacterSet;
// + (NSMutableCharacterSet *)newlineCharacterSet __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSMutableCharacterSet *)characterSetWithRange:(NSRange)aRange;
// + (NSMutableCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
// + (NSMutableCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
// + (nullable NSMutableCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin




typedef NSInteger NSDecodingFailurePolicy; enum {

    NSDecodingFailurePolicyRaiseException,


    NSDecodingFailurePolicySetErrorAndReturn,
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSCoder
#define _REWRITER_typedef_NSCoder
typedef struct objc_object NSCoder;
typedef struct {} _objc_exc_NSCoder;
#endif

struct NSCoder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)encodeValueOfObjCType:(const char *)type at:(const void *)addr;
// - (void)encodeDataObject:(NSData *)data;
// - (nullable NSData *)decodeDataObject;
// - (void)decodeValueOfObjCType:(const char *)type at:(void *)data size:(NSUInteger)size __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSInteger)versionForClassName:(NSString *)className;

/* @end */


// @interface NSCoder (NSExtendedCoder)

// - (void)encodeObject:(nullable id)object;
// - (void)encodeRootObject:(id)rootObject;
// - (void)encodeBycopyObject:(nullable id)anObject;
// - (void)encodeByrefObject:(nullable id)anObject;
// - (void)encodeConditionalObject:(nullable id)object;
// - (void)encodeValuesOfObjCTypes:(const char *)types, ...;
// - (void)encodeArrayOfObjCType:(const char *)type count:(NSUInteger)count at:(const void *)array;
// - (void)encodeBytes:(nullable const void *)byteaddr length:(NSUInteger)length;

// - (nullable id)decodeObject;
// - (nullable id)decodeTopLevelObjectAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObject() throws' instead")));
// - (void)decodeValuesOfObjCTypes:(const char *)types, ...;
// - (void)decodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(void *)array;
// - (nullable void *)decodeBytesWithReturnedLength:(NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));






// - (void)setObjectZone:(nullable NSZone *)zone ;
// - (nullable NSZone *)objectZone ;

// @property (readonly) unsigned int systemVersion;

// @property (readonly) BOOL allowsKeyedCoding;

// - (void)encodeObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeConditionalObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeBool:(BOOL)value forKey:(NSString *)key;
// - (void)encodeInt:(int)value forKey:(NSString *)key;
// - (void)encodeInt32:(int32_t)value forKey:(NSString *)key;
// - (void)encodeInt64:(int64_t)value forKey:(NSString *)key;
// - (void)encodeFloat:(float)value forKey:(NSString *)key;
// - (void)encodeDouble:(double)value forKey:(NSString *)key;
// - (void)encodeBytes:(nullable const uint8_t *)bytes length:(NSUInteger)length forKey:(NSString *)key;

// - (BOOL)containsValueForKey:(NSString *)key;
// - (nullable id)decodeObjectForKey:(NSString *)key;
// - (nullable id)decodeTopLevelObjectForKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectForKey(_:) throws' instead")));
// - (BOOL)decodeBoolForKey:(NSString *)key;
// - (int)decodeIntForKey:(NSString *)key;
// - (int32_t)decodeInt32ForKey:(NSString *)key;
// - (int64_t)decodeInt64ForKey:(NSString *)key;
// - (float)decodeFloatForKey:(NSString *)key;
// - (double)decodeDoubleForKey:(NSString *)key;
// - (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));

// - (void)encodeInteger:(NSInteger)value forKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSInteger)decodeIntegerForKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable id)decodeObjectOfClass:(Class)aClass forKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable id)decodeTopLevelObjectOfClass:(Class)aClass forKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObjectOfClass(_:,forKey:) throws' instead")));


// - (nullable id)decodeObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((swift_private));
// - (nullable id)decodeTopLevelObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectOfClasses(_:,forKey:) throws' instead")));


// - (nullable id)decodePropertyListForKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSSet<Class> *allowedClasses __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)failWithError:(NSError *)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property (readonly) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSError *error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSCoder(NSDeprecated)


// - (void)decodeValueOfObjCType:(const char *)type at:(void *)data __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="decodeValueOfObjCType:at:size:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="decodeValueOfObjCType:at:size:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="decodeValueOfObjCType:at:size:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="decodeValueOfObjCType:at:size:")));

/* @end */

#pragma clang assume_nonnull end







// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSDataReadingOptions; enum {
    NSDataReadingMappedIfSafe = 1UL << 0,
    NSDataReadingUncached = 1UL << 1,
    NSDataReadingMappedAlways __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 3,


    NSDataReadingMapped __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="NSDataReadingMappedIfSafe"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="NSDataReadingMappedIfSafe"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="NSDataReadingMappedIfSafe"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="NSDataReadingMappedIfSafe"))) = NSDataReadingMappedIfSafe,
    NSMappedRead __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="NSDataReadingMapped"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="NSDataReadingMapped"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="NSDataReadingMapped"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="NSDataReadingMapped"))) = NSDataReadingMapped,
    NSUncachedRead __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="NSDataReadingUncached"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="NSDataReadingUncached"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="NSDataReadingUncached"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="NSDataReadingUncached"))) = NSDataReadingUncached
};

typedef NSUInteger NSDataWritingOptions; enum {
    NSDataWritingAtomic = 1UL << 0,
    NSDataWritingWithoutOverwriting __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 1,

    NSDataWritingFileProtectionNone __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 0x10000000,
    NSDataWritingFileProtectionComplete __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 0x20000000,
    NSDataWritingFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 0x30000000,
    NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 0x40000000,
    NSDataWritingFileProtectionMask __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 0xf0000000,


    NSAtomicWrite __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="NSDataWritingAtomic"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="NSDataWritingAtomic"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="NSDataWritingAtomic"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="NSDataWritingAtomic"))) = NSDataWritingAtomic
};




typedef NSUInteger NSDataSearchOptions; enum {
    NSDataSearchBackwards = 1UL << 0,
    NSDataSearchAnchored = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




typedef NSUInteger NSDataBase64EncodingOptions; enum {

    NSDataBase64Encoding64CharacterLineLength = 1UL << 0,
    NSDataBase64Encoding76CharacterLineLength = 1UL << 1,


    NSDataBase64EncodingEndLineWithCarriageReturn = 1UL << 4,
    NSDataBase64EncodingEndLineWithLineFeed = 1UL << 5,

} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSDataBase64DecodingOptions; enum {

    NSDataBase64DecodingIgnoreUnknownCharacters = 1UL << 0
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

struct NSData_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger length;





// @property (readonly) const void *bytes __attribute__((objc_returns_inner_pointer));

/* @end */


// @interface NSData (NSExtendedData)

// @property (readonly, copy) NSString *description;
// - (void)getBytes:(void *)buffer length:(NSUInteger)length;
// - (void)getBytes:(void *)buffer range:(NSRange)range;
// - (BOOL)isEqualToData:(NSData *)other;
// - (NSData *)subdataWithRange:(NSRange)range;
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;
// - (BOOL)writeToFile:(NSString *)path options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
// - (BOOL)writeToURL:(NSURL *)url options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
// - (NSRange)rangeOfData:(NSData *)dataToFind options:(NSDataSearchOptions)mask range:(NSRange)searchRange __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void) enumerateByteRangesUsingBlock:(void (__attribute__((noescape)) ^)(const void *bytes, NSRange byteRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSData (NSDataCreation)

// + (instancetype)data;
// + (instancetype)dataWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
// + (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
// + (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
// + (nullable instancetype)dataWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// + (nullable instancetype)dataWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// + (nullable instancetype)dataWithContentsOfFile:(NSString *)path;
// + (nullable instancetype)dataWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length deallocator:(nullable void (^)(void *bytes, NSUInteger length))deallocator __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path;
// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithData:(NSData *)data;
// + (instancetype)dataWithData:(NSData *)data;

/* @end */


// @interface NSData (NSDataBase64Encoding)



// - (nullable instancetype)initWithBase64EncodedString:(NSString *)base64String options:(NSDataBase64DecodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)base64EncodedStringWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithBase64EncodedData:(NSData *)base64Data options:(NSDataBase64DecodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSData *)base64EncodedDataWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




typedef NSInteger NSDataCompressionAlgorithm; enum {


    NSDataCompressionAlgorithmLZFSE = 0,



    NSDataCompressionAlgorithmLZ4,



    NSDataCompressionAlgorithmLZMA,



    NSDataCompressionAlgorithmZlib,

} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

// @interface NSData (NSDataCompression)



// - (nullable instancetype)decompressedDataUsingAlgorithm:(NSDataCompressionAlgorithm)algorithm error:(NSError **)error __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (nullable instancetype)compressedDataUsingAlgorithm:(NSDataCompressionAlgorithm)algorithm error:(NSError **)error __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */



// @interface NSData (NSDeprecated)

// - (void)getBytes:(void *)buffer __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead.")));
// + (nullable id)dataWithContentsOfMappedFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));
// - (nullable id)initWithContentsOfMappedFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));



// - (nullable id)initWithBase64Encoding:(NSString *)base64String __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use initWithBase64EncodedString instead")));
// - (NSString *)base64Encoding __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use base64EncodedStringWithOptions instead")));

/* @end */





#ifndef _REWRITER_typedef_NSMutableData
#define _REWRITER_typedef_NSMutableData
typedef struct objc_object NSMutableData;
typedef struct {} _objc_exc_NSMutableData;
#endif

struct NSMutableData_IMPL {
	struct NSData_IMPL NSData_IVARS;
};


// @property (readonly) void *mutableBytes __attribute__((objc_returns_inner_pointer));
// @property NSUInteger length;

/* @end */


// @interface NSMutableData (NSExtendedMutableData)

// - (void)appendBytes:(const void *)bytes length:(NSUInteger)length;
// - (void)appendData:(NSData *)other;
// - (void)increaseLengthBy:(NSUInteger)extraLength;
// - (void)replaceBytesInRange:(NSRange)range withBytes:(const void *)bytes;
// - (void)resetBytesInRange:(NSRange)range;
// - (void)setData:(NSData *)data;
// - (void)replaceBytesInRange:(NSRange)range withBytes:(nullable const void *)replacementBytes length:(NSUInteger)replacementLength;

/* @end */


// @interface NSMutableData (NSMutableDataCreation)

// + (nullable instancetype)dataWithCapacity:(NSUInteger)aNumItems;
// + (nullable instancetype)dataWithLength:(NSUInteger)length;
// - (nullable instancetype)initWithCapacity:(NSUInteger)capacity;
// - (nullable instancetype)initWithLength:(NSUInteger)length;

/* @end */


// @interface NSMutableData (NSMutableDataCompression)



// - (BOOL)decompressUsingAlgorithm:(NSDataCompressionAlgorithm)algorithm error:(NSError **)error __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (BOOL)compressUsingAlgorithm:(NSDataCompressionAlgorithm)algorithm error:(NSError **)error __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */




__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPurgeableData
#define _REWRITER_typedef_NSPurgeableData
typedef struct objc_object NSPurgeableData;
typedef struct {} _objc_exc_NSPurgeableData;
#endif

struct NSPurgeableData_IMPL {
	struct NSMutableData_IMPL NSMutableData_IVARS;
	NSUInteger _length;
	int32_t _accessCount;
	uint8_t _private[32];
	void *_reserved;
};


/* @end */

#pragma clang assume_nonnull end









#pragma clang assume_nonnull begin

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSDateInterval
#define _REWRITER_typedef_NSDateInterval
typedef struct objc_object NSDateInterval;
typedef struct {} _objc_exc_NSDateInterval;
#endif

struct NSDateInterval_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






// @property (readonly, copy) NSDate *startDate;
// @property (readonly, copy) NSDate *endDate;
// @property (readonly) NSTimeInterval duration;


// - (instancetype)init;

// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// - (instancetype)initWithStartDate:(NSDate *)startDate duration:(NSTimeInterval)duration __attribute__((objc_designated_initializer));


// - (instancetype)initWithStartDate:(NSDate *)startDate endDate:(NSDate *)endDate;
// - (NSComparisonResult)compare:(NSDateInterval *)dateInterval;

// - (BOOL)isEqualToDateInterval:(NSDateInterval *)dateInterval;
// - (BOOL)intersectsDateInterval:(NSDateInterval *)dateInterval;




// - (nullable NSDateInterval *)intersectionWithDateInterval:(NSDateInterval *)dateInterval;

// - (BOOL)containsDate:(NSDate *)date;

/* @end */

#pragma clang assume_nonnull end


















#pragma clang assume_nonnull begin

typedef NSString * NSAttributedStringKey __attribute__((swift_wrapper(struct)));

__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

struct NSAttributedString_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *string;
// - (NSDictionary<NSAttributedStringKey, id> *)attributesAtIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;

/* @end */


// @interface NSAttributedString (NSExtendedAttributedString)

// @property (readonly) NSUInteger length;
// - (nullable id)attribute:(NSAttributedStringKey)attrName atIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;
// - (NSAttributedString *)attributedSubstringFromRange:(NSRange)range;

// - (NSDictionary<NSAttributedStringKey, id> *)attributesAtIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;
// - (nullable id)attribute:(NSAttributedStringKey)attrName atIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;

// - (BOOL)isEqualToAttributedString:(NSAttributedString *)other;

// - (instancetype)initWithString:(NSString *)str;
// - (instancetype)initWithString:(NSString *)str attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs;
// - (instancetype)initWithAttributedString:(NSAttributedString *)attrStr;

typedef NSUInteger NSAttributedStringEnumerationOptions; enum {
  NSAttributedStringEnumerationReverse = (1UL << 1),
  NSAttributedStringEnumerationLongestEffectiveRangeNotRequired = (1UL << 20)
};

// - (void)enumerateAttributesInRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDictionary<NSAttributedStringKey, id> *attrs, NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateAttribute:(NSAttributedStringKey)attrName inRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id _Nullable value, NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMutableAttributedString
#define _REWRITER_typedef_NSMutableAttributedString
typedef struct objc_object NSMutableAttributedString;
typedef struct {} _objc_exc_NSMutableAttributedString;
#endif

struct NSMutableAttributedString_IMPL {
	struct NSAttributedString_IMPL NSAttributedString_IVARS;
};


// - (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)str;
// - (void)setAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs range:(NSRange)range;

/* @end */


// @interface NSMutableAttributedString (NSExtendedMutableAttributedString)

// @property (readonly, retain) NSMutableString *mutableString;

// - (void)addAttribute:(NSAttributedStringKey)name value:(id)value range:(NSRange)range;
// - (void)addAttributes:(NSDictionary<NSAttributedStringKey, id> *)attrs range:(NSRange)range;
// - (void)removeAttribute:(NSAttributedStringKey)name range:(NSRange)range;

// - (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString *)attrString;
// - (void)insertAttributedString:(NSAttributedString *)attrString atIndex:(NSUInteger)loc;
// - (void)appendAttributedString:(NSAttributedString *)attrString;
// - (void)deleteCharactersInRange:(NSRange)range;
// - (void)setAttributedString:(NSAttributedString *)attrString;

// - (void)beginEditing;
// - (void)endEditing;

/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger NSFormattingContext; enum {


    NSFormattingContextUnknown = 0,


    NSFormattingContextDynamic = 1,


    NSFormattingContextStandalone = 2,


    NSFormattingContextListItem = 3,


    NSFormattingContextBeginningOfSentence = 4,


    NSFormattingContextMiddleOfSentence = 5,

} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






typedef NSInteger NSFormattingUnitStyle; enum {
    NSFormattingUnitStyleShort = 1,
    NSFormattingUnitStyleMedium,
    NSFormattingUnitStyleLong,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSFormatter
#define _REWRITER_typedef_NSFormatter
typedef struct objc_object NSFormatter;
typedef struct {} _objc_exc_NSFormatter;
#endif

struct NSFormatter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable NSString *)stringForObjectValue:(nullable id)obj;

// - (nullable NSAttributedString *)attributedStringForObjectValue:(id)obj withDefaultAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs;

// - (nullable NSString *)editingStringForObjectValue:(id)obj;

// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

// - (BOOL)isPartialStringValid:(NSString *)partialString newEditingString:(NSString * _Nullable * _Nullable)newString errorDescription:(NSString * _Nullable * _Nullable)error;


// - (BOOL)isPartialStringValid:(NSString * _Nonnull * _Nonnull)partialStringPtr proposedSelectedRange:(nullable NSRangePointer)proposedSelRangePtr originalString:(NSString *)origString originalSelectedRange:(NSRange)origSelRange errorDescription:(NSString * _Nullable * _Nullable)error;

/* @end */

#pragma clang assume_nonnull end


// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

#ifndef _REWRITER_typedef_NSDateFormatter
#define _REWRITER_typedef_NSDateFormatter
typedef struct objc_object NSDateFormatter;
typedef struct {} _objc_exc_NSDateFormatter;
#endif

struct NSDateFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSMutableDictionary *_attributes;
	CFDateFormatterRef _formatter;
	NSUInteger _counter;
};


// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




// - (NSString *)stringFromDate:(NSDate *)date;
// - (nullable NSDate *)dateFromString:(NSString *)string;

typedef NSUInteger NSDateFormatterStyle; enum {
    NSDateFormatterNoStyle = kCFDateFormatterNoStyle,
    NSDateFormatterShortStyle = kCFDateFormatterShortStyle,
    NSDateFormatterMediumStyle = kCFDateFormatterMediumStyle,
    NSDateFormatterLongStyle = kCFDateFormatterLongStyle,
    NSDateFormatterFullStyle = kCFDateFormatterFullStyle
};

typedef NSUInteger NSDateFormatterBehavior; enum {
    NSDateFormatterBehaviorDefault = 0,



    NSDateFormatterBehavior10_4 = 1040,
};


// + (NSString *)localizedStringFromDate:(NSDate *)date dateStyle:(NSDateFormatterStyle)dstyle timeStyle:(NSDateFormatterStyle)tstyle __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (nullable NSString *)dateFormatFromTemplate:(NSString *)tmplate options:(NSUInteger)opts locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



@property (class) NSDateFormatterBehavior defaultFormatterBehavior;
// - (void) setLocalizedDateFormatFromTemplate:(NSString *)dateFormatTemplate __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (null_resettable, copy) NSString *dateFormat;
// @property NSDateFormatterStyle dateStyle;
// @property NSDateFormatterStyle timeStyle;
// @property (null_resettable, copy) NSLocale *locale;
// @property BOOL generatesCalendarDates;
// @property NSDateFormatterBehavior formatterBehavior;
// @property (null_resettable, copy) NSTimeZone *timeZone;
// @property (null_resettable, copy) NSCalendar *calendar;
// @property (getter=isLenient) BOOL lenient;
// @property (nullable, copy) NSDate *twoDigitStartDate;
// @property (nullable, copy) NSDate *defaultDate;
// @property (null_resettable, copy) NSArray<NSString *> *eraSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *monthSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *shortMonthSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *weekdaySymbols;
// @property (null_resettable, copy) NSArray<NSString *> *shortWeekdaySymbols;
// @property (null_resettable, copy) NSString *AMSymbol;
// @property (null_resettable, copy) NSString *PMSymbol;
// @property (null_resettable, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSDate *gregorianStartDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property BOOL doesRelativeDateFormatting __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSDateIntervalFormatterStyle; enum {
    NSDateIntervalFormatterNoStyle = 0,
    NSDateIntervalFormatterShortStyle = 1,
    NSDateIntervalFormatterMediumStyle = 2,
    NSDateIntervalFormatterLongStyle = 3,
    NSDateIntervalFormatterFullStyle = 4
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSDateIntervalFormatter
#define _REWRITER_typedef_NSDateIntervalFormatter
typedef struct objc_object NSDateIntervalFormatter;
typedef struct {} _objc_exc_NSDateIntervalFormatter;
#endif

struct NSDateIntervalFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSLocale *_locale;
	NSCalendar *_calendar;
	NSTimeZone *_timeZone;
	NSString *_dateTemplate;
	NSString *_dateTemplateFromStyles;
	void *_formatter;
	NSDateIntervalFormatterStyle _dateStyle;
	NSDateIntervalFormatterStyle _timeStyle;
	BOOL _modified;
	BOOL _useTemplate;
	dispatch_semaphore_t _lock;
	void *_reserved[4];
};


// @property (null_resettable, copy) NSLocale *locale;
// @property (null_resettable, copy) NSCalendar *calendar;
// @property (null_resettable, copy) NSTimeZone *timeZone;
// @property (null_resettable, copy) NSString *dateTemplate;
// @property NSDateIntervalFormatterStyle dateStyle;
// @property NSDateIntervalFormatterStyle timeStyle;
// - (NSString *)stringFromDate:(NSDate *)fromDate toDate:(NSDate *)toDate;

// - (nullable NSString *)stringFromDateInterval:(NSDateInterval *)dateInterval __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif


typedef NSUInteger NSISO8601DateFormatOptions; enum {




    NSISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear,
    NSISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithMonth,

    NSISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithWeekOfYear,






    NSISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDay,

    NSISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime,
    NSISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTimeZone,

    NSISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithSpaceBetweenDateAndTime,
    NSISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDashSeparatorInDate,
    NSISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTime,
    NSISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTimeZone,
    NSISO8601DateFormatWithFractionalSeconds __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = kCFISO8601DateFormatWithFractionalSeconds,

    NSISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate,
    NSISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullTime,

    NSISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithInternetDateTime,
};

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSISO8601DateFormatter
#define _REWRITER_typedef_NSISO8601DateFormatter
typedef struct objc_object NSISO8601DateFormatter;
typedef struct {} _objc_exc_NSISO8601DateFormatter;
#endif

struct NSISO8601DateFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	CFDateFormatterRef _formatter;
	NSTimeZone *_timeZone;
	NSISO8601DateFormatOptions _formatOptions;
};



// @property (null_resettable, copy) NSTimeZone *timeZone;

// @property NSISO8601DateFormatOptions formatOptions;




// - (instancetype)init __attribute__((objc_designated_initializer));

// - (NSString *)stringFromDate:(NSDate *)date;
// - (nullable NSDate *)dateFromString:(NSString *)string;

// + (NSString *)stringFromDate:(NSDate *)date timeZone:(NSTimeZone *)timeZone formatOptions:(NSISO8601DateFormatOptions)formatOptions;

/* @end */

#pragma clang assume_nonnull end






// @class NSNumberFormatter;
#ifndef _REWRITER_typedef_NSNumberFormatter
#define _REWRITER_typedef_NSNumberFormatter
typedef struct objc_object NSNumberFormatter;
typedef struct {} _objc_exc_NSNumberFormatter;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger NSMassFormatterUnit; enum {
    NSMassFormatterUnitGram = 11,
    NSMassFormatterUnitKilogram = 14,
    NSMassFormatterUnitOunce = (6 << 8) + 1,
    NSMassFormatterUnitPound = (6 << 8) + 2,
    NSMassFormatterUnitStone = (6 << 8) + 3,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMassFormatter
#define _REWRITER_typedef_NSMassFormatter
typedef struct objc_object NSMassFormatter;
typedef struct {} _objc_exc_NSMassFormatter;
#endif

struct NSMassFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForPersonMassUse;
	void *_reserved[2];
};


// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;
// @property (getter = isForPersonMassUse) BOOL forPersonMassUse;


// - (NSString *)stringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


// - (NSString *)stringFromKilograms:(double)numberInKilograms;


// - (NSString *)unitStringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


// - (NSString *)unitStringFromKilograms:(double)numberInKilograms usedUnit:(nullable NSMassFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSInteger NSLengthFormatterUnit; enum {
    NSLengthFormatterUnitMillimeter = 8,
    NSLengthFormatterUnitCentimeter = 9,
    NSLengthFormatterUnitMeter = 11,
    NSLengthFormatterUnitKilometer = 14,
    NSLengthFormatterUnitInch = (5 << 8) + 1,
    NSLengthFormatterUnitFoot = (5 << 8) + 2,
    NSLengthFormatterUnitYard = (5 << 8) + 3,
    NSLengthFormatterUnitMile = (5 << 8) + 4,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLengthFormatter
#define _REWRITER_typedef_NSLengthFormatter
typedef struct objc_object NSLengthFormatter;
typedef struct {} _objc_exc_NSLengthFormatter;
#endif

struct NSLengthFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForPersonHeight;
	void *_reserved[2];
};

// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;

// @property (getter = isForPersonHeightUse) BOOL forPersonHeightUse;


// - (NSString *)stringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


// - (NSString *)stringFromMeters:(double)numberInMeters;


// - (NSString *)unitStringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


// - (NSString *)unitStringFromMeters:(double)numberInMeters usedUnit:(nullable NSLengthFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSInteger NSEnergyFormatterUnit; enum {
    NSEnergyFormatterUnitJoule = 11,
    NSEnergyFormatterUnitKilojoule = 14,
    NSEnergyFormatterUnitCalorie = (7 << 8) + 1,
    NSEnergyFormatterUnitKilocalorie = (7 << 8) + 2,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSEnergyFormatter
#define _REWRITER_typedef_NSEnergyFormatter
typedef struct objc_object NSEnergyFormatter;
typedef struct {} _objc_exc_NSEnergyFormatter;
#endif

struct NSEnergyFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForFoodEnergyUse;
	void *_reserved[2];
};

// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;
// @property (getter = isForFoodEnergyUse) BOOL forFoodEnergyUse;


// - (NSString *)stringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


// - (NSString *)stringFromJoules:(double)numberInJoules;


// - (NSString *)unitStringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


// - (NSString *)unitStringFromJoules:(double)numberInJoules usedUnit:(nullable NSEnergyFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end















#pragma clang assume_nonnull begin





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConverter
#define _REWRITER_typedef_NSUnitConverter
typedef struct objc_object NSUnitConverter;
typedef struct {} _objc_exc_NSUnitConverter;
#endif

struct NSUnitConverter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (double)baseUnitValueFromValue:(double)value;






// - (double)valueFromBaseUnitValue:(double)baseUnitValue;

/* @end */



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConverterLinear
#define _REWRITER_typedef_NSUnitConverterLinear
typedef struct objc_object NSUnitConverterLinear;
typedef struct {} _objc_exc_NSUnitConverterLinear;
#endif

struct NSUnitConverterLinear_IMPL {
	struct NSUnitConverter_IMPL NSUnitConverter_IVARS;
	double _coefficient;
	double _constant;
};

// @property (readonly) double coefficient;
// @property (readonly) double constant;

// - (instancetype)initWithCoefficient:(double)coefficient;

// - (instancetype)initWithCoefficient:(double)coefficient constant:(double)constant __attribute__((objc_designated_initializer));

/* @end */







__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnit
#define _REWRITER_typedef_NSUnit
typedef struct objc_object NSUnit;
typedef struct {} _objc_exc_NSUnit;
#endif

struct NSUnit_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_symbol;
};


// @property (readonly, copy) NSString *symbol;

// - (instancetype)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// + (instancetype)new __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (instancetype)initWithSymbol:(NSString *)symbol __attribute__((objc_designated_initializer));

/* @end */





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSDimension
#define _REWRITER_typedef_NSDimension
typedef struct objc_object NSDimension;
typedef struct {} _objc_exc_NSDimension;
#endif

struct NSDimension_IMPL {
	struct NSUnit_IMPL NSUnit_IVARS;
	NSUInteger _reserved;
	NSUnitConverter *_converter;
};


// @property (readonly, copy) NSUnitConverter *converter;

// - (instancetype)initWithSymbol:(NSString *)symbol converter:(NSUnitConverter *)converter __attribute__((objc_designated_initializer));






// + (instancetype)baseUnit;

/* @end */





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitAcceleration
#define _REWRITER_typedef_NSUnitAcceleration
typedef struct objc_object NSUnitAcceleration;
typedef struct {} _objc_exc_NSUnitAcceleration;
#endif

struct NSUnitAcceleration_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitAcceleration *metersPerSecondSquared;
@property (class, readonly, copy) NSUnitAcceleration *gravity;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitAngle
#define _REWRITER_typedef_NSUnitAngle
typedef struct objc_object NSUnitAngle;
typedef struct {} _objc_exc_NSUnitAngle;
#endif

struct NSUnitAngle_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitAngle *degrees;
@property (class, readonly, copy) NSUnitAngle *arcMinutes;
@property (class, readonly, copy) NSUnitAngle *arcSeconds;
@property (class, readonly, copy) NSUnitAngle *radians;
@property (class, readonly, copy) NSUnitAngle *gradians;
@property (class, readonly, copy) NSUnitAngle *revolutions;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitArea
#define _REWRITER_typedef_NSUnitArea
typedef struct objc_object NSUnitArea;
typedef struct {} _objc_exc_NSUnitArea;
#endif

struct NSUnitArea_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitArea *squareMegameters;
@property (class, readonly, copy) NSUnitArea *squareKilometers;
@property (class, readonly, copy) NSUnitArea *squareMeters;
@property (class, readonly, copy) NSUnitArea *squareCentimeters;
@property (class, readonly, copy) NSUnitArea *squareMillimeters;
@property (class, readonly, copy) NSUnitArea *squareMicrometers;
@property (class, readonly, copy) NSUnitArea *squareNanometers;
@property (class, readonly, copy) NSUnitArea *squareInches;
@property (class, readonly, copy) NSUnitArea *squareFeet;
@property (class, readonly, copy) NSUnitArea *squareYards;
@property (class, readonly, copy) NSUnitArea *squareMiles;
@property (class, readonly, copy) NSUnitArea *acres;
@property (class, readonly, copy) NSUnitArea *ares;
@property (class, readonly, copy) NSUnitArea *hectares;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConcentrationMass
#define _REWRITER_typedef_NSUnitConcentrationMass
typedef struct objc_object NSUnitConcentrationMass;
typedef struct {} _objc_exc_NSUnitConcentrationMass;
#endif

struct NSUnitConcentrationMass_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitConcentrationMass *gramsPerLiter;
@property (class, readonly, copy) NSUnitConcentrationMass *milligramsPerDeciliter;

// + (NSUnitConcentrationMass *)millimolesPerLiterWithGramsPerMole:(double)gramsPerMole;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitDispersion
#define _REWRITER_typedef_NSUnitDispersion
typedef struct objc_object NSUnitDispersion;
typedef struct {} _objc_exc_NSUnitDispersion;
#endif

struct NSUnitDispersion_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};




@property (class, readonly, copy) NSUnitDispersion *partsPerMillion;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitDuration
#define _REWRITER_typedef_NSUnitDuration
typedef struct objc_object NSUnitDuration;
typedef struct {} _objc_exc_NSUnitDuration;
#endif

struct NSUnitDuration_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitDuration *hours;
@property (class, readonly, copy) NSUnitDuration *minutes;
@property (class, readonly, copy) NSUnitDuration *seconds;
@property (class, readonly, copy) NSUnitDuration *milliseconds __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, copy) NSUnitDuration *microseconds __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, copy) NSUnitDuration *nanoseconds __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, copy) NSUnitDuration *picoseconds __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricCharge
#define _REWRITER_typedef_NSUnitElectricCharge
typedef struct objc_object NSUnitElectricCharge;
typedef struct {} _objc_exc_NSUnitElectricCharge;
#endif

struct NSUnitElectricCharge_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricCharge *coulombs;
@property (class, readonly, copy) NSUnitElectricCharge *megaampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *kiloampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *ampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *milliampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *microampereHours;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricCurrent
#define _REWRITER_typedef_NSUnitElectricCurrent
typedef struct objc_object NSUnitElectricCurrent;
typedef struct {} _objc_exc_NSUnitElectricCurrent;
#endif

struct NSUnitElectricCurrent_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricCurrent *megaamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *kiloamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *amperes;
@property (class, readonly, copy) NSUnitElectricCurrent *milliamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *microamperes;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricPotentialDifference
#define _REWRITER_typedef_NSUnitElectricPotentialDifference
typedef struct objc_object NSUnitElectricPotentialDifference;
typedef struct {} _objc_exc_NSUnitElectricPotentialDifference;
#endif

struct NSUnitElectricPotentialDifference_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricPotentialDifference *megavolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *kilovolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *volts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *millivolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *microvolts;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricResistance
#define _REWRITER_typedef_NSUnitElectricResistance
typedef struct objc_object NSUnitElectricResistance;
typedef struct {} _objc_exc_NSUnitElectricResistance;
#endif

struct NSUnitElectricResistance_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricResistance *megaohms;
@property (class, readonly, copy) NSUnitElectricResistance *kiloohms;
@property (class, readonly, copy) NSUnitElectricResistance *ohms;
@property (class, readonly, copy) NSUnitElectricResistance *milliohms;
@property (class, readonly, copy) NSUnitElectricResistance *microohms;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitEnergy
#define _REWRITER_typedef_NSUnitEnergy
typedef struct objc_object NSUnitEnergy;
typedef struct {} _objc_exc_NSUnitEnergy;
#endif

struct NSUnitEnergy_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitEnergy *kilojoules;
@property (class, readonly, copy) NSUnitEnergy *joules;
@property (class, readonly, copy) NSUnitEnergy *kilocalories;
@property (class, readonly, copy) NSUnitEnergy *calories;
@property (class, readonly, copy) NSUnitEnergy *kilowattHours;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitFrequency
#define _REWRITER_typedef_NSUnitFrequency
typedef struct objc_object NSUnitFrequency;
typedef struct {} _objc_exc_NSUnitFrequency;
#endif

struct NSUnitFrequency_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitFrequency *terahertz;
@property (class, readonly, copy) NSUnitFrequency *gigahertz;
@property (class, readonly, copy) NSUnitFrequency *megahertz;
@property (class, readonly, copy) NSUnitFrequency *kilohertz;
@property (class, readonly, copy) NSUnitFrequency *hertz;
@property (class, readonly, copy) NSUnitFrequency *millihertz;
@property (class, readonly, copy) NSUnitFrequency *microhertz;
@property (class, readonly, copy) NSUnitFrequency *nanohertz;


@property (class, readonly, copy) NSUnitFrequency *framesPerSecond __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitFuelEfficiency
#define _REWRITER_typedef_NSUnitFuelEfficiency
typedef struct objc_object NSUnitFuelEfficiency;
typedef struct {} _objc_exc_NSUnitFuelEfficiency;
#endif

struct NSUnitFuelEfficiency_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitFuelEfficiency *litersPer100Kilometers;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerImperialGallon;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerGallon;

/* @end */








__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))
__attribute__((swift_name("UnitInformationStorage")))

#ifndef _REWRITER_typedef_NSUnitInformationStorage
#define _REWRITER_typedef_NSUnitInformationStorage
typedef struct objc_object NSUnitInformationStorage;
typedef struct {} _objc_exc_NSUnitInformationStorage;
#endif

struct NSUnitInformationStorage_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};



@property (readonly, class, copy) NSUnitInformationStorage *bytes;


@property (readonly, class, copy) NSUnitInformationStorage *bits;
@property (readonly, class, copy) NSUnitInformationStorage *nibbles;



@property (readonly, class, copy) NSUnitInformationStorage *yottabytes;
@property (readonly, class, copy) NSUnitInformationStorage *zettabytes;
@property (readonly, class, copy) NSUnitInformationStorage *exabytes;
@property (readonly, class, copy) NSUnitInformationStorage *petabytes;
@property (readonly, class, copy) NSUnitInformationStorage *terabytes;
@property (readonly, class, copy) NSUnitInformationStorage *gigabytes;
@property (readonly, class, copy) NSUnitInformationStorage *megabytes;
@property (readonly, class, copy) NSUnitInformationStorage *kilobytes;

@property (readonly, class, copy) NSUnitInformationStorage *yottabits;
@property (readonly, class, copy) NSUnitInformationStorage *zettabits;
@property (readonly, class, copy) NSUnitInformationStorage *exabits;
@property (readonly, class, copy) NSUnitInformationStorage *petabits;
@property (readonly, class, copy) NSUnitInformationStorage *terabits;
@property (readonly, class, copy) NSUnitInformationStorage *gigabits;
@property (readonly, class, copy) NSUnitInformationStorage *megabits;
@property (readonly, class, copy) NSUnitInformationStorage *kilobits;



@property (readonly, class, copy) NSUnitInformationStorage *yobibytes;
@property (readonly, class, copy) NSUnitInformationStorage *zebibytes;
@property (readonly, class, copy) NSUnitInformationStorage *exbibytes;
@property (readonly, class, copy) NSUnitInformationStorage *pebibytes;
@property (readonly, class, copy) NSUnitInformationStorage *tebibytes;
@property (readonly, class, copy) NSUnitInformationStorage *gibibytes;
@property (readonly, class, copy) NSUnitInformationStorage *mebibytes;
@property (readonly, class, copy) NSUnitInformationStorage *kibibytes;

@property (readonly, class, copy) NSUnitInformationStorage *yobibits;
@property (readonly, class, copy) NSUnitInformationStorage *zebibits;
@property (readonly, class, copy) NSUnitInformationStorage *exbibits;
@property (readonly, class, copy) NSUnitInformationStorage *pebibits;
@property (readonly, class, copy) NSUnitInformationStorage *tebibits;
@property (readonly, class, copy) NSUnitInformationStorage *gibibits;
@property (readonly, class, copy) NSUnitInformationStorage *mebibits;
@property (readonly, class, copy) NSUnitInformationStorage *kibibits;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitLength
#define _REWRITER_typedef_NSUnitLength
typedef struct objc_object NSUnitLength;
typedef struct {} _objc_exc_NSUnitLength;
#endif

struct NSUnitLength_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitLength *megameters;
@property (class, readonly, copy) NSUnitLength *kilometers;
@property (class, readonly, copy) NSUnitLength *hectometers;
@property (class, readonly, copy) NSUnitLength *decameters;
@property (class, readonly, copy) NSUnitLength *meters;
@property (class, readonly, copy) NSUnitLength *decimeters;
@property (class, readonly, copy) NSUnitLength *centimeters;
@property (class, readonly, copy) NSUnitLength *millimeters;
@property (class, readonly, copy) NSUnitLength *micrometers;
@property (class, readonly, copy) NSUnitLength *nanometers;
@property (class, readonly, copy) NSUnitLength *picometers;
@property (class, readonly, copy) NSUnitLength *inches;
@property (class, readonly, copy) NSUnitLength *feet;
@property (class, readonly, copy) NSUnitLength *yards;
@property (class, readonly, copy) NSUnitLength *miles;
@property (class, readonly, copy) NSUnitLength *scandinavianMiles;
@property (class, readonly, copy) NSUnitLength *lightyears;
@property (class, readonly, copy) NSUnitLength *nauticalMiles;
@property (class, readonly, copy) NSUnitLength *fathoms;
@property (class, readonly, copy) NSUnitLength *furlongs;
@property (class, readonly, copy) NSUnitLength *astronomicalUnits;
@property (class, readonly, copy) NSUnitLength *parsecs;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitIlluminance
#define _REWRITER_typedef_NSUnitIlluminance
typedef struct objc_object NSUnitIlluminance;
typedef struct {} _objc_exc_NSUnitIlluminance;
#endif

struct NSUnitIlluminance_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitIlluminance *lux;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitMass
#define _REWRITER_typedef_NSUnitMass
typedef struct objc_object NSUnitMass;
typedef struct {} _objc_exc_NSUnitMass;
#endif

struct NSUnitMass_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitMass *kilograms;
@property (class, readonly, copy) NSUnitMass *grams;
@property (class, readonly, copy) NSUnitMass *decigrams;
@property (class, readonly, copy) NSUnitMass *centigrams;
@property (class, readonly, copy) NSUnitMass *milligrams;
@property (class, readonly, copy) NSUnitMass *micrograms;
@property (class, readonly, copy) NSUnitMass *nanograms;
@property (class, readonly, copy) NSUnitMass *picograms;
@property (class, readonly, copy) NSUnitMass *ounces;
@property (class, readonly, copy) NSUnitMass *poundsMass;
@property (class, readonly, copy) NSUnitMass *stones;
@property (class, readonly, copy) NSUnitMass *metricTons;
@property (class, readonly, copy) NSUnitMass *shortTons;
@property (class, readonly, copy) NSUnitMass *carats;
@property (class, readonly, copy) NSUnitMass *ouncesTroy;
@property (class, readonly, copy) NSUnitMass *slugs;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitPower
#define _REWRITER_typedef_NSUnitPower
typedef struct objc_object NSUnitPower;
typedef struct {} _objc_exc_NSUnitPower;
#endif

struct NSUnitPower_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitPower *terawatts;
@property (class, readonly, copy) NSUnitPower *gigawatts;
@property (class, readonly, copy) NSUnitPower *megawatts;
@property (class, readonly, copy) NSUnitPower *kilowatts;
@property (class, readonly, copy) NSUnitPower *watts;
@property (class, readonly, copy) NSUnitPower *milliwatts;
@property (class, readonly, copy) NSUnitPower *microwatts;
@property (class, readonly, copy) NSUnitPower *nanowatts;
@property (class, readonly, copy) NSUnitPower *picowatts;
@property (class, readonly, copy) NSUnitPower *femtowatts;
@property (class, readonly, copy) NSUnitPower *horsepower;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitPressure
#define _REWRITER_typedef_NSUnitPressure
typedef struct objc_object NSUnitPressure;
typedef struct {} _objc_exc_NSUnitPressure;
#endif

struct NSUnitPressure_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitPressure *newtonsPerMetersSquared;
@property (class, readonly, copy) NSUnitPressure *gigapascals;
@property (class, readonly, copy) NSUnitPressure *megapascals;
@property (class, readonly, copy) NSUnitPressure *kilopascals;
@property (class, readonly, copy) NSUnitPressure *hectopascals;
@property (class, readonly, copy) NSUnitPressure *inchesOfMercury;
@property (class, readonly, copy) NSUnitPressure *bars;
@property (class, readonly, copy) NSUnitPressure *millibars;
@property (class, readonly, copy) NSUnitPressure *millimetersOfMercury;
@property (class, readonly, copy) NSUnitPressure *poundsForcePerSquareInch;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitSpeed
#define _REWRITER_typedef_NSUnitSpeed
typedef struct objc_object NSUnitSpeed;
typedef struct {} _objc_exc_NSUnitSpeed;
#endif

struct NSUnitSpeed_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitSpeed *metersPerSecond;
@property (class, readonly, copy) NSUnitSpeed *kilometersPerHour;
@property (class, readonly, copy) NSUnitSpeed *milesPerHour;
@property (class, readonly, copy) NSUnitSpeed *knots;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitTemperature
#define _REWRITER_typedef_NSUnitTemperature
typedef struct objc_object NSUnitTemperature;
typedef struct {} _objc_exc_NSUnitTemperature;
#endif

struct NSUnitTemperature_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};




@property (class, readonly, copy) NSUnitTemperature *kelvin;
@property (class, readonly, copy) NSUnitTemperature *celsius;
@property (class, readonly, copy) NSUnitTemperature *fahrenheit;


/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitVolume
#define _REWRITER_typedef_NSUnitVolume
typedef struct objc_object NSUnitVolume;
typedef struct {} _objc_exc_NSUnitVolume;
#endif

struct NSUnitVolume_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitVolume *megaliters;
@property (class, readonly, copy) NSUnitVolume *kiloliters;
@property (class, readonly, copy) NSUnitVolume *liters;
@property (class, readonly, copy) NSUnitVolume *deciliters;
@property (class, readonly, copy) NSUnitVolume *centiliters;
@property (class, readonly, copy) NSUnitVolume *milliliters;
@property (class, readonly, copy) NSUnitVolume *cubicKilometers;
@property (class, readonly, copy) NSUnitVolume *cubicMeters;
@property (class, readonly, copy) NSUnitVolume *cubicDecimeters;
@property (class, readonly, copy) NSUnitVolume *cubicCentimeters;
@property (class, readonly, copy) NSUnitVolume *cubicMillimeters;
@property (class, readonly, copy) NSUnitVolume *cubicInches;
@property (class, readonly, copy) NSUnitVolume *cubicFeet;
@property (class, readonly, copy) NSUnitVolume *cubicYards;
@property (class, readonly, copy) NSUnitVolume *cubicMiles;
@property (class, readonly, copy) NSUnitVolume *acreFeet;
@property (class, readonly, copy) NSUnitVolume *bushels;
@property (class, readonly, copy) NSUnitVolume *teaspoons;
@property (class, readonly, copy) NSUnitVolume *tablespoons;
@property (class, readonly, copy) NSUnitVolume *fluidOunces;
@property (class, readonly, copy) NSUnitVolume *cups;
@property (class, readonly, copy) NSUnitVolume *pints;
@property (class, readonly, copy) NSUnitVolume *quarts;
@property (class, readonly, copy) NSUnitVolume *gallons;
@property (class, readonly, copy) NSUnitVolume *imperialTeaspoons;
@property (class, readonly, copy) NSUnitVolume *imperialTablespoons;
@property (class, readonly, copy) NSUnitVolume *imperialFluidOunces;
@property (class, readonly, copy) NSUnitVolume *imperialPints;
@property (class, readonly, copy) NSUnitVolume *imperialQuarts;
@property (class, readonly, copy) NSUnitVolume *imperialGallons;
@property (class, readonly, copy) NSUnitVolume *metricCups;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSMeasurement
#define _REWRITER_typedef_NSMeasurement
typedef struct objc_object NSMeasurement;
typedef struct {} _objc_exc_NSMeasurement;
#endif

struct NSMeasurement_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	UnitType _unit;
	double _doubleValue;
};


// @property (readonly, copy) UnitType unit;
// @property (readonly) double doubleValue;

// - (instancetype)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (instancetype)initWithDoubleValue:(double)doubleValue unit:(UnitType)unit __attribute__((objc_designated_initializer));





// - (BOOL)canBeConvertedToUnit:(NSUnit *)unit;






// - (NSMeasurement *)measurementByConvertingToUnit:(NSUnit *)unit;






// - (NSMeasurement<UnitType> *)measurementByAddingMeasurement:(NSMeasurement<UnitType> *)measurement;
// - (NSMeasurement<UnitType> *)measurementBySubtractingMeasurement:(NSMeasurement<UnitType> *)measurement;

/* @end */

#pragma clang assume_nonnull end















// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSRecursiveLock
#define _REWRITER_typedef_NSRecursiveLock
typedef struct objc_object NSRecursiveLock;
typedef struct {} _objc_exc_NSRecursiveLock;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSCache
#define _REWRITER_typedef_NSCache
typedef struct objc_object NSCache;
typedef struct {} _objc_exc_NSCache;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSNumberFormatterBehavior; enum {
    NSNumberFormatterBehaviorDefault = 0,



    NSNumberFormatterBehavior10_4 = 1040,
};


#ifndef _REWRITER_typedef_NSNumberFormatter
#define _REWRITER_typedef_NSNumberFormatter
typedef struct objc_object NSNumberFormatter;
typedef struct {} _objc_exc_NSNumberFormatter;
#endif

struct NSNumberFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSMutableDictionary *_attributes;
	CFNumberFormatterRef _formatter;
	NSUInteger _counter;
	NSNumberFormatterBehavior _behavior;
	NSRecursiveLock *_lock;
	unsigned long _stateBitMask;
	NSInteger _cacheGeneration;
	void *_reserved[8];
};


// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




// - (nullable NSString *)stringFromNumber:(NSNumber *)number;
// - (nullable NSNumber *)numberFromString:(NSString *)string;

typedef NSUInteger NSNumberFormatterStyle; enum {
    NSNumberFormatterNoStyle = kCFNumberFormatterNoStyle,
    NSNumberFormatterDecimalStyle = kCFNumberFormatterDecimalStyle,
    NSNumberFormatterCurrencyStyle = kCFNumberFormatterCurrencyStyle,
    NSNumberFormatterPercentStyle = kCFNumberFormatterPercentStyle,
    NSNumberFormatterScientificStyle = kCFNumberFormatterScientificStyle,
    NSNumberFormatterSpellOutStyle = kCFNumberFormatterSpellOutStyle,
    NSNumberFormatterOrdinalStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterOrdinalStyle,
    NSNumberFormatterCurrencyISOCodeStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyISOCodeStyle,
    NSNumberFormatterCurrencyPluralStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyPluralStyle,
    NSNumberFormatterCurrencyAccountingStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyAccountingStyle,
};

// + (NSString *)localizedStringFromNumber:(NSNumber *)num numberStyle:(NSNumberFormatterStyle)nstyle __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSNumberFormatterBehavior)defaultFormatterBehavior;
// + (void)setDefaultFormatterBehavior:(NSNumberFormatterBehavior)behavior;

// @property NSNumberFormatterStyle numberStyle;
// @property (null_resettable, copy) NSLocale *locale;
// @property BOOL generatesDecimalNumbers;
// @property NSNumberFormatterBehavior formatterBehavior;

// @property (null_resettable, copy) NSString *negativeFormat;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeValues;
// @property (null_resettable, copy) NSString *positiveFormat;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveValues;
// @property BOOL allowsFloats;
// @property (null_resettable, copy) NSString *decimalSeparator;
// @property BOOL alwaysShowsDecimalSeparator;
// @property (null_resettable, copy) NSString *currencyDecimalSeparator;
// @property BOOL usesGroupingSeparator;
// @property (null_resettable, copy) NSString *groupingSeparator;

// @property (nullable, copy) NSString *zeroSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForZero;
// @property (copy) NSString *nilSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNil;
// @property (null_resettable, copy) NSString *notANumberSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNotANumber;
// @property (copy) NSString *positiveInfinitySymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveInfinity;
// @property (copy) NSString *negativeInfinitySymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeInfinity;

// @property (null_resettable, copy) NSString *positivePrefix;
// @property (null_resettable, copy) NSString *positiveSuffix;
// @property (null_resettable, copy) NSString *negativePrefix;
// @property (null_resettable, copy) NSString *negativeSuffix;
// @property (null_resettable, copy) NSString *currencyCode;
// @property (null_resettable, copy) NSString *currencySymbol;
// @property (null_resettable, copy) NSString *internationalCurrencySymbol;
// @property (null_resettable, copy) NSString *percentSymbol;
// @property (null_resettable, copy) NSString *perMillSymbol;
// @property (null_resettable, copy) NSString *minusSign;
// @property (null_resettable, copy) NSString *plusSign;
// @property (null_resettable, copy) NSString *exponentSymbol;

// @property NSUInteger groupingSize;
// @property NSUInteger secondaryGroupingSize;
// @property (nullable, copy) NSNumber *multiplier;
// @property NSUInteger formatWidth;
// @property (null_resettable, copy) NSString *paddingCharacter;


typedef NSUInteger NSNumberFormatterPadPosition; enum {
    NSNumberFormatterPadBeforePrefix = kCFNumberFormatterPadBeforePrefix,
    NSNumberFormatterPadAfterPrefix = kCFNumberFormatterPadAfterPrefix,
    NSNumberFormatterPadBeforeSuffix = kCFNumberFormatterPadBeforeSuffix,
    NSNumberFormatterPadAfterSuffix = kCFNumberFormatterPadAfterSuffix
};

typedef NSUInteger NSNumberFormatterRoundingMode; enum {
    NSNumberFormatterRoundCeiling = kCFNumberFormatterRoundCeiling,
    NSNumberFormatterRoundFloor = kCFNumberFormatterRoundFloor,
    NSNumberFormatterRoundDown = kCFNumberFormatterRoundDown,
    NSNumberFormatterRoundUp = kCFNumberFormatterRoundUp,
    NSNumberFormatterRoundHalfEven = kCFNumberFormatterRoundHalfEven,
    NSNumberFormatterRoundHalfDown = kCFNumberFormatterRoundHalfDown,
    NSNumberFormatterRoundHalfUp = kCFNumberFormatterRoundHalfUp
};

// @property NSNumberFormatterPadPosition paddingPosition;
// @property NSNumberFormatterRoundingMode roundingMode;
// @property (null_resettable, copy) NSNumber *roundingIncrement;
// @property NSUInteger minimumIntegerDigits;
// @property NSUInteger maximumIntegerDigits;
// @property NSUInteger minimumFractionDigits;
// @property NSUInteger maximumFractionDigits;
// @property (nullable, copy) NSNumber *minimum;
// @property (nullable, copy) NSNumber *maximum;
// @property (null_resettable, copy) NSString *currencyGroupingSeparator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isLenient) BOOL lenient __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property BOOL usesSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSUInteger minimumSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSUInteger maximumSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @class NSDecimalNumberHandler;
#ifndef _REWRITER_typedef_NSDecimalNumberHandler
#define _REWRITER_typedef_NSDecimalNumberHandler
typedef struct objc_object NSDecimalNumberHandler;
typedef struct {} _objc_exc_NSDecimalNumberHandler;
#endif

#pragma clang assume_nonnull end









// @class NSCalendar;
#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif


typedef NSString * NSLocaleKey __attribute__((swift_wrapper(enum)));

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

struct NSLocale_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable id)objectForKey:(NSLocaleKey)key;

// - (nullable NSString *)displayNameForKey:(NSLocaleKey)key value:(id)value;

// - (instancetype)initWithLocaleIdentifier:(NSString *)string __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSLocale (NSExtendedLocale)

// @property (readonly, copy) NSString *localeIdentifier;
// - (NSString *)localizedStringForLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForLanguageCode:(NSString *)languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCountryCode:(NSString *)countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForScriptCode:(NSString *)scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForVariantCode:(NSString *)variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSCharacterSet *exemplarCharacterSet __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCalendarIdentifier:(NSString *)calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCollationIdentifier:(NSString *)collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly) BOOL usesMetricSystem __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *decimalSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *groupingSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *currencySymbol __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCurrencyCode:(NSString *)currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCollatorIdentifier:(NSString *)collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *quotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *quotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *alternateQuotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *alternateQuotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */


// @interface NSLocale (NSLocaleCreation)

@property (class, readonly, strong) NSLocale *autoupdatingCurrentLocale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSLocale *currentLocale;
@property (class, readonly, copy) NSLocale *systemLocale;

// + (instancetype)localeWithLocaleIdentifier:(NSString *)ident __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @interface NSLocale (NSLocaleGeneralInfo)

@property (class, readonly, copy) NSArray<NSString *> *availableLocaleIdentifiers;
@property (class, readonly, copy) NSArray<NSString *> *ISOLanguageCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCountryCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCurrencyCodes;
@property (class, readonly, copy) NSArray<NSString *> *commonISOCurrencyCodes __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSArray<NSString *> *preferredLanguages __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSDictionary<NSString *, NSString *> *)componentsFromLocaleIdentifier:(NSString *)string;
// + (NSString *)localeIdentifierFromComponents:(NSDictionary<NSString *, NSString *> *)dict;

// + (NSString *)canonicalLocaleIdentifierFromString:(NSString *)string;
// + (NSString *)canonicalLanguageIdentifierFromString:(NSString *)string;

// + (nullable NSString *)localeIdentifierFromWindowsLocaleCode:(uint32_t)lcid __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (uint32_t)windowsLocaleCodeFromLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSLocaleLanguageDirection; enum {
    NSLocaleLanguageDirectionUnknown = kCFLocaleLanguageDirectionUnknown,
    NSLocaleLanguageDirectionLeftToRight = kCFLocaleLanguageDirectionLeftToRight,
    NSLocaleLanguageDirectionRightToLeft = kCFLocaleLanguageDirectionRightToLeft,
    NSLocaleLanguageDirectionTopToBottom = kCFLocaleLanguageDirectionTopToBottom,
    NSLocaleLanguageDirectionBottomToTop = kCFLocaleLanguageDirectionBottomToTop
};

// + (NSLocaleLanguageDirection)characterDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSLocaleLanguageDirection)lineDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



extern "C" NSNotificationName const NSCurrentLocaleDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLocaleKey const NSLocaleIdentifier;
extern "C" NSLocaleKey const NSLocaleLanguageCode;
extern "C" NSLocaleKey const NSLocaleCountryCode;
extern "C" NSLocaleKey const NSLocaleScriptCode;
extern "C" NSLocaleKey const NSLocaleVariantCode;
extern "C" NSLocaleKey const NSLocaleExemplarCharacterSet;
extern "C" NSLocaleKey const NSLocaleCalendar;
extern "C" NSLocaleKey const NSLocaleCollationIdentifier;
extern "C" NSLocaleKey const NSLocaleUsesMetricSystem;
extern "C" NSLocaleKey const NSLocaleMeasurementSystem;
extern "C" NSLocaleKey const NSLocaleDecimalSeparator;
extern "C" NSLocaleKey const NSLocaleGroupingSeparator;
extern "C" NSLocaleKey const NSLocaleCurrencySymbol;
extern "C" NSLocaleKey const NSLocaleCurrencyCode;
extern "C" NSLocaleKey const NSLocaleCollatorIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSGregorianCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierGregorian"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierGregorian"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierGregorian"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierGregorian")));
extern "C" NSString * const NSBuddhistCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierBuddhist"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierBuddhist"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierBuddhist"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierBuddhist")));
extern "C" NSString * const NSChineseCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierChinese"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierChinese"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierChinese"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierChinese")));
extern "C" NSString * const NSHebrewCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierHebrew"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierHebrew"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierHebrew"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierHebrew")));
extern "C" NSString * const NSIslamicCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierIslamic"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierIslamic"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierIslamic"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierIslamic")));
extern "C" NSString * const NSIslamicCivilCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierIslamicCivil"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierIslamicCivil"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierIslamicCivil"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierIslamicCivil")));
extern "C" NSString * const NSJapaneseCalendar __attribute__((availability(macos,introduced=10.4,deprecated=10.10,replacement="NSCalendarIdentifierJapanese"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="NSCalendarIdentifierJapanese"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierJapanese"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierJapanese")));
extern "C" NSString * const NSRepublicOfChinaCalendar __attribute__((availability(macos,introduced=10.6,deprecated=10.10,replacement="NSCalendarIdentifierRepublicOfChina"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarIdentifierRepublicOfChina"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierRepublicOfChina"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierRepublicOfChina")));
extern "C" NSString * const NSPersianCalendar __attribute__((availability(macos,introduced=10.6,deprecated=10.10,replacement="NSCalendarIdentifierPersian"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarIdentifierPersian"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierPersian"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierPersian")));
extern "C" NSString * const NSIndianCalendar __attribute__((availability(macos,introduced=10.6,deprecated=10.10,replacement="NSCalendarIdentifierIndian"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarIdentifierIndian"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierIndian"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierIndian")));
extern "C" NSString * const NSISO8601Calendar __attribute__((availability(macos,introduced=10.6,deprecated=10.10,replacement="NSCalendarIdentifierISO8601"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,replacement="NSCalendarIdentifierISO8601"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="NSCalendarIdentifierISO8601"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="NSCalendarIdentifierISO8601")));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSUInteger NSMeasurementFormatterUnitOptions; enum {
    NSMeasurementFormatterUnitOptionsProvidedUnit = (1UL << 0),
    NSMeasurementFormatterUnitOptionsNaturalScale = (1UL << 1),
    NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit = (1UL << 2),
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSMeasurementFormatter
#define _REWRITER_typedef_NSMeasurementFormatter
typedef struct objc_object NSMeasurementFormatter;
typedef struct {} _objc_exc_NSMeasurementFormatter;
#endif

struct NSMeasurementFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
};

// @property NSMeasurementFormatterUnitOptions unitOptions;




// @property NSFormattingUnitStyle unitStyle;




// @property (null_resettable, copy) NSLocale *locale;




// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;

// - (NSString *)stringFromMeasurement:(NSMeasurement *)measurement;





// - (NSString *)stringFromUnit:(NSUnit *)unit;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPersonNameComponents
#define _REWRITER_typedef_NSPersonNameComponents
typedef struct objc_object NSPersonNameComponents;
typedef struct {} _objc_exc_NSPersonNameComponents;
#endif

struct NSPersonNameComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _private;
};





// @property (copy, nullable) NSString *namePrefix;


// @property (copy, nullable) NSString *givenName;


// @property (copy, nullable) NSString *middleName;


// @property (copy, nullable) NSString *familyName;


// @property (copy, nullable) NSString *nameSuffix;


// @property (copy, nullable) NSString *nickname;




// @property (copy, nullable) NSPersonNameComponents *phoneticRepresentation;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

typedef NSInteger NSPersonNameComponentsFormatterStyle; enum {
    NSPersonNameComponentsFormatterStyleDefault = 0,



    NSPersonNameComponentsFormatterStyleShort,


    NSPersonNameComponentsFormatterStyleMedium,


    NSPersonNameComponentsFormatterStyleLong,


    NSPersonNameComponentsFormatterStyleAbbreviated
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSPersonNameComponentsFormatterOptions; enum {




    NSPersonNameComponentsFormatterPhonetic = (1UL << 1)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPersonNameComponentsFormatter
#define _REWRITER_typedef_NSPersonNameComponentsFormatter
typedef struct objc_object NSPersonNameComponentsFormatter;
typedef struct {} _objc_exc_NSPersonNameComponentsFormatter;
#endif

struct NSPersonNameComponentsFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	id _private;
};




// @property NSPersonNameComponentsFormatterStyle style;



// @property (getter=isPhonetic) BOOL phonetic;




#if 0
+ (NSString *)localizedStringFromPersonNameComponents:(NSPersonNameComponents *)components
                                                style:(NSPersonNameComponentsFormatterStyle)nameFormatStyle
                                              options:(NSPersonNameComponentsFormatterOptions)nameOptions;
#endif




// - (NSString *)stringFromPersonNameComponents:(NSPersonNameComponents *)components;




// - (NSAttributedString *)annotatedStringFromPersonNameComponents:(NSPersonNameComponents *)components;




// - (nullable NSPersonNameComponents *)personNameComponentsFromString:(nonnull NSString *)string __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

/* @end */



extern "C" NSString * const NSPersonNameComponentKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSPersonNameComponentGivenName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentFamilyName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentMiddleName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentPrefix __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentSuffix __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentNickname __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern "C" NSString * const NSPersonNameComponentDelimiter __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







// @class NSCalendar;
#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSDateComponents
#define _REWRITER_typedef_NSDateComponents
typedef struct objc_object NSDateComponents;
typedef struct {} _objc_exc_NSDateComponents;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger NSRelativeDateTimeFormatterStyle; enum {
    NSRelativeDateTimeFormatterStyleNumeric = 0,
    NSRelativeDateTimeFormatterStyleNamed,
} __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

typedef NSInteger NSRelativeDateTimeFormatterUnitsStyle; enum {
    NSRelativeDateTimeFormatterUnitsStyleFull = 0,
    NSRelativeDateTimeFormatterUnitsStyleSpellOut,
    NSRelativeDateTimeFormatterUnitsStyleShort,
    NSRelativeDateTimeFormatterUnitsStyleAbbreviated,
} __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));



__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSRelativeDateTimeFormatter
#define _REWRITER_typedef_NSRelativeDateTimeFormatter
typedef struct objc_object NSRelativeDateTimeFormatter;
typedef struct {} _objc_exc_NSRelativeDateTimeFormatter;
#endif

struct NSRelativeDateTimeFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
};

// @property NSRelativeDateTimeFormatterStyle dateTimeStyle;



// @property NSRelativeDateTimeFormatterUnitsStyle unitsStyle;



// @property NSFormattingContext formattingContext;



// @property (null_resettable, copy) NSCalendar *calendar;



// @property (null_resettable, copy) NSLocale *locale;





// - (NSString *)localizedStringFromDateComponents:(NSDateComponents *)dateComponents;



// - (NSString *)localizedStringFromTimeInterval:(NSTimeInterval)timeInterval;



// - (NSString *)localizedStringForDate:(NSDate *)date relativeToDate:(NSDate *)referenceDate;



// - (nullable NSString *)stringForObjectValue:(nullable id)obj;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin



__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSListFormatter
#define _REWRITER_typedef_NSListFormatter
typedef struct objc_object NSListFormatter;
typedef struct {} _objc_exc_NSListFormatter;
#endif

struct NSListFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
};

// @property (null_resettable, copy) NSLocale *locale;



// @property (nullable, copy) NSFormatter *itemFormatter;



// + (NSString *)localizedStringByJoiningStrings:(NSArray<NSString *> *)strings;





// - (nullable NSString *)stringFromItems:(NSArray *)items;



// - (nullable NSString *)stringForObjectValue:(nullable id)obj;

/* @end */

#pragma clang assume_nonnull end







// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSRoundingMode; enum {
    NSRoundPlain,
    NSRoundDown,
    NSRoundUp,
    NSRoundBankers
};

typedef NSUInteger NSCalculationError; enum {
    NSCalculationNoError = 0,
    NSCalculationLossOfPrecision,
    NSCalculationUnderflow,
    NSCalculationOverflow,
    NSCalculationDivideByZero
};






typedef struct {
    signed int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[(8)];
} NSDecimal;

static __inline__ __attribute__((always_inline)) BOOL NSDecimalIsNotANumber(const NSDecimal *dcm)
  { return ((dcm->_length == 0) && dcm->_isNegative); }



extern "C" void NSDecimalCopy(NSDecimal *destination, const NSDecimal *source);

extern "C" void NSDecimalCompact(NSDecimal *number);

extern "C" NSComparisonResult NSDecimalCompare(const NSDecimal *leftOperand, const NSDecimal *rightOperand);


extern "C" void NSDecimalRound(NSDecimal *result, const NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode);




extern "C" NSCalculationError NSDecimalNormalize(NSDecimal *number1, NSDecimal *number2, NSRoundingMode roundingMode);

extern "C" NSCalculationError NSDecimalAdd(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalSubtract(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalMultiply(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalDivide(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);



extern "C" NSCalculationError NSDecimalPower(NSDecimal *result, const NSDecimal *number, NSUInteger power, NSRoundingMode roundingMode);

extern "C" NSCalculationError NSDecimalMultiplyByPowerOf10(NSDecimal *result, const NSDecimal *number, short power, NSRoundingMode roundingMode);

extern "C" NSString *NSDecimalString(const NSDecimal *dcm, id _Nullable locale);
#pragma clang assume_nonnull end











// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin









#ifndef _REWRITER_typedef_NSScanner
#define _REWRITER_typedef_NSScanner
typedef struct objc_object NSScanner;
typedef struct {} _objc_exc_NSScanner;
#endif

struct NSScanner_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *string;
// @property NSUInteger scanLocation ;
// @property (nullable, copy) NSCharacterSet *charactersToBeSkipped;
// @property BOOL caseSensitive;
// @property (nullable, retain) id locale;

// - (instancetype)initWithString:(NSString *)string __attribute__((objc_designated_initializer));

/* @end */


// @interface NSScanner (NSExtendedScanner)


// - (BOOL)scanInt:(nullable int *)result ;

// - (BOOL)scanInteger:(nullable NSInteger *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) ;

// - (BOOL)scanLongLong:(nullable long long *)result;

// - (BOOL)scanUnsignedLongLong:(nullable unsigned long long *)result __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) ;

// - (BOOL)scanFloat:(nullable float *)result ;

// - (BOOL)scanDouble:(nullable double *)result ;

#if 0
- (BOOL)scanHexInt:(nullable unsigned *)result
                                                                                                                                              ;
#endif


#if 0
- (BOOL)scanHexLongLong:(nullable unsigned long long *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
                                                                                                                                                   ;
#endif


#if 0
- (BOOL)scanHexFloat:(nullable float *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
                                                                                                                                                ;
#endif


#if 0
- (BOOL)scanHexDouble:(nullable double *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
                                                                                                                                                 ;
#endif


// - (BOOL)scanString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result ;

// - (BOOL)scanCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result ;

// - (BOOL)scanUpToString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result ;

// - (BOOL)scanUpToCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result ;

// @property (getter=isAtEnd, readonly) BOOL atEnd;

// + (instancetype)scannerWithString:(NSString *)string;
// + (id)localizedScannerWithString:(NSString *)string;

/* @end */

#pragma clang assume_nonnull end


// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif


#pragma clang assume_nonnull begin



extern "C" NSExceptionName const NSGenericException;
extern "C" NSExceptionName const NSRangeException;
extern "C" NSExceptionName const NSInvalidArgumentException;
extern "C" NSExceptionName const NSInternalInconsistencyException;

extern "C" NSExceptionName const NSMallocException;

extern "C" NSExceptionName const NSObjectInaccessibleException;
extern "C" NSExceptionName const NSObjectNotAvailableException;
extern "C" NSExceptionName const NSDestinationInvalidException;

extern "C" NSExceptionName const NSPortTimeoutException;
extern "C" NSExceptionName const NSInvalidSendPortException;
extern "C" NSExceptionName const NSInvalidReceivePortException;
extern "C" NSExceptionName const NSPortSendException;
extern "C" NSExceptionName const NSPortReceiveException;

extern "C" NSExceptionName const NSOldStyleException;

extern "C" NSExceptionName const NSInconsistentArchiveException;




__attribute__((__objc_exception__))


#ifndef _REWRITER_typedef_NSException
#define _REWRITER_typedef_NSException
typedef struct objc_object NSException;
typedef struct {} _objc_exc_NSException;
#endif

struct NSException_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *name;
	NSString *reason;
	NSDictionary *userInfo;
	id reserved;
};


// + (NSException *)exceptionWithName:(NSExceptionName)name reason:(nullable NSString *)reason userInfo:(nullable NSDictionary *)userInfo;
// - (instancetype)initWithName:(NSExceptionName)aName reason:(nullable NSString *)aReason userInfo:(nullable NSDictionary *)aUserInfo __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSExceptionName name;
// @property (nullable, readonly, copy) NSString *reason;
// @property (nullable, readonly, copy) NSDictionary *userInfo;

// @property (readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)raise;

/* @end */


// @interface NSException (NSExceptionRaisingConveniences)

// + (void)raise:(NSExceptionName)name format:(NSString *)format, ... __attribute__((format(__NSString__, 2, 3)));
// + (void)raise:(NSExceptionName)name format:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 2, 0)));

/* @end */

typedef void NSUncaughtExceptionHandler(NSException *exception);

extern "C" NSUncaughtExceptionHandler * _Nullable NSGetUncaughtExceptionHandler(void);
extern "C" void NSSetUncaughtExceptionHandler(NSUncaughtExceptionHandler * _Nullable);
// @class NSAssertionHandler;
#ifndef _REWRITER_typedef_NSAssertionHandler
#define _REWRITER_typedef_NSAssertionHandler
typedef struct objc_object NSAssertionHandler;
typedef struct {} _objc_exc_NSAssertionHandler;
#endif

extern "C" NSString * const NSAssertionHandlerKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSAssertionHandler
#define _REWRITER_typedef_NSAssertionHandler
typedef struct objc_object NSAssertionHandler;
typedef struct {} _objc_exc_NSAssertionHandler;
#endif

struct NSAssertionHandler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_reserved;
};


@property (class, readonly, strong) NSAssertionHandler *currentHandler;

// - (void)handleFailureInMethod:(SEL)selector object:(id)object file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 5, 6)));

// - (void)handleFailureInFunction:(NSString *)functionName file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 4, 5)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin



extern "C" NSExceptionName const NSDecimalNumberExactnessException;
extern "C" NSExceptionName const NSDecimalNumberOverflowException;
extern "C" NSExceptionName const NSDecimalNumberUnderflowException;
extern "C" NSExceptionName const NSDecimalNumberDivideByZeroException;



// @class NSDecimalNumber;
#ifndef _REWRITER_typedef_NSDecimalNumber
#define _REWRITER_typedef_NSDecimalNumber
typedef struct objc_object NSDecimalNumber;
typedef struct {} _objc_exc_NSDecimalNumber;
#endif


// @protocol NSDecimalNumberBehaviors

// - (NSRoundingMode)roundingMode;

// - (short)scale;


// - (nullable NSDecimalNumber *)exceptionDuringOperation:(SEL)operation error:(NSCalculationError)error leftOperand:(NSDecimalNumber *)leftOperand rightOperand:(nullable NSDecimalNumber *)rightOperand;


/* @end */





#ifndef _REWRITER_typedef_NSDecimalNumber
#define _REWRITER_typedef_NSDecimalNumber
typedef struct objc_object NSDecimalNumber;
typedef struct {} _objc_exc_NSDecimalNumber;
#endif

	struct NSDecimalNumber__T_1 {
	int _exponent : 8;
	unsigned int _length : 4;
	unsigned int _isNegative : 1;
	unsigned int _isCompact : 1;
	unsigned int _reserved : 1;
	unsigned int _hasExternalRefCount : 1;
	unsigned int _refs : 16;
	} ;
struct NSDecimalNumber_IMPL {
	struct NSNumber_IMPL NSNumber_IVARS;
	struct NSDecimalNumber__T_1 NSDecimalNumber__GRBF_1;
	unsigned short _mantissa[0];
};


// - (instancetype)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
// - (instancetype)initWithDecimal:(NSDecimal)dcm __attribute__((objc_designated_initializer));
// - (instancetype)initWithString:(nullable NSString *)numberValue;
// - (instancetype)initWithString:(nullable NSString *)numberValue locale:(nullable id)locale;

// - (NSString *)descriptionWithLocale:(nullable id)locale;

// @property (readonly) NSDecimal decimalValue;

// + (NSDecimalNumber *)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
// + (NSDecimalNumber *)decimalNumberWithDecimal:(NSDecimal)dcm;
// + (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue;
// + (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue locale:(nullable id)locale;

@property (class, readonly, copy) NSDecimalNumber *zero;
@property (class, readonly, copy) NSDecimalNumber *one;
@property (class, readonly, copy) NSDecimalNumber *minimumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *maximumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *notANumber;

// - (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power;
// - (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power;
// - (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


// - (NSDecimalNumber *)decimalNumberByRoundingAccordingToBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


// - (NSComparisonResult)compare:(NSNumber *)decimalNumber;


@property (class, strong) id <NSDecimalNumberBehaviors> defaultBehavior;






// @property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));


// @property (readonly) double doubleValue;


/* @end */





#ifndef _REWRITER_typedef_NSDecimalNumberHandler
#define _REWRITER_typedef_NSDecimalNumberHandler
typedef struct objc_object NSDecimalNumberHandler;
typedef struct {} _objc_exc_NSDecimalNumberHandler;
#endif

	struct NSDecimalNumberHandler__T_1 {
	int _scale : 16;
	unsigned int _roundingMode : 3;
	unsigned int _raiseOnExactness : 1;
	unsigned int _raiseOnOverflow : 1;
	unsigned int _raiseOnUnderflow : 1;
	unsigned int _raiseOnDivideByZero : 1;
	unsigned int _unused : 9;
	} ;
struct NSDecimalNumberHandler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct NSDecimalNumberHandler__T_1 NSDecimalNumberHandler__GRBF_1;
	void *_reserved2;
	void *_reserved;
};


@property (class, readonly, strong) NSDecimalNumberHandler *defaultDecimalNumberHandler;





// - (instancetype)initWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero __attribute__((objc_designated_initializer));

// + (instancetype)decimalNumberHandlerWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero;

/* @end */




// @interface NSNumber (NSDecimalNumberExtensions)

// @property (readonly) NSDecimal decimalValue;


/* @end */


// @interface NSScanner (NSDecimalNumberScanning)

#if 0
- (BOOL)scanDecimal:(nullable NSDecimal *)dcm



    ;
#endif


/* @end */

#pragma clang assume_nonnull end








// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


typedef NSString *NSErrorDomain;

#pragma clang assume_nonnull begin


extern "C" NSErrorDomain const NSCocoaErrorDomain;


extern "C" NSErrorDomain const NSPOSIXErrorDomain;
extern "C" NSErrorDomain const NSOSStatusErrorDomain;
extern "C" NSErrorDomain const NSMachErrorDomain;

typedef NSString *NSErrorUserInfoKey;


extern "C" NSErrorUserInfoKey const NSUnderlyingErrorKey;


extern "C" NSErrorUserInfoKey const NSLocalizedDescriptionKey;
extern "C" NSErrorUserInfoKey const NSLocalizedFailureReasonErrorKey;
extern "C" NSErrorUserInfoKey const NSLocalizedRecoverySuggestionErrorKey;
extern "C" NSErrorUserInfoKey const NSLocalizedRecoveryOptionsErrorKey;
extern "C" NSErrorUserInfoKey const NSRecoveryAttempterErrorKey;
extern "C" NSErrorUserInfoKey const NSHelpAnchorErrorKey;
extern "C" NSErrorUserInfoKey const NSDebugDescriptionErrorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSErrorUserInfoKey const NSLocalizedFailureErrorKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" NSErrorUserInfoKey const NSStringEncodingErrorKey ;
extern "C" NSErrorUserInfoKey const NSURLErrorKey;
extern "C" NSErrorUserInfoKey const NSFilePathErrorKey;


#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

struct NSError_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_reserved;
	NSInteger _code;
	NSString *_domain;
	NSDictionary *_userInfo;
};




// - (instancetype)initWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary<NSErrorUserInfoKey, id> *)dict __attribute__((objc_designated_initializer));
// + (instancetype)errorWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary<NSErrorUserInfoKey, id> *)dict;



// @property (readonly, copy) NSErrorDomain domain;
// @property (readonly) NSInteger code;



// @property (readonly, copy) NSDictionary<NSErrorUserInfoKey, id> *userInfo;
// @property (readonly, copy) NSString *localizedDescription;



// @property (nullable, readonly, copy) NSString *localizedFailureReason;



// @property (nullable, readonly, copy) NSString *localizedRecoverySuggestion;



// @property (nullable, readonly, copy) NSArray<NSString *> *localizedRecoveryOptions;



// @property (nullable, readonly, strong) id recoveryAttempter;



// @property (nullable, readonly, copy) NSString *helpAnchor;
// + (void)setUserInfoValueProviderForDomain:(NSErrorDomain)errorDomain provider:(id _Nullable (^ _Nullable)(NSError *err, NSErrorUserInfoKey userInfoKey))provider __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (id _Nullable (^ _Nullable)(NSError *err, NSErrorUserInfoKey userInfoKey))userInfoValueProviderForDomain:(NSErrorDomain)errorDomain __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSObject(NSErrorRecoveryAttempting)







// - (void)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(nullable id)delegate didRecoverSelector:(nullable SEL)didRecoverSelector contextInfo:(nullable void *)contextInfo;



// - (BOOL)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex;

/* @end */

#pragma clang assume_nonnull end









// @class NSTimer;
#ifndef _REWRITER_typedef_NSTimer
#define _REWRITER_typedef_NSTimer
typedef struct objc_object NSTimer;
typedef struct {} _objc_exc_NSTimer;
#endif

#ifndef _REWRITER_typedef_NSPort
#define _REWRITER_typedef_NSPort
typedef struct objc_object NSPort;
typedef struct {} _objc_exc_NSPort;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

extern "C" NSRunLoopMode const NSDefaultRunLoopMode;
extern "C" NSRunLoopMode const NSRunLoopCommonModes __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

struct NSRunLoop_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _rl;
	id _dperf;
	id _perft;
	id _info;
	id _ports;
	void *_reserved[6];
};


@property (class, readonly, strong) NSRunLoop *currentRunLoop;
@property (class, readonly, strong) NSRunLoop *mainRunLoop __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSRunLoopMode currentMode;

// - (CFRunLoopRef)getCFRunLoop __attribute__((cf_returns_not_retained));

// - (void)addTimer:(NSTimer *)timer forMode:(NSRunLoopMode)mode;

// - (void)addPort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;
// - (void)removePort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;

// - (nullable NSDate *)limitDateForMode:(NSRunLoopMode)mode;
// - (void)acceptInputForMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;

/* @end */


// @interface NSRunLoop (NSRunLoopConveniences)

// - (void)run;
// - (void)runUntilDate:(NSDate *)limitDate;
// - (BOOL)runMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;
// - (void)performInModes:(NSArray<NSRunLoopMode> *)modes block:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// - (void)performBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */




// @interface NSObject (NSDelayedPerforming)

// - (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray<NSRunLoopMode> *)modes;
// - (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay;
// + (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget selector:(SEL)aSelector object:(nullable id)anArgument;
// + (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget;

/* @end */


// @interface NSRunLoop (NSOrderedPerform)

// - (void)performSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg order:(NSUInteger)order modes:(NSArray<NSRunLoopMode> *)modes;
// - (void)cancelPerformSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg;
// - (void)cancelPerformSelectorsWithTarget:(id)target;

/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSFileHandle
#define _REWRITER_typedef_NSFileHandle
typedef struct objc_object NSFileHandle;
typedef struct {} _objc_exc_NSFileHandle;
#endif

struct NSFileHandle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSData *availableData;

// - (instancetype)initWithFileDescriptor:(int)fd closeOnDealloc:(BOOL)closeopt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

#if 0
- (nullable NSData *)readDataToEndOfFileAndReturnError:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((swift_private));
#endif


#if 0
- (nullable NSData *)readDataUpToLength:(NSUInteger)length error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((swift_private));
#endif


#if 0
- (BOOL)writeData:(NSData *)data error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((swift_private));
#endif


#if 0
- (BOOL)getOffset:(out unsigned long long *)offsetInFile error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((swift_private));
#endif


#if 0
- (BOOL)seekToEndReturningOffset:(out unsigned long long *_Nullable)offsetInFile error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((swift_private));
#endif


#if 0
- (BOOL)seekToOffset:(unsigned long long)offset error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
#endif


#if 0
- (BOOL)truncateAtOffset:(unsigned long long)offset error:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
#endif


#if 0
- (BOOL)synchronizeAndReturnError:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
#endif


#if 0
- (BOOL)closeAndReturnError:(out NSError **)error
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
#endif


/* @end */


// @interface NSFileHandle (NSFileHandleCreation)

@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardInput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardOutput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardError;
@property (class, readonly, strong) NSFileHandle *fileHandleWithNullDevice;

// + (nullable instancetype)fileHandleForReadingAtPath:(NSString *)path;
// + (nullable instancetype)fileHandleForWritingAtPath:(NSString *)path;
// + (nullable instancetype)fileHandleForUpdatingAtPath:(NSString *)path;

// + (nullable instancetype)fileHandleForReadingFromURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable instancetype)fileHandleForWritingToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable instancetype)fileHandleForUpdatingURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSExceptionName const NSFileHandleOperationException;

extern "C" NSNotificationName const NSFileHandleReadCompletionNotification;
extern "C" NSNotificationName const NSFileHandleReadToEndOfFileCompletionNotification;
extern "C" NSNotificationName const NSFileHandleConnectionAcceptedNotification;
extern "C" NSNotificationName const NSFileHandleDataAvailableNotification;

extern "C" NSString * const NSFileHandleNotificationDataItem;
extern "C" NSString * const NSFileHandleNotificationFileHandleItem;
extern "C" NSString * const NSFileHandleNotificationMonitorModes __attribute__((availability(macos,introduced=10.0,deprecated=10.7,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

// @interface NSFileHandle (NSFileHandleAsynchronousAccess)

// - (void)readInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)readInBackgroundAndNotify;

// - (void)readToEndOfFileInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)readToEndOfFileInBackgroundAndNotify;

// - (void)acceptConnectionInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)acceptConnectionInBackgroundAndNotify;

// - (void)waitForDataInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)waitForDataInBackgroundAndNotify;


// @property (nullable, copy) void (^readabilityHandler)(NSFileHandle *) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) void (^writeabilityHandler)(NSFileHandle *) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */


// @interface NSFileHandle (NSFileHandlePlatformSpecific)

// - (instancetype)initWithFileDescriptor:(int)fd;

// @property (readonly) int fileDescriptor;

/* @end */


// @interface NSFileHandle ( )




#if 0
- (NSData *)readDataToEndOfFile
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="readDataToEndOfFileAndReturnError:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="readDataToEndOfFileAndReturnError:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="readDataToEndOfFileAndReturnError:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="readDataToEndOfFileAndReturnError:")));
#endif




#if 0
- (NSData *)readDataOfLength:(NSUInteger)length
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="readDataUpToLength:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="readDataUpToLength:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="readDataUpToLength:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="readDataUpToLength:error:")));
#endif





#if 0
- (void)writeData:(NSData *)data
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="writeData:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="writeData:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="writeData:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="writeData:error:")));
#endif





// @property (readonly) unsigned long long offsetInFile
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="getOffset:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="getOffset:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="getOffset:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="getOffset:error:")));



#if 0
- (unsigned long long)seekToEndOfFile
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="seekToEndReturningOffset:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="seekToEndReturningOffset:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="seekToEndReturningOffset:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="seekToEndReturningOffset:error:")));
#endif




#if 0
- (void)seekToFileOffset:(unsigned long long)offset
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="seekToOffset:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="seekToOffset:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="seekToOffset:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="seekToOffset:error:")));
#endif





#if 0
- (void)truncateFileAtOffset:(unsigned long long)offset
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="truncateAtOffset:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="truncateAtOffset:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="truncateAtOffset:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="truncateAtOffset:error:")));
#endif




#if 0
- (void)synchronizeFile
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="synchronizeAndReturnError:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="synchronizeAndReturnError:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="synchronizeAndReturnError:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="synchronizeAndReturnError:")));
#endif




#if 0
- (void)closeFile
    __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="closeAndReturnError:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="closeAndReturnError:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="closeAndReturnError:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="closeAndReturnError:")));
#endif





/* @end */



#ifndef _REWRITER_typedef_NSPipe
#define _REWRITER_typedef_NSPipe
typedef struct objc_object NSPipe;
typedef struct {} _objc_exc_NSPipe;
#endif

struct NSPipe_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, retain) NSFileHandle *fileHandleForReading;
// @property (readonly, retain) NSFileHandle *fileHandleForWriting;

// + (NSPipe *)pipe;

/* @end */

#pragma clang assume_nonnull end














#pragma clang assume_nonnull begin

// @interface NSString (NSStringPathExtensions)

// + (NSString *)pathWithComponents:(NSArray<NSString *> *)components;
// @property (readonly, copy) NSArray<NSString *> *pathComponents;

// @property (getter=isAbsolutePath, readonly) BOOL absolutePath;

// @property (readonly, copy) NSString *lastPathComponent;
// @property (readonly, copy) NSString *stringByDeletingLastPathComponent;
// - (NSString *)stringByAppendingPathComponent:(NSString *)str;

// @property (readonly, copy) NSString *pathExtension;
// @property (readonly, copy) NSString *stringByDeletingPathExtension;
// - (nullable NSString *)stringByAppendingPathExtension:(NSString *)str;

// @property (readonly, copy) NSString *stringByAbbreviatingWithTildeInPath;
// @property (readonly, copy) NSString *stringByExpandingTildeInPath;

// @property (readonly, copy) NSString *stringByStandardizingPath;

// @property (readonly, copy) NSString *stringByResolvingSymlinksInPath;

// - (NSArray<NSString *> *)stringsByAppendingPaths:(NSArray<NSString *> *)paths;

// - (NSUInteger)completePathIntoString:(NSString * _Nullable * _Nullable)outputName caseSensitive:(BOOL)flag matchesIntoArray:(NSArray<NSString *> * _Nullable * _Nullable)outputArray filterTypes:(nullable NSArray<NSString *> *)filterTypes;

// @property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer));
// - (BOOL)getFileSystemRepresentation:(char *)cname maxLength:(NSUInteger)max;

/* @end */


// @interface NSArray<ObjectType> (NSArrayPathExtensions)

// - (NSArray<NSString *> *)pathsMatchingExtensions:(NSArray<NSString *> *)filterTypes;

/* @end */


extern "C" NSString *NSUserName(void);
extern "C" NSString *NSFullUserName(void);

extern "C" NSString *NSHomeDirectory(void);
extern "C" NSString * _Nullable NSHomeDirectoryForUser(NSString * _Nullable userName);

extern "C" NSString *NSTemporaryDirectory(void);

extern "C" NSString *NSOpenStepRootDirectory(void);

typedef NSUInteger NSSearchPathDirectory; enum {
    NSApplicationDirectory = 1,
    NSDemoApplicationDirectory,
    NSDeveloperApplicationDirectory,
    NSAdminApplicationDirectory,
    NSLibraryDirectory,
    NSDeveloperDirectory,
    NSUserDirectory,
    NSDocumentationDirectory,
    NSDocumentDirectory,
    NSCoreServiceDirectory,
    NSAutosavedInformationDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 11,
    NSDesktopDirectory = 12,
    NSCachesDirectory = 13,
    NSApplicationSupportDirectory = 14,
    NSDownloadsDirectory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    NSInputMethodsDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 16,
    NSMoviesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 17,
    NSMusicDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 18,
    NSPicturesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 19,
    NSPrinterDescriptionDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 20,
    NSSharedPublicDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 21,
    NSPreferencePanesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 22,
    NSApplicationScriptsDirectory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 23,
    NSItemReplacementDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 99,
    NSAllApplicationsDirectory = 100,
    NSAllLibrariesDirectory = 101,
    NSTrashDirectory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 102

};

typedef NSUInteger NSSearchPathDomainMask; enum {
    NSUserDomainMask = 1,
    NSLocalDomainMask = 2,
    NSNetworkDomainMask = 4,
    NSSystemDomainMask = 8,
    NSAllDomainsMask = 0x0ffff
};

extern "C" NSArray<NSString *> *NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde);
#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


typedef NSString * NSURLResourceKey __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

struct NSURL_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_urlString;
	NSURL *_baseURL;
	void *_clients;
	void *_reserved;
};




// - (nullable instancetype)initWithScheme:(NSString *)scheme host:(nullable NSString *)host path:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings.")));



// - (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// - (instancetype)initFileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

// - (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (instancetype)initFileURLWithPath:(NSString *)path __attribute__((objc_designated_initializer));



// + (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// + (NSURL *)fileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSURL *)fileURLWithPath:(NSString *)path;



// - (instancetype)initFileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));



// + (NSURL *)fileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithString:(NSString *)URLString;
// - (nullable instancetype)initWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL __attribute__((objc_designated_initializer));
// + (nullable instancetype)URLWithString:(NSString *)URLString;
// + (nullable instancetype)URLWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL;




// - (instancetype)initWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// + (NSURL *)URLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (instancetype)initAbsoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// + (NSURL *)absoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSData *dataRepresentation __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSString *absoluteString;
// @property (readonly, copy) NSString *relativeString;
// @property (nullable, readonly, copy) NSURL *baseURL;
// @property (nullable, readonly, copy) NSURL *absoluteURL;



// @property (nullable, readonly, copy) NSString *scheme;
// @property (nullable, readonly, copy) NSString *resourceSpecifier;



// @property (nullable, readonly, copy) NSString *host;
// @property (nullable, readonly, copy) NSNumber *port;
// @property (nullable, readonly, copy) NSString *user;
// @property (nullable, readonly, copy) NSString *password;
// @property (nullable, readonly, copy) NSString *path;
// @property (nullable, readonly, copy) NSString *fragment;
// @property (nullable, readonly, copy) NSString *parameterString __attribute__((availability(macosx,introduced=10.2,deprecated=10.15,message="The parameterString method is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, parameterString will always return nil, and the path method will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="The parameterString method is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, parameterString will always return nil, and the path method will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="The parameterString method is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, parameterString will always return nil, and the path method will return the complete path including the semicolon separator and params component if the URL string contains them."))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="The parameterString method is deprecated. Post deprecation for applications linked with or after the macOS 10.15, and for all iOS, watchOS, and tvOS applications, parameterString will always return nil, and the path method will return the complete path including the semicolon separator and params component if the URL string contains them.")));
// @property (nullable, readonly, copy) NSString *query;
// @property (nullable, readonly, copy) NSString *relativePath;



// @property (readonly) BOOL hasDirectoryPath __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getFileSystemRepresentation:(char *)buffer maxLength:(NSUInteger)maxBufferLength __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, getter=isFileURL) BOOL fileURL;


extern "C" NSString *NSURLFileScheme;


// @property (nullable, readonly, copy) NSURL *standardizedURL;




// - (BOOL)checkResourceIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (BOOL)isFileReferenceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)fileReferenceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSURL *filePathURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)getResourceValue:(out id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(out NSError ** _Nullable)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)setResourceValue:(nullable id)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)setResourceValues:(NSDictionary<NSURLResourceKey, id> *)keyedValues error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLKeysOfUnsetValuesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)removeCachedResourceValueForKey:(NSURLResourceKey)key __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)removeAllCachedResourceValues __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setTemporaryResourceValue:(nullable id)value forKey:(NSURLResourceKey)key __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsRegularFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsDirectoryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsSymbolicLinkKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsVolumeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsPackageKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsApplicationKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLApplicationIsScriptableKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLIsSystemImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsUserImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsHiddenKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLHasHiddenExtensionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCreationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLContentAccessDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLContentModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLAttributeModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLinkCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLParentDirectoryURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTypeIdentifierKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedTypeDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLabelNumberKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLabelColorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedLabelKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLEffectiveIconKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCustomIconKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileResourceIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLPreferredIOBlockSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsReadableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsWritableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsExecutableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsExcludedFromBackupKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.1))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTagNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLPathKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLIsMountTriggerKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLGenerationIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLDocumentIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLAddedToDirectoryDateKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLQuarantinePropertiesKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLFileResourceTypeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSURLFileResourceType __attribute__((swift_wrapper(enum)));



extern "C" NSURLFileResourceType const NSURLFileResourceTypeNamedPipe __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeCharacterSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeBlockSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeRegular __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeSymbolicLink __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeSocket __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeUnknown __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLThumbnailDictionaryKey __attribute__((availability(macos,introduced=10.10,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(ios,introduced=8.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead")));
extern "C" NSURLResourceKey const NSURLThumbnailKey __attribute__((availability(macos,introduced=10.10,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSString *NSURLThumbnailDictionaryItem __attribute__((swift_wrapper(struct)));


extern "C" NSURLThumbnailDictionaryItem const NSThumbnail1024x1024SizeKey __attribute__((availability(macos,introduced=10.10,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(ios,introduced=8.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,message="Use the QuickLookThumbnailing framework and extension point instead")));



extern "C" NSURLResourceKey const NSURLFileSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTotalFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTotalFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsAliasFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileProtectionKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

typedef NSString * NSURLFileProtectionType __attribute__((swift_wrapper(enum)));


extern "C" NSURLFileProtectionType const NSURLFileProtectionNone __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionComplete __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));





extern "C" NSURLResourceKey const NSURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeTotalCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeResourceCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsPersistentIDsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSymbolicLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsHardLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSparseFilesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsZeroRunsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsVolumeSizesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsRenamingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsExtendedSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsBrowsableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeMaximumFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsEjectableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsRemovableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsInternalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsAutomountedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsLocalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsReadOnlyKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeURLForRemountingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeUUIDStringKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeLocalizedNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsImmutableFilesKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsAccessPermissionsKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));







extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityForImportantUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityForOpportunisticUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern "C" NSURLResourceKey const NSURLIsUbiquitousItemKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadRequestedKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemContainerDisplayNameKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLUbiquitousItemIsSharedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemCurrentUserRoleKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemCurrentUserPermissionsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemOwnerNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemMostRecentEditorNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSString * NSURLUbiquitousItemDownloadingStatus __attribute__((swift_wrapper(enum)));


extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSURLUbiquitousSharedItemRole __attribute__((swift_wrapper(enum)));



extern "C" NSURLUbiquitousSharedItemRole const NSURLUbiquitousSharedItemRoleOwner __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLUbiquitousSharedItemRole const NSURLUbiquitousSharedItemRoleParticipant __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSString * NSURLUbiquitousSharedItemPermissions __attribute__((swift_wrapper(enum)));



extern "C" NSURLUbiquitousSharedItemPermissions const NSURLUbiquitousSharedItemPermissionsReadOnly __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLUbiquitousSharedItemPermissions const NSURLUbiquitousSharedItemPermissionsReadWrite __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




typedef NSUInteger NSURLBookmarkCreationOptions; enum {
    NSURLBookmarkCreationPreferFileIDResolution __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported"))) = ( 1UL << 8 ),
    NSURLBookmarkCreationMinimalBookmark = ( 1UL << 9 ),
    NSURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    NSURLBookmarkCreationWithSecurityScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1 << 11 ),
    NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1 << 12 ),
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSURLBookmarkResolutionOptions; enum {
    NSURLBookmarkResolutionWithoutUI = ( 1UL << 8 ),
    NSURLBookmarkResolutionWithoutMounting = ( 1UL << 9 ),
    NSURLBookmarkResolutionWithSecurityScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = ( 1 << 10 )
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSURLBookmarkFileCreationOptions;



// - (nullable NSData *)bookmarkDataWithOptions:(NSURLBookmarkCreationOptions)options includingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)keys relativeToURL:(nullable NSURL *)relativeURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// + (nullable instancetype)URLByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys fromBookmarkData:(NSData *)bookmarkData __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (BOOL)writeBookmarkData:(NSData *)bookmarkData toURL:(NSURL *)bookmarkFileURL options:(NSURLBookmarkFileCreationOptions)options error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSData *)bookmarkDataWithContentsOfURL:(NSURL *)bookmarkFileURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable instancetype)URLByResolvingAliasFileAtURL:(NSURL *)url options:(NSURLBookmarkResolutionOptions)options error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)startAccessingSecurityScopedResource __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)stopAccessingSecurityScopedResource __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSURL (NSPromisedItems)
// - (BOOL)getPromisedItemResourceValue:(id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDictionary<NSURLResourceKey, id> *)promisedItemResourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)checkPromisedItemIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSURL (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))


#ifndef _REWRITER_typedef_NSURLQueryItem
#define _REWRITER_typedef_NSURLQueryItem
typedef struct objc_object NSURLQueryItem;
typedef struct {} _objc_exc_NSURLQueryItem;
#endif

struct NSURLQueryItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_name;
	NSString *_value;
};

// - (instancetype)initWithName:(NSString *)name value:(nullable NSString *)value __attribute__((objc_designated_initializer));
// + (instancetype)queryItemWithName:(NSString *)name value:(nullable NSString *)value;
// @property (readonly) NSString *name;
// @property (nullable, readonly) NSString *value;
/* @end */



__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSURLComponents
#define _REWRITER_typedef_NSURLComponents
typedef struct objc_object NSURLComponents;
typedef struct {} _objc_exc_NSURLComponents;
#endif

struct NSURLComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init;


// - (nullable instancetype)initWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


// + (nullable instancetype)componentsWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


// - (nullable instancetype)initWithString:(NSString *)URLString;


// + (nullable instancetype)componentsWithString:(NSString *)URLString;


// @property (nullable, readonly, copy) NSURL *URL;


// - (nullable NSURL *)URLRelativeToURL:(nullable NSURL *)baseURL;


// @property (nullable, readonly, copy) NSString *string __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, copy) NSString *scheme;
// @property (nullable, copy) NSString *user;
// @property (nullable, copy) NSString *password;
// @property (nullable, copy) NSString *host;
// @property (nullable, copy) NSNumber *port;
// @property (nullable, copy) NSString *path;
// @property (nullable, copy) NSString *query;
// @property (nullable, copy) NSString *fragment;


// @property (nullable, copy) NSString *percentEncodedUser;
// @property (nullable, copy) NSString *percentEncodedPassword;
// @property (nullable, copy) NSString *percentEncodedHost;
// @property (nullable, copy) NSString *percentEncodedPath;
// @property (nullable, copy) NSString *percentEncodedQuery;
// @property (nullable, copy) NSString *percentEncodedFragment;



// @property (readonly) NSRange rangeOfScheme __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfUser __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPassword __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfHost __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPort __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPath __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfQuery __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfFragment __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSArray<NSURLQueryItem *> *queryItems __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, copy) NSArray<NSURLQueryItem *> *percentEncodedQueryItems __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */



// @interface NSCharacterSet (NSURLUtilities)



@property (class, readonly, copy) NSCharacterSet *URLUserAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLPasswordAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLHostAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLPathAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLQueryAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLFragmentAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSString (NSURLUtilities)


// - (nullable NSString *)stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet *)allowedCharacters __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSString *stringByRemovingPercentEncoding __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable NSString *)stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid.")));
// - (nullable NSString *)stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding.")));

/* @end */



// @interface NSURL (NSURLPathUtilities)



// + (nullable NSURL *)fileURLWithPathComponents:(NSArray<NSString *> *)components __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSArray<NSString *> *pathComponents __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *lastPathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *pathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent isDirectory:(BOOL)isDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByDeletingLastPathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLByAppendingPathExtension:(NSString *)pathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByDeletingPathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSURL *URLByStandardizingPath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByResolvingSymlinksInPath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */






__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSFileSecurity
#define _REWRITER_typedef_NSFileSecurity
typedef struct objc_object NSFileSecurity;
typedef struct {} _objc_exc_NSFileSecurity;
#endif

struct NSFileSecurity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (nullable instancetype) initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
/* @end */

#pragma clang assume_nonnull end



// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSDirectoryEnumerator
#define _REWRITER_typedef_NSDirectoryEnumerator
typedef struct objc_object NSDirectoryEnumerator;
typedef struct {} _objc_exc_NSDirectoryEnumerator;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSFileProviderService
#define _REWRITER_typedef_NSFileProviderService
typedef struct objc_object NSFileProviderService;
typedef struct {} _objc_exc_NSFileProviderService;
#endif

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

// @protocol NSFileManagerDelegate;

typedef NSString * NSFileAttributeKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSFileAttributeType __attribute__((swift_wrapper(enum)));
typedef NSString * NSFileProtectionType __attribute__((swift_wrapper(enum)));

typedef NSString * NSFileProviderServiceName __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin





typedef NSUInteger NSVolumeEnumerationOptions; enum {


    NSVolumeEnumerationSkipHiddenVolumes = 1UL << 1,



    NSVolumeEnumerationProduceFileReferenceURLs = 1UL << 2
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSDirectoryEnumerationOptions; enum {


    NSDirectoryEnumerationSkipsSubdirectoryDescendants = 1UL << 0,



    NSDirectoryEnumerationSkipsPackageDescendants = 1UL << 1,



    NSDirectoryEnumerationSkipsHiddenFiles = 1UL << 2,



    NSDirectoryEnumerationIncludesDirectoriesPostOrder __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 1UL << 3,



    NSDirectoryEnumerationProducesRelativePathURLs __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 1UL << 4,
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSFileManagerItemReplacementOptions; enum {


    NSFileManagerItemReplacementUsingNewMetadataOnly = 1UL << 0,



     NSFileManagerItemReplacementWithoutDeletingBackupItem = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSInteger NSURLRelationship; enum {
    NSURLRelationshipContains,
    NSURLRelationshipSame,
    NSURLRelationshipOther
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSFileManagerUnmountOptions; enum {


    NSFileManagerUnmountAllPartitionsAndEjectDisk = 1UL << 0,



    NSFileManagerUnmountWithoutUI = 1UL << 1,
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" NSString *const NSFileManagerUnmountDissentingProcessIdentifierErrorKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern NSNotificationName const NSUbiquityIdentityDidChangeNotification __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSFileManager
#define _REWRITER_typedef_NSFileManager
typedef struct objc_object NSFileManager;
typedef struct {} _objc_exc_NSFileManager;
#endif

struct NSFileManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




@property (class, readonly, strong) NSFileManager *defaultManager;



// - (nullable NSArray<NSURL *> *)mountedVolumeURLsIncludingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)propertyKeys options:(NSVolumeEnumerationOptions)options __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)unmountVolumeAtURL:(NSURL *)url options:(NSFileManagerUnmountOptions)mask completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (nullable NSArray<NSURL *> *)contentsOfDirectoryAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (NSArray<NSURL *> *)URLsForDirectory:(NSSearchPathDirectory)directory inDomains:(NSSearchPathDomainMask)domainMask __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSURL *)URLForDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domain appropriateForURL:(nullable NSURL *)url create:(BOOL)shouldCreate error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectoryAtURL:(NSURL *)directoryURL toItemAtURL:(NSURL *)otherURL error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domainMask toItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)createDirectoryAtURL:(NSURL *)url withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attributes error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)createSymbolicLinkAtURL:(NSURL *)url withDestinationURL:(NSURL *)destURL error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, assign) id <NSFileManagerDelegate> delegate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)setAttributes:(NSDictionary<NSFileAttributeKey, id> *)attributes ofItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)createDirectoryAtPath:(NSString *)path withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attributes error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSArray<NSString *> *)contentsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSArray<NSString *> *)subpathsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfFileSystemForPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)createSymbolicLinkAtPath:(NSString *)path withDestinationPath:(NSString *)destPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSString *)destinationOfSymbolicLinkAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)copyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)moveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)linkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)removeItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)copyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)moveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)linkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)removeItemAtURL:(NSURL *)URL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)trashItemAtURL:(NSURL *)url resultingItemURL:(NSURL * _Nullable * _Nullable)outResultingURL error:(NSError **)error __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (nullable NSDictionary *)fileAttributesAtPath:(NSString *)path traverseLink:(BOOL)yorn __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -attributesOfItemAtPath:error: instead")));
// - (BOOL)changeFileAttributes:(NSDictionary *)attributes atPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -setAttributes:ofItemAtPath:error: instead")));
// - (nullable NSArray *)directoryContentsAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -contentsOfDirectoryAtPath:error: instead")));
// - (nullable NSDictionary *)fileSystemAttributesAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -attributesOfFileSystemForPath:error: instead")));
// - (nullable NSString *)pathContentOfSymbolicLinkAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -destinationOfSymbolicLinkAtPath:error:")));
// - (BOOL)createSymbolicLinkAtPath:(NSString *)path pathContent:(NSString *)otherpath __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -createSymbolicLinkAtPath:error: instead")));
// - (BOOL)createDirectoryAtPath:(NSString *)path attributes:(NSDictionary *)attributes __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead")));
// @property (readonly, copy) NSString *currentDirectoryPath;
// - (BOOL)changeCurrentDirectoryPath:(NSString *)path;



// - (BOOL)fileExistsAtPath:(NSString *)path;
// - (BOOL)fileExistsAtPath:(NSString *)path isDirectory:(nullable BOOL *)isDirectory;
// - (BOOL)isReadableFileAtPath:(NSString *)path;
// - (BOOL)isWritableFileAtPath:(NSString *)path;
// - (BOOL)isExecutableFileAtPath:(NSString *)path;
// - (BOOL)isDeletableFileAtPath:(NSString *)path;



// - (BOOL)contentsEqualAtPath:(NSString *)path1 andPath:(NSString *)path2;



// - (NSString *)displayNameAtPath:(NSString *)path;



// - (nullable NSArray<NSString *> *)componentsToDisplayForPath:(NSString *)path;



// - (nullable NSDirectoryEnumerator<NSString *> *)enumeratorAtPath:(NSString *)path;





// - (nullable NSDirectoryEnumerator<NSURL *> *)enumeratorAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask errorHandler:(nullable BOOL (^)(NSURL *url, NSError *error))handler __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSArray<NSString *> *)subpathsAtPath:(NSString *)path;



// - (nullable NSData *)contentsAtPath:(NSString *)path;
// - (BOOL)createFileAtPath:(NSString *)path contents:(nullable NSData *)data attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attr;



// - (const char *)fileSystemRepresentationWithPath:(NSString *)path __attribute__((objc_returns_inner_pointer));



// - (NSString *)stringWithFileSystemRepresentation:(const char *)str length:(NSUInteger)len;
// - (BOOL)replaceItemAtURL:(NSURL *)originalItemURL withItemAtURL:(NSURL *)newItemURL backupItemName:(nullable NSString *)backupItemName options:(NSFileManagerItemReplacementOptions)options resultingItemURL:(NSURL * _Nullable * _Nullable)resultingURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (BOOL)setUbiquitous:(BOOL)flag itemAtURL:(NSURL *)url destinationURL:(NSURL *)destinationURL error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)isUbiquitousItemAtURL:(NSURL *)url __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)startDownloadingUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)evictUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)URLForUbiquityContainerIdentifier:(nullable NSString *)containerIdentifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)URLForPublishingUbiquitousItemAtURL:(NSURL *)url expirationDate:(NSDate * _Nullable * _Nullable)outDate error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly, copy) id<NSObject,NSCopying,NSCoding> ubiquityIdentityToken __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)getFileProviderServicesForItemAtURL:(NSURL *)url completionHandler:(void (^)(NSDictionary <NSFileProviderServiceName, NSFileProviderService *> * _Nullable services, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (nullable NSURL *)containerURLForSecurityApplicationGroupIdentifier:(NSString *)groupIdentifier __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */


// @interface NSFileManager (NSUserInformation)

// @property (readonly, copy) NSURL *homeDirectoryForCurrentUser __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSURL *temporaryDirectory __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (nullable NSURL *)homeDirectoryForUser:(NSString *)userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface NSObject (NSCopyLinkMoveHandler)
// - (BOOL)fileManager:(NSFileManager *)fm shouldProceedAfterError:(NSDictionary *)errorInfo __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message=" Handler API no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message=" Handler API no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message=" Handler API no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message=" Handler API no longer supported")));
// - (void)fileManager:(NSFileManager *)fm willProcessPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Handler API no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Handler API no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Handler API no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Handler API no longer supported")));
/* @end */



// @protocol NSFileManagerDelegate <NSObject>
/* @optional */





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtPath:(NSString *)path;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtURL:(NSURL *)URL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtPath:(NSString *)path;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtURL:(NSURL *)URL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




#ifndef _REWRITER_typedef_NSDirectoryEnumerator
#define _REWRITER_typedef_NSDirectoryEnumerator
typedef struct objc_object NSDirectoryEnumerator;
typedef struct {} _objc_exc_NSDirectoryEnumerator;
#endif

struct NSDirectoryEnumerator_IMPL {
	struct NSEnumerator_IMPL NSEnumerator_IVARS;
};




// @property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *fileAttributes;
// @property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *directoryAttributes;



// @property (readonly) BOOL isEnumeratingDirectoryPostOrder __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

// - (void)skipDescendents;



// @property (readonly) NSUInteger level __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)skipDescendants __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_NSFileProviderService
#define _REWRITER_typedef_NSFileProviderService
typedef struct objc_object NSFileProviderService;
typedef struct {} _objc_exc_NSFileProviderService;
#endif

struct NSFileProviderService_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSFileProviderServiceName _name;
	id _endpointCreatingProxy;
	dispatch_group_t _requestFinishedGroup;
};

// - (void)getFileProviderConnectionWithCompletionHandler:(void (^)(NSXPCConnection * _Nullable connection, NSError * _Nullable error))completionHandler;
// @property (readonly, copy) NSFileProviderServiceName name;
/* @end */


extern "C" NSFileAttributeKey const NSFileType;
extern "C" NSFileAttributeType const NSFileTypeDirectory;
extern "C" NSFileAttributeType const NSFileTypeRegular;
extern "C" NSFileAttributeType const NSFileTypeSymbolicLink;
extern "C" NSFileAttributeType const NSFileTypeSocket;
extern "C" NSFileAttributeType const NSFileTypeCharacterSpecial;
extern "C" NSFileAttributeType const NSFileTypeBlockSpecial;
extern "C" NSFileAttributeType const NSFileTypeUnknown;
extern "C" NSFileAttributeKey const NSFileSize;
extern "C" NSFileAttributeKey const NSFileModificationDate;
extern "C" NSFileAttributeKey const NSFileReferenceCount;
extern "C" NSFileAttributeKey const NSFileDeviceIdentifier;
extern "C" NSFileAttributeKey const NSFileOwnerAccountName;
extern "C" NSFileAttributeKey const NSFileGroupOwnerAccountName;
extern "C" NSFileAttributeKey const NSFilePosixPermissions;
extern "C" NSFileAttributeKey const NSFileSystemNumber;
extern "C" NSFileAttributeKey const NSFileSystemFileNumber;
extern "C" NSFileAttributeKey const NSFileExtensionHidden;
extern "C" NSFileAttributeKey const NSFileHFSCreatorCode;
extern "C" NSFileAttributeKey const NSFileHFSTypeCode;
extern "C" NSFileAttributeKey const NSFileImmutable;
extern "C" NSFileAttributeKey const NSFileAppendOnly;
extern "C" NSFileAttributeKey const NSFileCreationDate;
extern "C" NSFileAttributeKey const NSFileOwnerAccountID;
extern "C" NSFileAttributeKey const NSFileGroupOwnerAccountID;
extern "C" NSFileAttributeKey const NSFileBusy;
extern "C" NSFileAttributeKey const NSFileProtectionKey __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionNone __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionComplete __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern "C" NSFileAttributeKey const NSFileSystemSize;
extern "C" NSFileAttributeKey const NSFileSystemFreeSize;
extern "C" NSFileAttributeKey const NSFileSystemNodes;
extern "C" NSFileAttributeKey const NSFileSystemFreeNodes;

// @interface NSDictionary<KeyType, ObjectType> (NSFileAttributes)

// - (unsigned long long)fileSize;
// - (nullable NSDate *)fileModificationDate;
// - (nullable NSString *)fileType;
// - (NSUInteger)filePosixPermissions;
// - (nullable NSString *)fileOwnerAccountName;
// - (nullable NSString *)fileGroupOwnerAccountName;
// - (NSInteger)fileSystemNumber;
// - (NSUInteger)fileSystemFileNumber;
// - (BOOL)fileExtensionHidden;
// - (OSType)fileHFSCreatorCode;
// - (OSType)fileHFSTypeCode;
// - (BOOL)fileIsImmutable;
// - (BOOL)fileIsAppendOnly;
// - (nullable NSDate *)fileCreationDate;
// - (nullable NSNumber *)fileOwnerAccountID;
// - (nullable NSNumber *)fileGroupOwnerAccountID;
/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin
typedef NSUInteger NSPointerFunctionsOptions; enum {



    NSPointerFunctionsStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (0UL << 0),
    NSPointerFunctionsZeroingWeakMemory __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = (1UL << 0),
    NSPointerFunctionsOpaqueMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (2UL << 0),
    NSPointerFunctionsMallocMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (3UL << 0),
    NSPointerFunctionsMachVirtualMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (4UL << 0),
    NSPointerFunctionsWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (5UL << 0),



    NSPointerFunctionsObjectPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (0UL << 8),
    NSPointerFunctionsOpaquePersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 8),
    NSPointerFunctionsObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (2UL << 8),
    NSPointerFunctionsCStringPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (3UL << 8),
    NSPointerFunctionsStructPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (4UL << 8),
    NSPointerFunctionsIntegerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (5UL << 8),

    NSPointerFunctionsCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 16),
};

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPointerFunctions
#define _REWRITER_typedef_NSPointerFunctions
typedef struct objc_object NSPointerFunctions;
typedef struct {} _objc_exc_NSPointerFunctions;
#endif

struct NSPointerFunctions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
// + (NSPointerFunctions *)pointerFunctionsWithOptions:(NSPointerFunctionsOptions)options;


// @property (nullable) NSUInteger (*hashFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) BOOL (*isEqualFunction)(const void *item1, const void*item2, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) NSUInteger (*sizeFunction)(const void *item);
// @property (nullable) NSString * _Nullable (*descriptionFunction)(const void *item);


// @property (nullable) void (*relinquishFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) void * _Nonnull (*acquireFunction)(const void *src, NSUInteger (* _Nullable size)(const void *item), BOOL shouldCopy);


// @property BOOL usesStrongWriteBarrier
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));

// @property BOOL usesWeakReadAndWriteBarriers
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));
/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSHashTable
#define _REWRITER_typedef_NSHashTable
typedef struct objc_object NSHashTable;
typedef struct {} _objc_exc_NSHashTable;
#endif


#pragma clang assume_nonnull begin





static const NSPointerFunctionsOptions NSHashTableStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsStrongMemory;
static const NSPointerFunctionsOptions NSHashTableZeroingWeakMemory __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = NSPointerFunctionsZeroingWeakMemory;
static const NSPointerFunctionsOptions NSHashTableCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSHashTableObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSHashTableWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSHashTableOptions;

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSHashTable
#define _REWRITER_typedef_NSHashTable
typedef struct objc_object NSHashTable;
typedef struct {} _objc_exc_NSHashTable;
#endif

struct NSHashTable_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
// - (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));



// + (NSHashTable<ObjectType> *)hashTableWithOptions:(NSPointerFunctionsOptions)options;

// + (id)hashTableWithWeakObjects __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// + (NSHashTable<ObjectType> *)weakObjectsHashTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSPointerFunctions *pointerFunctions;

// @property (readonly) NSUInteger count;
// - (nullable ObjectType)member:(nullable ObjectType)object;
// - (NSEnumerator<ObjectType> *)objectEnumerator;

// - (void)addObject:(nullable ObjectType)object;
// - (void)removeObject:(nullable ObjectType)object;

// - (void)removeAllObjects;

// @property (readonly, copy) NSArray<ObjectType> *allObjects;

// @property (nullable, nonatomic, readonly) ObjectType anyObject;
// - (BOOL)containsObject:(nullable ObjectType)anObject;

// - (BOOL)intersectsHashTable:(NSHashTable<ObjectType> *)other;
// - (BOOL)isEqualToHashTable:(NSHashTable<ObjectType> *)other;
// - (BOOL)isSubsetOfHashTable:(NSHashTable<ObjectType> *)other;

// - (void)intersectHashTable:(NSHashTable<ObjectType> *)other;
// - (void)unionHashTable:(NSHashTable<ObjectType> *)other;
// - (void)minusHashTable:(NSHashTable<ObjectType> *)other;

// @property (readonly, copy) NSSet<ObjectType> *setRepresentation;

/* @end */




typedef struct {NSUInteger _pi; NSUInteger _si; void * _Nullable _bs;} NSHashEnumerator;

extern "C" void NSFreeHashTable(NSHashTable *table);
extern "C" void NSResetHashTable(NSHashTable *table);
extern "C" BOOL NSCompareHashTables(NSHashTable *table1, NSHashTable *table2);
extern "C" NSHashTable *NSCopyHashTableWithZone(NSHashTable *table, NSZone * _Nullable zone);
extern "C" void *NSHashGet(NSHashTable *table, const void * _Nullable pointer);
extern "C" void NSHashInsert(NSHashTable *table, const void * _Nullable pointer);
extern "C" void NSHashInsertKnownAbsent(NSHashTable *table, const void * _Nullable pointer);
extern "C" void * _Nullable NSHashInsertIfAbsent(NSHashTable *table, const void * _Nullable pointer);
extern "C" void NSHashRemove(NSHashTable *table, const void * _Nullable pointer);
extern "C" NSHashEnumerator NSEnumerateHashTable(NSHashTable *table);
extern "C" void * _Nullable NSNextHashEnumeratorItem(NSHashEnumerator *enumerator);
extern "C" void NSEndHashTableEnumeration(NSHashEnumerator *enumerator);
extern "C" NSUInteger NSCountHashTable(NSHashTable *table);
extern "C" NSString *NSStringFromHashTable(NSHashTable *table);
extern "C" NSArray *NSAllHashTableObjects(NSHashTable *table);




typedef struct {
    NSUInteger (* _Nullable hash)(NSHashTable *table, const void *);
    BOOL (* _Nullable isEqual)(NSHashTable *table, const void *, const void *);
    void (* _Nullable retain)(NSHashTable *table, const void *);
    void (* _Nullable release)(NSHashTable *table, void *);
    NSString * _Nullable (* _Nullable describe)(NSHashTable *table, const void *);
} NSHashTableCallBacks;

extern "C" NSHashTable *NSCreateHashTableWithZone(NSHashTableCallBacks callBacks, NSUInteger capacity, NSZone * _Nullable zone);
extern "C" NSHashTable *NSCreateHashTable(NSHashTableCallBacks callBacks, NSUInteger capacity);


extern "C" const NSHashTableCallBacks NSIntegerHashCallBacks __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" const NSHashTableCallBacks NSNonOwnedPointerHashCallBacks;
extern "C" const NSHashTableCallBacks NSNonRetainedObjectHashCallBacks;
extern "C" const NSHashTableCallBacks NSObjectHashCallBacks;
extern "C" const NSHashTableCallBacks NSOwnedObjectIdentityHashCallBacks;
extern "C" const NSHashTableCallBacks NSOwnedPointerHashCallBacks;
extern "C" const NSHashTableCallBacks NSPointerToStructHashCallBacks;
extern "C" const NSHashTableCallBacks NSIntHashCallBacks __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Not supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSNumber;
#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


typedef NSString * NSHTTPCookiePropertyKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSHTTPCookieStringPolicy __attribute__((swift_wrapper(enum)));

#pragma clang assume_nonnull begin





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieName;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieValue;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieOriginURL;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieVersion;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieDomain;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookiePath;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieSecure;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieExpires;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieComment;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieCommentURL;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieDiscard;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieMaximumAge;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookiePort;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieSameSitePolicy __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





extern "C" NSHTTPCookieStringPolicy const NSHTTPCookieSameSiteLax __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





extern "C" NSHTTPCookieStringPolicy const NSHTTPCookieSameSiteStrict __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

// @class NSHTTPCookieInternal;
#ifndef _REWRITER_typedef_NSHTTPCookieInternal
#define _REWRITER_typedef_NSHTTPCookieInternal
typedef struct objc_object NSHTTPCookieInternal;
typedef struct {} _objc_exc_NSHTTPCookieInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

struct NSHTTPCookie_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSHTTPCookieInternal *_cookiePrivate;
};

// - (nullable instancetype)initWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
// + (nullable NSHTTPCookie *)cookieWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
// + (NSDictionary<NSString *, NSString *> *)requestHeaderFieldsWithCookies:(NSArray<NSHTTPCookie *> *)cookies;
// + (NSArray<NSHTTPCookie *> *)cookiesWithResponseHeaderFields:(NSDictionary<NSString *, NSString *> *)headerFields forURL:(NSURL *)URL;
// @property (nullable, readonly, copy) NSDictionary<NSHTTPCookiePropertyKey, id> *properties;







// @property (readonly) NSUInteger version;





// @property (readonly, copy) NSString *name;





// @property (readonly, copy) NSString *value;
// @property (nullable, readonly, copy) NSDate *expiresDate;







// @property (readonly, getter=isSessionOnly) BOOL sessionOnly;
// @property (readonly, copy) NSString *domain;
// @property (readonly, copy) NSString *path;
// @property (readonly, getter=isSecure) BOOL secure;
// @property (readonly, getter=isHTTPOnly) BOOL HTTPOnly;
// @property (nullable, readonly, copy) NSString *comment;
// @property (nullable, readonly, copy) NSURL *commentURL;
// @property (nullable, readonly, copy) NSArray<NSNumber *> *portList;
// @property (nullable, readonly, copy) NSHTTPCookieStringPolicy sameSitePolicy __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSHTTPCookie;
#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif

// @class NSSortDescriptor;
#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSHTTPCookieAcceptPolicy; enum {
    NSHTTPCookieAcceptPolicyAlways,
    NSHTTPCookieAcceptPolicyNever,
    NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain
};


// @class NSHTTPCookieStorageInternal;
#ifndef _REWRITER_typedef_NSHTTPCookieStorageInternal
#define _REWRITER_typedef_NSHTTPCookieStorageInternal
typedef struct objc_object NSHTTPCookieStorageInternal;
typedef struct {} _objc_exc_NSHTTPCookieStorageInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPCookieStorage
#define _REWRITER_typedef_NSHTTPCookieStorage
typedef struct objc_object NSHTTPCookieStorage;
typedef struct {} _objc_exc_NSHTTPCookieStorage;
#endif

struct NSHTTPCookieStorage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSHTTPCookieStorageInternal *_internal;
};

@property(class, readonly, strong) NSHTTPCookieStorage *sharedHTTPCookieStorage;
// + (NSHTTPCookieStorage *)sharedCookieStorageForGroupContainerIdentifier:(NSString *)identifier __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable , readonly, copy) NSArray<NSHTTPCookie *> *cookies;







// - (void)setCookie:(NSHTTPCookie *)cookie;





// - (void)deleteCookie:(NSHTTPCookie *)cookie;





// - (void)removeCookiesSinceDate:(NSDate *)date __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSArray<NSHTTPCookie *> *)cookiesForURL:(NSURL *)URL;
// - (void)setCookies:(NSArray<NSHTTPCookie *> *)cookies forURL:(nullable NSURL *)URL mainDocumentURL:(nullable NSURL *)mainDocumentURL;





// @property NSHTTPCookieAcceptPolicy cookieAcceptPolicy;







// - (NSArray<NSHTTPCookie *> *)sortedCookiesUsingDescriptors:(NSArray<NSSortDescriptor *> *) sortOrder __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSHTTPCookieStorage (NSURLSessionTaskAdditions)
// - (void)storeCookies:(NSArray<NSHTTPCookie *> *)cookies forTask:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getCookiesForTask:(NSURLSessionTask *)task completionHandler:(void (^) (NSArray<NSHTTPCookie *> * _Nullable cookies))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */








extern "C" NSNotificationName const NSHTTPCookieManagerAcceptPolicyChangedNotification;





extern "C" NSNotificationName const NSHTTPCookieManagerCookiesChangedNotification;
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSIndexPath
#define _REWRITER_typedef_NSIndexPath
typedef struct objc_object NSIndexPath;
typedef struct {} _objc_exc_NSIndexPath;
#endif

struct NSIndexPath_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger *_indexes;
	NSUInteger _length;
	void *_reserved;
};


// + (instancetype)indexPathWithIndex:(NSUInteger)index;
// + (instancetype)indexPathWithIndexes:(const NSUInteger [_Nullable])indexes length:(NSUInteger)length;

// - (instancetype)initWithIndexes:(const NSUInteger [_Nullable])indexes length:(NSUInteger)length __attribute__((objc_designated_initializer));

// - (instancetype)initWithIndex:(NSUInteger)index;


// - (NSIndexPath *)indexPathByAddingIndex:(NSUInteger)index;
// - (NSIndexPath *)indexPathByRemovingLastIndex;

// - (NSUInteger)indexAtPosition:(NSUInteger)position;
// @property (readonly) NSUInteger length;
// - (void)getIndexes:(NSUInteger *)indexes range:(NSRange)positionRange __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (NSComparisonResult)compare:(NSIndexPath *)otherObject;

/* @end */


// @interface NSIndexPath (NSDeprecated)

// - (void)getIndexes:(NSUInteger *)indexes __attribute__((availability(macos,introduced=10.0,deprecated=100000,replacement="getIndexes:range:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="getIndexes:range:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="getIndexes:range:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="getIndexes:range:")));
/* @end */

#pragma clang assume_nonnull end








// @class NSMethodSignature;
#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif


#pragma clang assume_nonnull begin

__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif

struct NSInvocation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSInvocation *)invocationWithMethodSignature:(NSMethodSignature *)sig;

// @property (readonly, retain) NSMethodSignature *methodSignature;

// - (void)retainArguments;
// @property (readonly) BOOL argumentsRetained;

// @property (nullable, assign) id target;
// @property SEL selector;

// - (void)getReturnValue:(void *)retLoc;
// - (void)setReturnValue:(void *)retLoc;

// - (void)getArgument:(void *)argumentLocation atIndex:(NSInteger)idx;
// - (void)setArgument:(void *)argumentLocation atIndex:(NSInteger)idx;

// - (void)invoke;
// - (void)invokeWithTarget:(id)target;

/* @end */

#pragma clang assume_nonnull end







// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSJSONReadingOptions; enum {
    NSJSONReadingMutableContainers = (1UL << 0),
    NSJSONReadingMutableLeaves = (1UL << 1),
    NSJSONReadingFragmentsAllowed = (1UL << 2),
    NSJSONReadingAllowFragments __attribute__((availability(macos,introduced=10.7,deprecated=100000,replacement="NSJSONReadingFragmentsAllowed"))) __attribute__((availability(ios,introduced=5.0,deprecated=100000,replacement="NSJSONReadingFragmentsAllowed"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="NSJSONReadingFragmentsAllowed"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="NSJSONReadingFragmentsAllowed"))) = NSJSONReadingFragmentsAllowed,
} __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSJSONWritingOptions; enum {
    NSJSONWritingPrettyPrinted = (1UL << 0),



    NSJSONWritingSortedKeys __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = (1UL << 1),
    NSJSONWritingFragmentsAllowed = (1UL << 2),
    NSJSONWritingWithoutEscapingSlashes __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = (1UL << 3),
} __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSJSONSerialization
#define _REWRITER_typedef_NSJSONSerialization
typedef struct objc_object NSJSONSerialization;
typedef struct {} _objc_exc_NSJSONSerialization;
#endif

struct NSJSONSerialization_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *reserved[6];
};

// + (BOOL)isValidJSONObject:(id)obj;



// + (nullable NSData *)dataWithJSONObject:(id)obj options:(NSJSONWritingOptions)opt error:(NSError **)error;




// + (nullable id)JSONObjectWithData:(NSData *)data options:(NSJSONReadingOptions)opt error:(NSError **)error;



// + (NSInteger)writeJSONObject:(id)obj toStream:(NSOutputStream *)stream options:(NSJSONWritingOptions)opt error:(NSError **)error;



// + (nullable id)JSONObjectWithStream:(NSInputStream *)stream options:(NSJSONReadingOptions)opt error:(NSError **)error;

/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSOrderedSet
#define _REWRITER_typedef_NSOrderedSet
typedef struct objc_object NSOrderedSet;
typedef struct {} _objc_exc_NSOrderedSet;
#endif

struct NSOrderedSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (ObjectType)objectAtIndex:(NSUInteger)idx;
// - (NSUInteger)indexOfObject:(ObjectType)object;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSOrderedSet<ObjectType> (NSExtendedOrderedSet)

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'array' instead")));
// - (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;
// @property (nullable, nonatomic, readonly) ObjectType firstObject;
// @property (nullable, nonatomic, readonly) ObjectType lastObject;

// - (BOOL)isEqualToOrderedSet:(NSOrderedSet<ObjectType> *)other;

// - (BOOL)containsObject:(ObjectType)object;
// - (BOOL)intersectsOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (BOOL)intersectsSet:(NSSet<ObjectType> *)set;

// - (BOOL)isSubsetOfOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)set;

// - (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSEnumerator<ObjectType> *)reverseObjectEnumerator;

// @property (readonly, copy) NSOrderedSet<ObjectType> *reversedOrderedSet;







// @property (readonly, strong) NSArray<ObjectType> *array;
// @property (readonly, strong) NSSet<ObjectType> *set;

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
// - (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;

// - (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

// - (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

// - (NSUInteger)indexOfObject:(ObjectType)object inSortedRange:(NSRange)range options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp;

// - (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;

// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;

/* @end */


// @interface NSOrderedSet<ObjectType> (NSOrderedSetCreation)

// + (instancetype)orderedSet;
// + (instancetype)orderedSetWithObject:(ObjectType)object;
// + (instancetype)orderedSetWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)orderedSetWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
// + (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// + (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array;
// + (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array range:(NSRange)range copyItems:(BOOL)flag;
// + (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set;
// + (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

// - (instancetype)initWithObject:(ObjectType)object;
// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

/* @end */


__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
__attribute__((availability(swift, unavailable, message="NSOrderedSet diffing methods are not available in Swift, use Collection.difference(from:) instead")))
// @interface NSOrderedSet<ObjectType> (NSOrderedSetDiffing)

// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromOrderedSet:(NSOrderedSet<ObjectType> *)other withOptions:(NSOrderedCollectionDifferenceCalculationOptions)options usingEquivalenceTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj1, ObjectType obj2))block;

// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromOrderedSet:(NSOrderedSet<ObjectType> *)other withOptions:(NSOrderedCollectionDifferenceCalculationOptions)options;


// - (NSOrderedCollectionDifference<ObjectType> *)differenceFromOrderedSet:(NSOrderedSet<ObjectType> *)other;

// - (nullable NSOrderedSet<ObjectType> *)orderedSetByApplyingDifference:(NSOrderedCollectionDifference<ObjectType> *)difference;

/* @end */




__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMutableOrderedSet
#define _REWRITER_typedef_NSMutableOrderedSet
typedef struct objc_object NSMutableOrderedSet;
typedef struct {} _objc_exc_NSMutableOrderedSet;
#endif

struct NSMutableOrderedSet_IMPL {
	struct NSOrderedSet_IMPL NSOrderedSet_IVARS;
};


// - (void)insertObject:(ObjectType)object atIndex:(NSUInteger)idx;
// - (void)removeObjectAtIndex:(NSUInteger)idx;
// - (void)replaceObjectAtIndex:(NSUInteger)idx withObject:(ObjectType)object;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSExtendedMutableOrderedSet)

// - (void)addObject:(ObjectType)object;
// - (void)addObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)count;
// - (void)addObjectsFromArray:(NSArray<ObjectType> *)array;

// - (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
// - (void)moveObjectsAtIndexes:(NSIndexSet *)indexes toIndex:(NSUInteger)idx;

// - (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;

// - (void)setObject:(ObjectType)obj atIndex:(NSUInteger)idx;
// - (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)replaceObjectsInRange:(NSRange)range withObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)count;
// - (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

// - (void)removeObjectsInRange:(NSRange)range;
// - (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
// - (void)removeAllObjects;

// - (void)removeObject:(ObjectType)object;
// - (void)removeObjectsInArray:(NSArray<ObjectType> *)array;

// - (void)intersectOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (void)minusOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (void)unionOrderedSet:(NSOrderedSet<ObjectType> *)other;

// - (void)intersectSet:(NSSet<ObjectType> *)other;
// - (void)minusSet:(NSSet<ObjectType> *)other;
// - (void)unionSet:(NSSet<ObjectType> *)other;


// - (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (void)sortRange:(NSRange)range options:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;


/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSMutableOrderedSetCreation)

// + (instancetype)orderedSetWithCapacity:(NSUInteger)numItems;

/* @end */


__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
__attribute__((availability(swift, unavailable, message="NSMutableOrderedSet diffing methods are not available in Swift")))
// @interface NSMutableOrderedSet<ObjectType> (NSMutableOrderedSetDiffing)

// - (void)applyDifference:(NSOrderedCollectionDifference<ObjectType> *)difference;

/* @end */

#pragma clang assume_nonnull end



// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin







extern "C" NSExceptionName const NSUndefinedKeyException;

typedef NSString * NSKeyValueOperator __attribute__((swift_wrapper(enum)));



extern "C" NSKeyValueOperator const NSAverageKeyValueOperator;
extern "C" NSKeyValueOperator const NSCountKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfArraysKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfObjectsKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfSetsKeyValueOperator;
extern "C" NSKeyValueOperator const NSMaximumKeyValueOperator;
extern "C" NSKeyValueOperator const NSMinimumKeyValueOperator;
extern "C" NSKeyValueOperator const NSSumKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfArraysKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfObjectsKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfSetsKeyValueOperator;

// @interface NSObject(NSKeyValueCoding)



@property (class, readonly) BOOL accessInstanceVariablesDirectly;
// - (nullable id)valueForKey:(NSString *)key;
// - (void)setValue:(nullable id)value forKey:(NSString *)key;





// - (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKey:(NSString *)inKey error:(out NSError **)outError;
// - (NSMutableArray *)mutableArrayValueForKey:(NSString *)key;
// - (NSMutableOrderedSet *)mutableOrderedSetValueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSMutableSet *)mutableSetValueForKey:(NSString *)key;



// - (nullable id)valueForKeyPath:(NSString *)keyPath;
// - (void)setValue:(nullable id)value forKeyPath:(NSString *)keyPath;
// - (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKeyPath:(NSString *)inKeyPath error:(out NSError **)outError;
// - (NSMutableArray *)mutableArrayValueForKeyPath:(NSString *)keyPath;
// - (NSMutableOrderedSet *)mutableOrderedSetValueForKeyPath:(NSString *)keyPath __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSMutableSet *)mutableSetValueForKeyPath:(NSString *)keyPath;



// - (nullable id)valueForUndefinedKey:(NSString *)key;



// - (void)setValue:(nullable id)value forUndefinedKey:(NSString *)key;



// - (void)setNilValueForKey:(NSString *)key;



// - (NSDictionary<NSString *, id> *)dictionaryWithValuesForKeys:(NSArray<NSString *> *)keys;



// - (void)setValuesForKeysWithDictionary:(NSDictionary<NSString *, id> *)keyedValues;

/* @end */


// @interface NSArray<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key;



// - (void)setValue:(nullable id)value forKey:(NSString *)key;

/* @end */


// @interface NSDictionary<KeyType, ObjectType>(NSKeyValueCoding)



// - (nullable ObjectType)valueForKey:(NSString *)key;

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType>(NSKeyValueCoding)



// - (void)setValue:(nullable ObjectType)value forKey:(NSString *)key;

/* @end */


// @interface NSOrderedSet<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setValue:(nullable id)value forKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSSet<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key;



// - (void)setValue:(nullable id)value forKey:(NSString *)key;

/* @end */

#pragma clang assume_nonnull end
// @class NSIndexSet;
#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSKeyValueObservingOptions; enum {



    NSKeyValueObservingOptionNew = 0x01,
    NSKeyValueObservingOptionOld = 0x02,



    NSKeyValueObservingOptionInitial __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04,





    NSKeyValueObservingOptionPrior __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x08

};



typedef NSUInteger NSKeyValueChange; enum {
    NSKeyValueChangeSetting = 1,
    NSKeyValueChangeInsertion = 2,
    NSKeyValueChangeRemoval = 3,
    NSKeyValueChangeReplacement = 4,
};



typedef NSUInteger NSKeyValueSetMutationKind; enum {
    NSKeyValueUnionSetMutation = 1,
    NSKeyValueMinusSetMutation = 2,
    NSKeyValueIntersectSetMutation = 3,
    NSKeyValueSetSetMutation = 4
};

typedef NSString * NSKeyValueChangeKey __attribute__((swift_wrapper(enum)));


extern "C" NSKeyValueChangeKey const NSKeyValueChangeKindKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeNewKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeOldKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeIndexesKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeNotificationIsPriorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @interface NSObject(NSKeyValueObserving)
// - (void)observeValueForKeyPath:(nullable NSString *)keyPath ofObject:(nullable id)object change:(nullable NSDictionary<NSKeyValueChangeKey, id> *)change context:(nullable void *)context;

/* @end */


// @interface NSObject(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSArray<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath;



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSOrderedSet<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSSet<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSObject(NSKeyValueObserverNotification)







// - (void)willChangeValueForKey:(NSString *)key;
// - (void)didChangeValueForKey:(NSString *)key;







// - (void)willChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
// - (void)didChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
// - (void)willChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;
// - (void)didChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;

/* @end */


// @interface NSObject(NSKeyValueObservingCustomization)
// + (NSSet<NSString *> *)keyPathsForValuesAffectingValueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (BOOL)automaticallyNotifiesObserversForKey:(NSString *)key;



// @property (nullable) void *observationInfo __attribute__((objc_returns_inner_pointer));

/* @end */

#pragma clang assume_nonnull end












// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSPropertyListMutabilityOptions; enum {
    NSPropertyListImmutable = kCFPropertyListImmutable,
    NSPropertyListMutableContainers = kCFPropertyListMutableContainers,
    NSPropertyListMutableContainersAndLeaves = kCFPropertyListMutableContainersAndLeaves
};

typedef NSUInteger NSPropertyListFormat; enum {
    NSPropertyListOpenStepFormat = kCFPropertyListOpenStepFormat,
    NSPropertyListXMLFormat_v1_0 = kCFPropertyListXMLFormat_v1_0,
    NSPropertyListBinaryFormat_v1_0 = kCFPropertyListBinaryFormat_v1_0
};

typedef NSPropertyListMutabilityOptions NSPropertyListReadOptions;
typedef NSUInteger NSPropertyListWriteOptions;


#ifndef _REWRITER_typedef_NSPropertyListSerialization
#define _REWRITER_typedef_NSPropertyListSerialization
typedef struct objc_object NSPropertyListSerialization;
typedef struct {} _objc_exc_NSPropertyListSerialization;
#endif

struct NSPropertyListSerialization_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *reserved[6];
};




// + (BOOL)propertyList:(id)plist isValidForFormat:(NSPropertyListFormat)format;



// + (nullable NSData *)dataWithPropertyList:(id)plist format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSInteger)writePropertyList:(id)plist toStream:(NSOutputStream *)stream format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable id)propertyListWithData:(NSData *)data options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable id)propertyListWithStream:(NSInputStream *)stream options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// + (nullable NSData *)dataFromPropertyList:(id)plist format:(NSPropertyListFormat)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use dataWithPropertyList:format:options:error: instead.")));



// + (nullable id)propertyListFromData:(NSData *)data mutabilityOption:(NSPropertyListMutabilityOptions)opt format:(nullable NSPropertyListFormat *)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use propertyListWithData:options:format:error: instead.")));

/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableData
#define _REWRITER_typedef_NSMutableData
typedef struct objc_object NSMutableData;
typedef struct {} _objc_exc_NSMutableData;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSKeyedArchiverDelegate, NSKeyedUnarchiverDelegate;

#pragma clang assume_nonnull begin

extern "C" NSExceptionName const NSInvalidArchiveOperationException;
extern "C" NSExceptionName const NSInvalidUnarchiveOperationException;

extern "C" NSString * const NSKeyedArchiveRootObjectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSKeyedArchiver
#define _REWRITER_typedef_NSKeyedArchiver
typedef struct objc_object NSKeyedArchiver;
typedef struct {} _objc_exc_NSKeyedArchiver;
#endif

struct NSKeyedArchiver_IMPL {
	struct NSCoder_IMPL NSCoder_IVARS;
	void *_stream;
	NSUInteger _flags;
	id _delegate;
	id _containers;
	id _objects;
	id _objRefMap;
	id _replacementMap;
	id _classNameMap;
	id _conditionals;
	id _classes;
	NSUInteger _genericKey;
	void *_cache;
	NSUInteger _cacheSize;
	NSUInteger _estimatedCount;
	void *_reserved2;
	id _visited;
	void *_reserved0;
};

// - (instancetype)initRequiringSecureCoding:(BOOL)requiresSecureCoding __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (nullable NSData *)archivedDataWithRootObject:(id)object requiringSecureCoding:(BOOL)requiresSecureCoding error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (instancetype)init __attribute__((availability(macosx,introduced=10.12,deprecated=10.14,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(ios,introduced=10.0,deprecated=12.0,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(watchos,introduced=3.0,deprecated=5.0,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(tvos,introduced=10.0,deprecated=12.0,message="Use -initRequiringSecureCoding: instead")));
// - (instancetype)initForWritingWithMutableData:(NSMutableData *)data __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use -initRequiringSecureCoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use -initRequiringSecureCoding: instead")));

// + (NSData *)archivedDataWithRootObject:(id)rootObject __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead")));
// + (BOOL)archiveRootObject:(id)rootObject toFile:(NSString *)path __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use +archivedDataWithRootObject:requiringSecureCoding:error: instead")));

// @property (nullable, assign) id <NSKeyedArchiverDelegate> delegate;

// @property NSPropertyListFormat outputFormat;


// @property (readonly, strong) NSData *encodedData __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (void)finishEncoding;

// + (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;
// - (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;



// + (nullable NSString *)classNameForClass:(Class)cls;
// - (nullable NSString *)classNameForClass:(Class)cls;

// - (void)encodeObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeConditionalObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeBool:(BOOL)value forKey:(NSString *)key;
// - (void)encodeInt:(int)value forKey:(NSString *)key;
// - (void)encodeInt32:(int32_t)value forKey:(NSString *)key;
// - (void)encodeInt64:(int64_t)value forKey:(NSString *)key;
// - (void)encodeFloat:(float)value forKey:(NSString *)key;
// - (void)encodeDouble:(double)value forKey:(NSString *)key;
// - (void)encodeBytes:(nullable const uint8_t *)bytes length:(NSUInteger)length forKey:(NSString *)key;


// @property (readwrite) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSKeyedUnarchiver
#define _REWRITER_typedef_NSKeyedUnarchiver
typedef struct objc_object NSKeyedUnarchiver;
typedef struct {} _objc_exc_NSKeyedUnarchiver;
#endif

struct NSKeyedUnarchiver_IMPL {
	struct NSCoder_IMPL NSCoder_IVARS;
	id _delegate;
	uint32_t _flags;
	id _objRefMap;
	id _replacementMap;
	id _nameClassMap;
	id _tmpRefObjMap;
	id _refObjMap;
	int32_t _genericKey;
	id _data;
	void *_offsetData;
	id _containers;
	id _objects;
	const uint8_t *_bytes;
	uint64_t _len;
	id _helper;
	void *_reserved0;
};

// - (nullable instancetype)initForReadingFromData:(NSData *)data error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (nullable id)unarchivedObjectOfClass:(Class)cls fromData:(NSData *)data error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));
// + (nullable id)unarchivedObjectOfClasses:(NSSet<Class> *)classes fromData:(NSData *)data error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));

// - (instancetype)init __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use -initForReadingFromData:error: instead")));
// - (instancetype)initForReadingWithData:(NSData *)data __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use -initForReadingFromData:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use -initForReadingFromData:error: instead")));

// + (nullable id)unarchiveObjectWithData:(NSData *)data __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead")));
// + (nullable id)unarchiveTopLevelObjectWithData:(NSData *)data error:(NSError **)error __attribute__((availability(macosx,introduced=10.11,deprecated=10.14,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(swift, unavailable, message="Use 'unarchiveTopLevelObjectWithData(_:) throws' instead")));
// + (nullable id)unarchiveObjectWithFile:(NSString *)path __attribute__((availability(macosx,introduced=10.2,deprecated=10.14,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="Use +unarchivedObjectOfClass:fromData:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Use +unarchivedObjectOfClass:fromData:error: instead")));

// @property (nullable, assign) id <NSKeyedUnarchiverDelegate> delegate;

// - (void)finishDecoding;

// + (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;
// - (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;



// + (nullable Class)classForClassName:(NSString *)codedName;
// - (nullable Class)classForClassName:(NSString *)codedName;

// - (BOOL)containsValueForKey:(NSString *)key;

// - (nullable id)decodeObjectForKey:(NSString *)key;
// - (BOOL)decodeBoolForKey:(NSString *)key;
// - (int)decodeIntForKey:(NSString *)key;
// - (int32_t)decodeInt32ForKey:(NSString *)key;
// - (int64_t)decodeInt64ForKey:(NSString *)key;
// - (float)decodeFloatForKey:(NSString *)key;
// - (double)decodeDoubleForKey:(NSString *)key;
// - (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));


// @property (readwrite) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readwrite) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @protocol NSKeyedArchiverDelegate <NSObject>
/* @optional */


// - (nullable id)archiver:(NSKeyedArchiver *)archiver willEncodeObject:(id)object;
// - (void)archiver:(NSKeyedArchiver *)archiver didEncodeObject:(nullable id)object;






// - (void)archiver:(NSKeyedArchiver *)archiver willReplaceObject:(nullable id)object withObject:(nullable id)newObject;





// - (void)archiverWillFinish:(NSKeyedArchiver *)archiver;


// - (void)archiverDidFinish:(NSKeyedArchiver *)archiver;


/* @end */


// @protocol NSKeyedUnarchiverDelegate <NSObject>
/* @optional */


// - (nullable Class)unarchiver:(NSKeyedUnarchiver *)unarchiver cannotDecodeObjectOfClassName:(NSString *)name originalClasses:(NSArray<NSString *> *)classNames;
// - (nullable id)unarchiver:(NSKeyedUnarchiver *)unarchiver didDecodeObject:(nullable id) __attribute__((ns_consumed)) object __attribute__((ns_returns_retained));







// - (void)unarchiver:(NSKeyedUnarchiver *)unarchiver willReplaceObject:(id)object withObject:(id)newObject;





// - (void)unarchiverWillFinish:(NSKeyedUnarchiver *)unarchiver;


// - (void)unarchiverDidFinish:(NSKeyedUnarchiver *)unarchiver;


/* @end */


// @interface NSObject (NSKeyedArchiverObjectSubstitution)

// @property (nullable, readonly) Class classForKeyedArchiver;
// - (nullable id)replacementObjectForKeyedArchiver:(NSKeyedArchiver *)archiver;
// + (NSArray<NSString *> *)classFallbacksForKeyedArchiver;


/* @end */


// @interface NSObject (NSKeyedUnarchiverObjectSubstitution)

// + (Class)classForKeyedUnarchiver;





/* @end */

#pragma clang assume_nonnull end







// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif


#pragma clang assume_nonnull begin

// @protocol NSLocking

// - (void)lock;
// - (void)unlock;

/* @end */



#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

struct NSLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (BOOL)tryLock;
// - (BOOL)lockBeforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSConditionLock
#define _REWRITER_typedef_NSConditionLock
typedef struct objc_object NSConditionLock;
typedef struct {} _objc_exc_NSConditionLock;
#endif

struct NSConditionLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (instancetype)initWithCondition:(NSInteger)condition __attribute__((objc_designated_initializer));

// @property (readonly) NSInteger condition;
// - (void)lockWhenCondition:(NSInteger)condition;
// - (BOOL)tryLock;
// - (BOOL)tryLockWhenCondition:(NSInteger)condition;
// - (void)unlockWithCondition:(NSInteger)condition;
// - (BOOL)lockBeforeDate:(NSDate *)limit;
// - (BOOL)lockWhenCondition:(NSInteger)condition beforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSRecursiveLock
#define _REWRITER_typedef_NSRecursiveLock
typedef struct objc_object NSRecursiveLock;
typedef struct {} _objc_exc_NSRecursiveLock;
#endif

struct NSRecursiveLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (BOOL)tryLock;
// - (BOOL)lockBeforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSCondition
#define _REWRITER_typedef_NSCondition
typedef struct objc_object NSCondition;
typedef struct {} _objc_exc_NSCondition;
#endif

struct NSCondition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (void)wait;
// - (BOOL)waitUntilDate:(NSDate *)limit;
// - (void)signal;
// - (void)broadcast;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMapTable
#define _REWRITER_typedef_NSMapTable
typedef struct objc_object NSMapTable;
typedef struct {} _objc_exc_NSMapTable;
#endif


#pragma clang assume_nonnull begin







static const NSPointerFunctionsOptions NSMapTableStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsStrongMemory;
static const NSPointerFunctionsOptions NSMapTableZeroingWeakMemory __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = NSPointerFunctionsZeroingWeakMemory;
static const NSPointerFunctionsOptions NSMapTableCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSMapTableObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSMapTableWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSMapTableOptions;

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMapTable
#define _REWRITER_typedef_NSMapTable
typedef struct objc_object NSMapTable;
typedef struct {} _objc_exc_NSMapTable;
#endif

struct NSMapTable_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
// - (instancetype)initWithKeyPointerFunctions:(NSPointerFunctions *)keyFunctions valuePointerFunctions:(NSPointerFunctions *)valueFunctions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));

// + (NSMapTable<KeyType, ObjectType> *)mapTableWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions;

// + (id)mapTableWithStrongToStrongObjects __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// + (id)mapTableWithWeakToStrongObjects __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// + (id)mapTableWithStrongToWeakObjects __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// + (id)mapTableWithWeakToWeakObjects __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="GC no longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// + (NSMapTable<KeyType, ObjectType> *)strongToStrongObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)weakToStrongObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)strongToWeakObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)weakToWeakObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSPointerFunctions *keyPointerFunctions;
// @property (readonly, copy) NSPointerFunctions *valuePointerFunctions;

// - (nullable ObjectType)objectForKey:(nullable KeyType)aKey;

// - (void)removeObjectForKey:(nullable KeyType)aKey;
// - (void)setObject:(nullable ObjectType)anObject forKey:(nullable KeyType)aKey;

// @property (readonly) NSUInteger count;

// - (NSEnumerator<KeyType> *)keyEnumerator;
// - (nullable NSEnumerator<ObjectType> *)objectEnumerator;

// - (void)removeAllObjects;

// - (NSDictionary<KeyType, ObjectType> *)dictionaryRepresentation;
/* @end */





typedef struct {NSUInteger _pi; NSUInteger _si; void * _Nullable _bs;} NSMapEnumerator;



extern "C" void NSFreeMapTable(NSMapTable *table);
extern "C" void NSResetMapTable(NSMapTable *table);
extern "C" BOOL NSCompareMapTables(NSMapTable *table1, NSMapTable *table2);
extern "C" NSMapTable *NSCopyMapTableWithZone(NSMapTable *table, NSZone * _Nullable zone);
extern "C" BOOL NSMapMember(NSMapTable *table, const void *key, void * _Nullable * _Nullable originalKey, void * _Nullable * _Nullable value);
extern "C" void * _Nullable NSMapGet(NSMapTable *table, const void * _Nullable key);
extern "C" void NSMapInsert(NSMapTable *table, const void * _Nullable key, const void * _Nullable value);
extern "C" void NSMapInsertKnownAbsent(NSMapTable *table, const void * _Nullable key, const void * _Nullable value);
extern "C" void * _Nullable NSMapInsertIfAbsent(NSMapTable *table, const void * _Nullable key, const void * _Nullable value);
extern "C" void NSMapRemove(NSMapTable *table, const void * _Nullable key);
extern "C" NSMapEnumerator NSEnumerateMapTable(NSMapTable *table);
extern "C" BOOL NSNextMapEnumeratorPair(NSMapEnumerator *enumerator, void * _Nullable * _Nullable key, void * _Nullable * _Nullable value);
extern "C" void NSEndMapTableEnumeration(NSMapEnumerator *enumerator);
extern "C" NSUInteger NSCountMapTable(NSMapTable *table);
extern "C" NSString *NSStringFromMapTable(NSMapTable *table);
extern "C" NSArray *NSAllMapTableKeys(NSMapTable *table);
extern "C" NSArray *NSAllMapTableValues(NSMapTable *table);




typedef struct {
    NSUInteger (* _Nullable hash)(NSMapTable *table, const void *);
    BOOL (* _Nullable isEqual)(NSMapTable *table, const void *, const void *);
    void (* _Nullable retain)(NSMapTable *table, const void *);
    void (* _Nullable release)(NSMapTable *table, void *);
    NSString * _Nullable (* _Nullable describe)(NSMapTable *table, const void *);
    const void * _Nullable notAKeyMarker;
} NSMapTableKeyCallBacks;





typedef struct {
    void (* _Nullable retain)(NSMapTable *table, const void *);
    void (* _Nullable release)(NSMapTable *table, void *);
    NSString * _Nullable(* _Nullable describe)(NSMapTable *table, const void *);
} NSMapTableValueCallBacks;

extern "C" NSMapTable *NSCreateMapTableWithZone(NSMapTableKeyCallBacks keyCallBacks, NSMapTableValueCallBacks valueCallBacks, NSUInteger capacity, NSZone * _Nullable zone);
extern "C" NSMapTable *NSCreateMapTable(NSMapTableKeyCallBacks keyCallBacks, NSMapTableValueCallBacks valueCallBacks, NSUInteger capacity);




extern "C" const NSMapTableKeyCallBacks NSIntegerMapKeyCallBacks __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" const NSMapTableKeyCallBacks NSNonOwnedPointerMapKeyCallBacks;
extern "C" const NSMapTableKeyCallBacks NSNonOwnedPointerOrNullMapKeyCallBacks;
extern "C" const NSMapTableKeyCallBacks NSNonRetainedObjectMapKeyCallBacks;
extern "C" const NSMapTableKeyCallBacks NSObjectMapKeyCallBacks;
extern "C" const NSMapTableKeyCallBacks NSOwnedPointerMapKeyCallBacks;
extern "C" const NSMapTableKeyCallBacks NSIntMapKeyCallBacks __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));



extern "C" const NSMapTableValueCallBacks NSIntegerMapValueCallBacks __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" const NSMapTableValueCallBacks NSNonOwnedPointerMapValueCallBacks;
extern "C" const NSMapTableValueCallBacks NSObjectMapValueCallBacks;
extern "C" const NSMapTableValueCallBacks NSNonRetainedObjectMapValueCallBacks;
extern "C" const NSMapTableValueCallBacks NSOwnedPointerMapValueCallBacks;
extern "C" const NSMapTableValueCallBacks NSIntMapValueCallBacks __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

struct NSMethodSignature_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (nullable NSMethodSignature *)signatureWithObjCTypes:(const char *)types;

// @property (readonly) NSUInteger numberOfArguments;
// - (const char *)getArgumentTypeAtIndex:(NSUInteger)idx __attribute__((objc_returns_inner_pointer));

// @property (readonly) NSUInteger frameLength;

// - (BOOL)isOneway;

// @property (readonly) const char *methodReturnType __attribute__((objc_returns_inner_pointer));
// @property (readonly) NSUInteger methodReturnLength;

/* @end */

#pragma clang assume_nonnull end








// @class NSNotification;
#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif

#ifndef _REWRITER_typedef_NSNotificationCenter
#define _REWRITER_typedef_NSNotificationCenter
typedef struct objc_object NSNotificationCenter;
typedef struct {} _objc_exc_NSNotificationCenter;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSPostingStyle; enum {
    NSPostWhenIdle = 1,
    NSPostASAP = 2,
    NSPostNow = 3
};

typedef NSUInteger NSNotificationCoalescing; enum {
    NSNotificationNoCoalescing = 0,
    NSNotificationCoalescingOnName = 1,
    NSNotificationCoalescingOnSender = 2
};


#ifndef _REWRITER_typedef_NSNotificationQueue
#define _REWRITER_typedef_NSNotificationQueue
typedef struct objc_object NSNotificationQueue;
typedef struct {} _objc_exc_NSNotificationQueue;
#endif

struct NSNotificationQueue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _notificationCenter;
	id _asapQueue;
	id _asapObs;
	id _idleQueue;
	id _idleObs;
};

@property (class, readonly, strong) NSNotificationQueue *defaultQueue;

// - (instancetype)initWithNotificationCenter:(NSNotificationCenter *)notificationCenter __attribute__((objc_designated_initializer));

// - (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle;
// - (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle coalesceMask:(NSNotificationCoalescing)coalesceMask forModes:(nullable NSArray<NSRunLoopMode> *)modes;

// - (void)dequeueNotificationsMatching:(NSNotification *)notification coalesceMask:(NSUInteger)coalesceMask;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSNull
#define _REWRITER_typedef_NSNull
typedef struct objc_object NSNull;
typedef struct {} _objc_exc_NSNull;
#endif

struct NSNull_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSNull *)null;

/* @end */

#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin








__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSOperation
#define _REWRITER_typedef_NSOperation
typedef struct objc_object NSOperation;
typedef struct {} _objc_exc_NSOperation;
#endif

struct NSOperation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (void)start;
// - (void)main;

// @property (readonly, getter=isCancelled) BOOL cancelled;
// - (void)cancel;

// @property (readonly, getter=isExecuting) BOOL executing;
// @property (readonly, getter=isFinished) BOOL finished;
// @property (readonly, getter=isConcurrent) BOOL concurrent;
// @property (readonly, getter=isAsynchronous) BOOL asynchronous __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isReady) BOOL ready;

// - (void)addDependency:(NSOperation *)op;
// - (void)removeDependency:(NSOperation *)op;

// @property (readonly, copy) NSArray<NSOperation *> *dependencies;

typedef NSInteger NSOperationQueuePriority; enum {
 NSOperationQueuePriorityVeryLow = -8L,
 NSOperationQueuePriorityLow = -4L,
 NSOperationQueuePriorityNormal = 0,
 NSOperationQueuePriorityHigh = 4,
 NSOperationQueuePriorityVeryHigh = 8
};

// @property NSOperationQueuePriority queuePriority;

// @property (nullable, copy) void (^completionBlock)(void) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)waitUntilFinished __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property double threadPriority __attribute__((availability(macos,introduced=10.6,deprecated=10.10,message="Not supported"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSBlockOperation
#define _REWRITER_typedef_NSBlockOperation
typedef struct objc_object NSBlockOperation;
typedef struct {} _objc_exc_NSBlockOperation;
#endif

struct NSBlockOperation_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
};

// + (instancetype)blockOperationWithBlock:(void (^)(void))block;

// - (void)addExecutionBlock:(void (^)(void))block;
// @property (readonly, copy) NSArray<void (^)(void)> *executionBlocks;

/* @end */



__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSInvocationOperation
#define _REWRITER_typedef_NSInvocationOperation
typedef struct objc_object NSInvocationOperation;
typedef struct {} _objc_exc_NSInvocationOperation;
#endif

struct NSInvocationOperation_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
};

// - (nullable instancetype)initWithTarget:(id)target selector:(SEL)sel object:(nullable id)arg;
// - (instancetype)initWithInvocation:(NSInvocation *)inv __attribute__((objc_designated_initializer));

// @property (readonly, retain) NSInvocation *invocation;

// @property (nullable, readonly, retain) id result;

/* @end */


extern "C" NSExceptionName const NSInvocationOperationVoidResultException __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSExceptionName const NSInvocationOperationCancelledException __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

static const NSInteger NSOperationQueueDefaultMaxConcurrentOperationCount = -1;

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

struct NSOperationQueue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (readonly, strong) NSProgress *progress __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

// - (void)addOperation:(NSOperation *)op;
// - (void)addOperations:(NSArray<NSOperation *> *)ops waitUntilFinished:(BOOL)wait __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)addOperationWithBlock:(void (^)(void))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)addBarrierBlock:(void (^)(void))barrier __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

// @property NSInteger maxConcurrentOperationCount;

// @property (getter=isSuspended) BOOL suspended;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, assign ) dispatch_queue_t underlyingQueue __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)cancelAllOperations;

// - (void)waitUntilAllOperationsAreFinished;

@property (class, readonly, strong, nullable) NSOperationQueue *currentQueue __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, strong) NSOperationQueue *mainQueue __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSOperationQueue (NSDeprecated)



// @property (readonly, copy) NSArray<__kindof NSOperation *> *operations __attribute__((availability(macos,introduced=10.5,deprecated=100000,message="access to operations is inherently a race condition, it should not be used. For barrier style behaviors please use addBarrierBlock: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,message="access to operations is inherently a race condition, it should not be used. For barrier style behaviors please use addBarrierBlock: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,message="access to operations is inherently a race condition, it should not be used. For barrier style behaviors please use addBarrierBlock: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,message="access to operations is inherently a race condition, it should not be used. For barrier style behaviors please use addBarrierBlock: instead")));

// @property (readonly) NSUInteger operationCount __attribute__((availability(macos,introduced=10.6,deprecated=100000,replacement="progress.completedUnitCount"))) __attribute__((availability(ios,introduced=4.0,deprecated=100000,replacement="progress.completedUnitCount"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="progress.completedUnitCount"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="progress.completedUnitCount")));

/* @end */

#pragma clang assume_nonnull end







// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin



__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

struct NSOrthography_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly, copy) NSString *dominantScript;
// @property (readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> *languageMap;
// - (instancetype)initWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSOrthography (NSOrthographyExtended)


// - (nullable NSArray<NSString *> *)languagesForScript:(NSString *)script __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSString *)dominantLanguageForScript:(NSString *)script __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSString *dominantLanguage __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *allScripts __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *allLanguages __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (instancetype)defaultOrthographyForLanguage:(NSString *)language __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSOrthography (NSOrthographyCreation)

// + (instancetype)orthographyWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPointerArray
#define _REWRITER_typedef_NSPointerArray
typedef struct objc_object NSPointerArray;
typedef struct {} _objc_exc_NSPointerArray;
#endif

struct NSPointerArray_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
// - (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions __attribute__((objc_designated_initializer));

// + (NSPointerArray *)pointerArrayWithOptions:(NSPointerFunctionsOptions)options;
// + (NSPointerArray *)pointerArrayWithPointerFunctions:(NSPointerFunctions *)functions;


// @property (readonly, copy) NSPointerFunctions *pointerFunctions;

// - (nullable void *)pointerAtIndex:(NSUInteger)index;


// - (void)addPointer:(nullable void *)pointer;
// - (void)removePointerAtIndex:(NSUInteger)index;
// - (void)insertPointer:(nullable void *)item atIndex:(NSUInteger)index;

// - (void)replacePointerAtIndex:(NSUInteger)index withPointer:(nullable void *)item;

// - (void)compact;



// @property NSUInteger count;

/* @end */



// @interface NSPointerArray (NSPointerArrayConveniences)







// + (NSPointerArray *)strongObjectsPointerArray __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSPointerArray *)weakObjectsPointerArray __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray *allObjects;

/* @end */

#pragma clang assume_nonnull end









typedef int NSSocketNativeHandle;

// @class NSRunLoop;
#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSMutableArray
#define _REWRITER_typedef_NSMutableArray
typedef struct objc_object NSMutableArray;
typedef struct {} _objc_exc_NSMutableArray;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSConnection;
#ifndef _REWRITER_typedef_NSConnection
#define _REWRITER_typedef_NSConnection
typedef struct objc_object NSConnection;
typedef struct {} _objc_exc_NSConnection;
#endif

#ifndef _REWRITER_typedef_NSPortMessage
#define _REWRITER_typedef_NSPortMessage
typedef struct objc_object NSPortMessage;
typedef struct {} _objc_exc_NSPortMessage;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @protocol NSPortDelegate, NSMachPortDelegate;

#pragma clang assume_nonnull begin

extern "C" NSNotificationName const NSPortDidBecomeInvalidNotification;


#ifndef _REWRITER_typedef_NSPort
#define _REWRITER_typedef_NSPort
typedef struct objc_object NSPort;
typedef struct {} _objc_exc_NSPort;
#endif

struct NSPort_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};








// + (NSPort *)port;

// - (void)invalidate;
// @property (readonly, getter=isValid) BOOL valid;

// - (void)setDelegate:(nullable id <NSPortDelegate>)anObject;
// - (nullable id <NSPortDelegate>)delegate;





// - (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;



// @property (readonly) NSUInteger reservedSpaceLength;
// - (BOOL)sendBeforeDate:(NSDate *)limitDate components:(nullable NSMutableArray *)components from:(nullable NSPort *) receivePort reserved:(NSUInteger)headerSpaceReserved;
// - (BOOL)sendBeforeDate:(NSDate *)limitDate msgid:(NSUInteger)msgID components:(nullable NSMutableArray *)components from:(nullable NSPort *)receivePort reserved:(NSUInteger)headerSpaceReserved;
/* @end */


// @protocol NSPortDelegate <NSObject>
/* @optional */

// - (void)handlePortMessage:(NSPortMessage *)message;



/* @end */




__attribute__((objc_arc_weak_reference_unavailable))

#ifndef _REWRITER_typedef_NSMachPort
#define _REWRITER_typedef_NSMachPort
typedef struct objc_object NSMachPort;
typedef struct {} _objc_exc_NSMachPort;
#endif

struct NSMachPort_IMPL {
	struct NSPort_IMPL NSPort_IVARS;
	id _delegate;
	NSUInteger _flags;
	uint32_t _machPort;
	NSUInteger _reserved;
};


// + (NSPort *)portWithMachPort:(uint32_t)machPort;
// - (instancetype)initWithMachPort:(uint32_t)machPort __attribute__((objc_designated_initializer));

// - (void)setDelegate:(nullable id <NSMachPortDelegate>)anObject;
// - (nullable id <NSMachPortDelegate>)delegate;

typedef NSUInteger NSMachPortOptions; enum {
    NSMachPortDeallocateNone = 0,
    NSMachPortDeallocateSendRight = (1UL << 0),
    NSMachPortDeallocateReceiveRight = (1UL << 1)
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSPort *)portWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (instancetype)initWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

// @property (readonly) uint32_t machPort;

// - (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;




/* @end */


// @protocol NSMachPortDelegate <NSPortDelegate>
/* @optional */



// - (void)handleMachMessage:(void *)msg;

/* @end */






__attribute__((objc_arc_weak_reference_unavailable))

#ifndef _REWRITER_typedef_NSMessagePort
#define _REWRITER_typedef_NSMessagePort
typedef struct objc_object NSMessagePort;
typedef struct {} _objc_exc_NSMessagePort;
#endif

struct NSMessagePort_IMPL {
	struct NSPort_IMPL NSPort_IVARS;
	void *_port;
	id _delegate;
};


/* @end */








#ifndef _REWRITER_typedef_NSSocketPort
#define _REWRITER_typedef_NSSocketPort
typedef struct objc_object NSSocketPort;
typedef struct {} _objc_exc_NSSocketPort;
#endif

struct NSSocketPort_IMPL {
	struct NSPort_IMPL NSPort_IVARS;
	void *_receiver;
	id _connectors;
	void *_loops;
	void *_data;
	id _signature;
	id _delegate;
	id _lock;
	NSUInteger _maxSize;
	NSUInteger _useCount;
	NSUInteger _reserved;
};


// - (instancetype)init;
// - (nullable instancetype)initWithTCPPort:(unsigned short)port;
// - (nullable instancetype)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol socket:(NSSocketNativeHandle)sock __attribute__((objc_designated_initializer));
// - (nullable instancetype)initRemoteWithTCPPort:(unsigned short)port host:(nullable NSString *)hostName;
// - (instancetype)initRemoteWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address __attribute__((objc_designated_initializer));


// @property (readonly) int protocolFamily;
// @property (readonly) int socketType;
// @property (readonly) int protocol;
// @property (readonly, copy) NSData *address;
// @property (readonly) NSSocketNativeHandle socket;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

enum {
    NSWindowsNTOperatingSystem = 1,
    NSWindows95OperatingSystem,
    NSSolarisOperatingSystem,
    NSHPUXOperatingSystem,
    NSMACHOperatingSystem,
    NSSunOSOperatingSystem,
    NSOSF1OperatingSystem
} __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

typedef struct {
    NSInteger majorVersion;
    NSInteger minorVersion;
    NSInteger patchVersion;
} NSOperatingSystemVersion;

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif



#ifndef _REWRITER_typedef_NSProcessInfo
#define _REWRITER_typedef_NSProcessInfo
typedef struct objc_object NSProcessInfo;
typedef struct {} _objc_exc_NSProcessInfo;
#endif

struct NSProcessInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSDictionary *environment;
	NSArray *arguments;
	NSString *hostName;
	NSString *name;
	NSInteger automaticTerminationOptOutCounter;
};


@property (class, readonly, strong) NSProcessInfo *processInfo;

// @property (readonly, copy) NSDictionary<NSString *, NSString *> *environment;
// @property (readonly, copy) NSArray<NSString *> *arguments;
// @property (readonly, copy) NSString *hostName;
// @property (copy) NSString *processName;
// @property (readonly) int processIdentifier;

// @property (readonly, copy) NSString *globallyUniqueString;

// - (NSUInteger)operatingSystem __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead")));
// - (NSString *)operatingSystemName __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead")));


// @property (readonly, copy) NSString *operatingSystemVersionString;

// @property (readonly) NSOperatingSystemVersion operatingSystemVersion __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSUInteger processorCount __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSUInteger activeProcessorCount __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) unsigned long long physicalMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL) isOperatingSystemAtLeastVersion:(NSOperatingSystemVersion)version __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSTimeInterval systemUptime __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)disableSuddenTermination __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)enableSuddenTermination __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (void)disableAutomaticTermination:(NSString *)reason __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)enableAutomaticTermination:(NSString *)reason __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






// @property BOOL automaticTerminationSupportEnabled __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

typedef uint64_t NSActivityOptions; enum {
    NSActivityIdleDisplaySleepDisabled = (1ULL << 40),


    NSActivityIdleSystemSleepDisabled = (1ULL << 20),


    NSActivitySuddenTerminationDisabled = (1ULL << 14),


    NSActivityAutomaticTerminationDisabled = (1ULL << 15),





    NSActivityUserInitiated = (0x00FFFFFFULL | NSActivityIdleSystemSleepDisabled),
    NSActivityUserInitiatedAllowingIdleSystemSleep = (NSActivityUserInitiated & ~NSActivityIdleSystemSleepDisabled),


    NSActivityBackground = 0x000000FFULL,


    NSActivityLatencyCritical = 0xFF00000000ULL,
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @interface NSProcessInfo (NSProcessInfoActivity)



// - (id <NSObject>)beginActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)endActivity:(id <NSObject>)activity __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)performActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason usingBlock:(void (^)(void))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)performExpiringActivityWithReason:(NSString *)reason usingBlock:(void(^)(BOOL expired))block __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */


// @interface NSProcessInfo (NSUserInformation)

// @property (readonly, copy) NSString *userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSString *fullUserName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



typedef NSInteger NSProcessInfoThermalState; enum {

    NSProcessInfoThermalStateNominal,


    NSProcessInfoThermalStateFair,


    NSProcessInfoThermalStateSerious,


    NSProcessInfoThermalStateCritical
} __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// @interface NSProcessInfo (NSProcessInfoThermalState)


// @property (readonly) NSProcessInfoThermalState thermalState __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSProcessInfo (NSProcessInfoPowerState)


// @property (readonly, getter=isLowPowerModeEnabled) BOOL lowPowerModeEnabled __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */

extern "C" NSNotificationName const NSProcessInfoThermalStateDidChangeNotification __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" NSNotificationName const NSProcessInfoPowerStateDidChangeNotification __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

// @interface NSProcessInfo (NSProcessInfoPlatform)

// @property (readonly, getter=isMacCatalystApp) BOOL macCatalystApp __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSMethodSignature;
#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif


#pragma clang assume_nonnull begin

__attribute__((objc_root_class))

#ifndef _REWRITER_typedef_NSProxy
#define _REWRITER_typedef_NSProxy
typedef struct objc_object NSProxy;
typedef struct {} _objc_exc_NSProxy;
#endif

struct NSProxy_IMPL {
	Class isa;
};


// + (id)alloc;
// + (id)allocWithZone:(nullable NSZone *)zone ;
// + (Class)class;

// - (void)forwardInvocation:(NSInvocation *)invocation;
// - (nullable NSMethodSignature *)methodSignatureForSelector:(SEL)sel __attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")));
// - (void)dealloc;
// - (void)finalize;
// @property (readonly, copy) NSString *description;
// @property (readonly, copy) NSString *debugDescription;
// + (BOOL)respondsToSelector:(SEL)aSelector;

// - (BOOL)allowsWeakReference __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (BOOL)retainWeakReference __attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



/* @end */

#pragma clang assume_nonnull end















// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSRegularExpression
#define _REWRITER_typedef_NSRegularExpression
typedef struct objc_object NSRegularExpression;
typedef struct {} _objc_exc_NSRegularExpression;
#endif


#pragma clang assume_nonnull begin



typedef uint64_t NSTextCheckingType; enum {
    NSTextCheckingTypeOrthography = 1ULL << 0,
    NSTextCheckingTypeSpelling = 1ULL << 1,
    NSTextCheckingTypeGrammar = 1ULL << 2,
    NSTextCheckingTypeDate = 1ULL << 3,
    NSTextCheckingTypeAddress = 1ULL << 4,
    NSTextCheckingTypeLink = 1ULL << 5,
    NSTextCheckingTypeQuote = 1ULL << 6,
    NSTextCheckingTypeDash = 1ULL << 7,
    NSTextCheckingTypeReplacement = 1ULL << 8,
    NSTextCheckingTypeCorrection = 1ULL << 9,
    NSTextCheckingTypeRegularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 10,
    NSTextCheckingTypePhoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 11,
    NSTextCheckingTypeTransitInformation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 12
};

typedef uint64_t NSTextCheckingTypes;
enum {
    NSTextCheckingAllSystemTypes = 0xffffffffULL,
    NSTextCheckingAllCustomTypes = 0xffffffffULL << 32,
    NSTextCheckingAllTypes = (NSTextCheckingAllSystemTypes | NSTextCheckingAllCustomTypes)
};

typedef NSString *NSTextCheckingKey __attribute__((swift_wrapper(struct)));

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSTextCheckingResult
#define _REWRITER_typedef_NSTextCheckingResult
typedef struct objc_object NSTextCheckingResult;
typedef struct {} _objc_exc_NSTextCheckingResult;
#endif

struct NSTextCheckingResult_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly) NSTextCheckingType resultType;
// @property (readonly) NSRange range;

/* @end */


// @interface NSTextCheckingResult (NSTextCheckingResultOptional)


// @property (nullable, readonly, copy) NSOrthography *orthography;
// @property (nullable, readonly, copy) NSArray<NSDictionary<NSString *, id> *> *grammarDetails;
// @property (nullable, readonly, copy) NSDate *date;
// @property (nullable, readonly, copy) NSTimeZone *timeZone;
// @property (readonly) NSTimeInterval duration;
// @property (nullable, readonly, copy) NSDictionary<NSTextCheckingKey, NSString *> *components __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URL;
// @property (nullable, readonly, copy) NSString *replacementString;
// @property (nullable, readonly, copy) NSArray<NSString *> *alternativeStrings __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSRegularExpression *regularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *phoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) NSUInteger numberOfRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)rangeAtIndex:(NSUInteger)idx __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)rangeWithName:(NSString *)name __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSTextCheckingResult *)resultByAdjustingRangesWithOffset:(NSInteger)offset __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSDictionary<NSTextCheckingKey, NSString *> *addressComponents;

/* @end */




extern "C" NSTextCheckingKey const NSTextCheckingNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingJobTitleKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingOrganizationKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingStreetKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingCityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingStateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingZIPKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingCountryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingPhoneKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingAirlineKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingFlightKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @interface NSTextCheckingResult (NSTextCheckingResultCreation)


// + (NSTextCheckingResult *)orthographyCheckingResultWithRange:(NSRange)range orthography:(NSOrthography *)orthography;
// + (NSTextCheckingResult *)spellCheckingResultWithRange:(NSRange)range;
// + (NSTextCheckingResult *)grammarCheckingResultWithRange:(NSRange)range details:(NSArray<NSDictionary<NSString *, id> *> *)details;
// + (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date;
// + (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date timeZone:(NSTimeZone *)timeZone duration:(NSTimeInterval)duration;
// + (NSTextCheckingResult *)addressCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSTextCheckingKey, NSString *> *)components;
// + (NSTextCheckingResult *)linkCheckingResultWithRange:(NSRange)range URL:(NSURL *)url;
// + (NSTextCheckingResult *)quoteCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)dashCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)replacementCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString alternativeStrings:(NSArray<NSString *> *)alternativeStrings __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)regularExpressionCheckingResultWithRanges:(NSRangePointer)ranges count:(NSUInteger)count regularExpression:(NSRegularExpression *)regularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)phoneNumberCheckingResultWithRange:(NSRange)range phoneNumber:(NSString *)phoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)transitInformationCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSTextCheckingKey, NSString *> *)components __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin




typedef NSUInteger NSRegularExpressionOptions; enum {
   NSRegularExpressionCaseInsensitive = 1 << 0,
   NSRegularExpressionAllowCommentsAndWhitespace = 1 << 1,
   NSRegularExpressionIgnoreMetacharacters = 1 << 2,
   NSRegularExpressionDotMatchesLineSeparators = 1 << 3,
   NSRegularExpressionAnchorsMatchLines = 1 << 4,
   NSRegularExpressionUseUnixLineSeparators = 1 << 5,
   NSRegularExpressionUseUnicodeWordBoundaries = 1 << 6
};

__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSRegularExpression
#define _REWRITER_typedef_NSRegularExpression
typedef struct objc_object NSRegularExpression;
typedef struct {} _objc_exc_NSRegularExpression;
#endif

struct NSRegularExpression_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_pattern;
	NSUInteger _options;
	void *_internal;
	id _reserved1;
	int32_t _checkout;
	int32_t _reserved2;
};




// + (nullable NSRegularExpression *)regularExpressionWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error;
// - (nullable instancetype)initWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSString *pattern;
// @property (readonly) NSRegularExpressionOptions options;
// @property (readonly) NSUInteger numberOfCaptureGroups;



// + (NSString *)escapedPatternForString:(NSString *)string;

/* @end */



typedef NSUInteger NSMatchingOptions; enum {
   NSMatchingReportProgress = 1 << 0,
   NSMatchingReportCompletion = 1 << 1,
   NSMatchingAnchored = 1 << 2,
   NSMatchingWithTransparentBounds = 1 << 3,
   NSMatchingWithoutAnchoringBounds = 1 << 4
};

typedef NSUInteger NSMatchingFlags; enum {
   NSMatchingProgress = 1 << 0,
   NSMatchingCompleted = 1 << 1,
   NSMatchingHitEnd = 1 << 2,
   NSMatchingRequiredEnd = 1 << 3,
   NSMatchingInternalError = 1 << 4
};

// @interface NSRegularExpression (NSMatching)




// - (void)enumerateMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range usingBlock:(void (__attribute__((noescape)) ^)(NSTextCheckingResult * _Nullable result, NSMatchingFlags flags, BOOL *stop))block;

// - (NSArray<NSTextCheckingResult *> *)matchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (NSUInteger)numberOfMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (nullable NSTextCheckingResult *)firstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (NSRange)rangeOfFirstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
/* @end */



// @interface NSRegularExpression (NSReplacement)



// - (NSString *)stringByReplacingMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;
// - (NSUInteger)replaceMatchesInString:(NSMutableString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;



// - (NSString *)replacementStringForResult:(NSTextCheckingResult *)result inString:(NSString *)string offset:(NSInteger)offset template:(NSString *)templ;



// + (NSString *)escapedTemplateForString:(NSString *)string;

/* @end */


__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSDataDetector
#define _REWRITER_typedef_NSDataDetector
typedef struct objc_object NSDataDetector;
typedef struct {} _objc_exc_NSDataDetector;
#endif

struct NSDataDetector_IMPL {
	struct NSRegularExpression_IMPL NSRegularExpression_IVARS;
	NSTextCheckingTypes _types;
};




// + (nullable NSDataDetector *)dataDetectorWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error;
// - (nullable instancetype)initWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error __attribute__((objc_designated_initializer));

// @property (readonly) NSTextCheckingTypes checkingTypes;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif

struct NSSortDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _sortDescriptorFlags;
	NSString *_key;
	SEL _selector;
	id _selectorOrBlock;
};


// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending;
// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder;

// @property (nullable, readonly, copy) NSString *key;
// @property (readonly) BOOL ascending;
// @property (nullable, readonly) SEL selector;

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSComparator comparator __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSComparisonResult)compareObject:(id)object1 toObject:(id)object2;
// @property (readonly, retain) id reversedSortDescriptor;

/* @end */


// @interface NSSet<ObjectType> (NSSortDescriptorSorting)

// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSSortDescriptorSorting)

// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

/* @end */


// @interface NSMutableArray<ObjectType> (NSSortDescriptorSorting)

// - (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

/* @end */


// @interface NSOrderedSet<ObjectType> (NSKeyValueSorting)


// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSKeyValueSorting)


// - (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSHost
#define _REWRITER_typedef_NSHost
typedef struct objc_object NSHost;
typedef struct {} _objc_exc_NSHost;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @protocol NSStreamDelegate;

typedef NSString * NSStreamPropertyKey __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin

typedef NSUInteger NSStreamStatus; enum {
    NSStreamStatusNotOpen = 0,
    NSStreamStatusOpening = 1,
    NSStreamStatusOpen = 2,
    NSStreamStatusReading = 3,
    NSStreamStatusWriting = 4,
    NSStreamStatusAtEnd = 5,
    NSStreamStatusClosed = 6,
    NSStreamStatusError = 7
};

typedef NSUInteger NSStreamEvent; enum {
    NSStreamEventNone = 0,
    NSStreamEventOpenCompleted = 1UL << 0,
    NSStreamEventHasBytesAvailable = 1UL << 1,
    NSStreamEventHasSpaceAvailable = 1UL << 2,
    NSStreamEventErrorOccurred = 1UL << 3,
    NSStreamEventEndEncountered = 1UL << 4
};




#ifndef _REWRITER_typedef_NSStream
#define _REWRITER_typedef_NSStream
typedef struct objc_object NSStream;
typedef struct {} _objc_exc_NSStream;
#endif

struct NSStream_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (void)open;
// - (void)close;

// @property (nullable, assign) id <NSStreamDelegate> delegate;


// - (nullable id)propertyForKey:(NSStreamPropertyKey)key;
// - (BOOL)setProperty:(nullable id)property forKey:(NSStreamPropertyKey)key;

// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;

// @property (readonly) NSStreamStatus streamStatus;
// @property (nullable, readonly, copy) NSError *streamError;
/* @end */





#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

struct NSInputStream_IMPL {
	struct NSStream_IMPL NSStream_IVARS;
};

// - (NSInteger)read:(uint8_t *)buffer maxLength:(NSUInteger)len;


// - (BOOL)getBuffer:(uint8_t * _Nullable * _Nonnull)buffer length:(NSUInteger *)len;


// @property (readonly) BOOL hasBytesAvailable;


// - (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

/* @end */





#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

struct NSOutputStream_IMPL {
	struct NSStream_IMPL NSStream_IVARS;
};

// - (NSInteger)write:(const uint8_t *)buffer maxLength:(NSUInteger)len;


// @property (readonly) BOOL hasSpaceAvailable;


// - (instancetype)initToMemory __attribute__((objc_designated_initializer));
// - (instancetype)initToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

/* @end */



// @interface NSStream (NSSocketStreamCreationExtensions)

// + (void)getStreamsToHostWithName:(NSString *)hostname port:(NSInteger)port inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));





/* @end */


// @interface NSStream (NSStreamBoundPairCreationExtensions)
// + (void)getBoundStreamsWithBufferSize:(NSUInteger)bufferSize inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */



// @interface NSInputStream (NSInputStreamExtensions)
// - (nullable instancetype)initWithFileAtPath:(NSString *)path;

// + (nullable instancetype)inputStreamWithData:(NSData *)data;
// + (nullable instancetype)inputStreamWithFileAtPath:(NSString *)path;
// + (nullable instancetype)inputStreamWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */



// @interface NSOutputStream (NSOutputStreamExtensions)
// - (nullable instancetype)initToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;

// + (instancetype)outputStreamToMemory;
// + (instancetype)outputStreamToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity;
// + (instancetype)outputStreamToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;
// + (nullable instancetype)outputStreamWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @protocol NSStreamDelegate <NSObject>
/* @optional */
// - (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode;
/* @end */




extern "C" NSStreamPropertyKey const NSStreamSocketSecurityLevelKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamSocketSecurityLevel __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNone __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv2 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv3 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelTLSv1 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamPropertyKey const NSStreamSOCKSProxyConfigurationKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamSOCKSProxyConfiguration __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyHostKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPortKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyVersionKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyUserKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPasswordKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSString * NSStreamSOCKSProxyVersion __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion4 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion5 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSStreamPropertyKey const NSStreamDataWrittenToMemoryStreamKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSStreamPropertyKey const NSStreamFileCurrentOffsetKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSErrorDomain const NSStreamSocketSSLErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSErrorDomain const NSStreamSOCKSErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSStreamPropertyKey const NSStreamNetworkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamNetworkServiceTypeValue __attribute__((swift_wrapper(enum)));


extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoIP __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVideo __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeBackground __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoice __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
#pragma clang assume_nonnull end










// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSThread
#define _REWRITER_typedef_NSThread
typedef struct objc_object NSThread;
typedef struct {} _objc_exc_NSThread;
#endif

struct NSThread_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _private;
	uint8_t _bytes[44];
};


@property (class, readonly, strong) NSThread *currentThread;

// + (void)detachNewThreadWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// + (void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(nullable id)argument;

// + (BOOL)isMultiThreaded;

// @property (readonly, retain) NSMutableDictionary *threadDictionary;

// + (void)sleepUntilDate:(NSDate *)date;
// + (void)sleepForTimeInterval:(NSTimeInterval)ti;

// + (void)exit;

// + (double)threadPriority;
// + (BOOL)setThreadPriority:(double)p;

// @property double threadPriority __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSUInteger stackSize __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) BOOL isMainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly) BOOL isMainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, strong) NSThread *mainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (instancetype)initWithTarget:(id)target selector:(SEL)selector object:(nullable id)argument __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (instancetype)initWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, getter=isExecuting) BOOL executing __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isFinished) BOOL finished __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isCancelled) BOOL cancelled __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)cancel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)start __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)main __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSNotificationName const NSWillBecomeMultiThreadedNotification;
extern "C" NSNotificationName const NSDidBecomeSingleThreadedNotification;
extern "C" NSNotificationName const NSThreadWillExitNotification;

// @interface NSObject (NSThreadPerformAdditions)

// - (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array;
// - (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait;


// - (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)performSelectorInBackground:(SEL)aSelector withObject:(nullable id)arg __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

struct NSTimeZone_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *name;
// @property (readonly, copy) NSData *data;

// - (NSInteger)secondsFromGMTForDate:(NSDate *)aDate;
// - (nullable NSString *)abbreviationForDate:(NSDate *)aDate;
// - (BOOL)isDaylightSavingTimeForDate:(NSDate *)aDate;
// - (NSTimeInterval)daylightSavingTimeOffsetForDate:(NSDate *)aDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDate *)nextDaylightSavingTimeTransitionAfterDate:(NSDate *)aDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSTimeZone (NSExtendedTimeZone)

@property (class, readonly, copy) NSTimeZone *systemTimeZone;
// + (void)resetSystemTimeZone;

@property (class, copy) NSTimeZone *defaultTimeZone;

@property (class, readonly, copy) NSTimeZone *localTimeZone;

@property (class, readonly, copy) NSArray<NSString *> *knownTimeZoneNames;

@property (class, copy) NSDictionary<NSString *, NSString *> *abbreviationDictionary __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSDictionary<NSString *, NSString *> *)abbreviationDictionary;

@property (class, readonly, copy) NSString *timeZoneDataVersion __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSInteger secondsFromGMT;
// @property (nullable, readonly, copy) NSString *abbreviation;
// @property (readonly, getter=isDaylightSavingTime) BOOL daylightSavingTime;
// @property (readonly) NSTimeInterval daylightSavingTimeOffset __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSDate *nextDaylightSavingTimeTransition __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *description;

// - (BOOL)isEqualToTimeZone:(NSTimeZone *)aTimeZone;

typedef NSInteger NSTimeZoneNameStyle; enum {
 NSTimeZoneNameStyleStandard,
 NSTimeZoneNameStyleShortStandard,
 NSTimeZoneNameStyleDaylightSaving,
 NSTimeZoneNameStyleShortDaylightSaving,
 NSTimeZoneNameStyleGeneric,
 NSTimeZoneNameStyleShortGeneric
};

// - (nullable NSString *)localizedName:(NSTimeZoneNameStyle)style locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSTimeZone (NSTimeZoneCreation)




// + (nullable instancetype)timeZoneWithName:(NSString *)tzName;
// + (nullable instancetype)timeZoneWithName:(NSString *)tzName data:(nullable NSData *)aData;

// - (nullable instancetype)initWithName:(NSString *)tzName;
// - (nullable instancetype)initWithName:(NSString *)tzName data:(nullable NSData *)aData;




// + (instancetype)timeZoneForSecondsFromGMT:(NSInteger)seconds;

// + (nullable instancetype)timeZoneWithAbbreviation:(NSString *)abbreviation;

/* @end */


extern "C" NSNotificationName const NSSystemTimeZoneDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSTimer
#define _REWRITER_typedef_NSTimer
typedef struct objc_object NSTimer;
typedef struct {} _objc_exc_NSTimer;
#endif

struct NSTimer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;
// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;

// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;
// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;






// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));





// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));






// - (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)ti target:(id)t selector:(SEL)s userInfo:(nullable id)ui repeats:(BOOL)rep __attribute__((objc_designated_initializer));

// - (void)fire;

// @property (copy) NSDate *fireDate;
// @property (readonly) NSTimeInterval timeInterval;



// @property NSTimeInterval tolerance __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)invalidate;
// @property (readonly, getter=isValid) BOOL valid;

// @property (nullable, readonly, retain) id userInfo;

/* @end */

#pragma clang assume_nonnull end


// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin
// @protocol NSURLAuthenticationChallengeSender <NSObject>




// - (void)useCredential:(NSURLCredential *)credential forAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)continueWithoutCredentialForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)cancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @optional */



// - (void)performDefaultHandlingForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)rejectProtectionSpaceAndContinueWithChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @end */


// @class NSURLAuthenticationChallengeInternal;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallengeInternal
#define _REWRITER_typedef_NSURLAuthenticationChallengeInternal
typedef struct objc_object NSURLAuthenticationChallengeInternal;
typedef struct {} _objc_exc_NSURLAuthenticationChallengeInternal;
#endif


#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

struct NSURLAuthenticationChallenge_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLAuthenticationChallengeInternal *_internal;
};

// - (instancetype)initWithProtectionSpace:(NSURLProtectionSpace *)space proposedCredential:(nullable NSURLCredential *)credential previousFailureCount:(NSInteger)previousFailureCount failureResponse:(nullable NSURLResponse *)response error:(nullable NSError *)error sender:(id<NSURLAuthenticationChallengeSender>)sender;
// - (instancetype)initWithAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge sender:(id<NSURLAuthenticationChallengeSender>)sender;





// @property (readonly, copy) NSURLProtectionSpace *protectionSpace;
// @property (nullable, readonly, copy) NSURLCredential *proposedCredential;





// @property (readonly) NSInteger previousFailureCount;
// @property (nullable, readonly, copy) NSURLResponse *failureResponse;
// @property (nullable, readonly, copy) NSError *error;






// @property (nullable, readonly, retain) id<NSURLAuthenticationChallengeSender> sender;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSUInteger NSURLCacheStoragePolicy; enum
{
    NSURLCacheStorageAllowed,
    NSURLCacheStorageAllowedInMemoryOnly,
    NSURLCacheStorageNotAllowed,
};


// @class NSCachedURLResponseInternal;
#ifndef _REWRITER_typedef_NSCachedURLResponseInternal
#define _REWRITER_typedef_NSCachedURLResponseInternal
typedef struct objc_object NSCachedURLResponseInternal;
typedef struct {} _objc_exc_NSCachedURLResponseInternal;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif


#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

struct NSCachedURLResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSCachedURLResponseInternal *_internal;
};

// - (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data;
// - (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data userInfo:(nullable NSDictionary *)userInfo storagePolicy:(NSURLCacheStoragePolicy)storagePolicy;





// @property (readonly, copy) NSURLResponse *response;





// @property (readonly, copy) NSData *data;





// @property (nullable, readonly, copy) NSDictionary *userInfo;





// @property (readonly) NSURLCacheStoragePolicy storagePolicy;

/* @end */



// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLCacheInternal;
#ifndef _REWRITER_typedef_NSURLCacheInternal
#define _REWRITER_typedef_NSURLCacheInternal
typedef struct objc_object NSURLCacheInternal;
typedef struct {} _objc_exc_NSURLCacheInternal;
#endif



#ifndef _REWRITER_typedef_NSURLCache
#define _REWRITER_typedef_NSURLCache
typedef struct objc_object NSURLCache;
typedef struct {} _objc_exc_NSURLCache;
#endif

struct NSURLCache_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCacheInternal *_internal;
};

@property (class, strong) NSURLCache *sharedURLCache;
// - (instancetype)initWithMemoryCapacity:(NSUInteger)memoryCapacity diskCapacity:(NSUInteger)diskCapacity diskPath:(nullable NSString *)path __attribute__((availability(macos,introduced=10.2,deprecated=100000,replacement="initWithMemoryCapacity:diskCapacity:directoryURL:"))) __attribute__((availability(ios,introduced=2.0,deprecated=100000,replacement="initWithMemoryCapacity:diskCapacity:directoryURL:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="initWithMemoryCapacity:diskCapacity:directoryURL:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="initWithMemoryCapacity:diskCapacity:directoryURL:"))) __attribute__((availability(macCatalyst,unavailable)));
// - (instancetype)initWithMemoryCapacity:(NSUInteger)memoryCapacity diskCapacity:(NSUInteger)diskCapacity directoryURL:(nullable NSURL *)directoryURL __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (nullable NSCachedURLResponse *)cachedResponseForRequest:(NSURLRequest *)request;
// - (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forRequest:(NSURLRequest *)request;
// - (void)removeCachedResponseForRequest:(NSURLRequest *)request;






// - (void)removeAllCachedResponses;





// - (void)removeCachedResponsesSinceDate:(NSDate *)date __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property NSUInteger memoryCapacity;





// @property NSUInteger diskCapacity;
// @property (readonly) NSUInteger currentMemoryUsage;
// @property (readonly) NSUInteger currentDiskUsage;

/* @end */


// @interface NSURLCache (NSURLSessionTaskAdditions)
// - (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask completionHandler:(void (^) (NSCachedURLResponse * _Nullable cachedResponse))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLConnectionInternal;
#ifndef _REWRITER_typedef_NSURLConnectionInternal
#define _REWRITER_typedef_NSURLConnectionInternal
typedef struct objc_object NSURLConnectionInternal;
typedef struct {} _objc_exc_NSURLConnectionInternal;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSRunLoop;
#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSOperationQueue;
#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


// @protocol NSURLConnectionDelegate;

#pragma clang assume_nonnull begin

#ifndef _REWRITER_typedef_NSURLConnection
#define _REWRITER_typedef_NSURLConnection
typedef struct objc_object NSURLConnection;
typedef struct {} _objc_exc_NSURLConnection;
#endif

struct NSURLConnection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLConnectionInternal *_internal;
};



// - (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate startImmediately:(BOOL)startImmediately __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

// - (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));
// + (nullable NSURLConnection*)connectionWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

// @property (readonly, copy) NSURLRequest *originalRequest __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSURLRequest *currentRequest __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)start __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)cancel;

// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)unscheduleFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setDelegateQueue:(nullable NSOperationQueue*) queue __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (BOOL)canHandleRequest:(NSURLRequest *)request;

/* @end */

// @protocol NSURLConnectionDelegate <NSObject>
/* @optional */
// - (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error;
// - (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)connection;
// - (void)connection:(NSURLConnection *)connection willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;
// - (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace __attribute__((availability(macos,introduced=10.6,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
// - (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
// - (void)connection:(NSURLConnection *)connection didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
/* @end */

// @protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>
/* @optional */
// - (nullable NSURLRequest *)connection:(NSURLConnection *)connection willSendRequest:(NSURLRequest *)request redirectResponse:(nullable NSURLResponse *)response;
// - (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response;

// - (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data;

// - (nullable NSInputStream *)connection:(NSURLConnection *)connection needNewBodyStream:(NSURLRequest *)request;
#if 0
- (void)connection:(NSURLConnection *)connection didSendBodyData:(NSInteger)bytesWritten
                                                 totalBytesWritten:(NSInteger)totalBytesWritten
                                         totalBytesExpectedToWrite:(NSInteger)totalBytesExpectedToWrite;
#endif


// - (nullable NSCachedURLResponse *)connection:(NSURLConnection *)connection willCacheResponse:(NSCachedURLResponse *)cachedResponse;

// - (void)connectionDidFinishLoading:(NSURLConnection *)connection;
/* @end */

// @protocol NSURLConnectionDownloadDelegate <NSURLConnectionDelegate>
/* @optional */
// - (void)connection:(NSURLConnection *)connection didWriteData:(long long)bytesWritten totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;
// - (void)connectionDidResumeDownloading:(NSURLConnection *)connection totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;

/* @required */
// - (void)connectionDidFinishDownloading:(NSURLConnection *)connection destinationURL:(NSURL *) destinationURL;
/* @end */

// @interface NSURLConnection (NSURLConnectionSynchronousLoading)
// + (nullable NSData *)sendSynchronousRequest:(NSURLRequest *)request returningResponse:(NSURLResponse * _Nullable * _Nullable)response error:(NSError **)error __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));

/* @end */

// @interface NSURLConnection (NSURLConnectionQueuedLoading)
#if 0
+ (void)sendAsynchronousRequest:(NSURLRequest*) request
                          queue:(NSOperationQueue*) queue
              completionHandler:(void (^)(NSURLResponse* _Nullable response, NSData* _Nullable data, NSError* _Nullable connectionError)) handler __attribute__((availability(macos,introduced=10.7,deprecated=10.11,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(ios,introduced=5.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));
#endif


/* @end */

#pragma clang assume_nonnull end








extern "C" {

#pragma clang assume_nonnull begin
typedef struct __attribute__((objc_bridge(id))) __SecCertificate *SecCertificateRef;
typedef struct __attribute__((objc_bridge(id))) __SecIdentity *SecIdentityRef;
typedef struct __attribute__((objc_bridge(id))) __SecKey *SecKeyRef;
typedef struct __attribute__((objc_bridge(id))) __SecPolicy *SecPolicyRef;






typedef struct __attribute__((objc_bridge(id))) __SecAccessControl *SecAccessControlRef;





typedef struct __attribute__((objc_bridge(id))) __SecKeychain *SecKeychainRef
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));





typedef struct __attribute__((objc_bridge(id))) __SecKeychainItem *SecKeychainItemRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef struct __attribute__((objc_bridge(id))) __SecKeychainSearch *SecKeychainSearchRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef OSType SecKeychainAttrType __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
struct __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) SecKeychainAttribute
{
    SecKeychainAttrType tag;
    UInt32 length;
    void * _Nullable data;
};
typedef struct SecKeychainAttribute SecKeychainAttribute __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef SecKeychainAttribute *SecKeychainAttributePtr __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));







struct __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) SecKeychainAttributeList
{
    UInt32 count;
    SecKeychainAttribute * _Nullable attr;
};
typedef struct SecKeychainAttributeList SecKeychainAttributeList __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef UInt32 SecKeychainStatus __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef struct __attribute__((objc_bridge(id))) __SecTrustedApplication *SecTrustedApplicationRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef struct __attribute__((objc_bridge(id))) __SecAccess *SecAccessRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
typedef struct __attribute__((objc_bridge(id))) __SecACL *SecACLRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





typedef struct __attribute__((objc_bridge(id))) __SecPassword *SecPasswordRef __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
struct __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) SecKeychainAttributeInfo
{
    UInt32 count;
    UInt32 *tag;
    UInt32 * _Nullable format;
};
typedef struct SecKeychainAttributeInfo SecKeychainAttributeInfo __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
_Nullable
CFStringRef SecCopyErrorMessageString(OSStatus status, void * _Nullable reserved)
    __attribute__((availability(ios,introduced=11.3)));
enum
{
    errSecSuccess = 0,
    errSecUnimplemented = -4,
    errSecDiskFull = -34,
    errSecDskFull __attribute__((deprecated("use errSecDiskFull"))) = errSecDiskFull,
    errSecIO = -36,
    errSecOpWr = -49,
    errSecParam = -50,
    errSecWrPerm = -61,
    errSecAllocate = -108,
    errSecUserCanceled = -128,
    errSecBadReq = -909,

    errSecInternalComponent = -2070,
    errSecCoreFoundationUnknown = -4960,

    errSecMissingEntitlement = -34018,

    errSecNotAvailable = -25291,
    errSecReadOnly = -25292,
    errSecAuthFailed = -25293,
    errSecNoSuchKeychain = -25294,
    errSecInvalidKeychain = -25295,
    errSecDuplicateKeychain = -25296,
    errSecDuplicateCallback = -25297,
    errSecInvalidCallback = -25298,
    errSecDuplicateItem = -25299,
    errSecItemNotFound = -25300,
    errSecBufferTooSmall = -25301,
    errSecDataTooLarge = -25302,
    errSecNoSuchAttr = -25303,
    errSecInvalidItemRef = -25304,
    errSecInvalidSearchRef = -25305,
    errSecNoSuchClass = -25306,
    errSecNoDefaultKeychain = -25307,
    errSecInteractionNotAllowed = -25308,
    errSecReadOnlyAttr = -25309,
    errSecWrongSecVersion = -25310,
    errSecKeySizeNotAllowed = -25311,
    errSecNoStorageModule = -25312,
    errSecNoCertificateModule = -25313,
    errSecNoPolicyModule = -25314,
    errSecInteractionRequired = -25315,
    errSecDataNotAvailable = -25316,
    errSecDataNotModifiable = -25317,
    errSecCreateChainFailed = -25318,
    errSecInvalidPrefsDomain = -25319,
    errSecInDarkWake = -25320,

    errSecACLNotSimple = -25240,
    errSecPolicyNotFound = -25241,
    errSecInvalidTrustSetting = -25242,
    errSecNoAccessForItem = -25243,
    errSecInvalidOwnerEdit = -25244,
    errSecTrustNotAvailable = -25245,
    errSecUnsupportedFormat = -25256,
    errSecUnknownFormat = -25257,
    errSecKeyIsSensitive = -25258,
    errSecMultiplePrivKeys = -25259,
    errSecPassphraseRequired = -25260,
    errSecInvalidPasswordRef = -25261,
    errSecInvalidTrustSettings = -25262,
    errSecNoTrustSettings = -25263,
    errSecPkcs12VerifyFailure = -25264,
    errSecNotSigner = -26267,

    errSecDecode = -26275,

    errSecServiceNotAvailable = -67585,
    errSecInsufficientClientID = -67586,
    errSecDeviceReset = -67587,
    errSecDeviceFailed = -67588,
    errSecAppleAddAppACLSubject = -67589,
    errSecApplePublicKeyIncomplete = -67590,
    errSecAppleSignatureMismatch = -67591,
    errSecAppleInvalidKeyStartDate = -67592,
    errSecAppleInvalidKeyEndDate = -67593,
    errSecConversionError = -67594,
    errSecAppleSSLv2Rollback = -67595,
    errSecQuotaExceeded = -67596,
    errSecFileTooBig = -67597,
    errSecInvalidDatabaseBlob = -67598,
    errSecInvalidKeyBlob = -67599,
    errSecIncompatibleDatabaseBlob = -67600,
    errSecIncompatibleKeyBlob = -67601,
    errSecHostNameMismatch = -67602,
    errSecUnknownCriticalExtensionFlag = -67603,
    errSecNoBasicConstraints = -67604,
    errSecNoBasicConstraintsCA = -67605,
    errSecInvalidAuthorityKeyID = -67606,
    errSecInvalidSubjectKeyID = -67607,
    errSecInvalidKeyUsageForPolicy = -67608,
    errSecInvalidExtendedKeyUsage = -67609,
    errSecInvalidIDLinkage = -67610,
    errSecPathLengthConstraintExceeded = -67611,
    errSecInvalidRoot = -67612,
    errSecCRLExpired = -67613,
    errSecCRLNotValidYet = -67614,
    errSecCRLNotFound = -67615,
    errSecCRLServerDown = -67616,
    errSecCRLBadURI = -67617,
    errSecUnknownCertExtension = -67618,
    errSecUnknownCRLExtension = -67619,
    errSecCRLNotTrusted = -67620,
    errSecCRLPolicyFailed = -67621,
    errSecIDPFailure = -67622,
    errSecSMIMEEmailAddressesNotFound = -67623,
    errSecSMIMEBadExtendedKeyUsage = -67624,
    errSecSMIMEBadKeyUsage = -67625,
    errSecSMIMEKeyUsageNotCritical = -67626,
    errSecSMIMENoEmailAddress = -67627,
    errSecSMIMESubjAltNameNotCritical = -67628,
    errSecSSLBadExtendedKeyUsage = -67629,
    errSecOCSPBadResponse = -67630,
    errSecOCSPBadRequest = -67631,
    errSecOCSPUnavailable = -67632,
    errSecOCSPStatusUnrecognized = -67633,
    errSecEndOfData = -67634,
    errSecIncompleteCertRevocationCheck = -67635,
    errSecNetworkFailure = -67636,
    errSecOCSPNotTrustedToAnchor = -67637,
    errSecRecordModified = -67638,
    errSecOCSPSignatureError = -67639,
    errSecOCSPNoSigner = -67640,
    errSecOCSPResponderMalformedReq = -67641,
    errSecOCSPResponderInternalError = -67642,
    errSecOCSPResponderTryLater = -67643,
    errSecOCSPResponderSignatureRequired = -67644,
    errSecOCSPResponderUnauthorized = -67645,
    errSecOCSPResponseNonceMismatch = -67646,
    errSecCodeSigningBadCertChainLength = -67647,
    errSecCodeSigningNoBasicConstraints = -67648,
    errSecCodeSigningBadPathLengthConstraint = -67649,
    errSecCodeSigningNoExtendedKeyUsage = -67650,
    errSecCodeSigningDevelopment = -67651,
    errSecResourceSignBadCertChainLength = -67652,
    errSecResourceSignBadExtKeyUsage = -67653,
    errSecTrustSettingDeny = -67654,
    errSecInvalidSubjectName = -67655,
    errSecUnknownQualifiedCertStatement = -67656,
    errSecMobileMeRequestQueued = -67657,
    errSecMobileMeRequestRedirected = -67658,
    errSecMobileMeServerError = -67659,
    errSecMobileMeServerNotAvailable = -67660,
    errSecMobileMeServerAlreadyExists = -67661,
    errSecMobileMeServerServiceErr = -67662,
    errSecMobileMeRequestAlreadyPending = -67663,
    errSecMobileMeNoRequestPending = -67664,
    errSecMobileMeCSRVerifyFailure = -67665,
    errSecMobileMeFailedConsistencyCheck = -67666,
    errSecNotInitialized = -67667,
    errSecInvalidHandleUsage = -67668,
    errSecPVCReferentNotFound = -67669,
    errSecFunctionIntegrityFail = -67670,
    errSecInternalError = -67671,
    errSecMemoryError = -67672,
    errSecInvalidData = -67673,
    errSecMDSError = -67674,
    errSecInvalidPointer = -67675,
    errSecSelfCheckFailed = -67676,
    errSecFunctionFailed = -67677,
    errSecModuleManifestVerifyFailed = -67678,
    errSecInvalidGUID = -67679,
    errSecInvalidHandle = -67680,
    errSecInvalidDBList = -67681,
    errSecInvalidPassthroughID = -67682,
    errSecInvalidNetworkAddress = -67683,
    errSecCRLAlreadySigned = -67684,
    errSecInvalidNumberOfFields = -67685,
    errSecVerificationFailure = -67686,
    errSecUnknownTag = -67687,
    errSecInvalidSignature = -67688,
    errSecInvalidName = -67689,
    errSecInvalidCertificateRef = -67690,
    errSecInvalidCertificateGroup = -67691,
    errSecTagNotFound = -67692,
    errSecInvalidQuery = -67693,
    errSecInvalidValue = -67694,
    errSecCallbackFailed = -67695,
    errSecACLDeleteFailed = -67696,
    errSecACLReplaceFailed = -67697,
    errSecACLAddFailed = -67698,
    errSecACLChangeFailed = -67699,
    errSecInvalidAccessCredentials = -67700,
    errSecInvalidRecord = -67701,
    errSecInvalidACL = -67702,
    errSecInvalidSampleValue = -67703,
    errSecIncompatibleVersion = -67704,
    errSecPrivilegeNotGranted = -67705,
    errSecInvalidScope = -67706,
    errSecPVCAlreadyConfigured = -67707,
    errSecInvalidPVC = -67708,
    errSecEMMLoadFailed = -67709,
    errSecEMMUnloadFailed = -67710,
    errSecAddinLoadFailed = -67711,
    errSecInvalidKeyRef = -67712,
    errSecInvalidKeyHierarchy = -67713,
    errSecAddinUnloadFailed = -67714,
    errSecLibraryReferenceNotFound = -67715,
    errSecInvalidAddinFunctionTable = -67716,
    errSecInvalidServiceMask = -67717,
    errSecModuleNotLoaded = -67718,
    errSecInvalidSubServiceID = -67719,
    errSecAttributeNotInContext = -67720,
    errSecModuleManagerInitializeFailed = -67721,
    errSecModuleManagerNotFound = -67722,
    errSecEventNotificationCallbackNotFound = -67723,
    errSecInputLengthError = -67724,
    errSecOutputLengthError = -67725,
    errSecPrivilegeNotSupported = -67726,
    errSecDeviceError = -67727,
    errSecAttachHandleBusy = -67728,
    errSecNotLoggedIn = -67729,
    errSecAlgorithmMismatch = -67730,
    errSecKeyUsageIncorrect = -67731,
    errSecKeyBlobTypeIncorrect = -67732,
    errSecKeyHeaderInconsistent = -67733,
    errSecUnsupportedKeyFormat = -67734,
    errSecUnsupportedKeySize = -67735,
    errSecInvalidKeyUsageMask = -67736,
    errSecUnsupportedKeyUsageMask = -67737,
    errSecInvalidKeyAttributeMask = -67738,
    errSecUnsupportedKeyAttributeMask = -67739,
    errSecInvalidKeyLabel = -67740,
    errSecUnsupportedKeyLabel = -67741,
    errSecInvalidKeyFormat = -67742,
    errSecUnsupportedVectorOfBuffers = -67743,
    errSecInvalidInputVector = -67744,
    errSecInvalidOutputVector = -67745,
    errSecInvalidContext = -67746,
    errSecInvalidAlgorithm = -67747,
    errSecInvalidAttributeKey = -67748,
    errSecMissingAttributeKey = -67749,
    errSecInvalidAttributeInitVector = -67750,
    errSecMissingAttributeInitVector = -67751,
    errSecInvalidAttributeSalt = -67752,
    errSecMissingAttributeSalt = -67753,
    errSecInvalidAttributePadding = -67754,
    errSecMissingAttributePadding = -67755,
    errSecInvalidAttributeRandom = -67756,
    errSecMissingAttributeRandom = -67757,
    errSecInvalidAttributeSeed = -67758,
    errSecMissingAttributeSeed = -67759,
    errSecInvalidAttributePassphrase = -67760,
    errSecMissingAttributePassphrase = -67761,
    errSecInvalidAttributeKeyLength = -67762,
    errSecMissingAttributeKeyLength = -67763,
    errSecInvalidAttributeBlockSize = -67764,
    errSecMissingAttributeBlockSize = -67765,
    errSecInvalidAttributeOutputSize = -67766,
    errSecMissingAttributeOutputSize = -67767,
    errSecInvalidAttributeRounds = -67768,
    errSecMissingAttributeRounds = -67769,
    errSecInvalidAlgorithmParms = -67770,
    errSecMissingAlgorithmParms = -67771,
    errSecInvalidAttributeLabel = -67772,
    errSecMissingAttributeLabel = -67773,
    errSecInvalidAttributeKeyType = -67774,
    errSecMissingAttributeKeyType = -67775,
    errSecInvalidAttributeMode = -67776,
    errSecMissingAttributeMode = -67777,
    errSecInvalidAttributeEffectiveBits = -67778,
    errSecMissingAttributeEffectiveBits = -67779,
    errSecInvalidAttributeStartDate = -67780,
    errSecMissingAttributeStartDate = -67781,
    errSecInvalidAttributeEndDate = -67782,
    errSecMissingAttributeEndDate = -67783,
    errSecInvalidAttributeVersion = -67784,
    errSecMissingAttributeVersion = -67785,
    errSecInvalidAttributePrime = -67786,
    errSecMissingAttributePrime = -67787,
    errSecInvalidAttributeBase = -67788,
    errSecMissingAttributeBase = -67789,
    errSecInvalidAttributeSubprime = -67790,
    errSecMissingAttributeSubprime = -67791,
    errSecInvalidAttributeIterationCount = -67792,
    errSecMissingAttributeIterationCount = -67793,
    errSecInvalidAttributeDLDBHandle = -67794,
    errSecMissingAttributeDLDBHandle = -67795,
    errSecInvalidAttributeAccessCredentials = -67796,
    errSecMissingAttributeAccessCredentials = -67797,
    errSecInvalidAttributePublicKeyFormat = -67798,
    errSecMissingAttributePublicKeyFormat = -67799,
    errSecInvalidAttributePrivateKeyFormat = -67800,
    errSecMissingAttributePrivateKeyFormat = -67801,
    errSecInvalidAttributeSymmetricKeyFormat = -67802,
    errSecMissingAttributeSymmetricKeyFormat = -67803,
    errSecInvalidAttributeWrappedKeyFormat = -67804,
    errSecMissingAttributeWrappedKeyFormat = -67805,
    errSecStagedOperationInProgress = -67806,
    errSecStagedOperationNotStarted = -67807,
    errSecVerifyFailed = -67808,
    errSecQuerySizeUnknown = -67809,
    errSecBlockSizeMismatch = -67810,
    errSecPublicKeyInconsistent = -67811,
    errSecDeviceVerifyFailed = -67812,
    errSecInvalidLoginName = -67813,
    errSecAlreadyLoggedIn = -67814,
    errSecInvalidDigestAlgorithm = -67815,
    errSecInvalidCRLGroup = -67816,
    errSecCertificateCannotOperate = -67817,
    errSecCertificateExpired = -67818,
    errSecCertificateNotValidYet = -67819,
    errSecCertificateRevoked = -67820,
    errSecCertificateSuspended = -67821,
    errSecInsufficientCredentials = -67822,
    errSecInvalidAction = -67823,
    errSecInvalidAuthority = -67824,
    errSecVerifyActionFailed = -67825,
    errSecInvalidCertAuthority = -67826,
    errSecInvaldCRLAuthority = -67827,
    errSecInvalidCRLEncoding = -67828,
    errSecInvalidCRLType = -67829,
    errSecInvalidCRL = -67830,
    errSecInvalidFormType = -67831,
    errSecInvalidID = -67832,
    errSecInvalidIdentifier = -67833,
    errSecInvalidIndex = -67834,
    errSecInvalidPolicyIdentifiers = -67835,
    errSecInvalidTimeString = -67836,
    errSecInvalidReason = -67837,
    errSecInvalidRequestInputs = -67838,
    errSecInvalidResponseVector = -67839,
    errSecInvalidStopOnPolicy = -67840,
    errSecInvalidTuple = -67841,
    errSecMultipleValuesUnsupported = -67842,
    errSecNotTrusted = -67843,
    errSecNoDefaultAuthority = -67844,
    errSecRejectedForm = -67845,
    errSecRequestLost = -67846,
    errSecRequestRejected = -67847,
    errSecUnsupportedAddressType = -67848,
    errSecUnsupportedService = -67849,
    errSecInvalidTupleGroup = -67850,
    errSecInvalidBaseACLs = -67851,
    errSecInvalidTupleCredendtials = -67852,
    errSecInvalidEncoding = -67853,
    errSecInvalidValidityPeriod = -67854,
    errSecInvalidRequestor = -67855,
    errSecRequestDescriptor = -67856,
    errSecInvalidBundleInfo = -67857,
    errSecInvalidCRLIndex = -67858,
    errSecNoFieldValues = -67859,
    errSecUnsupportedFieldFormat = -67860,
    errSecUnsupportedIndexInfo = -67861,
    errSecUnsupportedLocality = -67862,
    errSecUnsupportedNumAttributes = -67863,
    errSecUnsupportedNumIndexes = -67864,
    errSecUnsupportedNumRecordTypes = -67865,
    errSecFieldSpecifiedMultiple = -67866,
    errSecIncompatibleFieldFormat = -67867,
    errSecInvalidParsingModule = -67868,
    errSecDatabaseLocked = -67869,
    errSecDatastoreIsOpen = -67870,
    errSecMissingValue = -67871,
    errSecUnsupportedQueryLimits = -67872,
    errSecUnsupportedNumSelectionPreds = -67873,
    errSecUnsupportedOperator = -67874,
    errSecInvalidDBLocation = -67875,
    errSecInvalidAccessRequest = -67876,
    errSecInvalidIndexInfo = -67877,
    errSecInvalidNewOwner = -67878,
    errSecInvalidModifyMode = -67879,
    errSecMissingRequiredExtension = -67880,
    errSecExtendedKeyUsageNotCritical = -67881,
    errSecTimestampMissing = -67882,
    errSecTimestampInvalid = -67883,
    errSecTimestampNotTrusted = -67884,
    errSecTimestampServiceNotAvailable = -67885,
    errSecTimestampBadAlg = -67886,
    errSecTimestampBadRequest = -67887,
    errSecTimestampBadDataFormat = -67888,
    errSecTimestampTimeNotAvailable = -67889,
    errSecTimestampUnacceptedPolicy = -67890,
    errSecTimestampUnacceptedExtension = -67891,
    errSecTimestampAddInfoNotAvailable = -67892,
    errSecTimestampSystemFailure = -67893,
    errSecSigningTimeMissing = -67894,
    errSecTimestampRejection = -67895,
    errSecTimestampWaiting = -67896,
    errSecTimestampRevocationWarning = -67897,
    errSecTimestampRevocationNotification = -67898,
    errSecCertificatePolicyNotAllowed = -67899,
    errSecCertificateNameNotAllowed = -67900,
    errSecCertificateValidityPeriodTooLong = -67901,
};
enum {
    errSSLProtocol = -9800,
    errSSLNegotiation = -9801,
    errSSLFatalAlert = -9802,
    errSSLWouldBlock = -9803,
    errSSLSessionNotFound = -9804,
    errSSLClosedGraceful = -9805,
    errSSLClosedAbort = -9806,
    errSSLXCertChainInvalid = -9807,
    errSSLBadCert = -9808,
    errSSLCrypto = -9809,
    errSSLInternal = -9810,
    errSSLModuleAttach = -9811,
    errSSLUnknownRootCert = -9812,
    errSSLNoRootCert = -9813,
    errSSLCertExpired = -9814,
    errSSLCertNotYetValid = -9815,
    errSSLClosedNoNotify = -9816,
    errSSLBufferOverflow = -9817,
    errSSLBadCipherSuite = -9818,


    errSSLPeerUnexpectedMsg = -9819,
    errSSLPeerBadRecordMac = -9820,
    errSSLPeerDecryptionFail = -9821,
    errSSLPeerRecordOverflow = -9822,
    errSSLPeerDecompressFail = -9823,
    errSSLPeerHandshakeFail = -9824,
    errSSLPeerBadCert = -9825,
    errSSLPeerUnsupportedCert = -9826,
    errSSLPeerCertRevoked = -9827,
    errSSLPeerCertExpired = -9828,
    errSSLPeerCertUnknown = -9829,
    errSSLIllegalParam = -9830,
    errSSLPeerUnknownCA = -9831,
    errSSLPeerAccessDenied = -9832,
    errSSLPeerDecodeError = -9833,
    errSSLPeerDecryptError = -9834,
    errSSLPeerExportRestriction = -9835,
    errSSLPeerProtocolVersion = -9836,
    errSSLPeerInsufficientSecurity = -9837,
    errSSLPeerInternalError = -9838,
    errSSLPeerUserCancelled = -9839,
    errSSLPeerNoRenegotiation = -9840,


    errSSLPeerAuthCompleted = -9841,
    errSSLClientCertRequested = -9842,


    errSSLHostNameMismatch = -9843,
    errSSLConnectionRefused = -9844,
    errSSLDecryptionFail = -9845,
    errSSLBadRecordMac = -9846,
    errSSLRecordOverflow = -9847,
    errSSLBadConfiguration = -9848,
    errSSLUnexpectedRecord = -9849,
    errSSLWeakPeerEphemeralDHKey = -9850,


    errSSLClientHelloReceived = -9851,


    errSSLTransportReset = -9852,
    errSSLNetworkTimeout = -9853,


    errSSLConfigurationFailed = -9854,


    errSSLUnsupportedExtension = -9855,
    errSSLUnexpectedMessage = -9856,
    errSSLDecompressFail = -9857,
    errSSLHandshakeFail = -9858,
    errSSLDecodeError = -9859,
    errSSLInappropriateFallback = -9860,
    errSSLMissingExtension = -9861,
    errSSLBadCertificateStatusResponse = -9862,
    errSSLCertificateRequired = -9863,
    errSSLUnknownPSKIdentity = -9864,
    errSSLUnrecognizedName = -9865,


    errSSLATSViolation = -9880,
    errSSLATSMinimumVersionViolation = -9881,
    errSSLATSCiphersuiteViolation = -9882,
    errSSLATSMinimumKeySizeViolation = -9883,
    errSSLATSLeafCertificateHashAlgorithmViolation = -9884,
    errSSLATSCertificateHashAlgorithmViolation = -9885,
    errSSLATSCertificateTrustViolation = -9886,
};
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecCertificateGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef _Nullable allocator, CFDataRef data)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFStringRef SecCertificateCopySubjectSummary(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecCertificateCopyCommonName(SecCertificateRef certificate, CFStringRef * _Nonnull __attribute__((cf_returns_retained)) commonName)
    __attribute__((availability(ios,introduced=10.3)));
OSStatus SecCertificateCopyEmailAddresses(SecCertificateRef certificate, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) emailAddresses)
    __attribute__((availability(ios,introduced=10.3)));







_Nullable
CFDataRef SecCertificateCopyNormalizedIssuerSequence(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3)));







_Nullable
CFDataRef SecCertificateCopyNormalizedSubjectSequence(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3)));
_Nullable __attribute__((cf_returns_retained))
SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
    __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)));
_Nullable
SecKeyRef SecCertificateCopyPublicKey(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3,deprecated=12.0,replacement="SecCertificateCopyKey"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
_Nullable
CFDataRef SecCertificateCopySerialNumberData(SecCertificateRef certificate, CFErrorRef *error)
    __attribute__((availability(ios,introduced=11.0)));
_Nullable
CFDataRef SecCertificateCopySerialNumber(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3,deprecated=11.0,replacement="SecCertificateCopySerialNumberData"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecIdentityGetTypeID(void)
     __attribute__((availability(ios,introduced=2.0)));
OSStatus SecIdentityCopyCertificate(
            SecIdentityRef identityRef,
            SecCertificateRef * _Nonnull __attribute__((cf_returns_retained)) certificateRef)
     __attribute__((availability(ios,introduced=2.0)));
OSStatus SecIdentityCopyPrivateKey(
            SecIdentityRef identityRef,
            SecKeyRef * _Nonnull __attribute__((cf_returns_retained)) privateKeyRef)
     __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecAccessControlGetTypeID(void)
__attribute__((availability(ios,introduced=8.0)));
typedef CFOptionFlags SecAccessControlCreateFlags; enum {
    kSecAccessControlUserPresence = 1u << 0,
    kSecAccessControlBiometryAny __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) = 1u << 1,
    kSecAccessControlTouchIDAny __attribute__((availability(macos,introduced=10.12.1,deprecated=10.13.4,replacement="kSecAccessControlBiometryAny"))) __attribute__((availability(ios,introduced=9.0,deprecated=11.3,replacement="kSecAccessControlBiometryAny"))) = 1u << 1,
    kSecAccessControlBiometryCurrentSet __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) = 1u << 3,
    kSecAccessControlTouchIDCurrentSet __attribute__((availability(macos,introduced=10.12.1,deprecated=10.13.4,replacement="kSecAccessControlBiometryCurrentSet"))) __attribute__((availability(ios,introduced=9.0,deprecated=11.3,replacement="kSecAccessControlBiometryCurrentSet"))) = 1u << 3,
    kSecAccessControlDevicePasscode __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) = 1u << 4,
    kSecAccessControlWatch __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(macCatalyst,introduced=13.0))) = 1u << 5,
    kSecAccessControlOr __attribute__((availability(macos,introduced=10.12.1))) __attribute__((availability(ios,introduced=9.0))) = 1u << 14,
    kSecAccessControlAnd __attribute__((availability(macos,introduced=10.12.1))) __attribute__((availability(ios,introduced=9.0))) = 1u << 15,
    kSecAccessControlPrivateKeyUsage __attribute__((availability(macos,introduced=10.12.1))) __attribute__((availability(ios,introduced=9.0))) = 1u << 30,
    kSecAccessControlApplicationPassword __attribute__((availability(macos,introduced=10.12.1))) __attribute__((availability(ios,introduced=9.0))) = 1u << 31,
} __attribute__((availability(ios,introduced=8.0)));
_Nullable
SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef _Nullable allocator, CFTypeRef protection,
                                                    SecAccessControlCreateFlags flags, CFErrorRef *error)
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecClass
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassInternetPassword
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassGenericPassword
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassCertificate
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassKey
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassIdentity
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAccessible
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccess
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrAccessControl
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessGroup
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=3.0)));
extern const CFStringRef kSecAttrSynchronizable
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecAttrSynchronizableAny
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecAttrCreationDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrModificationDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrDescription
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrComment
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCreator
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsInvisible
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsNegative
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAccount
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrService
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrGeneric
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSecurityDomain
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrServer
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocol
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPort
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPath
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubject
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIssuer
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSerialNumber
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubjectKeyID
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPublicKeyHash
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateEncoding
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClass
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsPermanent
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsSensitive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsExtractable
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationTag
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPRF
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrSalt
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrRounds
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeySizeInBits
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrEffectiveKeySize
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanEncrypt
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDecrypt
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDerive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanSign
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanVerify
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanWrap
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanUnwrap
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSyncViewHint
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrTokenID
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrPersistantReference
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const CFStringRef kSecAttrPersistentReference
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleWhenUnlocked
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlock
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlways
    __attribute__((availability(macos,introduced=10.9,deprecated=10.14,message="Use an accessibility level that provides some user protection, such as kSecAttrAccessibleAfterFirstUnlock"))) __attribute__((availability(ios,introduced=4.0,deprecated=12.0,message="Use an accessibility level that provides some user protection, such as kSecAttrAccessibleAfterFirstUnlock")));
extern const CFStringRef kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessibleWhenUnlockedThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlwaysThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9,deprecated=10.14,message="Use an accessibility level that provides some user protection, such as kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly"))) __attribute__((availability(ios,introduced=4.0,deprecated=12.0,message="Use an accessibility level that provides some user protection, such as kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly")));
extern const CFStringRef kSecAttrProtocolFTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPAccount
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRC
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSOCKS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAppleTalk
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAFP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnet
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSSH
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPSProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMB
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolDAAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolEPPC
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIPP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnetS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRCS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3S
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeNTLM
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeMSN
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDPA
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeRPA
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPBasic
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPDigest
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTMLForm
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDefault
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassPublic
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassPrivate
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassSymmetric
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyTypeRSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyTypeDSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeAES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeDES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyType3DES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeRC4
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeRC2
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeCAST
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeECDSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeEC
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrKeyTypeECSECPrimeRandom
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA1
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA224
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA256
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA384
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA512
      __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchPolicy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchItemList
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSearchList
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchIssuers
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchEmailAddressIfPresent
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSubjectContains
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSubjectStartsWith
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchSubjectEndsWith
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchSubjectWholeString
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchCaseInsensitive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchDiacriticInsensitive
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchWidthInsensitive
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecMatchTrustedOnly
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchValidOnDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimit
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitOne
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitAll
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnData
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnAttributes
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnPersistentRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValueData
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValueRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValuePersistentRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecUseItemList
    __attribute__((availability(macos,introduced=10.6)))
    __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="Not implemented on this platform"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="Not implemented on this platform"))) __attribute__((availability(watchos,introduced=1.0,deprecated=5.0,message="Not implemented on this platform")))
    __attribute__((availability(macCatalyst,unavailable)));
extern const CFStringRef kSecUseKeychain
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecUseOperationPrompt
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecUseNoAuthenticationUI
    __attribute__((availability(macos,introduced=10.10,deprecated=10.11,message="Use kSecUseAuthenticationUI instead."))) __attribute__((availability(ios,introduced=8.0,deprecated=9.0,message="Use kSecUseAuthenticationUI instead.")));
extern const CFStringRef kSecUseAuthenticationUI
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationContext
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseDataProtectionKeychain
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern const CFStringRef kSecUseAuthenticationUIAllow
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUIFail
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUISkip
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrTokenIDSecureEnclave
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrAccessGroupToken
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemDelete(CFDictionaryRef query)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
typedef uint32_t SecPadding; enum
{
    kSecPaddingNone = 0,
    kSecPaddingPKCS1 = 1,
    kSecPaddingOAEP = 2,




    kSecPaddingSigRaw = 0x4000,




    kSecPaddingPKCS1MD2 = 0x8000,




    kSecPaddingPKCS1MD5 = 0x8001,




    kSecPaddingPKCS1SHA1 = 0x8002,




    kSecPaddingPKCS1SHA224 = 0x8003,




    kSecPaddingPKCS1SHA256 = 0x8004,




    kSecPaddingPKCS1SHA384 = 0x8005,




    kSecPaddingPKCS1SHA512 = 0x8006,
};
extern const CFStringRef kSecPrivateKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecPublicKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));






CFTypeID SecKeyGetTypeID(void)
 __attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyGeneratePair(CFDictionaryRef parameters,
    SecKeyRef * _Nullable __attribute__((cf_returns_retained)) publicKey, SecKeyRef * _Nullable __attribute__((cf_returns_retained)) privateKey)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyRawSign(
                       SecKeyRef key,
                       SecPadding padding,
                       const uint8_t *dataToSign,
                       size_t dataToSignLen,
                       uint8_t *sig,
                       size_t *sigLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyRawVerify(
                         SecKeyRef key,
                         SecPadding padding,
                         const uint8_t *signedData,
                         size_t signedDataLen,
                         const uint8_t *sig,
                         size_t sigLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyEncrypt(
                       SecKeyRef key,
                       SecPadding padding,
                       const uint8_t *plainText,
                       size_t plainTextLen,
                       uint8_t *cipherText,
                       size_t *cipherTextLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyDecrypt(
                       SecKeyRef key,
                       SecPadding padding,


                       const uint8_t *cipherText,
                       size_t cipherTextLen,
                       uint8_t *plainText,
                       size_t *plainTextLen)
__attribute__((availability(ios,introduced=2.0)));
SecKeyRef _Nullable SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
SecKeyRef _Nullable SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
size_t SecKeyGetBlockSize(SecKeyRef key)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef _Nullable SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDictionaryRef _Nullable SecKeyCopyAttributes(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
SecKeyRef _Nullable SecKeyCopyPublicKey(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
typedef CFStringRef SecKeyAlgorithm __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA1
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA224
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA256
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA384
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA512
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA1
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA224
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA256
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA384
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA512
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureRFC4754
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionPKCS1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandard
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactor
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateEncryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef plaintext,
                                               CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateDecryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef ciphertext,
                                               CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));







typedef CFStringRef SecKeyKeyExchangeParameter __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterRequestedSize
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterSharedInfo
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCopyKeyExchangeResult(SecKeyRef privateKey, SecKeyAlgorithm algorithm, SecKeyRef publicKey, CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
typedef CFIndex SecKeyOperationType; enum {
    kSecKeyOperationTypeSign = 0,
    kSecKeyOperationTypeVerify = 1,
    kSecKeyOperationTypeEncrypt = 2,
    kSecKeyOperationTypeDecrypt = 3,
    kSecKeyOperationTypeKeyExchange = 4,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
Boolean SecKeyIsAlgorithmSupported(SecKeyRef key, SecKeyOperationType operation, SecKeyAlgorithm algorithm)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecPolicyAppleX509Basic
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSSL
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSMIME
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleEAP
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleIPsec
    __attribute__((availability(ios,introduced=7.0)));




extern const CFStringRef kSecPolicyApplePKINITClient
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
extern const CFStringRef kSecPolicyApplePKINITServer
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
extern const CFStringRef kSecPolicyAppleCodeSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyMacAppStoreReceipt
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecPolicyAppleIDValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleTimeStamping
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleRevocation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePassbookSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePayIssuerEncryption
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecPolicyOid
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyName
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyClient
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyRevocationFlags
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyTeamIdentifier
    __attribute__((availability(ios,introduced=7.0)));







CFTypeID SecPolicyGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFDictionaryRef SecPolicyCopyProperties(SecPolicyRef policyRef)
    __attribute__((availability(ios,introduced=7.0)));







SecPolicyRef SecPolicyCreateBasicX509(void)
    __attribute__((availability(ios,introduced=2.0)));
SecPolicyRef SecPolicyCreateSSL(Boolean server, CFStringRef _Nullable hostname)
    __attribute__((availability(ios,introduced=2.0)));
enum {
    kSecRevocationOCSPMethod = (1 << 0),
    kSecRevocationCRLMethod = (1 << 1),
    kSecRevocationPreferCRL = (1 << 2),
    kSecRevocationRequirePositiveResponse = (1 << 3),
    kSecRevocationNetworkAccessDisabled = (1 << 4),
    kSecRevocationUseAnyAvailableMethod = (kSecRevocationOCSPMethod |
                                           kSecRevocationCRLMethod)
};
_Nullable
SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
    __attribute__((availability(ios,introduced=7.0)));
_Nullable
SecPolicyRef SecPolicyCreateWithProperties(CFTypeRef policyIdentifier,
                                           CFDictionaryRef _Nullable properties)
    __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin






typedef const struct __SecRandom * SecRandomRef;



extern const SecRandomRef kSecRandomDefault
    __attribute__((availability(ios,introduced=2.0)));
int SecRandomCopyBytes(SecRandomRef _Nullable rnd, size_t count, void *bytes)
    __attribute__ ((warn_unused_result))
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecImportExportPassphrase
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportExportKeychain
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecImportExportAccess
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kSecImportItemLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemKeyID
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemTrust
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemCertChain
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemIdentity
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecPKCS12Import(CFDataRef pkcs12_data, CFDictionaryRef options, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) items)
     __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
typedef uint32_t SecTrustResultType; enum {
    kSecTrustResultInvalid __attribute__((availability(ios,introduced=2_0))) = 0,
    kSecTrustResultProceed __attribute__((availability(ios,introduced=2_0))) = 1,
    kSecTrustResultConfirm __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) = 2,
    kSecTrustResultDeny __attribute__((availability(ios,introduced=2_0))) = 3,
    kSecTrustResultUnspecified __attribute__((availability(ios,introduced=2_0))) = 4,
    kSecTrustResultRecoverableTrustFailure __attribute__((availability(ios,introduced=2_0))) = 5,
    kSecTrustResultFatalTrustFailure __attribute__((availability(ios,introduced=2_0))) = 6,
    kSecTrustResultOtherError __attribute__((availability(ios,introduced=2_0))) = 7
};





typedef struct __attribute__((objc_bridge(id))) __SecTrust *SecTrustRef;
extern const CFStringRef kSecPropertyTypeTitle
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPropertyTypeError
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustEvaluationDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustExtendedValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustOrganizationName
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustResultValue
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationChecked
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationValidUntilDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustCertificateTransparency
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecTrustCertificateTransparencyWhiteList
    __attribute__((availability(ios,introduced=10.0,deprecated=11.0)));
typedef void (*SecTrustCallback)(SecTrustRef trustRef, SecTrustResultType trustResult);
CFTypeID SecTrustGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates,
    CFTypeRef _Nullable policies, SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
    __attribute__((availability(ios,introduced=6.0)));
OSStatus SecTrustCopyPolicies(SecTrustRef trust, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) policies)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetNetworkFetchAllowed(SecTrustRef trust,
    Boolean allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustGetNetworkFetchAllowed(SecTrustRef trust,
    Boolean *allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust,
    CFArrayRef _Nullable anchorCertificates)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustSetAnchorCertificatesOnly(SecTrustRef trust,
    Boolean anchorCertificatesOnly)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustCopyCustomAnchorCertificates(SecTrustRef trust,
    CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) anchors)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetVerifyDate(SecTrustRef trust, CFDateRef verifyDate)
    __attribute__((availability(ios,introduced=2.0)));
CFAbsoluteTime SecTrustGetVerifyTime(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType *result)
    __attribute__((availability(macos,introduced=10.3,deprecated=10.15,replacement="SecTrustEvaluateWithError"))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,replacement="SecTrustEvaluateWithError"))) __attribute__((availability(watchos,introduced=1.0,deprecated=6.0,replacement="SecTrustEvaluateWithError"))) __attribute__((availability(tvos,introduced=2.0,deprecated=13.0,replacement="SecTrustEvaluateWithError")));
OSStatus SecTrustEvaluateAsync(SecTrustRef trust,
    dispatch_queue_t _Nullable queue, SecTrustCallback result)
    __attribute__((availability(macos,introduced=10.7,deprecated=10.15,replacement="SecTrustEvaluateAsyncWithError"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,replacement="SecTrustEvaluateAsyncWithError"))) __attribute__((availability(watchos,introduced=1.0,deprecated=6.0,replacement="SecTrustEvaluateAsyncWithError"))) __attribute__((availability(tvos,introduced=7.0,deprecated=13.0,replacement="SecTrustEvaluateAsyncWithError")));
__attribute__((warn_unused_result)) bool
SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef _Nullable * _Nullable __attribute__((cf_returns_retained)) error)
    __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0)));
typedef void (*SecTrustWithErrorCallback)(SecTrustRef trustRef, bool result, CFErrorRef _Nullable error);
OSStatus SecTrustEvaluateAsyncWithError(SecTrustRef trust, dispatch_queue_t queue, SecTrustWithErrorCallback result)
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
OSStatus SecTrustGetTrustResult(SecTrustRef trust,
    SecTrustResultType *result)
    __attribute__((availability(ios,introduced=7.0)));
_Nullable
SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
CFIndex SecTrustGetCertificateCount(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
SecCertificateRef SecTrustGetCertificateAtIndex(SecTrustRef trust, CFIndex ix)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef SecTrustCopyExceptions(SecTrustRef trust)
    __attribute__((availability(ios,introduced=4.0)));
bool SecTrustSetExceptions(SecTrustRef trust, CFDataRef _Nullable exceptions)
    __attribute__((availability(ios,introduced=4.0)));
_Nullable
CFArrayRef SecTrustCopyProperties(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFDictionaryRef SecTrustCopyResult(SecTrustRef trust)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetOCSPResponse(SecTrustRef trust, CFTypeRef _Nullable responseData)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetSignedCertificateTimestamps(SecTrustRef trust, CFArrayRef _Nullable sctArray)
    __attribute__((availability(macos,introduced=10.14.2))) __attribute__((availability(ios,introduced=12.1.1))) __attribute__((availability(tvos,introduced=12.1.1))) __attribute__((availability(watchos,introduced=5.1.1)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecSharedPassword __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
void SecAddSharedWebCredential(CFStringRef fqdn, CFStringRef account, CFStringRef _Nullable password,
    void (^completionHandler)(CFErrorRef _Nullable error)) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
void SecRequestSharedWebCredential(CFStringRef _Nullable fqdn, CFStringRef _Nullable account,
    void (^completionHandler)(CFArrayRef _Nullable credentials, CFErrorRef _Nullable error)) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






_Nullable
CFStringRef SecCreateSharedWebCredentialPassword(void) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end






}
extern "C" {
__attribute__((visibility("default"))) void *sec_retain(void *obj);
__attribute__((visibility("default"))) void sec_release(void *obj);
}
// @protocol OS_sec_object <NSObject> /* @end */
 typedef NSObject/*<OS_sec_object>*/ * __attribute__((objc_independent_class)) sec_object_t;
typedef uint16_t SSLCipherSuite;





enum
{ SSL_NULL_WITH_NULL_NULL = 0x0000,
    SSL_RSA_WITH_NULL_MD5 = 0x0001,
    SSL_RSA_WITH_NULL_SHA = 0x0002,
    SSL_RSA_EXPORT_WITH_RC4_40_MD5 = 0x0003,
    SSL_RSA_WITH_RC4_128_MD5 = 0x0004,
    SSL_RSA_WITH_RC4_128_SHA = 0x0005,
    SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x0006,
    SSL_RSA_WITH_IDEA_CBC_SHA = 0x0007,
    SSL_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0008,
    SSL_RSA_WITH_DES_CBC_SHA = 0x0009,
    SSL_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x000B,
    SSL_DH_DSS_WITH_DES_CBC_SHA = 0x000C,
    SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x000E,
    SSL_DH_RSA_WITH_DES_CBC_SHA = 0x000F,
    SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x0011,
    SSL_DHE_DSS_WITH_DES_CBC_SHA = 0x0012,
    SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0014,
    SSL_DHE_RSA_WITH_DES_CBC_SHA = 0x0015,
    SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x0017,
    SSL_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x0019,
    SSL_DH_anon_WITH_DES_CBC_SHA = 0x001A,
    SSL_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    SSL_FORTEZZA_DMS_WITH_NULL_SHA = 0x001C,
    SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA = 0x001D,


 TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F,
 TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x0030,
 TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x0031,
 TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032,
 TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033,
 TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x0034,
 TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035,
 TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x0036,
 TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x0037,
 TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038,
 TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039,
 TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x003A,


 TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,
 TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,
 TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,
 TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,
 TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,
 TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,
 TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,
 TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,
 TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,
 TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,
 TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,
 TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,
 TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,
 TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,
 TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,
 TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,
 TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,
 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,
 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,
 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,
 TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,
 TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,
 TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,
 TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,
 TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019,


    TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = 0xC035,
    TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = 0xC036,


    TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAB,




    TLS_NULL_WITH_NULL_NULL = 0x0000,


    TLS_RSA_WITH_NULL_MD5 = 0x0001,
    TLS_RSA_WITH_NULL_SHA = 0x0002,
    TLS_RSA_WITH_RC4_128_MD5 = 0x0004,
    TLS_RSA_WITH_RC4_128_SHA = 0x0005,
    TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    TLS_RSA_WITH_NULL_SHA256 = 0x003B,
    TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C,
    TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D,


    TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x003E,
    TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x003F,
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040,
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067,
    TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x0068,
    TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x0069,
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A,
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B,


    TLS_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x006C,
    TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x006D,


    TLS_PSK_WITH_RC4_128_SHA = 0x008A,
    TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x008B,
    TLS_PSK_WITH_AES_128_CBC_SHA = 0x008C,
    TLS_PSK_WITH_AES_256_CBC_SHA = 0x008D,
    TLS_DHE_PSK_WITH_RC4_128_SHA = 0x008E,
    TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x008F,
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x0090,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x0091,
    TLS_RSA_PSK_WITH_RC4_128_SHA = 0x0092,
    TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x0093,
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x0094,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x0095,


    TLS_PSK_WITH_NULL_SHA = 0x002C,
    TLS_DHE_PSK_WITH_NULL_SHA = 0x002D,
    TLS_RSA_PSK_WITH_NULL_SHA = 0x002E,


    TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C,
    TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D,
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E,
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F,
    TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0x00A0,
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0x00A1,
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2,
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3,
    TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0x00A4,
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0x00A5,
    TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0x00A6,
    TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0x00A7,


    TLS_PSK_WITH_AES_128_GCM_SHA256 = 0x00A8,
    TLS_PSK_WITH_AES_256_GCM_SHA384 = 0x00A9,
    TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0x00AA,
    TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0x00AB,
    TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0x00AC,
    TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0x00AD,

    TLS_PSK_WITH_AES_128_CBC_SHA256 = 0x00AE,
    TLS_PSK_WITH_AES_256_CBC_SHA384 = 0x00AF,
    TLS_PSK_WITH_NULL_SHA256 = 0x00B0,
    TLS_PSK_WITH_NULL_SHA384 = 0x00B1,

    TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0x00B2,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0x00B3,
    TLS_DHE_PSK_WITH_NULL_SHA256 = 0x00B4,
    TLS_DHE_PSK_WITH_NULL_SHA384 = 0x00B5,

    TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0x00B6,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0x00B7,
    TLS_RSA_PSK_WITH_NULL_SHA256 = 0x00B8,
    TLS_RSA_PSK_WITH_NULL_SHA384 = 0x00B9,




    TLS_AES_128_GCM_SHA256 = 0x1301,
    TLS_AES_256_GCM_SHA384 = 0x1302,
    TLS_CHACHA20_POLY1305_SHA256 = 0x1303,
    TLS_AES_128_CCM_SHA256 = 0x1304,
    TLS_AES_128_CCM_8_SHA256 = 0x1305,



    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025,
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026,
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029,
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A,



    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D,
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E,
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031,
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032,



    TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8,
    TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9,


    TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0x00FF,



    SSL_RSA_WITH_RC2_CBC_MD5 = 0xFF80,
    SSL_RSA_WITH_IDEA_CBC_MD5 = 0xFF81,
    SSL_RSA_WITH_DES_CBC_MD5 = 0xFF82,
    SSL_RSA_WITH_3DES_EDE_CBC_MD5 = 0xFF83,
    SSL_NO_SUCH_CIPHERSUITE = 0xFFFF
};





typedef int SSLCiphersuiteGroup; enum {
    kSSLCiphersuiteGroupDefault,
    kSSLCiphersuiteGroupCompatibility,
    kSSLCiphersuiteGroupLegacy,
    kSSLCiphersuiteGroupATS,
    kSSLCiphersuiteGroupATSCompatibility,
};
// @protocol OS_sec_trust <NSObject> /* @end */
 typedef NSObject/*<OS_sec_trust>*/ * __attribute__((objc_independent_class)) sec_trust_t;
// @protocol OS_sec_identity <NSObject> /* @end */
 typedef NSObject/*<OS_sec_identity>*/ * __attribute__((objc_independent_class)) sec_identity_t;
// @protocol OS_sec_certificate <NSObject> /* @end */
 typedef NSObject/*<OS_sec_certificate>*/ * __attribute__((objc_independent_class)) sec_certificate_t;
typedef uint16_t tls_protocol_version_t; enum {
    tls_protocol_version_TLSv10 __attribute__((swift_name("TLSv10"))) = 0x0301,
    tls_protocol_version_TLSv11 __attribute__((swift_name("TLSv11"))) = 0x0302,
    tls_protocol_version_TLSv12 __attribute__((swift_name("TLSv12"))) = 0x0303,
    tls_protocol_version_TLSv13 __attribute__((swift_name("TLSv13"))) = 0x0304,
    tls_protocol_version_DTLSv10 __attribute__((swift_name("DTLSv10"))) = 0xfeff,
    tls_protocol_version_DTLSv12 __attribute__((swift_name("DTLSv12"))) = 0xfefd,
};
typedef uint16_t tls_ciphersuite_t; enum {
    tls_ciphersuite_RSA_WITH_3DES_EDE_CBC_SHA __attribute__((swift_name("RSA_WITH_3DES_EDE_CBC_SHA"))) = 0x000A,
    tls_ciphersuite_RSA_WITH_AES_128_CBC_SHA __attribute__((swift_name("RSA_WITH_AES_128_CBC_SHA"))) = 0x002F,
    tls_ciphersuite_RSA_WITH_AES_256_CBC_SHA __attribute__((swift_name("RSA_WITH_AES_256_CBC_SHA"))) = 0x0035,
    tls_ciphersuite_RSA_WITH_AES_128_GCM_SHA256 __attribute__((swift_name("RSA_WITH_AES_128_GCM_SHA256"))) = 0x009C,
    tls_ciphersuite_RSA_WITH_AES_256_GCM_SHA384 __attribute__((swift_name("RSA_WITH_AES_256_GCM_SHA384"))) = 0x009D,
    tls_ciphersuite_RSA_WITH_AES_128_CBC_SHA256 __attribute__((swift_name("RSA_WITH_AES_128_CBC_SHA256"))) = 0x003C,
    tls_ciphersuite_RSA_WITH_AES_256_CBC_SHA256 __attribute__((swift_name("RSA_WITH_AES_256_CBC_SHA256"))) = 0x003D,
    tls_ciphersuite_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA __attribute__((swift_name("ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"))) = 0xC008,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_CBC_SHA __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_128_CBC_SHA"))) = 0xC009,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_CBC_SHA __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_256_CBC_SHA"))) = 0xC00A,
    tls_ciphersuite_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA __attribute__((swift_name("ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"))) = 0xC012,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_128_CBC_SHA __attribute__((swift_name("ECDHE_RSA_WITH_AES_128_CBC_SHA"))) = 0xC013,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_256_CBC_SHA __attribute__((swift_name("ECDHE_RSA_WITH_AES_256_CBC_SHA"))) = 0xC014,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"))) = 0xC023,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"))) = 0xC024,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_128_CBC_SHA256 __attribute__((swift_name("ECDHE_RSA_WITH_AES_128_CBC_SHA256"))) = 0xC027,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_256_CBC_SHA384 __attribute__((swift_name("ECDHE_RSA_WITH_AES_256_CBC_SHA384"))) = 0xC028,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"))) = 0xC02B,
    tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 __attribute__((swift_name("ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"))) = 0xC02C,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_128_GCM_SHA256 __attribute__((swift_name("ECDHE_RSA_WITH_AES_128_GCM_SHA256"))) = 0xC02F,
    tls_ciphersuite_ECDHE_RSA_WITH_AES_256_GCM_SHA384 __attribute__((swift_name("ECDHE_RSA_WITH_AES_256_GCM_SHA384"))) = 0xC030,
    tls_ciphersuite_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 __attribute__((swift_name("ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"))) = 0xCCA8,
    tls_ciphersuite_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 __attribute__((swift_name("ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"))) = 0xCCA9,
    tls_ciphersuite_AES_128_GCM_SHA256 __attribute__((swift_name("AES_128_GCM_SHA256"))) = 0x1301,
    tls_ciphersuite_AES_256_GCM_SHA384 __attribute__((swift_name("AES_256_GCM_SHA384"))) = 0x1302,
    tls_ciphersuite_CHACHA20_POLY1305_SHA256 __attribute__((swift_name("CHACHA20_POLY1305_SHA256"))) = 0x1303,
};
typedef uint16_t tls_ciphersuite_group_t; enum {
    tls_ciphersuite_group_default,
    tls_ciphersuite_group_compatibility,
    tls_ciphersuite_group_legacy,
    tls_ciphersuite_group_ats,
    tls_ciphersuite_group_ats_compatibility,
};







typedef int SSLProtocol; enum {
    kSSLProtocolUnknown __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 0,
    kTLSProtocol1 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 4,
    kTLSProtocol11 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 7,
    kTLSProtocol12 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 8,
    kDTLSProtocol1 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 9,
    kTLSProtocol13 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 10,
    kDTLSProtocol12 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 11,
    kTLSProtocolMaxSupported __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 999,
    kSSLProtocol2 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 1,
    kSSLProtocol3 __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 2,
    kSSLProtocol3Only __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 3,
    kTLSProtocol1Only __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 5,
    kSSLProtocolAll __attribute__((availability(ios,introduced=5_0,deprecated=13_0,message="" ))) = 6,
};

extern "C" {

#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable sec_trust_t
sec_trust_create(SecTrustRef trust);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
SecTrustRef
sec_trust_copy_ref(sec_trust_t trust);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable sec_identity_t
sec_identity_create(SecIdentityRef identity);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable sec_identity_t
sec_identity_create_with_certificates(SecIdentityRef identity, CFArrayRef certificates);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
bool
sec_identity_access_certificates(sec_identity_t identity,
                                 void (^handler)(sec_certificate_t certificate));
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
_Nullable SecIdentityRef
sec_identity_copy_ref(sec_identity_t identity);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
_Nullable CFArrayRef
sec_identity_copy_certificates_ref(sec_identity_t identity);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable sec_certificate_t
sec_certificate_create(SecCertificateRef certificate);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
SecCertificateRef
sec_certificate_copy_ref(sec_certificate_t certificate);
#pragma clang assume_nonnull end


}
// @protocol OS_sec_protocol_metadata <NSObject> /* @end */
 typedef NSObject/*<OS_sec_protocol_metadata>*/ * __attribute__((objc_independent_class)) sec_protocol_metadata_t;


extern "C" {

#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
const char * _Nullable
sec_protocol_metadata_get_negotiated_protocol(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable dispatch_data_t
sec_protocol_metadata_copy_peer_public_key(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
tls_protocol_version_t
sec_protocol_metadata_get_negotiated_tls_protocol_version(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,replacement="sec_protocol_metadata_get_negotiated_tls_protocol_version"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,replacement="sec_protocol_metadata_get_negotiated_tls_protocol_version"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,replacement="sec_protocol_metadata_get_negotiated_tls_protocol_version"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,replacement="sec_protocol_metadata_get_negotiated_tls_protocol_version")))

SSLProtocol
sec_protocol_metadata_get_negotiated_protocol_version(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
tls_ciphersuite_t
sec_protocol_metadata_get_negotiated_tls_ciphersuite(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,replacement="sec_protocol_metadata_get_negotiated_tls_ciphersuite"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,replacement="sec_protocol_metadata_get_negotiated_tls_ciphersuite"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,replacement="sec_protocol_metadata_get_negotiated_tls_ciphersuite"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,replacement="sec_protocol_metadata_get_negotiated_tls_ciphersuite")))

__attribute__((availability(macCatalyst,unavailable)))
SSLCipherSuite
sec_protocol_metadata_get_negotiated_ciphersuite(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_get_early_data_accepted(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_access_peer_certificate_chain(sec_protocol_metadata_t metadata,
                                                    void (^handler)(sec_certificate_t certificate));
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_access_ocsp_response(sec_protocol_metadata_t metadata,
                                           void (^handler)(dispatch_data_t ocsp_data));
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_access_supported_signature_algorithms(sec_protocol_metadata_t metadata,
                                                            void (^handler)(uint16_t signature_algorithm));
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_access_distinguished_names(sec_protocol_metadata_t metadata,
                                                 void (^handler)(dispatch_data_t distinguished_name));
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
bool
sec_protocol_metadata_access_pre_shared_keys(sec_protocol_metadata_t metadata, void (^handler)(dispatch_data_t psk, dispatch_data_t psk_identity));
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
const char * _Nullable
sec_protocol_metadata_get_server_name(sec_protocol_metadata_t metadata);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_peers_are_equal(sec_protocol_metadata_t metadataA, sec_protocol_metadata_t metadataB);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
bool
sec_protocol_metadata_challenge_parameters_are_equal(sec_protocol_metadata_t metadataA, sec_protocol_metadata_t metadataB);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable dispatch_data_t
sec_protocol_metadata_create_secret(sec_protocol_metadata_t metadata, size_t label_len,
                                    const char *label, size_t exporter_length);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
__attribute__((__ns_returns_retained__)) _Nullable dispatch_data_t
sec_protocol_metadata_create_secret_with_context(sec_protocol_metadata_t metadata, size_t label_len,
                                                 const char *label, size_t context_len,
                                                 const uint8_t *context, size_t exporter_length);
#pragma clang assume_nonnull end


}
// @protocol OS_sec_protocol_options <NSObject> /* @end */
 typedef NSObject/*<OS_sec_protocol_options>*/ * __attribute__((objc_independent_class)) sec_protocol_options_t;


extern "C" {

#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
bool
sec_protocol_options_are_equal(sec_protocol_options_t optionsA, sec_protocol_options_t optionsB);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_local_identity(sec_protocol_options_t options, sec_identity_t identity);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_append_tls_ciphersuite(sec_protocol_options_t options, tls_ciphersuite_t ciphersuite);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,message="Use sec_protocol_options_append_tls_ciphersuite"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,message="Use sec_protocol_options_append_tls_ciphersuite"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,message="Use sec_protocol_options_append_tls_ciphersuite"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,message="Use sec_protocol_options_append_tls_ciphersuite")))
__attribute__((availability(macCatalyst,unavailable)))
void
sec_protocol_options_add_tls_ciphersuite(sec_protocol_options_t options, SSLCipherSuite ciphersuite);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_append_tls_ciphersuite_group(sec_protocol_options_t options, tls_ciphersuite_group_t group);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,message="Use sec_protocol_options_append_tls_ciphersuite_group"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,message="Use sec_protocol_options_append_tls_ciphersuite_group"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,message="Use sec_protocol_options_append_tls_ciphersuite_group"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,message="Use sec_protocol_options_append_tls_ciphersuite_group")))
__attribute__((availability(macCatalyst,unavailable)))
void
sec_protocol_options_add_tls_ciphersuite_group(sec_protocol_options_t options, SSLCiphersuiteGroup group);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,replacement="sec_protocol_options_set_min_tls_protocol_version"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,replacement="sec_protocol_options_set_min_tls_protocol_version"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,replacement="sec_protocol_options_set_min_tls_protocol_version"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,replacement="sec_protocol_options_set_min_tls_protocol_version")))

__attribute__((availability(macCatalyst,unavailable)))
void
sec_protocol_options_set_tls_min_version(sec_protocol_options_t options, SSLProtocol version);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_set_min_tls_protocol_version(sec_protocol_options_t options, tls_protocol_version_t version);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
tls_protocol_version_t
sec_protocol_options_get_default_min_tls_protocol_version(void);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
tls_protocol_version_t
sec_protocol_options_get_default_min_dtls_protocol_version(void);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,replacement="sec_protocol_options_set_max_tls_protocol_version"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,replacement="sec_protocol_options_set_max_tls_protocol_version"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,replacement="sec_protocol_options_set_max_tls_protocol_version"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,replacement="sec_protocol_options_set_max_tls_protocol_version")))

__attribute__((availability(macCatalyst,unavailable)))
void
sec_protocol_options_set_tls_max_version(sec_protocol_options_t options, SSLProtocol version);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_set_max_tls_protocol_version(sec_protocol_options_t options, tls_protocol_version_t version);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
tls_protocol_version_t
sec_protocol_options_get_default_max_tls_protocol_version(void);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
tls_protocol_version_t
sec_protocol_options_get_default_max_dtls_protocol_version(void);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t options, const char *application_protocol);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_server_name(sec_protocol_options_t options, const char *server_name);
__attribute__((availability(macos,introduced=10.14,deprecated=10.15,message="DHE ciphersuites are no longer supported"))) __attribute__((availability(ios,introduced=12.0,deprecated=13.0,message="DHE ciphersuites are no longer supported"))) __attribute__((availability(watchos,introduced=5.0,deprecated=6.0,message="DHE ciphersuites are no longer supported"))) __attribute__((availability(tvos,introduced=12.0,deprecated=13.0,message="DHE ciphersuites are no longer supported")))
void
sec_protocol_options_set_tls_diffie_hellman_parameters(sec_protocol_options_t options, dispatch_data_t params);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_add_pre_shared_key(sec_protocol_options_t options, dispatch_data_t psk, dispatch_data_t psk_identity);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_set_tls_pre_shared_key_identity_hint(sec_protocol_options_t options, dispatch_data_t psk_identity_hint);
typedef void (*sec_protocol_pre_shared_key_selection_complete_t)(dispatch_data_t _Nullable psk_identity);
typedef void (*sec_protocol_pre_shared_key_selection_t)(sec_protocol_metadata_t metadata, dispatch_data_t _Nullable psk_identity_hint, sec_protocol_pre_shared_key_selection_complete_t complete);
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
void
sec_protocol_options_set_pre_shared_key_selection_block(sec_protocol_options_t options, sec_protocol_pre_shared_key_selection_t psk_selection_block, dispatch_queue_t psk_selection_queue);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_tickets_enabled(sec_protocol_options_t options, bool tickets_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_is_fallback_attempt(sec_protocol_options_t options, bool is_fallback_attempt);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_resumption_enabled(sec_protocol_options_t options, bool resumption_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_false_start_enabled(sec_protocol_options_t options, bool false_start_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_ocsp_enabled(sec_protocol_options_t options, bool ocsp_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_sct_enabled(sec_protocol_options_t options, bool sct_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_tls_renegotiation_enabled(sec_protocol_options_t options, bool renegotiation_enabled);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_peer_authentication_required(sec_protocol_options_t options, bool peer_authentication_required);
typedef void (*sec_protocol_key_update_complete_t)(void);
typedef void (*sec_protocol_key_update_t)(sec_protocol_metadata_t metadata, sec_protocol_key_update_complete_t complete);
typedef void (*sec_protocol_challenge_complete_t)(sec_identity_t _Nullable identity);
typedef void (*sec_protocol_challenge_t)(sec_protocol_metadata_t metadata, sec_protocol_challenge_complete_t complete);
typedef void (*sec_protocol_verify_complete_t)(bool result);
typedef void (*sec_protocol_verify_t)(sec_protocol_metadata_t metadata, sec_trust_t trust_ref, sec_protocol_verify_complete_t complete);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_key_update_block(sec_protocol_options_t options, sec_protocol_key_update_t key_update_block, dispatch_queue_t key_update_queue);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_challenge_block(sec_protocol_options_t options, sec_protocol_challenge_t challenge_block, dispatch_queue_t challenge_queue);
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))
void
sec_protocol_options_set_verify_block(sec_protocol_options_t options, sec_protocol_verify_t verify_block, dispatch_queue_t verify_block_queue);
#pragma clang assume_nonnull end




}

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSURLCredentialPersistence; enum {
    NSURLCredentialPersistenceNone,
    NSURLCredentialPersistenceForSession,
    NSURLCredentialPersistencePermanent,
    NSURLCredentialPersistenceSynchronizable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};

// @class NSURLCredentialInternal;
#ifndef _REWRITER_typedef_NSURLCredentialInternal
#define _REWRITER_typedef_NSURLCredentialInternal
typedef struct objc_object NSURLCredentialInternal;
typedef struct {} _objc_exc_NSURLCredentialInternal;
#endif








#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

struct NSURLCredential_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCredentialInternal *_internal;
};






// @property (readonly) NSURLCredentialPersistence persistence;

/* @end */





// @interface NSURLCredential(NSInternetPassword)
// - (instancetype)initWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;
// + (NSURLCredential *)credentialWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;





// @property (nullable, readonly, copy) NSString *user;
// @property (nullable, readonly, copy) NSString *password;
// @property (readonly) BOOL hasPassword;

/* @end */





// @interface NSURLCredential(NSClientCertificate)
// - (instancetype)initWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSURLCredential *)credentialWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly) SecIdentityRef identity;





// @property (readonly, copy) NSArray *certificates __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSURLCredential(NSServerTrust)






// - (instancetype)initWithTrust:(SecTrustRef)trust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// + (NSURLCredential *)credentialForTrust:(SecTrustRef)trust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin





extern "C" NSString * const NSURLProtectionSpaceHTTP __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceHTTPS __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceFTP __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceHTTPProxy;





extern "C" NSString * const NSURLProtectionSpaceHTTPSProxy;





extern "C" NSString * const NSURLProtectionSpaceFTPProxy;





extern "C" NSString * const NSURLProtectionSpaceSOCKSProxy;





extern "C" NSString * const NSURLAuthenticationMethodDefault;






extern "C" NSString * const NSURLAuthenticationMethodHTTPBasic;





extern "C" NSString * const NSURLAuthenticationMethodHTTPDigest;





extern "C" NSString * const NSURLAuthenticationMethodHTMLForm;





extern "C" NSString * const NSURLAuthenticationMethodNTLM __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodNegotiate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodClientCertificate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodServerTrust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @class NSURLProtectionSpaceInternal;
#ifndef _REWRITER_typedef_NSURLProtectionSpaceInternal
#define _REWRITER_typedef_NSURLProtectionSpaceInternal
typedef struct objc_object NSURLProtectionSpaceInternal;
typedef struct {} _objc_exc_NSURLProtectionSpaceInternal;
#endif








#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

struct NSURLProtectionSpace_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLProtectionSpaceInternal *_internal;
};

// - (instancetype)initWithHost:(NSString *)host port:(NSInteger)port protocol:(nullable NSString *)protocol realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
// - (instancetype)initWithProxyHost:(NSString *)host port:(NSInteger)port type:(nullable NSString *)type realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
// @property (nullable, readonly, copy) NSString *realm;





// @property (readonly) BOOL receivesCredentialSecurely;





// @property (readonly) BOOL isProxy;





// @property (readonly, copy) NSString *host;





// @property (readonly) NSInteger port;





// @property (nullable, readonly, copy) NSString *proxyType;





// @property (nullable, readonly, copy) NSString *protocol;





// @property (readonly, copy) NSString *authenticationMethod;

/* @end */





// @interface NSURLProtectionSpace(NSClientCertificateSpace)





// @property (nullable, readonly, copy) NSArray<NSData *> *distinguishedNames __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





// @interface NSURLProtectionSpace(NSServerTrustValidationSpace)





// @property (nullable, readonly) SecTrustRef serverTrust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end


// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif


// @class NSURLCredentialStorageInternal;
#ifndef _REWRITER_typedef_NSURLCredentialStorageInternal
#define _REWRITER_typedef_NSURLCredentialStorageInternal
typedef struct objc_object NSURLCredentialStorageInternal;
typedef struct {} _objc_exc_NSURLCredentialStorageInternal;
#endif


#pragma clang assume_nonnull begin







#ifndef _REWRITER_typedef_NSURLCredentialStorage
#define _REWRITER_typedef_NSURLCredentialStorage
typedef struct objc_object NSURLCredentialStorage;
typedef struct {} _objc_exc_NSURLCredentialStorage;
#endif

struct NSURLCredentialStorage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCredentialStorageInternal *_internal;
};







@property (class, readonly, strong) NSURLCredentialStorage *sharedCredentialStorage;







// - (nullable NSDictionary<NSString *, NSURLCredential *> *)credentialsForProtectionSpace:(NSURLProtectionSpace *)space;







// @property (readonly, copy) NSDictionary<NSURLProtectionSpace *, NSDictionary<NSString *, NSURLCredential *> *> *allCredentials;
// - (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSURLCredential *)defaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;

/* @end */


// @interface NSURLCredentialStorage (NSURLSessionTaskAdditions)
// - (void)getCredentialsForProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task completionHandler:(void (^) (NSDictionary<NSString *, NSURLCredential *> * _Nullable credentials))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace options:(nullable NSDictionary<NSString *, id> *)options task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getDefaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space task:(NSURLSessionTask *)task completionHandler:(void (^) (NSURLCredential * _Nullable credential))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */







extern "C" NSNotificationName const NSURLCredentialStorageChangedNotification;







extern "C" NSString *const NSURLCredentialStorageRemoveSynchronizableCredentials __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end



extern "C" {
#pragma clang assume_nonnull begin
extern const CFStringRef kCFErrorDomainCFNetwork __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));
typedef int CFNetworkErrors; enum {

  kCFHostErrorHostNotFound = 1,
  kCFHostErrorUnknown = 2,

  kCFSOCKSErrorUnknownClientVersion = 100,
  kCFSOCKSErrorUnsupportedServerVersion = 101,

  kCFSOCKS4ErrorRequestFailed = 110,
  kCFSOCKS4ErrorIdentdFailed = 111,
  kCFSOCKS4ErrorIdConflict = 112,
  kCFSOCKS4ErrorUnknownStatusCode = 113,

  kCFSOCKS5ErrorBadState = 120,
  kCFSOCKS5ErrorBadResponseAddr = 121,
  kCFSOCKS5ErrorBadCredentials = 122,
  kCFSOCKS5ErrorUnsupportedNegotiationMethod = 123,
  kCFSOCKS5ErrorNoAcceptableMethod = 124,

  kCFFTPErrorUnexpectedStatusCode = 200,

  kCFErrorHTTPAuthenticationTypeUnsupported = 300,
  kCFErrorHTTPBadCredentials = 301,
  kCFErrorHTTPConnectionLost = 302,
  kCFErrorHTTPParseFailure = 303,
  kCFErrorHTTPRedirectionLoopDetected = 304,
  kCFErrorHTTPBadURL = 305,
  kCFErrorHTTPProxyConnectionFailure = 306,
  kCFErrorHTTPBadProxyCredentials = 307,
  kCFErrorPACFileError = 308,
  kCFErrorPACFileAuth = 309,
  kCFErrorHTTPSProxyConnectionFailure = 310,
  kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod = 311,


  kCFURLErrorBackgroundSessionInUseByAnotherProcess = -996,
  kCFURLErrorBackgroundSessionWasDisconnected = -997,
  kCFURLErrorUnknown = -998,
  kCFURLErrorCancelled = -999,
  kCFURLErrorBadURL = -1000,
  kCFURLErrorTimedOut = -1001,
  kCFURLErrorUnsupportedURL = -1002,
  kCFURLErrorCannotFindHost = -1003,
  kCFURLErrorCannotConnectToHost = -1004,
  kCFURLErrorNetworkConnectionLost = -1005,
  kCFURLErrorDNSLookupFailed = -1006,
  kCFURLErrorHTTPTooManyRedirects = -1007,
  kCFURLErrorResourceUnavailable = -1008,
  kCFURLErrorNotConnectedToInternet = -1009,
  kCFURLErrorRedirectToNonExistentLocation = -1010,
  kCFURLErrorBadServerResponse = -1011,
  kCFURLErrorUserCancelledAuthentication = -1012,
  kCFURLErrorUserAuthenticationRequired = -1013,
  kCFURLErrorZeroByteResource = -1014,
  kCFURLErrorCannotDecodeRawData = -1015,
  kCFURLErrorCannotDecodeContentData = -1016,
  kCFURLErrorCannotParseResponse = -1017,
  kCFURLErrorInternationalRoamingOff = -1018,
  kCFURLErrorCallIsActive = -1019,
  kCFURLErrorDataNotAllowed = -1020,
  kCFURLErrorRequestBodyStreamExhausted = -1021,
  kCFURLErrorAppTransportSecurityRequiresSecureConnection = -1022,
  kCFURLErrorFileDoesNotExist = -1100,
  kCFURLErrorFileIsDirectory = -1101,
  kCFURLErrorNoPermissionsToReadFile = -1102,
  kCFURLErrorDataLengthExceedsMaximum = -1103,
  kCFURLErrorFileOutsideSafeArea = -1104,

  kCFURLErrorSecureConnectionFailed = -1200,
  kCFURLErrorServerCertificateHasBadDate = -1201,
  kCFURLErrorServerCertificateUntrusted = -1202,
  kCFURLErrorServerCertificateHasUnknownRoot = -1203,
  kCFURLErrorServerCertificateNotYetValid = -1204,
  kCFURLErrorClientCertificateRejected = -1205,
  kCFURLErrorClientCertificateRequired = -1206,
  kCFURLErrorCannotLoadFromNetwork = -2000,

  kCFURLErrorCannotCreateFile = -3000,
  kCFURLErrorCannotOpenFile = -3001,
  kCFURLErrorCannotCloseFile = -3002,
  kCFURLErrorCannotWriteToFile = -3003,
  kCFURLErrorCannotRemoveFile = -3004,
  kCFURLErrorCannotMoveFile = -3005,
  kCFURLErrorDownloadDecodingFailedMidStream = -3006,
  kCFURLErrorDownloadDecodingFailedToComplete = -3007,


  kCFHTTPCookieCannotParseCookieFile = -4000,


  kCFNetServiceErrorUnknown = -72000L,
  kCFNetServiceErrorCollision = -72001L,
  kCFNetServiceErrorNotFound = -72002L,
  kCFNetServiceErrorInProgress = -72003L,
  kCFNetServiceErrorBadArgument = -72004L,
  kCFNetServiceErrorCancel = -72005L,
  kCFNetServiceErrorInvalid = -72006L,
  kCFNetServiceErrorTimeout = -72007L,
  kCFNetServiceErrorDNSServiceFailure = -73000L
};
extern const CFStringRef kCFURLErrorFailingURLErrorKey __attribute__((availability(ios,introduced=2_2)));
extern const CFStringRef kCFURLErrorFailingURLStringErrorKey __attribute__((availability(ios,introduced=2_2)));
extern const CFStringRef kCFGetAddrInfoFailureKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSVersionKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSNegotiationMethodKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFDNSServiceFailureKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFFTPStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end


}



extern "C" {
#pragma clang assume_nonnull begin

#pragma pack(push, 2)








typedef struct __CFHost* CFHostRef;
extern const SInt32 kCFStreamErrorDomainNetDB __attribute__((availability(ios,introduced=2_0)));
extern const SInt32 kCFStreamErrorDomainSystemConfiguration __attribute__((availability(ios,introduced=2_0)));
typedef int CFHostInfoType; enum {





  kCFHostAddresses = 0,




  kCFHostNames = 1,





  kCFHostReachability = 2
};
struct CFHostClientContext {






  CFIndex version;





  void * _Nullable info;
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFHostClientContext CFHostClientContext;
typedef void ( * CFHostClientCallBack)(CFHostRef theHost, CFHostInfoType typeInfo, const CFStreamError * _Nullable error, void * _Nullable info);
extern CFTypeID
CFHostGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateWithName(CFAllocatorRef _Nullable allocator, CFStringRef hostname) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateWithAddress(CFAllocatorRef _Nullable allocator, CFDataRef addr) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateCopy(CFAllocatorRef _Nullable alloc, CFHostRef host) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHostStartInfoResolution(CFHostRef theHost, CFHostInfoType info, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFHostGetAddressing(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFHostGetNames(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHostGetReachability(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostCancelInfoResolution(CFHostRef theHost, CFHostInfoType info) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHostSetClient(CFHostRef theHost, CFHostClientCallBack _Nullable clientCB, CFHostClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostScheduleWithRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostUnscheduleFromRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));



#pragma pack(pop)
#pragma clang assume_nonnull end

}



extern "C" {
#pragma clang assume_nonnull begin

#pragma pack(push, 2)
typedef struct __CFNetService* CFNetServiceRef;
typedef struct __CFNetServiceMonitor* CFNetServiceMonitorRef;
typedef struct __CFNetServiceBrowser* CFNetServiceBrowserRef;
extern const SInt32 kCFStreamErrorDomainMach __attribute__((availability(ios,introduced=2_0)));
extern const SInt32 kCFStreamErrorDomainNetServices __attribute__((availability(ios,introduced=2_0)));
typedef int CFNetServicesError; enum {




  kCFNetServicesErrorUnknown = -72000L,






  kCFNetServicesErrorCollision = -72001L,




  kCFNetServicesErrorNotFound = -72002L,





  kCFNetServicesErrorInProgress = -72003L,




  kCFNetServicesErrorBadArgument = -72004L,




  kCFNetServicesErrorCancel = -72005L,





  kCFNetServicesErrorInvalid = -72006L,





  kCFNetServicesErrorTimeout = -72007L
};
typedef int CFNetServiceMonitorType; enum {




  kCFNetServiceMonitorTXT = 1
};
typedef CFOptionFlags CFNetServiceRegisterFlags; enum {




  kCFNetServiceFlagNoAutoRename = 1
};
typedef CFOptionFlags CFNetServiceBrowserFlags; enum {




  kCFNetServiceFlagMoreComing = 1,




  kCFNetServiceFlagIsDomain = 2,




  kCFNetServiceFlagIsDefault = 4,




  kCFNetServiceFlagIsRegistrationDomain __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" ))) = 4,




  kCFNetServiceFlagRemove = 8
};
struct CFNetServiceClientContext {






  CFIndex version;





  void * _Nullable info;
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFNetServiceClientContext CFNetServiceClientContext;
typedef void ( * CFNetServiceClientCallBack)(CFNetServiceRef theService, CFStreamError * _Nullable error, void * _Nullable info);
typedef void ( * CFNetServiceMonitorClientCallBack)(CFNetServiceMonitorRef theMonitor, CFNetServiceRef _Nullable theService, CFNetServiceMonitorType typeInfo, CFDataRef _Nullable rdata, CFStreamError * _Nullable error, void * _Nullable info);
typedef void ( * CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef browser, CFOptionFlags flags, CFTypeRef _Nullable domainOrService, CFStreamError * _Nullable error, void * _Nullable info);
extern CFTypeID
CFNetServiceGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFNetServiceMonitorGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFNetServiceBrowserGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceRef
CFNetServiceCreate(CFAllocatorRef _Nullable alloc, CFStringRef domain, CFStringRef serviceType, CFStringRef name, SInt32 port) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceRef
CFNetServiceCreateCopy(CFAllocatorRef _Nullable alloc, CFNetServiceRef service) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetDomain(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetType(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetName(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceRegisterWithOptions(CFNetServiceRef theService, CFOptionFlags options, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceResolveWithTimeout(CFNetServiceRef theService, CFTimeInterval timeout, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceCancel(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFNetServiceGetTargetHost(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern SInt32
CFNetServiceGetPortNumber(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFNetServiceGetAddressing(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFNetServiceGetTXTData(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceSetTXTData(CFNetServiceRef theService, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDictionaryRef
CFNetServiceCreateDictionaryWithTXTData(CFAllocatorRef _Nullable alloc, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFNetServiceCreateTXTDataWithDictionary(CFAllocatorRef _Nullable alloc, CFDictionaryRef keyValuePairs) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceSetClient(CFNetServiceRef theService, CFNetServiceClientCallBack _Nullable clientCB, CFNetServiceClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceScheduleWithRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceUnscheduleFromRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceMonitorRef
CFNetServiceMonitorCreate(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef theService,
  CFNetServiceMonitorClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorInvalidate(CFNetServiceMonitorRef monitor) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceMonitorStart(CFNetServiceMonitorRef monitor, CFNetServiceMonitorType recordType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorStop(CFNetServiceMonitorRef monitor, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorScheduleWithRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorUnscheduleFromRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceBrowserRef
CFNetServiceBrowserCreate(CFAllocatorRef _Nullable alloc, CFNetServiceBrowserClientCallBack clientCB, CFNetServiceClientContext *clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserInvalidate(CFNetServiceBrowserRef browser) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceBrowserSearchForDomains(CFNetServiceBrowserRef browser, Boolean registrationDomains, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceBrowserSearchForServices(CFNetServiceBrowserRef browser, CFStringRef domain, CFStringRef serviceType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserStopSearch(CFNetServiceBrowserRef browser, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserScheduleWithRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserUnscheduleFromRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceRegister(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
extern Boolean
CFNetServiceResolve(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));





#pragma pack(pop)
#pragma clang assume_nonnull end

}








extern "C" {
#pragma clang assume_nonnull begin
extern const CFStringRef kCFStreamPropertySSLContext __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamPropertySSLPeerTrust __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLValidatesCertificateChain __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySSLSettings __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLLevel __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLPeerName __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLCertificates __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLIsServer __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamNetworkServiceType __attribute__((availability(ios,introduced=4_0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVideo __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeVoice __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeBackground __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeResponsiveData __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCFStreamNetworkServiceTypeCallSignaling __attribute__((availability(ios,introduced=10_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeAVStreaming __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCFStreamNetworkServiceTypeResponsiveAV __attribute__((availability(ios,introduced=6.0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVoIP __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "use PushKit for VoIP control purposes")));
extern const CFStringRef kCFStreamPropertyNoCellular __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamPropertyConnectionIsCellular __attribute__((availability(ios,introduced=6_0)));
extern const CFStringRef kCFStreamPropertyAllowExpensiveNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
extern const CFStringRef kCFStreamPropertyConnectionIsExpensive __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
extern const CFStringRef kCFStreamPropertyAllowConstrainedNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
extern const CFIndex kCFStreamErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));

static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetErrorSubdomain(const CFStreamError* error) {
 return ((error->error >> 16) & 0x0000FFFF);
}

static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetError(const CFStreamError* error) {
 return (error->error & 0x0000FFFF);
}

enum {
  kCFStreamErrorSOCKSSubDomainNone = 0,
  kCFStreamErrorSOCKSSubDomainVersionCode = 1,
  kCFStreamErrorSOCKS4SubDomainResponse = 2,
  kCFStreamErrorSOCKS5SubDomainUserPass = 3,
  kCFStreamErrorSOCKS5SubDomainMethod = 4,
  kCFStreamErrorSOCKS5SubDomainResponse = 5
};



enum {
  kCFStreamErrorSOCKS5BadResponseAddr = 1,
  kCFStreamErrorSOCKS5BadState = 2,
  kCFStreamErrorSOCKSUnknownClientVersion = 3
};


enum {
  kCFStreamErrorSOCKS4RequestFailed = 91,
  kCFStreamErrorSOCKS4IdentdFailed = 92,
  kCFStreamErrorSOCKS4IdConflict = 93
};


enum {
  kSOCKS5NoAcceptableMethod = 0xFF
};
extern const CFStringRef kCFStreamPropertyProxyLocalBypass __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketRemoteHost __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketRemoteNetService __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketExtendedBackgroundIdleMode __attribute__((availability(ios,introduced=9_0)));
extern void
CFStreamCreatePairWithSocketToCFHost(
  CFAllocatorRef _Nullable alloc,
  CFHostRef host,
  SInt32 port,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
extern void
CFStreamCreatePairWithSocketToNetService(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef service,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySSLPeerCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredRoots __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsAnyRoot __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
#pragma clang assume_nonnull end






}



extern "C" {
#pragma clang assume_nonnull begin








extern const SInt32 kCFStreamErrorDomainFTP __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertyFTPUserName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPUsePassiveMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPFetchResourceInfo __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPFileTransferOffset __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyUser __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceOwner __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceGroup __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceLink __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceType __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceModDate __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFReadStreamRef
CFReadStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFIndex
CFFTPCreateParsedResourceListing(CFAllocatorRef _Nullable alloc, const UInt8 *buffer, CFIndex bufferLength, CFDictionaryRef _Nullable * _Nullable parsed) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFWriteStreamRef
CFWriteStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
#pragma clang assume_nonnull end


}







extern "C" {
#pragma clang assume_nonnull begin








extern const CFStringRef kCFHTTPVersion1_0 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPVersion1_1 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPVersion2_0 __attribute__((availability(ios,introduced=8_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeBasic __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeDigest __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNTLM __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeKerberos __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate2 __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeXMobileMeAuthToken __attribute__((availability(ios,introduced=4_3)));
typedef struct __CFHTTPMessage* CFHTTPMessageRef;
extern CFTypeID
CFHTTPMessageGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateRequest(CFAllocatorRef _Nullable alloc, CFStringRef requestMethod, CFURLRef url, CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateResponse(
  CFAllocatorRef _Nullable alloc,
  CFIndex statusCode,
  CFStringRef _Nullable statusDescription,
  CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateEmpty(CFAllocatorRef _Nullable alloc, Boolean isRequest) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateCopy(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageIsRequest(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPMessageCopyVersion(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHTTPMessageCopyBody(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHTTPMessageSetBody(CFHTTPMessageRef message, CFDataRef bodyData) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDictionaryRef
CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef _Nullable value) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFURLRef
CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageAddAuthentication(
  CFHTTPMessageRef request,
  CFHTTPMessageRef _Nullable authenticationFailureResponse,
  CFStringRef username,
  CFStringRef password,
  CFStringRef _Nullable authenticationScheme,
  Boolean forProxy) __attribute__((availability(ios,introduced=2_0)));
extern CFIndex
CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end



}



extern "C" {
#pragma clang assume_nonnull begin
extern const SInt32 kCFStreamErrorDomainHTTP __attribute__((availability(ios,introduced=2_0)));







typedef int CFStreamErrorHTTP; enum {




  kCFStreamErrorHTTPParseFailure = -1,




  kCFStreamErrorHTTPRedirectionLoop = -2,




  kCFStreamErrorHTTPBadURL = -3
};
extern const CFStringRef kCFStreamPropertyHTTPResponseHeader __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPFinalURL __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPFinalRequest __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPSProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPSProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPShouldAutoredirect __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPRequestBytesWrittenCount __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern CFReadStreamRef
CFReadStreamCreateForHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern CFReadStreamRef
CFReadStreamCreateForStreamedHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef requestHeaders, CFReadStreamRef requestBody) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
#pragma clang assume_nonnull end





}



extern "C" {
#pragma clang assume_nonnull begin








typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;
typedef int CFStreamErrorHTTPAuthentication; enum {





  kCFStreamErrorHTTPAuthenticationTypeUnsupported = -1000,





  kCFStreamErrorHTTPAuthenticationBadUserName = -1001,





  kCFStreamErrorHTTPAuthenticationBadPassword = -1002
};
extern const CFStringRef kCFHTTPAuthenticationUsername __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationPassword __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationAccountDomain __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFHTTPAuthenticationGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPAuthenticationRef
CFHTTPAuthenticationCreateFromResponse(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationIsValid(CFHTTPAuthenticationRef auth, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationAppliesToRequest(CFHTTPAuthenticationRef auth, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresOrderedRequests(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageApplyCredentials(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFStringRef _Nullable username,
  CFStringRef _Nullable password,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageApplyCredentialDictionary(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFDictionaryRef dict,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPAuthenticationCopyRealm(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern CFArrayRef
CFHTTPAuthenticationCopyDomains(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPAuthenticationCopyMethod(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresUserNameAndPassword(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresAccountDomain(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end



}



extern "C" {
#pragma clang assume_nonnull begin








typedef struct __CFNetDiagnostic* CFNetDiagnosticRef;







typedef int CFNetDiagnosticStatusValues; enum {




  kCFNetDiagnosticNoErr = 0,




  kCFNetDiagnosticErr = -66560L,




  kCFNetDiagnosticConnectionUp = -66559L,
  kCFNetDiagnosticConnectionIndeterminate = -66558L,




  kCFNetDiagnosticConnectionDown = -66557L

} __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
typedef CFIndex CFNetDiagnosticStatus __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithStreams(CFAllocatorRef _Nullable alloc, CFReadStreamRef _Nullable readStream, CFWriteStreamRef _Nullable writeStream) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithURL(CFAllocatorRef alloc, CFURLRef url) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern void
CFNetDiagnosticSetName(CFNetDiagnosticRef details, CFStringRef name) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticStatus
CFNetDiagnosticDiagnoseProblemInteractively(CFNetDiagnosticRef details) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticStatus
CFNetDiagnosticCopyNetworkStatusPassively(CFNetDiagnosticRef details, CFStringRef _Nullable * _Nullable description) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
#pragma clang assume_nonnull end



}







extern "C" {
#pragma clang assume_nonnull begin
extern _Nullable CFDictionaryRef
CFNetworkCopySystemProxySettings(void) __attribute__((availability(ios,introduced=2_0)));
extern CFArrayRef
CFNetworkCopyProxiesForURL(CFURLRef url, CFDictionaryRef proxySettings) __attribute__((availability(ios,introduced=2_0)));
typedef void ( * CFProxyAutoConfigurationResultCallback)(void *client, CFArrayRef proxyList, CFErrorRef _Nullable error);
extern _Nullable CFArrayRef
CFNetworkCopyProxiesForAutoConfigurationScript(CFStringRef proxyAutoConfigurationScript, CFURLRef targetURL, CFErrorRef * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationScript(
  CFStringRef proxyAutoConfigurationScript,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationURL(
  CFURLRef proxyAutoConfigURL,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyTypeKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyHostNameKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyPortNumberKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyAutoConfigurationURLKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyAutoConfigurationJavaScriptKey __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFProxyUsernameKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyPasswordKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyTypeNone __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTPS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeSOCKS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeFTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationURL __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationJavaScript __attribute__((availability(ios,introduced=3_0)));





extern const CFStringRef kCFProxyAutoConfigurationHTTPResponseKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesExceptionsList __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesExcludeSimpleHostnames __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPPassive __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPEnable __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPPort __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPProxy __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPSEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPSPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPSProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigEnable __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigURLString __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigJavaScript __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoDiscoveryEnable __attribute__((availability(ios,introduced=NA)));
#pragma clang assume_nonnull end


}








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin





extern "C" NSErrorDomain const NSURLErrorDomain;





extern "C" NSString * const NSURLErrorFailingURLErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSURLErrorFailingURLStringErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSErrorFailingURLStringKey __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLErrorFailingURLStringErrorKey instead")));





extern "C" NSString * const NSURLErrorFailingURLPeerTrustErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSURLErrorBackgroundTaskCancelledReasonKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






enum
{
    NSURLErrorCancelledReasonUserForceQuitApplication = 0,
    NSURLErrorCancelledReasonBackgroundUpdatesDisabled = 1,
    NSURLErrorCancelledReasonInsufficientSystemResources __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 2,

} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSErrorUserInfoKey const NSURLErrorNetworkUnavailableReasonKey __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));







typedef NSInteger NSURLErrorNetworkUnavailableReason; enum
{
    NSURLErrorNetworkUnavailableReasonCellular = 0,
    NSURLErrorNetworkUnavailableReasonExpensive = 1,
    NSURLErrorNetworkUnavailableReasonConstrained = 2,
} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





enum
{
    NSURLErrorUnknown = -1,
    NSURLErrorCancelled = -999,
    NSURLErrorBadURL = -1000,
    NSURLErrorTimedOut = -1001,
    NSURLErrorUnsupportedURL = -1002,
    NSURLErrorCannotFindHost = -1003,
    NSURLErrorCannotConnectToHost = -1004,
    NSURLErrorNetworkConnectionLost = -1005,
    NSURLErrorDNSLookupFailed = -1006,
    NSURLErrorHTTPTooManyRedirects = -1007,
    NSURLErrorResourceUnavailable = -1008,
    NSURLErrorNotConnectedToInternet = -1009,
    NSURLErrorRedirectToNonExistentLocation = -1010,
    NSURLErrorBadServerResponse = -1011,
    NSURLErrorUserCancelledAuthentication = -1012,
    NSURLErrorUserAuthenticationRequired = -1013,
    NSURLErrorZeroByteResource = -1014,
    NSURLErrorCannotDecodeRawData = -1015,
    NSURLErrorCannotDecodeContentData = -1016,
    NSURLErrorCannotParseResponse = -1017,
    NSURLErrorAppTransportSecurityRequiresSecureConnection __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1022,
    NSURLErrorFileDoesNotExist = -1100,
    NSURLErrorFileIsDirectory = -1101,
    NSURLErrorNoPermissionsToReadFile = -1102,
    NSURLErrorDataLengthExceedsMaximum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1103,
    NSURLErrorFileOutsideSafeArea __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(watchos,introduced=3.2))) __attribute__((availability(tvos,introduced=10.2))) = -1104,


    NSURLErrorSecureConnectionFailed = -1200,
    NSURLErrorServerCertificateHasBadDate = -1201,
    NSURLErrorServerCertificateUntrusted = -1202,
    NSURLErrorServerCertificateHasUnknownRoot = -1203,
    NSURLErrorServerCertificateNotYetValid = -1204,
    NSURLErrorClientCertificateRejected = -1205,
    NSURLErrorClientCertificateRequired = -1206,
    NSURLErrorCannotLoadFromNetwork = -2000,


    NSURLErrorCannotCreateFile = -3000,
    NSURLErrorCannotOpenFile = -3001,
    NSURLErrorCannotCloseFile = -3002,
    NSURLErrorCannotWriteToFile = -3003,
    NSURLErrorCannotRemoveFile = -3004,
    NSURLErrorCannotMoveFile = -3005,
    NSURLErrorDownloadDecodingFailedMidStream = -3006,
    NSURLErrorDownloadDecodingFailedToComplete =-3007,

    NSURLErrorInternationalRoamingOff __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1018,
    NSURLErrorCallIsActive __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1019,
    NSURLErrorDataNotAllowed __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1020,
    NSURLErrorRequestBodyStreamExhausted __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1021,

    NSURLErrorBackgroundSessionRequiresSharedContainer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -995,
    NSURLErrorBackgroundSessionInUseByAnotherProcess __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -996,
    NSURLErrorBackgroundSessionWasDisconnected __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))= -997,
};
#pragma clang assume_nonnull end

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSMutableURLRequest;
#ifndef _REWRITER_typedef_NSMutableURLRequest
#define _REWRITER_typedef_NSMutableURLRequest
typedef struct objc_object NSMutableURLRequest;
typedef struct {} _objc_exc_NSMutableURLRequest;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLConnection;
#ifndef _REWRITER_typedef_NSURLConnection
#define _REWRITER_typedef_NSURLConnection
typedef struct objc_object NSURLConnection;
typedef struct {} _objc_exc_NSURLConnection;
#endif

// @class NSURLProtocol;
#ifndef _REWRITER_typedef_NSURLProtocol
#define _REWRITER_typedef_NSURLProtocol
typedef struct objc_object NSURLProtocol;
typedef struct {} _objc_exc_NSURLProtocol;
#endif

// @class NSURLProtocolInternal;
#ifndef _REWRITER_typedef_NSURLProtocolInternal
#define _REWRITER_typedef_NSURLProtocolInternal
typedef struct objc_object NSURLProtocolInternal;
typedef struct {} _objc_exc_NSURLProtocolInternal;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif


#pragma clang assume_nonnull begin
// @protocol NSURLProtocolClient <NSObject>
// - (void)URLProtocol:(NSURLProtocol *)protocol wasRedirectedToRequest:(NSURLRequest *)request redirectResponse:(NSURLResponse *)redirectResponse;
// - (void)URLProtocol:(NSURLProtocol *)protocol cachedResponseIsValid:(NSCachedURLResponse *)cachedResponse;
// - (void)URLProtocol:(NSURLProtocol *)protocol didReceiveResponse:(NSURLResponse *)response cacheStoragePolicy:(NSURLCacheStoragePolicy)policy;
// - (void)URLProtocol:(NSURLProtocol *)protocol didLoadData:(NSData *)data;







// - (void)URLProtocolDidFinishLoading:(NSURLProtocol *)protocol;
// - (void)URLProtocol:(NSURLProtocol *)protocol didFailWithError:(NSError *)error;
// - (void)URLProtocol:(NSURLProtocol *)protocol didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;







// - (void)URLProtocol:(NSURLProtocol *)protocol didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @end */


#ifndef _REWRITER_typedef_NSURLProtocol
#define _REWRITER_typedef_NSURLProtocol
typedef struct objc_object NSURLProtocol;
typedef struct {} _objc_exc_NSURLProtocol;
#endif

struct NSURLProtocol_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLProtocolInternal *_internal;
};

// - (instancetype)initWithRequest:(NSURLRequest *)request cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((objc_designated_initializer));





// @property (nullable, readonly, retain) id <NSURLProtocolClient> client;





// @property (readonly, copy) NSURLRequest *request;





// @property (nullable, readonly, copy) NSCachedURLResponse *cachedResponse;
// + (BOOL)canInitWithRequest:(NSURLRequest *)request;
// + (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request;
// + (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b;







// - (void)startLoading;
// - (void)stopLoading;
// + (nullable id)propertyForKey:(NSString *)key inRequest:(NSURLRequest *)request;
// + (void)setProperty:(id)value forKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
// + (void)removePropertyForKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
// + (BOOL)registerClass:(Class)protocolClass;
// + (void)unregisterClass:(Class)protocolClass;

/* @end */



// @interface NSURLProtocol (NSURLSessionTaskAdditions)
// + (BOOL)canInitWithTask:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (instancetype)initWithTask:(NSURLSessionTask *)task cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURLSessionTask *task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */

#pragma clang assume_nonnull end
// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSURLRequestInternal;
#ifndef _REWRITER_typedef_NSURLRequestInternal
#define _REWRITER_typedef_NSURLRequestInternal
typedef struct objc_object NSURLRequestInternal;
typedef struct {} _objc_exc_NSURLRequestInternal;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSURLRequestCachePolicy; enum
{
    NSURLRequestUseProtocolCachePolicy = 0,

    NSURLRequestReloadIgnoringLocalCacheData = 1,
    NSURLRequestReloadIgnoringLocalAndRemoteCacheData = 4,
    NSURLRequestReloadIgnoringCacheData = NSURLRequestReloadIgnoringLocalCacheData,

    NSURLRequestReturnCacheDataElseLoad = 2,
    NSURLRequestReturnCacheDataDontLoad = 3,

    NSURLRequestReloadRevalidatingCacheData = 5,
};
typedef NSUInteger NSURLRequestNetworkServiceType; enum
{
    NSURLNetworkServiceTypeDefault = 0,
    NSURLNetworkServiceTypeVoIP __attribute__((availability(macos,introduced=10.7,deprecated=10.15,message="Use PushKit for VoIP control purposes"))) __attribute__((availability(ios,introduced=4.0,deprecated=13.0,message="Use PushKit for VoIP control purposes"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Use PushKit for VoIP control purposes"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Use PushKit for VoIP control purposes"))) = 1,
    NSURLNetworkServiceTypeVideo = 2,
    NSURLNetworkServiceTypeBackground = 3,
    NSURLNetworkServiceTypeVoice = 4,
    NSURLNetworkServiceTypeResponsiveData = 6,
    NSURLNetworkServiceTypeAVStreaming __attribute__((availability(macosx,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 8 ,
    NSURLNetworkServiceTypeResponsiveAV __attribute__((availability(macosx,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 9,
    NSURLNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = 11,
};

#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

struct NSURLRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLRequestInternal *_internal;
};

// + (instancetype)requestWithURL:(NSURL *)URL;






@property (class, readonly) BOOL supportsSecureCoding;
// + (instancetype)requestWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval;
// - (instancetype)initWithURL:(NSURL *)URL;
// - (instancetype)initWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval __attribute__((objc_designated_initializer));





// @property (nullable, readonly, copy) NSURL *URL;





// @property (readonly) NSURLRequestCachePolicy cachePolicy;
// @property (readonly) NSTimeInterval timeoutInterval;
// @property (nullable, readonly, copy) NSURL *mainDocumentURL;







// @property (readonly) NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property (readonly) BOOL allowsCellularAccess __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property (readonly) BOOL allowsExpensiveNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));







// @property (readonly) BOOL allowsConstrainedNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */


#ifndef _REWRITER_typedef_NSMutableURLRequest
#define _REWRITER_typedef_NSMutableURLRequest
typedef struct objc_object NSMutableURLRequest;
typedef struct {} _objc_exc_NSMutableURLRequest;
#endif

struct NSMutableURLRequest_IMPL {
	struct NSURLRequest_IMPL NSURLRequest_IVARS;
};





// @property (nullable, copy) NSURL *URL;




// @property NSURLRequestCachePolicy cachePolicy;
// @property NSTimeInterval timeoutInterval;
// @property (nullable, copy) NSURL *mainDocumentURL;






// @property NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property BOOL allowsCellularAccess __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property BOOL allowsExpensiveNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));







// @property BOOL allowsConstrainedNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

// @interface NSURLRequest (NSHTTPURLRequest)





// @property (nullable, readonly, copy) NSString *HTTPMethod;







// @property (nullable, readonly, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
// - (nullable NSString *)valueForHTTPHeaderField:(NSString *)field;







// @property (nullable, readonly, copy) NSData *HTTPBody;
// @property (nullable, readonly, retain) NSInputStream *HTTPBodyStream;
// @property (readonly) BOOL HTTPShouldHandleCookies;
// @property (readonly) BOOL HTTPShouldUsePipelining __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSMutableURLRequest (NSMutableHTTPURLRequest)




// @property (copy) NSString *HTTPMethod;
// @property (nullable, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
// - (void)setValue:(nullable NSString *)value forHTTPHeaderField:(NSString *)field;
// - (void)addValue:(NSString *)value forHTTPHeaderField:(NSString *)field;






// @property (nullable, copy) NSData *HTTPBody;
// @property (nullable, retain) NSInputStream *HTTPBodyStream;
// @property BOOL HTTPShouldHandleCookies;
// @property BOOL HTTPShouldUsePipelining __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponseInternal;
#ifndef _REWRITER_typedef_NSURLResponseInternal
#define _REWRITER_typedef_NSURLResponseInternal
typedef struct objc_object NSURLResponseInternal;
typedef struct {} _objc_exc_NSURLResponseInternal;
#endif


#pragma clang assume_nonnull begin

#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

struct NSURLResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLResponseInternal *_internal;
};

// - (instancetype)initWithURL:(NSURL *)URL MIMEType:(nullable NSString *)MIMEType expectedContentLength:(NSInteger)length textEncodingName:(nullable NSString *)name __attribute__((objc_designated_initializer));





// @property (nullable, readonly, copy) NSURL *URL;
// @property (nullable, readonly, copy) NSString *MIMEType;
// @property (readonly) long long expectedContentLength;
// @property (nullable, readonly, copy) NSString *textEncodingName;
// @property (nullable, readonly, copy) NSString *suggestedFilename;

/* @end */




// @class NSHTTPURLResponseInternal;
#ifndef _REWRITER_typedef_NSHTTPURLResponseInternal
#define _REWRITER_typedef_NSHTTPURLResponseInternal
typedef struct objc_object NSHTTPURLResponseInternal;
typedef struct {} _objc_exc_NSHTTPURLResponseInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPURLResponse
#define _REWRITER_typedef_NSHTTPURLResponse
typedef struct objc_object NSHTTPURLResponse;
typedef struct {} _objc_exc_NSHTTPURLResponse;
#endif

struct NSHTTPURLResponse_IMPL {
	struct NSURLResponse_IMPL NSURLResponse_IVARS;
	NSHTTPURLResponseInternal *_httpInternal;
};

// - (nullable instancetype)initWithURL:(NSURL *)url statusCode:(NSInteger)statusCode HTTPVersion:(nullable NSString *)HTTPVersion headerFields:(nullable NSDictionary<NSString *, NSString *> *)headerFields __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (readonly) NSInteger statusCode;
// @property (readonly, copy) NSDictionary *allHeaderFields;
// - (nullable NSString *)valueForHTTPHeaderField:(NSString *)field __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// + (NSString *)localizedStringForStatusCode:(NSInteger)statusCode;

/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin


extern "C" NSString * const NSGlobalDomain;

extern "C" NSString * const NSArgumentDomain;

extern "C" NSString * const NSRegistrationDomain;

#ifndef _REWRITER_typedef_NSUserDefaults
#define _REWRITER_typedef_NSUserDefaults
typedef struct objc_object NSUserDefaults;
typedef struct {} _objc_exc_NSUserDefaults;
#endif

struct NSUserDefaults_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _kvo_;
	CFStringRef _identifier_;
	CFStringRef _container_;
	void *_reserved[2];
};





@property (class, readonly, strong) NSUserDefaults *standardUserDefaults;


// + (void)resetStandardUserDefaults;


// - (instancetype)init;


// - (nullable instancetype)initWithSuiteName:(nullable NSString *)suitename __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// - (nullable id)initWithUser:(NSString *)username __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use -init instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use -init instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -init instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -init instead")));




// - (nullable id)objectForKey:(NSString *)defaultName;




// - (void)setObject:(nullable id)value forKey:(NSString *)defaultName;


// - (void)removeObjectForKey:(NSString *)defaultName;


// - (nullable NSString *)stringForKey:(NSString *)defaultName;


// - (nullable NSArray *)arrayForKey:(NSString *)defaultName;

// - (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)defaultName;

// - (nullable NSData *)dataForKey:(NSString *)defaultName;

// - (nullable NSArray<NSString *> *)stringArrayForKey:(NSString *)defaultName;



// - (NSInteger)integerForKey:(NSString *)defaultName;

// - (float)floatForKey:(NSString *)defaultName;

// - (double)doubleForKey:(NSString *)defaultName;




// - (BOOL)boolForKey:(NSString *)defaultName;



// - (nullable NSURL *)URLForKey:(NSString *)defaultName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (void)setInteger:(NSInteger)value forKey:(NSString *)defaultName;

// - (void)setFloat:(float)value forKey:(NSString *)defaultName;

// - (void)setDouble:(double)value forKey:(NSString *)defaultName;

// - (void)setBool:(BOOL)value forKey:(NSString *)defaultName;

// - (void)setURL:(nullable NSURL *)url forKey:(NSString *)defaultName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)registerDefaults:(NSDictionary<NSString *, id> *)registrationDictionary;




// - (void)addSuiteNamed:(NSString *)suiteName;



// - (void)removeSuiteNamed:(NSString *)suiteName;




// - (NSDictionary<NSString *, id> *)dictionaryRepresentation;




// @property (readonly, copy) NSArray<NSString *> *volatileDomainNames;
// - (NSDictionary<NSString *, id> *)volatileDomainForName:(NSString *)domainName;
// - (void)setVolatileDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;
// - (void)removeVolatileDomainForName:(NSString *)domainName;


// - (NSArray *)persistentDomainNames __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not recommended"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not recommended"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not recommended"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not recommended")));


// - (nullable NSDictionary<NSString *, id> *)persistentDomainForName:(NSString *)domainName;

// - (void)setPersistentDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;

// - (void)removePersistentDomainForName:(NSString *)domainName;
// - (BOOL)synchronize;


// - (BOOL)objectIsForcedForKey:(NSString *)key;


// - (BOOL)objectIsForcedForKey:(NSString *)key inDomain:(NSString *)domain;

/* @end */





extern "C" NSNotificationName const NSUserDefaultsSizeLimitExceededNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));






extern "C" NSNotificationName const NSUbiquitousUserDefaultsNoCloudAccountNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUbiquitousUserDefaultsDidChangeAccountsNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUbiquitousUserDefaultsCompletedInitialSyncNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUserDefaultsDidChangeNotification;
#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef NSString *NSValueTransformerName __attribute__((swift_wrapper(struct)));

extern "C" NSValueTransformerName const NSNegateBooleanTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSIsNilTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSIsNotNilTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSValueTransformerName const NSUnarchiveFromDataTransformerName __attribute__((availability(macos,introduced=10.3,deprecated=10.14,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(ios,introduced=3.0,deprecated=12.0,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,replacement="NSSecureUnarchiveFromDataTransformerName")));
extern "C" NSValueTransformerName const NSKeyedUnarchiveFromDataTransformerName __attribute__((availability(macos,introduced=10.3,deprecated=10.14,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(ios,introduced=3.0,deprecated=12.0,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,replacement="NSSecureUnarchiveFromDataTransformerName"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,replacement="NSSecureUnarchiveFromDataTransformerName")));
extern "C" NSValueTransformerName const NSSecureUnarchiveFromDataTransformerName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)));

__attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSValueTransformer
#define _REWRITER_typedef_NSValueTransformer
typedef struct objc_object NSValueTransformer;
typedef struct {} _objc_exc_NSValueTransformer;
#endif

struct NSValueTransformer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (void)setValueTransformer:(nullable NSValueTransformer *)transformer forName:(NSValueTransformerName)name;
// + (nullable NSValueTransformer *)valueTransformerForName:(NSValueTransformerName)name;
// + (NSArray<NSValueTransformerName> *)valueTransformerNames;


// + (Class)transformedValueClass;
// + (BOOL)allowsReverseTransformation;

// - (nullable id)transformedValue:(nullable id)value;
// - (nullable id)reverseTransformedValue:(nullable id)value;

/* @end */



__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)))

#ifndef _REWRITER_typedef_NSSecureUnarchiveFromDataTransformer
#define _REWRITER_typedef_NSSecureUnarchiveFromDataTransformer
typedef struct objc_object NSSecureUnarchiveFromDataTransformer;
typedef struct {} _objc_exc_NSSecureUnarchiveFromDataTransformer;
#endif

struct NSSecureUnarchiveFromDataTransformer_IMPL {
	struct NSValueTransformer_IMPL NSValueTransformer_IVARS;
};







@property (class, readonly, copy) NSArray<Class> *allowedTopLevelClasses;

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

// @protocol NSXMLParserDelegate;

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSUInteger NSXMLParserExternalEntityResolvingPolicy; enum {
    NSXMLParserResolveExternalEntitiesNever = 0,
    NSXMLParserResolveExternalEntitiesNoNetwork,
    NSXMLParserResolveExternalEntitiesSameOriginOnly,
    NSXMLParserResolveExternalEntitiesAlways
};


#ifndef _REWRITER_typedef_NSXMLParser
#define _REWRITER_typedef_NSXMLParser
typedef struct objc_object NSXMLParser;
typedef struct {} _objc_exc_NSXMLParser;
#endif

struct NSXMLParser_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _reserved0;
	id _delegate;
	id _reserved1;
	id _reserved2;
	id _reserved3;
};

// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
// - (instancetype)initWithStream:(NSInputStream *)stream __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, assign) id <NSXMLParserDelegate> delegate;

// @property BOOL shouldProcessNamespaces;
// @property BOOL shouldReportNamespacePrefixes;


// @property NSXMLParserExternalEntityResolvingPolicy externalEntityResolvingPolicy __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSSet<NSURL *> *allowedExternalEntityURLs __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)parse;
// - (void)abortParsing;

// @property (nullable, readonly, copy) NSError *parserError;



// @property BOOL shouldResolveExternalEntities;

/* @end */



// @interface NSXMLParser (NSXMLParserLocatorAdditions)
// @property (nullable, readonly, copy) NSString *publicID;
// @property (nullable, readonly, copy) NSString *systemID;
// @property (readonly) NSInteger lineNumber;
// @property (readonly) NSInteger columnNumber;

/* @end */

// @protocol NSXMLParserDelegate <NSObject>
/* @optional */


// - (void)parserDidStartDocument:(NSXMLParser *)parser;

// - (void)parserDidEndDocument:(NSXMLParser *)parser;



// - (void)parser:(NSXMLParser *)parser foundNotationDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

// - (void)parser:(NSXMLParser *)parser foundUnparsedEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID notationName:(nullable NSString *)notationName;

// - (void)parser:(NSXMLParser *)parser foundAttributeDeclarationWithName:(NSString *)attributeName forElement:(NSString *)elementName type:(nullable NSString *)type defaultValue:(nullable NSString *)defaultValue;

// - (void)parser:(NSXMLParser *)parser foundElementDeclarationWithName:(NSString *)elementName model:(NSString *)model;

// - (void)parser:(NSXMLParser *)parser foundInternalEntityDeclarationWithName:(NSString *)name value:(nullable NSString *)value;

// - (void)parser:(NSXMLParser *)parser foundExternalEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

// - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName attributes:(NSDictionary<NSString *, NSString *> *)attributeDict;







// - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName;


// - (void)parser:(NSXMLParser *)parser didStartMappingPrefix:(NSString *)prefix toURI:(NSString *)namespaceURI;




// - (void)parser:(NSXMLParser *)parser didEndMappingPrefix:(NSString *)prefix;


// - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string;


// - (void)parser:(NSXMLParser *)parser foundIgnorableWhitespace:(NSString *)whitespaceString;


// - (void)parser:(NSXMLParser *)parser foundProcessingInstructionWithTarget:(NSString *)target data:(nullable NSString *)data;


// - (void)parser:(NSXMLParser *)parser foundComment:(NSString *)comment;


// - (void)parser:(NSXMLParser *)parser foundCDATA:(NSData *)CDATABlock;


// - (nullable NSData *)parser:(NSXMLParser *)parser resolveExternalEntityName:(NSString *)name systemID:(nullable NSString *)systemID;


// - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError;


// - (void)parser:(NSXMLParser *)parser validationErrorOccurred:(NSError *)validationError;

/* @end */


extern "C" NSErrorDomain const NSXMLParserErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSXMLParserError; enum {
    NSXMLParserInternalError = 1,
    NSXMLParserOutOfMemoryError = 2,
    NSXMLParserDocumentStartError = 3,
    NSXMLParserEmptyDocumentError = 4,
    NSXMLParserPrematureDocumentEndError = 5,
    NSXMLParserInvalidHexCharacterRefError = 6,
    NSXMLParserInvalidDecimalCharacterRefError = 7,
    NSXMLParserInvalidCharacterRefError = 8,
    NSXMLParserInvalidCharacterError = 9,
    NSXMLParserCharacterRefAtEOFError = 10,
    NSXMLParserCharacterRefInPrologError = 11,
    NSXMLParserCharacterRefInEpilogError = 12,
    NSXMLParserCharacterRefInDTDError = 13,
    NSXMLParserEntityRefAtEOFError = 14,
    NSXMLParserEntityRefInPrologError = 15,
    NSXMLParserEntityRefInEpilogError = 16,
    NSXMLParserEntityRefInDTDError = 17,
    NSXMLParserParsedEntityRefAtEOFError = 18,
    NSXMLParserParsedEntityRefInPrologError = 19,
    NSXMLParserParsedEntityRefInEpilogError = 20,
    NSXMLParserParsedEntityRefInInternalSubsetError = 21,
    NSXMLParserEntityReferenceWithoutNameError = 22,
    NSXMLParserEntityReferenceMissingSemiError = 23,
    NSXMLParserParsedEntityRefNoNameError = 24,
    NSXMLParserParsedEntityRefMissingSemiError = 25,
    NSXMLParserUndeclaredEntityError = 26,
    NSXMLParserUnparsedEntityError = 28,
    NSXMLParserEntityIsExternalError = 29,
    NSXMLParserEntityIsParameterError = 30,
    NSXMLParserUnknownEncodingError = 31,
    NSXMLParserEncodingNotSupportedError = 32,
    NSXMLParserStringNotStartedError = 33,
    NSXMLParserStringNotClosedError = 34,
    NSXMLParserNamespaceDeclarationError = 35,
    NSXMLParserEntityNotStartedError = 36,
    NSXMLParserEntityNotFinishedError = 37,
    NSXMLParserLessThanSymbolInAttributeError = 38,
    NSXMLParserAttributeNotStartedError = 39,
    NSXMLParserAttributeNotFinishedError = 40,
    NSXMLParserAttributeHasNoValueError = 41,
    NSXMLParserAttributeRedefinedError = 42,
    NSXMLParserLiteralNotStartedError = 43,
    NSXMLParserLiteralNotFinishedError = 44,
    NSXMLParserCommentNotFinishedError = 45,
    NSXMLParserProcessingInstructionNotStartedError = 46,
    NSXMLParserProcessingInstructionNotFinishedError = 47,
    NSXMLParserNotationNotStartedError = 48,
    NSXMLParserNotationNotFinishedError = 49,
    NSXMLParserAttributeListNotStartedError = 50,
    NSXMLParserAttributeListNotFinishedError = 51,
    NSXMLParserMixedContentDeclNotStartedError = 52,
    NSXMLParserMixedContentDeclNotFinishedError = 53,
    NSXMLParserElementContentDeclNotStartedError = 54,
    NSXMLParserElementContentDeclNotFinishedError = 55,
    NSXMLParserXMLDeclNotStartedError = 56,
    NSXMLParserXMLDeclNotFinishedError = 57,
    NSXMLParserConditionalSectionNotStartedError = 58,
    NSXMLParserConditionalSectionNotFinishedError = 59,
    NSXMLParserExternalSubsetNotFinishedError = 60,
    NSXMLParserDOCTYPEDeclNotFinishedError = 61,
    NSXMLParserMisplacedCDATAEndStringError = 62,
    NSXMLParserCDATANotFinishedError = 63,
    NSXMLParserMisplacedXMLDeclarationError = 64,
    NSXMLParserSpaceRequiredError = 65,
    NSXMLParserSeparatorRequiredError = 66,
    NSXMLParserNMTOKENRequiredError = 67,
    NSXMLParserNAMERequiredError = 68,
    NSXMLParserPCDATARequiredError = 69,
    NSXMLParserURIRequiredError = 70,
    NSXMLParserPublicIdentifierRequiredError = 71,
    NSXMLParserLTRequiredError = 72,
    NSXMLParserGTRequiredError = 73,
    NSXMLParserLTSlashRequiredError = 74,
    NSXMLParserEqualExpectedError = 75,
    NSXMLParserTagNameMismatchError = 76,
    NSXMLParserUnfinishedTagError = 77,
    NSXMLParserStandaloneValueError = 78,
    NSXMLParserInvalidEncodingNameError = 79,
    NSXMLParserCommentContainsDoubleHyphenError = 80,
    NSXMLParserInvalidEncodingError = 81,
    NSXMLParserExternalStandaloneEntityError = 82,
    NSXMLParserInvalidConditionalSectionError = 83,
    NSXMLParserEntityValueRequiredError = 84,
    NSXMLParserNotWellBalancedError = 85,
    NSXMLParserExtraContentError = 86,
    NSXMLParserInvalidCharacterInEntityError = 87,
    NSXMLParserParsedEntityRefInInternalError = 88,
    NSXMLParserEntityRefLoopError = 89,
    NSXMLParserEntityBoundaryError = 90,
    NSXMLParserInvalidURIError = 91,
    NSXMLParserURIFragmentError = 92,
    NSXMLParserNoDTDError = 94,
    NSXMLParserDelegateAbortedParseError = 512
};
#pragma clang assume_nonnull end





extern "C" {

typedef uid_t au_id_t;
typedef pid_t au_asid_t;
typedef u_int16_t au_event_t;
typedef u_int16_t au_emod_t;
typedef u_int32_t au_class_t;
typedef u_int64_t au_asflgs_t __attribute__ ((aligned(8)));
typedef unsigned char au_ctlmode_t;

struct au_tid {
 dev_t port;
 u_int32_t machine;
};
typedef struct au_tid au_tid_t;

struct au_tid_addr {
 dev_t at_port;
 u_int32_t at_type;
 u_int32_t at_addr[4];
};
typedef struct au_tid_addr au_tid_addr_t;

struct au_mask {
 unsigned int am_success;
 unsigned int am_failure;
};
typedef struct au_mask au_mask_t;

struct auditinfo {
 au_id_t ai_auid;
 au_mask_t ai_mask;
 au_tid_t ai_termid;
 au_asid_t ai_asid;
};
typedef struct auditinfo auditinfo_t;

struct auditinfo_addr {
 au_id_t ai_auid;
 au_mask_t ai_mask;
 au_tid_addr_t ai_termid;
 au_asid_t ai_asid;
 au_asflgs_t ai_flags;
};
typedef struct auditinfo_addr auditinfo_addr_t;

struct auditpinfo {
 pid_t ap_pid;
 au_id_t ap_auid;
 au_mask_t ap_mask;
 au_tid_t ap_termid;
 au_asid_t ap_asid;
};
typedef struct auditpinfo auditpinfo_t;

struct auditpinfo_addr {
 pid_t ap_pid;
 au_id_t ap_auid;
 au_mask_t ap_mask;
 au_tid_addr_t ap_termid;
 au_asid_t ap_asid;
 au_asflgs_t ap_flags;
};
typedef struct auditpinfo_addr auditpinfo_addr_t;

struct au_session {
 auditinfo_addr_t *as_aia_p;
 au_mask_t as_mask;
};
typedef struct au_session au_session_t;

struct au_expire_after {
 time_t age;
 size_t size;
 unsigned char op_type;
};
typedef struct au_expire_after au_expire_after_t;




typedef struct au_token token_t;
struct au_qctrl {
 int aq_hiwater;


 int aq_lowater;


 int aq_bufsz;
 int aq_delay;
 int aq_minfree;
};
typedef struct au_qctrl au_qctrl_t;




struct audit_stat {
 unsigned int as_version;
 unsigned int as_numevent;
 int as_generated;
 int as_nonattrib;
 int as_kernel;
 int as_audit;
 int as_auditctl;
 int as_enqueue;
 int as_written;
 int as_wblocked;
 int as_rblocked;
 int as_dropped;
 int as_totalsize;
 unsigned int as_memused;
};
typedef struct audit_stat au_stat_t;




struct audit_fstat {
 u_int64_t af_filesz;
 u_int64_t af_currsz;
};
typedef struct audit_fstat au_fstat_t;




struct au_evclass_map {
 au_event_t ec_number;
 au_class_t ec_class;
};
typedef struct au_evclass_map au_evclass_map_t;





int audit(const void *, int);
int auditon(int, void *, int);
int auditctl(const char *);
int getauid(au_id_t *);
int setauid(const au_id_t *);
int getaudit_addr(struct auditinfo_addr *, int);
int setaudit_addr(const struct auditinfo_addr *, int);
int getaudit(struct auditinfo *)
__attribute__((availability(ios,introduced=2.0,deprecated=6.0)));

int setaudit(const struct auditinfo *)
__attribute__((availability(ios,introduced=2.0,deprecated=6.0)));
mach_port_name_t audit_session_self(void);
au_asid_t audit_session_join(mach_port_name_t port);
int audit_session_port(au_asid_t asid, mach_port_name_t *portname);




}
// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSXPCConnection;
#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSXPCListener
#define _REWRITER_typedef_NSXPCListener
typedef struct objc_object NSXPCListener;
typedef struct {} _objc_exc_NSXPCListener;
#endif

#ifndef _REWRITER_typedef_NSXPCInterface
#define _REWRITER_typedef_NSXPCInterface
typedef struct objc_object NSXPCInterface;
typedef struct {} _objc_exc_NSXPCInterface;
#endif

#ifndef _REWRITER_typedef_NSXPCListenerEndpoint
#define _REWRITER_typedef_NSXPCListenerEndpoint
typedef struct objc_object NSXPCListenerEndpoint;
typedef struct {} _objc_exc_NSXPCListenerEndpoint;
#endif

// @protocol NSXPCListenerDelegate;

#pragma clang assume_nonnull begin


// @protocol NSXPCProxyCreating


// - (id)remoteObjectProxy;


// - (id)remoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler;

/* @optional */


// - (id)synchronousRemoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





typedef NSUInteger NSXPCConnectionOptions; enum {

    NSXPCConnectionPrivileged = (1 << 12UL)
} __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

struct NSXPCConnection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_xconnection;
	id _repliesExpected;
	dispatch_queue_t _userQueue;
	uint32_t _state;
	uint32_t _state2;
	void (*_interruptionHandler)();
	void (*_invalidationHandler)();
	id _exportInfo;
	id _repliesRequested;
	id _importInfo;
	id _otherInfo;
	id _reserved1;
	NSXPCInterface *_remoteObjectInterface;
	NSString *_serviceName;
	NSXPCListenerEndpoint *_endpoint;
	id _eCache;
	id _dCache;
};



// - (instancetype)initWithServiceName:(NSString *)serviceName __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (nullable, readonly, copy) NSString *serviceName;


// - (instancetype)initWithMachServiceName:(NSString *)name options:(NSXPCConnectionOptions)options __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (instancetype)initWithListenerEndpoint:(NSXPCListenerEndpoint *)endpoint;
// @property (readonly, retain) NSXPCListenerEndpoint *endpoint;


// @property (nullable, retain) NSXPCInterface *exportedInterface;


// @property (nullable, retain) id exportedObject;


// @property (nullable, retain) NSXPCInterface *remoteObjectInterface;


// @property (readonly, retain) id remoteObjectProxy;

// - (id)remoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler;


// - (id)synchronousRemoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, copy) void (^interruptionHandler)(void);




// @property (nullable, copy) void (^invalidationHandler)(void);


// - (void)resume;


// - (void)suspend;


// - (void)invalidate;


// @property (readonly) au_asid_t auditSessionIdentifier;
// @property (readonly) pid_t processIdentifier;
// @property (readonly) uid_t effectiveUserIdentifier;
// @property (readonly) gid_t effectiveGroupIdentifier;


// + (nullable NSXPCConnection *)currentConnection __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (void)scheduleSendBarrierBlock:(void (^)(void))block __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */




__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSXPCListener
#define _REWRITER_typedef_NSXPCListener
typedef struct objc_object NSXPCListener;
typedef struct {} _objc_exc_NSXPCListener;
#endif

struct NSXPCListener_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_xconnection;
	dispatch_queue_t _userQueue;
	void *reserved0;
	id _delegate;
	NSString *_serviceName;
	uint64_t _state;
	id _reserved1;
	id _reserved2;
};



// + (NSXPCListener *)serviceListener;


// + (NSXPCListener *)anonymousListener;


// - (instancetype)initWithMachServiceName:(NSString *)name __attribute__((objc_designated_initializer)) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nullable, weak) id <NSXPCListenerDelegate> delegate;


// @property (readonly, retain) NSXPCListenerEndpoint *endpoint;


// - (void)resume;


// - (void)suspend;


// - (void)invalidate;

/* @end */


// @protocol NSXPCListenerDelegate <NSObject>
/* @optional */

// - (BOOL)listener:(NSXPCListener *)listener shouldAcceptNewConnection:(NSXPCConnection *)newConnection;

/* @end */





__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSXPCInterface
#define _REWRITER_typedef_NSXPCInterface
typedef struct objc_object NSXPCInterface;
typedef struct {} _objc_exc_NSXPCInterface;
#endif

struct NSXPCInterface_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	Protocol *_protocol;
	void *_reserved2;
	id _reserved1;
};



// + (NSXPCInterface *)interfaceWithProtocol:(Protocol *)protocol;


// @property (assign) Protocol *protocol;



// - (void)setClasses:(NSSet<Class> *)classes forSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;
// - (NSSet<Class> *)classesForSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;


// - (void)setInterface:(NSXPCInterface *)ifc forSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;
// - (nullable NSXPCInterface *)interfaceForSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;






/* @end */





__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSXPCListenerEndpoint
#define _REWRITER_typedef_NSXPCListenerEndpoint
typedef struct objc_object NSXPCListenerEndpoint;
typedef struct {} _objc_exc_NSXPCListenerEndpoint;
#endif

struct NSXPCListenerEndpoint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_internal;
};

/* @end */





__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSXPCCoder
#define _REWRITER_typedef_NSXPCCoder
typedef struct objc_object NSXPCCoder;
typedef struct {} _objc_exc_NSXPCCoder;
#endif

struct NSXPCCoder_IMPL {
	struct NSCoder_IMPL NSCoder_IVARS;
	id _userInfo;
	id _reserved1;
};

// @property (nullable, retain) id <NSObject> userInfo;


// @property (nullable, readonly, strong) NSXPCConnection *connection __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */

#pragma clang assume_nonnull end


enum {

    NSFileNoSuchFileError = 4,
    NSFileLockingError = 255,
    NSFileReadUnknownError = 256,
    NSFileReadNoPermissionError = 257,
    NSFileReadInvalidFileNameError = 258,
    NSFileReadCorruptFileError = 259,
    NSFileReadNoSuchFileError = 260,
    NSFileReadInapplicableStringEncodingError = 261,
    NSFileReadUnsupportedSchemeError = 262,
    NSFileReadTooLargeError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 263,
    NSFileReadUnknownStringEncodingError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 264,
    NSFileWriteUnknownError = 512,
    NSFileWriteNoPermissionError = 513,
    NSFileWriteInvalidFileNameError = 514,
    NSFileWriteFileExistsError __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 516,
    NSFileWriteInapplicableStringEncodingError = 517,
    NSFileWriteUnsupportedSchemeError = 518,
    NSFileWriteOutOfSpaceError = 640,
    NSFileWriteVolumeReadOnlyError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 642,


    NSFileManagerUnmountUnknownError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 768,
    NSFileManagerUnmountBusyError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 769,


    NSKeyValueValidationError = 1024,
    NSFormattingError = 2048,
    NSUserCancelledError = 3072,
    NSFeatureUnsupportedError __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3328,


    NSExecutableNotLoadableError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3584,
    NSExecutableArchitectureMismatchError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3585,
    NSExecutableRuntimeMismatchError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3586,
    NSExecutableLoadError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3587,
    NSExecutableLinkError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3588,


    NSFileErrorMinimum = 0,
    NSFileErrorMaximum = 1023,

    NSValidationErrorMinimum = 1024,
    NSValidationErrorMaximum = 2047,

    NSExecutableErrorMinimum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3584,
    NSExecutableErrorMaximum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3839,

    NSFormattingErrorMinimum = 2048,
    NSFormattingErrorMaximum = 2559,

    NSPropertyListReadCorruptError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3840,
    NSPropertyListReadUnknownVersionError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3841,
    NSPropertyListReadStreamError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3842,
    NSPropertyListWriteStreamError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3851,
    NSPropertyListWriteInvalidError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3852,

    NSPropertyListErrorMinimum __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3840,
    NSPropertyListErrorMaximum __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4095,

    NSXPCConnectionInterrupted __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4097,
    NSXPCConnectionInvalid __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4099,
    NSXPCConnectionReplyInvalid __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4101,

    NSXPCConnectionErrorMinimum __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4096,
    NSXPCConnectionErrorMaximum __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4224,

    NSUbiquitousFileUnavailableError __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4353,
    NSUbiquitousFileNotUploadedDueToQuotaError __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4354,
    NSUbiquitousFileUbiquityServerNotAvailable __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4355,

    NSUbiquitousFileErrorMinimum __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4352,
    NSUbiquitousFileErrorMaximum __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4607,

    NSUserActivityHandoffFailedError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4608,
    NSUserActivityConnectionUnavailableError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4609,
    NSUserActivityRemoteApplicationTimedOutError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4610,
    NSUserActivityHandoffUserInfoTooLargeError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4611,

    NSUserActivityErrorMinimum __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4608,
    NSUserActivityErrorMaximum __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4863,

    NSCoderReadCorruptError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4864,
    NSCoderValueNotFoundError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4865,
    NSCoderInvalidValueError __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = 4866,
    NSCoderErrorMinimum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4864,
    NSCoderErrorMaximum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4991,

    NSBundleErrorMinimum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4992,
    NSBundleErrorMaximum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 5119,

    NSBundleOnDemandResourceOutOfSpaceError __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 4992,
    NSBundleOnDemandResourceExceededMaximumSizeError __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 4993,
    NSBundleOnDemandResourceInvalidTagError __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable))) = 4994,

    NSCloudSharingNetworkFailureError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingQuotaExceededError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5121,
    NSCloudSharingTooManyParticipantsError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5122,
    NSCloudSharingConflictError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5123,
    NSCloudSharingNoPermissionError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5124,
    NSCloudSharingOtherError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

    NSCloudSharingErrorMinimum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingErrorMaximum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

    NSCompressionFailedError __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 5376,
    NSDecompressionFailedError __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 5377,

    NSCompressionErrorMinimum __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 5376,
    NSCompressionErrorMaximum __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0))) = 5503,

};











#pragma clang assume_nonnull begin

typedef NSUInteger NSByteCountFormatterUnits; enum {

    NSByteCountFormatterUseDefault = 0,

    NSByteCountFormatterUseBytes = 1UL << 0,
    NSByteCountFormatterUseKB = 1UL << 1,
    NSByteCountFormatterUseMB = 1UL << 2,
    NSByteCountFormatterUseGB = 1UL << 3,
    NSByteCountFormatterUseTB = 1UL << 4,
    NSByteCountFormatterUsePB = 1UL << 5,
    NSByteCountFormatterUseEB = 1UL << 6,
    NSByteCountFormatterUseZB = 1UL << 7,
    NSByteCountFormatterUseYBOrHigher = 0x0FFUL << 8,

    NSByteCountFormatterUseAll = 0x0FFFFUL
};

typedef NSInteger NSByteCountFormatterCountStyle; enum {

    NSByteCountFormatterCountStyleFile = 0,

    NSByteCountFormatterCountStyleMemory = 1,

    NSByteCountFormatterCountStyleDecimal = 2,
    NSByteCountFormatterCountStyleBinary = 3
};


__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSByteCountFormatter
#define _REWRITER_typedef_NSByteCountFormatter
typedef struct objc_object NSByteCountFormatter;
typedef struct {} _objc_exc_NSByteCountFormatter;
#endif

struct NSByteCountFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	unsigned int _allowedUnits;
	char _countStyle;
	BOOL _allowsNonnumericFormatting;
	BOOL _includesUnit;
	BOOL _includesCount;
	BOOL _includesActualByteCount;
	BOOL _adaptive;
	BOOL _zeroPadsFractionDigits;
	int _formattingContext;
	int _reserved[5];
};




// + (NSString *)stringFromByteCount:(long long)byteCount countStyle:(NSByteCountFormatterCountStyle)countStyle;



// - (NSString *)stringFromByteCount:(long long)byteCount;





// + (NSString *)stringFromMeasurement:(NSMeasurement<NSUnitInformationStorage *> *)measurement countStyle:(NSByteCountFormatterCountStyle)countStyle __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));






// - (NSString *)stringFromMeasurement:(NSMeasurement<NSUnitInformationStorage *> *)measurement __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));






// - (nullable NSString *)stringForObjectValue:(nullable id)obj;



// @property NSByteCountFormatterUnits allowedUnits;



// @property NSByteCountFormatterCountStyle countStyle;



// @property BOOL allowsNonnumericFormatting;



// @property BOOL includesUnit;
// @property BOOL includesCount;



// @property BOOL includesActualByteCount;



// @property (getter=isAdaptive) BOOL adaptive;



// @property BOOL zeroPadsFractionDigits;



// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSCacheDelegate;

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSCache
#define _REWRITER_typedef_NSCache
typedef struct objc_object NSCache;
typedef struct {} _objc_exc_NSCache;
#endif

struct NSCache_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _delegate;
	void *_private[5];
	void *_reserved;
};


// @property (copy) NSString *name;

// @property (nullable, assign) id<NSCacheDelegate> delegate;

// - (nullable ObjectType)objectForKey:(KeyType)key;
// - (void)setObject:(ObjectType)obj forKey:(KeyType)key;
// - (void)setObject:(ObjectType)obj forKey:(KeyType)key cost:(NSUInteger)g;
// - (void)removeObjectForKey:(KeyType)key;

// - (void)removeAllObjects;

// @property NSUInteger totalCostLimit;
// @property NSUInteger countLimit;
// @property BOOL evictsObjectsWithDiscardedContent;

/* @end */


// @protocol NSCacheDelegate <NSObject>
/* @optional */
// - (void)cache:(NSCache *)cache willEvictObject:(id)obj;
/* @end */

#pragma clang assume_nonnull end




// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif

	struct _predicateFlags {
	unsigned int _evaluationBlocked : 1;
	unsigned int _reservedPredicateFlags : 31;
	} ;
struct NSPredicate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _predicateFlags _predicateFlags;
	uint32_t reserved;
};



// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat argumentArray:(nullable NSArray *)arguments;
// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat, ...;
// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat arguments:(va_list)argList;

// + (nullable NSPredicate *)predicateFromMetadataQueryString:(NSString *)queryString __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// + (NSPredicate *)predicateWithValue:(BOOL)value;

// + (NSPredicate*)predicateWithBlock:(BOOL (^)(id _Nullable evaluatedObject, NSDictionary<NSString *, id> * _Nullable bindings))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *predicateFormat;

// - (instancetype)predicateWithSubstitutionVariables:(NSDictionary<NSString *, id> *)variables;

// - (BOOL)evaluateWithObject:(nullable id)object;

// - (BOOL)evaluateWithObject:(nullable id)object substitutionVariables:(nullable NSDictionary<NSString *, id> *)bindings __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSPredicateSupport)
// - (NSArray<ObjectType> *)filteredArrayUsingPredicate:(NSPredicate *)predicate;
/* @end */


// @interface NSMutableArray<ObjectType> (NSPredicateSupport)
// - (void)filterUsingPredicate:(NSPredicate *)predicate;
/* @end */



// @interface NSSet<ObjectType> (NSPredicateSupport)
// - (NSSet<ObjectType> *)filteredSetUsingPredicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @interface NSMutableSet<ObjectType> (NSPredicateSupport)
// - (void)filterUsingPredicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @interface NSOrderedSet<ObjectType> (NSPredicateSupport)

// - (NSOrderedSet<ObjectType> *)filteredOrderedSetUsingPredicate:(NSPredicate *)p __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSPredicateSupport)

// - (void)filterUsingPredicate:(NSPredicate *)p __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


typedef NSUInteger NSComparisonPredicateOptions; enum {
    NSCaseInsensitivePredicateOption = 0x01,
    NSDiacriticInsensitivePredicateOption = 0x02,
    NSNormalizedPredicateOption __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04,
};


typedef NSUInteger NSComparisonPredicateModifier; enum {
    NSDirectPredicateModifier = 0,
    NSAllPredicateModifier,
    NSAnyPredicateModifier
};



typedef NSUInteger NSPredicateOperatorType; enum {
    NSLessThanPredicateOperatorType = 0,
    NSLessThanOrEqualToPredicateOperatorType,
    NSGreaterThanPredicateOperatorType,
    NSGreaterThanOrEqualToPredicateOperatorType,
    NSEqualToPredicateOperatorType,
    NSNotEqualToPredicateOperatorType,
    NSMatchesPredicateOperatorType,
    NSLikePredicateOperatorType,
    NSBeginsWithPredicateOperatorType,
    NSEndsWithPredicateOperatorType,
    NSInPredicateOperatorType,
    NSCustomSelectorPredicateOperatorType,
    NSContainsPredicateOperatorType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 99,
    NSBetweenPredicateOperatorType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};

// @class NSPredicateOperator;
#ifndef _REWRITER_typedef_NSPredicateOperator
#define _REWRITER_typedef_NSPredicateOperator
typedef struct objc_object NSPredicateOperator;
typedef struct {} _objc_exc_NSPredicateOperator;
#endif

// @class NSExpression;
#ifndef _REWRITER_typedef_NSExpression
#define _REWRITER_typedef_NSExpression
typedef struct objc_object NSExpression;
typedef struct {} _objc_exc_NSExpression;
#endif




__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSComparisonPredicate
#define _REWRITER_typedef_NSComparisonPredicate
typedef struct objc_object NSComparisonPredicate;
typedef struct {} _objc_exc_NSComparisonPredicate;
#endif

struct NSComparisonPredicate_IMPL {
	struct NSPredicate_IMPL NSPredicate_IVARS;
	void *_reserved2;
	NSPredicateOperator *_predicateOperator;
	NSExpression *_lhs;
	NSExpression *_rhs;
};


// + (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options;
// + (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector;

// - (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options __attribute__((objc_designated_initializer));
// - (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (readonly) NSPredicateOperatorType predicateOperatorType;
// @property (readonly) NSComparisonPredicateModifier comparisonPredicateModifier;
// @property (readonly, retain) NSExpression *leftExpression;
// @property (readonly, retain) NSExpression *rightExpression;
// @property (nullable, readonly) SEL customSelector;
// @property (readonly) NSComparisonPredicateOptions options;

/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSCompoundPredicateType; enum {
    NSNotPredicateType = 0,
    NSAndPredicateType,
    NSOrPredicateType,
};

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSCompoundPredicate
#define _REWRITER_typedef_NSCompoundPredicate
typedef struct objc_object NSCompoundPredicate;
typedef struct {} _objc_exc_NSCompoundPredicate;
#endif

struct NSCompoundPredicate_IMPL {
	struct NSPredicate_IMPL NSPredicate_IVARS;
	void *_reserved2;
	NSUInteger _type;
	NSArray *_subpredicates;
};


// - (instancetype)initWithType:(NSCompoundPredicateType)type subpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (readonly) NSCompoundPredicateType compoundPredicateType;
// @property (readonly, copy) NSArray *subpredicates;


// + (NSCompoundPredicate *)andPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(andPredicateWithSubpredicates:)")));
// + (NSCompoundPredicate *)orPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(orPredicateWithSubpredicates:)")));
// + (NSCompoundPredicate *)notPredicateWithSubpredicate:(NSPredicate *)predicate __attribute__((swift_name("init(notPredicateWithSubpredicate:)")));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSInteger NSDateComponentsFormatterUnitsStyle; enum {
    NSDateComponentsFormatterUnitsStylePositional = 0,
    NSDateComponentsFormatterUnitsStyleAbbreviated,
    NSDateComponentsFormatterUnitsStyleShort,
    NSDateComponentsFormatterUnitsStyleFull,
    NSDateComponentsFormatterUnitsStyleSpellOut,
    NSDateComponentsFormatterUnitsStyleBrief __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
};

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSUInteger NSDateComponentsFormatterZeroFormattingBehavior; enum {
    NSDateComponentsFormatterZeroFormattingBehaviorNone = (0),
    NSDateComponentsFormatterZeroFormattingBehaviorDefault = (1 << 0),

    NSDateComponentsFormatterZeroFormattingBehaviorDropLeading = (1 << 1),
    NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle = (1 << 2),
    NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing = (1 << 3),
    NSDateComponentsFormatterZeroFormattingBehaviorDropAll = (NSDateComponentsFormatterZeroFormattingBehaviorDropLeading | NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle | NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing),

    NSDateComponentsFormatterZeroFormattingBehaviorPad = (1 << 16),
};



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSDateComponentsFormatter
#define _REWRITER_typedef_NSDateComponentsFormatter
typedef struct objc_object NSDateComponentsFormatter;
typedef struct {} _objc_exc_NSDateComponentsFormatter;
#endif

struct NSDateComponentsFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	pthread_mutex_t _lock;
	void *_fmt;
	void *_unused;
	NSString *_fmtLocaleIdent;
	NSCalendar *_calendar;
	NSDate *_referenceDate;
	NSNumberFormatter *_unitFormatter;
	NSCalendarUnit _allowedUnits;
	NSFormattingContext _formattingContext;
	NSDateComponentsFormatterUnitsStyle _unitsStyle;
	NSDateComponentsFormatterZeroFormattingBehavior _zeroFormattingBehavior;
	NSInteger _maximumUnitCount;
	BOOL _allowsFractionalUnits;
	BOOL _collapsesLargestUnit;
	BOOL _includesApproximationPhrase;
	BOOL _includesTimeRemainingPhrase;
	void *_reserved;
};




// - (nullable NSString *)stringForObjectValue:(nullable id)obj;



// - (nullable NSString *)stringFromDateComponents:(NSDateComponents *)components;







// - (nullable NSString *)stringFromDate:(NSDate *)startDate toDate:(NSDate *)endDate;



// - (nullable NSString *)stringFromTimeInterval:(NSTimeInterval)ti;


// + (nullable NSString *)localizedStringFromDateComponents:(NSDateComponents *)components unitsStyle:(NSDateComponentsFormatterUnitsStyle) unitsStyle;



// @property NSDateComponentsFormatterUnitsStyle unitsStyle;
// @property NSCalendarUnit allowedUnits;





// @property NSDateComponentsFormatterZeroFormattingBehavior zeroFormattingBehavior;



// @property (nullable, copy) NSCalendar *calendar;



// @property (nullable, copy) NSDate *referenceDate __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property BOOL allowsFractionalUnits;
// @property NSInteger maximumUnitCount;



// @property BOOL collapsesLargestUnit;



// @property BOOL includesApproximationPhrase;



// @property BOOL includesTimeRemainingPhrase;




// @property NSFormattingContext formattingContext;



// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

// @class NSPredicate;
#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSExpressionType; enum {
    NSConstantValueExpressionType = 0,
    NSEvaluatedObjectExpressionType,
    NSVariableExpressionType,
    NSKeyPathExpressionType,
    NSFunctionExpressionType,
    NSUnionSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSIntersectSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSMinusSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSSubqueryExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 13,
    NSAggregateExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 14,
    NSAnyKeyExpressionType __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    NSBlockExpressionType = 19,
    NSConditionalExpressionType __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 20

};

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSExpression
#define _REWRITER_typedef_NSExpression
typedef struct objc_object NSExpression;
typedef struct {} _objc_exc_NSExpression;
#endif

	struct _expressionFlags {
	unsigned int _evaluationBlocked : 1;
	unsigned int _reservedExpressionFlags : 31;
	} ;
struct NSExpression_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _expressionFlags _expressionFlags;
	uint32_t reserved;
	NSExpressionType _expressionType;
};


// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat argumentArray:(NSArray *)arguments __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat, ... __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat arguments:(va_list)argList __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSExpression *)expressionForConstantValue:(nullable id)obj;
// + (NSExpression *)expressionForEvaluatedObject;
// + (NSExpression *)expressionForVariable:(NSString *)string;
// + (NSExpression *)expressionForKeyPath:(NSString *)keyPath;
// + (NSExpression *)expressionForFunction:(NSString *)name arguments:(NSArray *)parameters;
// + (NSExpression *)expressionForAggregate:(NSArray<NSExpression *> *)subexpressions __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForUnionSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForIntersectSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForMinusSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForSubquery:(NSExpression *)expression usingIteratorVariable:(NSString *)variable predicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForFunction:(NSExpression *)target selectorName:(NSString *)name arguments:(nullable NSArray *)parameters __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForAnyKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForBlock:(id (^)(id _Nullable evaluatedObject, NSArray<NSExpression *> *expressions, NSMutableDictionary * _Nullable context))block arguments:(nullable NSArray<NSExpression *> *)arguments __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForConditional:(NSPredicate *)predicate trueExpression:(NSExpression *)trueExpression falseExpression:(NSExpression *)falseExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)initWithExpressionType:(NSExpressionType)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (readonly) NSExpressionType expressionType;
// @property (nullable, readonly, retain) id constantValue;
// @property (readonly, copy) NSString *keyPath;
// @property (readonly, copy) NSString *function;
// @property (readonly, copy) NSString *variable;
// @property (readonly, copy) NSExpression *operand;
// @property (nullable, readonly, copy) NSArray<NSExpression *> *arguments;

// @property (readonly, retain) id collection __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSPredicate *predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *leftExpression __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *rightExpression __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSExpression *trueExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *falseExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) id (^expressionBlock)(id _Nullable, NSArray<NSExpression *> *, NSMutableDictionary * _Nullable) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable id)expressionValueWithObject:(nullable id)object context:(nullable NSMutableDictionary *)context;

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif

struct NSExtensionContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property(readonly, copy, nonatomic) NSArray *inputItems;


// - (void)completeRequestReturningItems:(nullable NSArray *)items completionHandler:(void(^ _Nullable)(BOOL expired))completionHandler;


// - (void)cancelRequestWithError:(NSError *)error;


// - (void)openURL:(NSURL *)URL completionHandler:(void (^ _Nullable)(BOOL success))completionHandler;

/* @end */



extern "C" NSString * _Null_unspecified const NSExtensionItemsAndErrorsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * _Null_unspecified const NSExtensionHostWillEnterForegroundNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostDidEnterBackgroundNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostWillResignActiveNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostDidBecomeActiveNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSExtensionItem
#define _REWRITER_typedef_NSExtensionItem
typedef struct objc_object NSExtensionItem;
typedef struct {} _objc_exc_NSExtensionItem;
#endif

struct NSExtensionItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property(nullable, copy, nonatomic) NSAttributedString *attributedTitle;


// @property(nullable, copy, nonatomic) NSAttributedString *attributedContentText;


// @property(nullable, copy, nonatomic) NSArray<NSItemProvider *> *attachments;


// @property(nullable, copy, nonatomic) NSDictionary *userInfo;

/* @end */



extern "C" NSString * _Null_unspecified const NSExtensionItemAttributedTitleKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * _Null_unspecified const NSExtensionItemAttributedContentTextKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * _Null_unspecified const NSExtensionItemAttachmentsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class NSExtensionContext;
#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif



// @protocol NSExtensionRequestHandling <NSObject>

/* @required */


// - (void)beginRequestWithExtensionContext:(NSExtensionContext *)context;

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


// @protocol NSFilePresenter;

#pragma clang assume_nonnull begin

typedef NSUInteger NSFileCoordinatorReadingOptions; enum {



    NSFileCoordinatorReadingWithoutChanges = 1 << 0,



    NSFileCoordinatorReadingResolvesSymbolicLink = 1 << 1,



    NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 2,





    NSFileCoordinatorReadingForUploading __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 3,

};

typedef NSUInteger NSFileCoordinatorWritingOptions; enum {
    NSFileCoordinatorWritingForDeleting = 1 << 0,





    NSFileCoordinatorWritingForMoving = 1 << 1,



    NSFileCoordinatorWritingForMerging = 1 << 2,







    NSFileCoordinatorWritingForReplacing = 1 << 3,



    NSFileCoordinatorWritingContentIndependentMetadataOnly __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 4

};


__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSFileAccessIntent
#define _REWRITER_typedef_NSFileAccessIntent
typedef struct objc_object NSFileAccessIntent;
typedef struct {} _objc_exc_NSFileAccessIntent;
#endif

struct NSFileAccessIntent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURL *_url;
	BOOL _isRead;
	NSInteger _options;
};

// + (instancetype)readingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options;
// + (instancetype)writingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options;
// @property (readonly, copy) NSURL *URL;
/* @end */



__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSFileCoordinator
#define _REWRITER_typedef_NSFileCoordinator
typedef struct objc_object NSFileCoordinator;
typedef struct {} _objc_exc_NSFileCoordinator;
#endif

struct NSFileCoordinator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _accessArbiter;
	id _fileReactor;
	id _purposeID;
	NSURL *_recentFilePresenterURL;
	id _accessClaimIDOrIDs;
	BOOL _isCancelled;
	NSMutableDictionary *_movedItems;
};








// + (void)addFilePresenter:(id<NSFilePresenter>)filePresenter;
// + (void)removeFilePresenter:(id<NSFilePresenter>)filePresenter;
@property (class, readonly, copy) NSArray<id<NSFilePresenter>> *filePresenters;
// - (instancetype)initWithFilePresenter:(nullable id<NSFilePresenter>)filePresenterOrNil __attribute__((objc_designated_initializer));
// @property (copy) NSString *purposeIdentifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)coordinateAccessWithIntents:(NSArray<NSFileAccessIntent *> *)intents queue:(NSOperationQueue *)queue byAccessor:(void (^)(NSError * _Nullable error))accessor __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)coordinateReadingItemAtURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL))reader;
// - (void)coordinateWritingItemAtURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL))writer;
// - (void)coordinateReadingItemAtURL:(NSURL *)readingURL options:(NSFileCoordinatorReadingOptions)readingOptions writingItemAtURL:(NSURL *)writingURL options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newReadingURL, NSURL *newWritingURL))readerWriter;
// - (void)coordinateWritingItemAtURL:(NSURL *)url1 options:(NSFileCoordinatorWritingOptions)options1 writingItemAtURL:(NSURL *)url2 options:(NSFileCoordinatorWritingOptions)options2 error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL1, NSURL *newURL2))writer;
// - (void)prepareForReadingItemsAtURLs:(NSArray<NSURL *> *)readingURLs options:(NSFileCoordinatorReadingOptions)readingOptions writingItemsAtURLs:(NSArray<NSURL *> *)writingURLs options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(void (^completionHandler)(void)))batchAccessor;
// - (void)itemAtURL:(NSURL *)oldURL willMoveToURL:(NSURL *)newURL __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)itemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;







// - (void)itemAtURL:(NSURL *)url didChangeUbiquityAttributes:(NSSet <NSURLResourceKey> *)attributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (void)cancel;

/* @end */

#pragma clang assume_nonnull end
// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSFileVersion
#define _REWRITER_typedef_NSFileVersion
typedef struct objc_object NSFileVersion;
typedef struct {} _objc_exc_NSFileVersion;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin







// @protocol NSFilePresenter<NSObject>

/* @required */





// @property (nullable, readonly, copy) NSURL *presentedItemURL;





// @property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;

/* @optional */



// @property (nullable, readonly, copy) NSURL *primaryPresentedItemURL __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// - (void)relinquishPresentedItemToReader:(void (^)(void (^ _Nullable reacquirer)(void)))reader;





// - (void)relinquishPresentedItemToWriter:(void (^)(void (^ _Nullable reacquirer)(void)))writer;







// - (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;







// - (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;
// - (void)presentedItemDidMoveToURL:(NSURL *)newURL;
// - (void)presentedItemDidChange;





// - (void)presentedItemDidChangeUbiquityAttributes:(NSSet<NSURLResourceKey> *)attributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// @property (readonly, strong) NSSet<NSURLResourceKey> *observedPresentedItemUbiquityAttributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// - (void)presentedItemDidGainVersion:(NSFileVersion *)version;
// - (void)presentedItemDidLoseVersion:(NSFileVersion *)version;
// - (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)version;
// - (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;





// - (void)presentedSubitemDidAppearAtURL:(NSURL *)url;





// - (void)presentedSubitemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;





// - (void)presentedSubitemDidChangeAtURL:(NSURL *)url;



// - (void)presentedSubitemAtURL:(NSURL *)url didGainVersion:(NSFileVersion *)version;
// - (void)presentedSubitemAtURL:(NSURL *)url didLoseVersion:(NSFileVersion *)version;
// - (void)presentedSubitemAtURL:(NSURL *)url didResolveConflictVersion:(NSFileVersion *)version;

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSPersonNameComponents
#define _REWRITER_typedef_NSPersonNameComponents
typedef struct objc_object NSPersonNameComponents;
typedef struct {} _objc_exc_NSPersonNameComponents;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSFileVersionAddingOptions; enum {



    NSFileVersionAddingByMoving = 1 << 0

};

typedef NSUInteger NSFileVersionReplacingOptions; enum {



    NSFileVersionReplacingByMoving = 1 << 0

};



__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSFileVersion
#define _REWRITER_typedef_NSFileVersion
typedef struct objc_object NSFileVersion;
typedef struct {} _objc_exc_NSFileVersion;
#endif

struct NSFileVersion_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURL *_fileURL;
	id _addition;
	id _deadVersionIdentifier;
	id _nonLocalVersion;
	NSURL *_contentsURL;
	BOOL _isBackup;
	NSString *_localizedName;
	NSString *_localizedComputerName;
	NSDate *_modificationDate;
	BOOL _isResolved;
	BOOL _contentsURLIsAccessed;
	id _reserved;
	NSString *_name;
};




// + (nullable NSFileVersion *)currentVersionOfItemAtURL:(NSURL *)url;



// + (nullable NSArray<NSFileVersion *> *)otherVersionsOfItemAtURL:(NSURL *)url;



// + (nullable NSArray<NSFileVersion *> *)unresolvedConflictVersionsOfItemAtURL:(NSURL *)url;







// + (void)getNonlocalVersionsOfItemAtURL:(NSURL *)url completionHandler:(void (^)(NSArray<NSFileVersion *> * _Nullable nonlocalFileVersions, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSFileVersion *)versionOfItemAtURL:(NSURL *)url forPersistentIdentifier:(id)persistentIdentifier;







// + (nullable NSFileVersion *)addVersionOfItemAtURL:(NSURL *)url withContentsOfURL:(NSURL *)contentsURL options:(NSFileVersionAddingOptions)options error:(NSError **)outError __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (NSURL *)temporaryDirectoryURLForNewVersionOfItemAtURL:(NSURL *)url __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property (readonly, copy) NSURL *URL;



// @property (nullable, readonly, copy) NSString *localizedName;



// @property (nullable, readonly, copy) NSString *localizedNameOfSavingComputer;



// @property (nullable, readonly, copy) NSPersonNameComponents *originatorNameComponents __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property (nullable, readonly, copy) NSDate *modificationDate;



// @property (readonly, retain) id<NSCoding> persistentIdentifier;



// @property (readonly, getter=isConflict) BOOL conflict;







// @property (getter=isResolved) BOOL resolved;
// @property (getter=isDiscardable) BOOL discardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property (readonly) BOOL hasLocalContents __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) BOOL hasThumbnail __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSURL *)replaceItemAtURL:(NSURL *)url options:(NSFileVersionReplacingOptions)options error:(NSError **)error;







// - (BOOL)removeAndReturnError:(NSError **)outError;





// + (BOOL)removeOtherVersionsOfItemAtURL:(NSURL *)url error:(NSError **)outError;

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSFileWrapperReadingOptions; enum {



    NSFileWrapperReadingImmediate = 1 << 0,



    NSFileWrapperReadingWithoutMapping = 1 << 1

} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSFileWrapperWritingOptions; enum {



    NSFileWrapperWritingAtomic = 1 << 0,



    NSFileWrapperWritingWithNameUpdating = 1 << 1

} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSFileWrapper
#define _REWRITER_typedef_NSFileWrapper
typedef struct objc_object NSFileWrapper;
typedef struct {} _objc_exc_NSFileWrapper;
#endif

struct NSFileWrapper_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSDictionary *_fileAttributes;
	NSString *_preferredFileName;
	NSString *_fileName;
	id _contents;
	id _icon;
	id _moreVars;
};






// - (nullable instancetype)initWithURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (instancetype)initDirectoryWithFileWrappers:(NSDictionary<NSString *, NSFileWrapper *> *)childrenByPreferredName __attribute__((objc_designated_initializer));



// - (instancetype)initRegularFileWithContents:(NSData *)contents __attribute__((objc_designated_initializer));



// - (instancetype)initSymbolicLinkWithDestinationURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithSerializedRepresentation:(NSData *)serializeRepresentation __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)inCoder __attribute__((objc_designated_initializer));





// @property (readonly, getter=isDirectory) BOOL directory;
// @property (readonly, getter=isRegularFile) BOOL regularFile;
// @property (readonly, getter=isSymbolicLink) BOOL symbolicLink;





// @property (nullable, copy) NSString *preferredFilename;



// @property (nullable, copy) NSString *filename;



// @property (copy) NSDictionary<NSString *, id> *fileAttributes;
// - (BOOL)matchesContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)readFromURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)writeToURL:(NSURL *)url options:(NSFileWrapperWritingOptions)options originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly, copy) NSData *serializedRepresentation;







// - (NSString *)addFileWrapper:(NSFileWrapper *)child;



// - (NSString *)addRegularFileWithContents:(NSData *)data preferredFilename:(NSString *)fileName;



// - (void)removeFileWrapper:(NSFileWrapper *)child;



// @property (nullable, readonly, copy) NSDictionary<NSString *, NSFileWrapper *> *fileWrappers;



// - (nullable NSString *)keyForFileWrapper:(NSFileWrapper *)child;







// @property (nullable, readonly, copy) NSData *regularFileContents;







// @property (nullable, readonly, copy) NSURL *symbolicLinkDestinationURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

#ifndef _REWRITER_typedef_NSValue
#define _REWRITER_typedef_NSValue
typedef struct objc_object NSValue;
typedef struct {} _objc_exc_NSValue;
#endif


#pragma clang assume_nonnull begin





typedef NSString *NSLinguisticTagScheme __attribute__((swift_wrapper(struct)));

extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeTokenType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLexicalClass __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeNameType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeNameTypeOrLexicalClass __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLemma __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLanguage __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeScript __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString *NSLinguisticTag __attribute__((swift_wrapper(struct)));


extern "C" NSLinguisticTag const NSLinguisticTagWord __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPunctuation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagWhitespace __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOther __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLinguisticTag const NSLinguisticTagNoun __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagVerb __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagAdjective __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagAdverb __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPronoun __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagDeterminer __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagParticle __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPreposition __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagConjunction __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagInterjection __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagClassifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagIdiom __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherWord __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagSentenceTerminator __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOpenQuote __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagCloseQuote __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOpenParenthesis __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagCloseParenthesis __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagWordJoiner __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagDash __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherPunctuation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagParagraphBreak __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherWhitespace __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLinguisticTag const NSLinguisticTagPersonalName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPlaceName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOrganizationName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






typedef NSInteger NSLinguisticTaggerUnit; enum {
    NSLinguisticTaggerUnitWord,
    NSLinguisticTaggerUnitSentence,
    NSLinguisticTaggerUnitParagraph,
    NSLinguisticTaggerUnitDocument
};


typedef NSUInteger NSLinguisticTaggerOptions; enum {
    NSLinguisticTaggerOmitWords = 1 << 0,
    NSLinguisticTaggerOmitPunctuation = 1 << 1,
    NSLinguisticTaggerOmitWhitespace = 1 << 2,
    NSLinguisticTaggerOmitOther = 1 << 3,
    NSLinguisticTaggerJoinNames = 1 << 4
};


__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLinguisticTagger
#define _REWRITER_typedef_NSLinguisticTagger
typedef struct objc_object NSLinguisticTagger;
typedef struct {} _objc_exc_NSLinguisticTagger;
#endif

struct NSLinguisticTagger_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSArray *_schemes;
	NSUInteger _options;
	NSString *_string;
	id _orthographyArray;
	id _tokenArray;
	void *_reserved;
};




// - (instancetype)initWithTagSchemes:(NSArray<NSLinguisticTagScheme> *)tagSchemes options:(NSUInteger)opts __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSLinguisticTagScheme> *tagSchemes __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, retain) NSString *string __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSArray<NSLinguisticTagScheme> *)availableTagSchemesForUnit:(NSLinguisticTaggerUnit)unit language:(NSString *)language __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// + (NSArray<NSLinguisticTagScheme> *)availableTagSchemesForLanguage:(NSString *)language __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setOrthography:(nullable NSOrthography *)orthography range:(NSRange)range __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSOrthography *)orthographyAtIndex:(NSUInteger)charIndex effectiveRange:(nullable NSRangePointer)effectiveRange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)stringEditedInRange:(NSRange)newRange changeInLength:(NSInteger)delta __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSRange)tokenRangeAtIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (NSRange)sentenceRangeForRange:(NSRange)range __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)enumerateTagsInRange:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, BOOL *stop))block __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (nullable NSLinguisticTag)tagAtIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme tokenRange:(nullable NSRangePointer)tokenRange __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSArray<NSLinguisticTag> *)tagsInRange:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (void)enumerateTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)tagScheme options:(NSLinguisticTaggerOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSLinguisticTag)tagAtIndex:(NSUInteger)charIndex scheme:(NSLinguisticTagScheme)scheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<NSString *> *)tagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSString *dominantLanguage __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// + (nullable NSString *)dominantLanguageForString:(NSString *)string __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (nullable NSLinguisticTag)tagForString:(NSString *)string atIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme orthography:(nullable NSOrthography *)orthography tokenRange:(nullable NSRangePointer)tokenRange __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (NSArray<NSLinguisticTag> *)tagsForString:(NSString *)string range:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (void)enumerateTagsForString:(NSString *)string range:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, BOOL *stop))block __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (nullable NSArray<NSString *> *)possibleTagsAtIndex:(NSUInteger)charIndex scheme:(NSString *)tagScheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange scores:(NSArray<NSValue *> * _Nullable * _Nullable)scores __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSString (NSLinguisticAnalysis)



// - (NSArray<NSLinguisticTag> *)linguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateLinguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end










// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



extern "C" NSString * const NSMetadataItemFSNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemDisplayNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemURLKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemPathKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSContentChangeDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemContentTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemContentTypeTreeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataItemIsUbiquitousKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead")));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadRequestedKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsExternalDocumentKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemContainerDisplayNameKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemURLInLocalContainerKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataUbiquitousItemIsSharedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemCurrentUserRoleKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemOwnerNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern "C" NSString * const NSMetadataUbiquitousSharedItemRoleOwner __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemRoleParticipant __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern "C" NSString * const NSMetadataUbiquitousSharedItemPermissionsReadOnly __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemPermissionsReadWrite __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern "C" NSString * const NSMetadataItemAttributeChangeDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKeywordsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTitleKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEditorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemParticipantsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProjectsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDownloadedDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemWhereFromsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCommentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCopyrightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLastUsedDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContentCreationDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContentModificationDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDateAddedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDurationSecondsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContactKeywordsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemPixelHeightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPixelWidthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPixelCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemColorSpaceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemBitsPerSampleKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFlashOnOffKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFocalLengthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAcquisitionMakeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAcquisitionModelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemISOSpeedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOrientationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLayerNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemWhiteBalanceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemApertureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProfileNameKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemResolutionWidthDPIKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemResolutionHeightDPIKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureTimeSecondsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEXIFVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCameraOwnerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFocalLength35mmKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLensModelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemEXIFGPSVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAltitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLatitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLongitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSpeedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTimestampKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSTrackKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemImageDirectionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemNamedLocationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemGPSStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSMeasureModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDOPKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSMapDatumKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestLatitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestLongitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestBearingKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestDistanceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSProcessingMethodKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSAreaInformationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDateStampKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDifferentalKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCodecsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMediaTypesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStreamableKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTotalBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemVideoBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDeliveryTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAlbumKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemHasAlphaChannelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRedEyeOnOffKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMeteringModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMaxApertureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFNumberKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureProgramKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureTimeStringKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemHeadlineKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemInstructionsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCityKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStateOrProvinceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCountryKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemTextContentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAudioSampleRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioChannelCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTempoKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKeySignatureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTimeSignatureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioEncodingApplicationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemComposerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLyricistKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioTrackNumberKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecordingDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalGenreKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemIsGeneralMIDISequenceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecordingYearKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemOrganizationsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLanguagesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRightsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPublishersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContributorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCoverageKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSubjectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemThemeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDescriptionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemIdentifierKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudiencesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemNumberOfPagesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPageWidthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPageHeightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSecurityMethodKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCreatorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEncodingApplicationsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDueDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStarRatingKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPhoneNumbersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemInstantMessageAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKindKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFinderCommentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFontsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAppleLoopsRootKeyKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopsKeyFilterTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopsLoopModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopDescriptorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalInstrumentCategoryKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalInstrumentNameKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCFBundleIdentifierKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemInformationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDirectorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProducerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGenreKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPerformersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOriginalFormatKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOriginalSourceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemIsLikelyJunkKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExecutableArchitecturesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExecutablePlatformKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemApplicationCategoriesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemIsApplicationManagedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end





// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif

// @class NSMetadataItem;
#ifndef _REWRITER_typedef_NSMetadataItem
#define _REWRITER_typedef_NSMetadataItem
typedef struct objc_object NSMetadataItem;
typedef struct {} _objc_exc_NSMetadataItem;
#endif

#ifndef _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
#define _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
typedef struct objc_object NSMetadataQueryAttributeValueTuple;
typedef struct {} _objc_exc_NSMetadataQueryAttributeValueTuple;
#endif

#ifndef _REWRITER_typedef_NSMetadataQueryResultGroup
#define _REWRITER_typedef_NSMetadataQueryResultGroup
typedef struct objc_object NSMetadataQueryResultGroup;
typedef struct {} _objc_exc_NSMetadataQueryResultGroup;
#endif

// @protocol NSMetadataQueryDelegate;

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMetadataQuery
#define _REWRITER_typedef_NSMetadataQuery
typedef struct objc_object NSMetadataQuery;
typedef struct {} _objc_exc_NSMetadataQuery;
#endif

struct NSMetadataQuery_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _flags;
	NSTimeInterval _interval;
	id _private[11];
	void *_reserved;
};


// @property (nullable, assign) id<NSMetadataQueryDelegate> delegate;
// @property (nullable, copy) NSPredicate *predicate;
// @property (copy) NSArray<NSSortDescriptor *> *sortDescriptors;
// @property (copy) NSArray<NSString *> *valueListAttributes;
// @property (nullable, copy) NSArray<NSString *> *groupingAttributes;
// @property NSTimeInterval notificationBatchingInterval;

// @property (copy) NSArray *searchScopes;





// @property (nullable, copy) NSArray *searchItems __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, retain) NSOperationQueue *operationQueue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (BOOL)startQuery;
// - (void)stopQuery;

// @property (readonly, getter=isStarted) BOOL started;
// @property (readonly, getter=isGathering) BOOL gathering;
// @property (readonly, getter=isStopped) BOOL stopped;

// - (void)disableUpdates;
// - (void)enableUpdates;



// @property (readonly) NSUInteger resultCount;
// - (id)resultAtIndex:(NSUInteger)idx;

// - (void)enumerateResultsUsingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateResultsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray *results;

// - (NSUInteger)indexOfResult:(id)result;

// @property (readonly, copy) NSDictionary<NSString *, NSArray<NSMetadataQueryAttributeValueTuple *> *> *valueLists;

// @property (readonly, copy) NSArray<NSMetadataQueryResultGroup *> *groupedResults;

// - (nullable id)valueOfAttribute:(NSString *)attrName forResultAtIndex:(NSUInteger)idx;

/* @end */


// @protocol NSMetadataQueryDelegate <NSObject>
/* @optional */

// - (id)metadataQuery:(NSMetadataQuery *)query replacementObjectForResultObject:(NSMetadataItem *)result;
// - (id)metadataQuery:(NSMetadataQuery *)query replacementValueForAttribute:(NSString *)attrName value:(id)attrValue;

/* @end */



extern "C" NSNotificationName const NSMetadataQueryDidStartGatheringNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryGatheringProgressNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryDidFinishGatheringNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryDidUpdateNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSMetadataQueryUpdateAddedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUpdateChangedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUpdateRemovedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataQueryResultContentRelevanceAttribute __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSMetadataQueryUserHomeScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryLocalComputerScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryNetworkScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataQueryIndexedLocalComputerScope __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryIndexedNetworkScope __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" NSString * const NSMetadataQueryUbiquitousDocumentsScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUbiquitousDataScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMetadataItem
#define _REWRITER_typedef_NSMetadataItem
typedef struct objc_object NSMetadataItem;
typedef struct {} _objc_exc_NSMetadataItem;
#endif

struct NSMetadataItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _item;
	void *_reserved;
};


// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (nullable id)valueForAttribute:(NSString *)key;
// - (nullable NSDictionary<NSString *, id> *)valuesForAttributes:(NSArray<NSString *> *)keys;

// @property (readonly, copy) NSArray<NSString *> *attributes;

/* @end */


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
#define _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
typedef struct objc_object NSMetadataQueryAttributeValueTuple;
typedef struct {} _objc_exc_NSMetadataQueryAttributeValueTuple;
#endif

struct NSMetadataQueryAttributeValueTuple_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _attr;
	id _value;
	NSUInteger _count;
	void *_reserved;
};


// @property (readonly, copy) NSString *attribute;
// @property (nullable, readonly, retain) id value;
// @property (readonly) NSUInteger count;

/* @end */


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSMetadataQueryResultGroup
#define _REWRITER_typedef_NSMetadataQueryResultGroup
typedef struct objc_object NSMetadataQueryResultGroup;
typedef struct {} _objc_exc_NSMetadataQueryResultGroup;
#endif

struct NSMetadataQueryResultGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _private[9];
	NSUInteger _private2[1];
	void *_reserved;
};


// @property (readonly, copy) NSString *attribute;
// @property (readonly, retain) id value;

// @property (nullable, readonly, copy) NSArray<NSMetadataQueryResultGroup *> *subgroups;

// @property (readonly) NSUInteger resultCount;
// - (id)resultAtIndex:(NSUInteger)idx;

// @property (readonly, copy) NSArray *results;

/* @end */

#pragma clang assume_nonnull end

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSNetServiceDelegate, NSNetServiceBrowserDelegate;

#pragma clang assume_nonnull begin



extern "C" NSString * const NSNetServicesErrorCode;
extern "C" NSErrorDomain const NSNetServicesErrorDomain;

typedef NSInteger NSNetServicesError; enum {



    NSNetServicesUnknownError = -72000L,



    NSNetServicesCollisionError = -72001L,



    NSNetServicesNotFoundError = -72002L,



    NSNetServicesActivityInProgress = -72003L,



    NSNetServicesBadArgumentError = -72004L,



    NSNetServicesCancelledError = -72005L,



    NSNetServicesInvalidError = -72006L,



    NSNetServicesTimeoutError = -72007L,

};


typedef NSUInteger NSNetServiceOptions; enum {




    NSNetServiceNoAutoRename = 1UL << 0,
    NSNetServiceListenForConnections __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 1
};





__attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSNetService
#define _REWRITER_typedef_NSNetService
typedef struct objc_object NSNetService;
typedef struct {} _objc_exc_NSNetService;
#endif

struct NSNetService_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _netService;
	id _delegate;
	id _reserved;
};




// - (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name port:(int)port __attribute__((objc_designated_initializer));





// - (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name;



// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



// @property (nullable, assign) id <NSNetServiceDelegate> delegate;



// @property BOOL includesPeerToPeer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSString *name;



// @property (readonly, copy) NSString *type;



// @property (readonly, copy) NSString *domain;



// @property (nullable, readonly, copy) NSString *hostName;



// @property (nullable, readonly, copy) NSArray<NSData *> *addresses;



// @property (readonly) NSInteger port __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (void)publish;





// - (void)publishWithOptions:(NSNetServiceOptions)options __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)resolve __attribute__((availability(macos,introduced=10.2,deprecated=10.4,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));



// - (void)stop;



// + (NSDictionary<NSString *, NSData *> *)dictionaryFromTXTRecordData:(NSData *)txtData;



// + (NSData *)dataFromTXTRecordDictionary:(NSDictionary<NSString *, NSData *> *)txtDictionary;



// - (void)resolveWithTimeout:(NSTimeInterval)timeout;



// - (BOOL)getInputStream:(out __attribute__((objc_ownership(strong))) NSInputStream * _Nullable * _Nullable)inputStream outputStream:(out __attribute__((objc_ownership(strong))) NSOutputStream * _Nullable * _Nullable)outputStream;



// - (BOOL)setTXTRecordData:(nullable NSData *)recordData;



// - (nullable NSData *)TXTRecordData;



// - (void)startMonitoring;



// - (void)stopMonitoring;


/* @end */




__attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSNetServiceBrowser
#define _REWRITER_typedef_NSNetServiceBrowser
typedef struct objc_object NSNetServiceBrowser;
typedef struct {} _objc_exc_NSNetServiceBrowser;
#endif

struct NSNetServiceBrowser_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _netServiceBrowser;
	id _delegate;
	void *_reserved;
};


// - (instancetype)init;



// @property (nullable, assign) id <NSNetServiceBrowserDelegate> delegate;



// @property BOOL includesPeerToPeer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



// - (void)searchForBrowsableDomains;



// - (void)searchForRegistrationDomains;



// - (void)searchForServicesOfType:(NSString *)type inDomain:(NSString *)domainString;



// - (void)stop;

/* @end */




__attribute__((availability(watchos,unavailable)))
// @protocol NSNetServiceDelegate <NSObject>
/* @optional */



// - (void)netServiceWillPublish:(NSNetService *)sender;



// - (void)netServiceDidPublish:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didNotPublish:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceWillResolve:(NSNetService *)sender;



// - (void)netServiceDidResolveAddress:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didNotResolve:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceDidStop:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didUpdateTXTRecordData:(NSData *)data;
// - (void)netService:(NSNetService *)sender didAcceptConnectionWithInputStream:(NSInputStream *)inputStream outputStream:(NSOutputStream *)outputStream __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((availability(watchos,unavailable)))
// @protocol NSNetServiceBrowserDelegate <NSObject>
/* @optional */



// - (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)browser;



// - (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)browser;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didNotSearch:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindService:(NSNetService *)service moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveService:(NSNetService *)service moreComing:(BOOL)moreComing;

/* @end */

#pragma clang assume_nonnull end









// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSUbiquitousKeyValueStore
#define _REWRITER_typedef_NSUbiquitousKeyValueStore
typedef struct objc_object NSUbiquitousKeyValueStore;
typedef struct {} _objc_exc_NSUbiquitousKeyValueStore;
#endif

struct NSUbiquitousKeyValueStore_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _private1;
	id _private2;
	id _private3;
	void *_private4;
	void *_reserved[3];
	int _daemonWakeToken;
};


@property (class, readonly, strong) NSUbiquitousKeyValueStore *defaultStore;

// - (nullable id)objectForKey:(NSString *)aKey;
// - (void)setObject:(nullable id)anObject forKey:(NSString *)aKey;
// - (void)removeObjectForKey:(NSString *)aKey;

// - (nullable NSString *)stringForKey:(NSString *)aKey;
// - (nullable NSArray *)arrayForKey:(NSString *)aKey;
// - (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)aKey;
// - (nullable NSData *)dataForKey:(NSString *)aKey;
// - (long long)longLongForKey:(NSString *)aKey;
// - (double)doubleForKey:(NSString *)aKey;
// - (BOOL)boolForKey:(NSString *)aKey;

// - (void)setString:(nullable NSString *)aString forKey:(NSString *)aKey;
// - (void)setData:(nullable NSData *)aData forKey:(NSString *)aKey;
// - (void)setArray:(nullable NSArray *)anArray forKey:(NSString *)aKey;
// - (void)setDictionary:(nullable NSDictionary<NSString *, id> *)aDictionary forKey:(NSString *)aKey;
// - (void)setLongLong:(long long)value forKey:(NSString *)aKey;
// - (void)setDouble:(double)value forKey:(NSString *)aKey;
// - (void)setBool:(BOOL)value forKey:(NSString *)aKey;

// @property (readonly, copy) NSDictionary<NSString *, id> *dictionaryRepresentation;

// - (BOOL)synchronize;

/* @end */


extern "C" NSNotificationName const NSUbiquitousKeyValueStoreDidChangeExternallyNotification __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSUbiquitousKeyValueStoreChangeReasonKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSUbiquitousKeyValueStoreChangedKeysKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

enum {
    NSUbiquitousKeyValueStoreServerChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreInitialSyncChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreQuotaViolationChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreAccountChange __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};
#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin


static const NSUInteger NSUndoCloseGroupingRunLoopOrdering = 350000;

__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSUndoManager
#define _REWRITER_typedef_NSUndoManager
typedef struct objc_object NSUndoManager;
typedef struct {} _objc_exc_NSUndoManager;
#endif

struct NSUndoManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id _undoStack;
	id _redoStack;
	NSArray *_runLoopModes;
	uint64_t _NSUndoManagerPrivate1;
	id _target;
	id _proxy;
	void *_NSUndoManagerPrivate2;
	void *_NSUndoManagerPrivate3;
};




// - (void)beginUndoGrouping;
// - (void)endUndoGrouping;


// @property (readonly) NSInteger groupingLevel;




// - (void)disableUndoRegistration;
// - (void)enableUndoRegistration;
// @property (readonly, getter=isUndoRegistrationEnabled) BOOL undoRegistrationEnabled;



// @property BOOL groupsByEvent;






// @property NSUInteger levelsOfUndo;






// @property (copy) NSArray<NSRunLoopMode> *runLoopModes;



// - (void)undo;



// - (void)redo;


// - (void)undoNestedGroup;



// @property (readonly) BOOL canUndo;
// @property (readonly) BOOL canRedo;


// @property (readonly, getter=isUndoing) BOOL undoing;
// @property (readonly, getter=isRedoing) BOOL redoing;





// - (void)removeAllActions;

// - (void)removeAllActionsWithTarget:(id)target;



// - (void)registerUndoWithTarget:(id)target selector:(SEL)selector object:(nullable id)anObject;



// - (id)prepareWithInvocationTarget:(id)target;
// - (void)registerUndoWithTarget:(id)target handler:(void (^)(id target))undoHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((swift_private));

// - (void)setActionIsDiscardable:(BOOL)discardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSString * const NSUndoManagerGroupIsDiscardableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) BOOL undoActionIsDiscardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) BOOL redoActionIsDiscardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (readonly, copy) NSString *undoActionName;
// @property (readonly, copy) NSString *redoActionName;



// - (void)setActionName:(NSString *)actionName;





// @property (readonly, copy) NSString *undoMenuItemTitle;
// @property (readonly, copy) NSString *redoMenuItemTitle;






// - (NSString *)undoMenuTitleForUndoActionName:(NSString *)actionName;
// - (NSString *)redoMenuTitleForUndoActionName:(NSString *)actionName;




/* @end */


extern "C" NSNotificationName const NSUndoManagerCheckpointNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern "C" NSNotificationName const NSUndoManagerWillUndoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerWillRedoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSNotificationName const NSUndoManagerDidUndoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerDidRedoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSNotificationName const NSUndoManagerDidOpenUndoGroupNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerWillCloseUndoGroupNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSNotificationName const NSUndoManagerDidCloseUndoGroupNotification __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end
extern "C" {


#pragma clang assume_nonnull begin
struct SSLContext;
typedef struct __attribute__((objc_bridge(id))) SSLContext *SSLContextRef;


typedef const void *SSLConnectionRef;


typedef int SSLSessionOption; enum {







 kSSLSessionOptionBreakOnServerAuth __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 0,




 kSSLSessionOptionBreakOnCertRequested __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 1,






    kSSLSessionOptionBreakOnClientAuth __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 2,





    kSSLSessionOptionFalseStart __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 3,





    kSSLSessionOptionSendOneByteRecord __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 4,




    kSSLSessionOptionAllowServerIdentityChange __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 5,




    kSSLSessionOptionFallback __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 6,



    kSSLSessionOptionBreakOnClientHello __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 7,



    kSSLSessionOptionAllowRenegotiation __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 8,



    kSSLSessionOptionEnableSessionTickets __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))) = 9,
};


typedef int SSLSessionState; enum {
 kSSLIdle __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
 kSSLHandshake __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
 kSSLConnected __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
 kSSLClosed __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
 kSSLAborted __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" )))
};





typedef int SSLClientCertificateState; enum {

 kSSLClientCertNone __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),

 kSSLClientCertRequested __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),






 kSSLClientCertSent __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),




 kSSLClientCertRejected __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" )))
};
typedef OSStatus
(*SSLReadFunc) (SSLConnectionRef connection,
        void *data,


        size_t *dataLength);
typedef OSStatus
(*SSLWriteFunc) (SSLConnectionRef connection,
        const void *data,
        size_t *dataLength);
typedef int SSLProtocolSide; enum
{
    kSSLServerSide __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
    kSSLClientSide __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" )))
};

typedef int SSLConnectionType; enum
{
    kSSLStreamType __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" ))),
    kSSLDatagramType __attribute__((availability(ios,introduced=2_0,deprecated=13_0,message="" )))
};






extern const CFStringRef kSSLSessionConfig_default
__attribute__((availability(macos,introduced=10.2,deprecated=10.13,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=11.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_ATSv1
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_ATSv1_noPFS
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_standard
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_RC4_fallback
__attribute__((availability(macos,introduced=10.2,deprecated=10.13,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=11.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_TLSv1_fallback
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_TLSv1_RC4_fallback
__attribute__((availability(macos,introduced=10.2,deprecated=10.13,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=11.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_legacy
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_legacy_DHE
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_anonymous
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_3DES_fallback
__attribute__((availability(macos,introduced=10.2,deprecated=10.13,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=11.0,message="No longer supported. Use Network.framework.")));


extern const CFStringRef kSSLSessionConfig_TLSv1_3DES_fallback
__attribute__((availability(macos,introduced=10.2,deprecated=10.13,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=11.0,message="No longer supported. Use Network.framework.")));
CFTypeID
SSLContextGetTypeID(void)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
_Nullable
SSLContextRef
SSLCreateContext(CFAllocatorRef _Nullable alloc, SSLProtocolSide protocolSide, SSLConnectionType connectionType)
 __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetSessionState (SSLContextRef context,
        SSLSessionState *state)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean value)
    __attribute__((availability(macos,introduced=10.6,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean *value)
    __attribute__((availability(macos,introduced=10.6,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetIOFuncs (SSLContextRef context,
        SSLReadFunc readFunc,
        SSLWriteFunc writeFunc)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetSessionConfig(SSLContextRef context,
                    CFStringRef config)
    __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol minVersion)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol *minVersion)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol maxVersion)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol *maxVersion)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetCertificate (SSLContextRef context,
        CFArrayRef _Nullable certRefs)
    __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetConnection (SSLContextRef context,
        SSLConnectionRef _Nullable connection)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetConnection (SSLContextRef context,
        SSLConnectionRef * _Nonnull __attribute__((cf_returns_not_retained)) connection)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetPeerDomainName (SSLContextRef context,
        const char * _Nullable peerName,
        size_t peerNameLen)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetPeerDomainNameLength (SSLContextRef context,
        size_t *peerNameLen)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetPeerDomainName (SSLContextRef context,
        char *peerName,
        size_t *peerNameLen)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLCopyRequestedPeerNameLength (SSLContextRef ctx,
                                 size_t *peerNameLen)
    __attribute__((availability(macos,introduced=10.11,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=9.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLCopyRequestedPeerName (SSLContextRef context,
                             char *peerName,
                             size_t *peerNameLen)
    __attribute__((availability(macos,introduced=10.11,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=9.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetDatagramHelloCookie (SSLContextRef dtlsContext,
                             const void * _Nullable cookie,
                             size_t cookieLen)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t maxSize)
 __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t *maxSize)
 __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetNegotiatedProtocolVersion (SSLContextRef context,
          SSLProtocol *protocol)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetNumberSupportedCiphers (SSLContextRef context,
         size_t *numCiphers)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetSupportedCiphers (SSLContextRef context,
         SSLCipherSuite *ciphers,
         size_t *numCiphers)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetNumberEnabledCiphers (SSLContextRef context,
                                size_t *numCiphers)
__attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetEnabledCiphers (SSLContextRef context,
        const SSLCipherSuite *ciphers,
        size_t numCiphers)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetEnabledCiphers (SSLContextRef context,
        SSLCipherSuite *ciphers,
        size_t *numCiphers)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetSessionTicketsEnabled (SSLContextRef context,
                                 Boolean enabled)
    __attribute__((availability(macos,introduced=10.13,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLCopyPeerTrust (SSLContextRef context,
        SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
    __attribute__((availability(macos,introduced=10.6,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetPeerID (SSLContextRef context,
        const void * _Nullable peerID,
        size_t peerIDLen)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetPeerID (SSLContextRef context,
        const void * _Nullable * _Nonnull peerID,
        size_t *peerIDLen)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetNegotiatedCipher (SSLContextRef context,
        SSLCipherSuite *cipherSuite)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetALPNProtocols (SSLContextRef context,
                             CFArrayRef protocols)
    __attribute__((availability(macos,introduced=10.13,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLCopyALPNProtocols (SSLContextRef context,
                             CFArrayRef _Nullable * _Nonnull protocols)
    __attribute__((availability(macos,introduced=10.13,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetOCSPResponse (SSLContextRef context,
                             CFDataRef _Nonnull response)
    __attribute__((availability(macos,introduced=10.13,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetEncryptionCertificate (SSLContextRef context,
        CFArrayRef certRefs)
    __attribute__((availability(macos,introduced=10.2,deprecated=10.11,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=9.0,message="No longer supported. Use Network.framework.")));






typedef int SSLAuthenticate; enum {
 kNeverAuthenticate,
 kAlwaysAuthenticate,
 kTryAuthenticate
};
OSStatus
SSLSetClientSideAuthenticate (SSLContextRef context,
         SSLAuthenticate auth)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLAddDistinguishedName (SSLContextRef context,
        const void * _Nullable derDN,
        size_t derDNLen)
    __attribute__((availability(macos,introduced=10.4,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLCopyDistinguishedNames (SSLContextRef context,
        CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) names)
    __attribute__((availability(macos,introduced=10.5,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetClientCertificateState (SSLContextRef context,
         SSLClientCertificateState *clientState)
    __attribute__((availability(macos,introduced=10.3,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLHandshake (SSLContextRef context)
    __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLReHandshake (SSLContextRef context)
    __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLWrite (SSLContextRef context,
        const void * _Nullable data,
        size_t dataLength,
        size_t *processed)
    __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLRead (SSLContextRef context,
        void * data,
        size_t dataLength,
        size_t *processed)
    __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetBufferedReadSize (SSLContextRef context,
        size_t *bufferSize)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLGetDatagramWriteSize (SSLContextRef dtlsContext,
        size_t *bufSize)
    __attribute__((availability(macos,introduced=10.8,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));







OSStatus
SSLClose (SSLContextRef context)
 __attribute__((availability(macos,introduced=10.2,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=5.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
OSStatus
SSLSetError (SSLContextRef context,
                             OSStatus status)
    __attribute__((availability(macos,introduced=10.13,deprecated=10.15,message="No longer supported. Use Network.framework."))) __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="No longer supported. Use Network.framework.")));
#pragma clang assume_nonnull end






}

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSOutputStream;
#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSOperationQueue;
#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


// @class NSURLCache;
#ifndef _REWRITER_typedef_NSURLCache
#define _REWRITER_typedef_NSURLCache
typedef struct objc_object NSURLCache;
typedef struct {} _objc_exc_NSURLCache;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSHTTPURLResponse;
#ifndef _REWRITER_typedef_NSHTTPURLResponse
#define _REWRITER_typedef_NSHTTPURLResponse
typedef struct objc_object NSHTTPURLResponse;
typedef struct {} _objc_exc_NSHTTPURLResponse;
#endif

// @class NSHTTPCookie;
#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLCredentialStorage;
#ifndef _REWRITER_typedef_NSURLCredentialStorage
#define _REWRITER_typedef_NSURLCredentialStorage
typedef struct objc_object NSURLCredentialStorage;
typedef struct {} _objc_exc_NSURLCredentialStorage;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

// @class NSURLSessionUploadTask;
#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

// @class NSURLSessionDownloadTask;
#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

// @class NSNetService;
#ifndef _REWRITER_typedef_NSNetService
#define _REWRITER_typedef_NSNetService
typedef struct objc_object NSNetService;
typedef struct {} _objc_exc_NSNetService;
#endif

// @class NSURLSession;
#ifndef _REWRITER_typedef_NSURLSession
#define _REWRITER_typedef_NSURLSession
typedef struct objc_object NSURLSession;
typedef struct {} _objc_exc_NSURLSession;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

// @class NSURLSessionUploadTask;
#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

// @class NSURLSessionDownloadTask;
#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

// @class NSURLSessionStreamTask;
#ifndef _REWRITER_typedef_NSURLSessionStreamTask
#define _REWRITER_typedef_NSURLSessionStreamTask
typedef struct objc_object NSURLSessionStreamTask;
typedef struct {} _objc_exc_NSURLSessionStreamTask;
#endif

// @class NSURLSessionWebSocketTask;
#ifndef _REWRITER_typedef_NSURLSessionWebSocketTask
#define _REWRITER_typedef_NSURLSessionWebSocketTask
typedef struct objc_object NSURLSessionWebSocketTask;
typedef struct {} _objc_exc_NSURLSessionWebSocketTask;
#endif


// @class NSURLSessionConfiguration;
#ifndef _REWRITER_typedef_NSURLSessionConfiguration
#define _REWRITER_typedef_NSURLSessionConfiguration
typedef struct objc_object NSURLSessionConfiguration;
typedef struct {} _objc_exc_NSURLSessionConfiguration;
#endif

// @protocol NSURLSessionDelegate;

// @class NSURLSessionTaskMetrics;
#ifndef _REWRITER_typedef_NSURLSessionTaskMetrics
#define _REWRITER_typedef_NSURLSessionTaskMetrics
typedef struct objc_object NSURLSessionTaskMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskMetrics;
#endif

// @class NSDateInterval;
#ifndef _REWRITER_typedef_NSDateInterval
#define _REWRITER_typedef_NSDateInterval
typedef struct objc_object NSDateInterval;
typedef struct {} _objc_exc_NSDateInterval;
#endif


#pragma clang assume_nonnull begin



extern "C" const int64_t NSURLSessionTransferSizeUnknown __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSURLSession
#define _REWRITER_typedef_NSURLSession
typedef struct objc_object NSURLSession;
typedef struct {} _objc_exc_NSURLSession;
#endif

struct NSURLSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






@property (class, readonly, strong) NSURLSession *sharedSession;
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration;
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration delegate:(nullable id <NSURLSessionDelegate>)delegate delegateQueue:(nullable NSOperationQueue *)queue;

// @property (readonly, retain) NSOperationQueue *delegateQueue;
// @property (nullable, readonly, retain) id <NSURLSessionDelegate> delegate;
// @property (readonly, copy) NSURLSessionConfiguration *configuration;





// @property (nullable, copy) NSString *sessionDescription;
// - (void)finishTasksAndInvalidate;






// - (void)invalidateAndCancel;

// - (void)resetWithCompletionHandler:(void (^)(void))completionHandler;
// - (void)flushWithCompletionHandler:(void (^)(void))completionHandler;

// - (void)getTasksWithCompletionHandler:(void (^)(NSArray<NSURLSessionDataTask *> *dataTasks, NSArray<NSURLSessionUploadTask *> *uploadTasks, NSArray<NSURLSessionDownloadTask *> *downloadTasks))completionHandler;

// - (void)getAllTasksWithCompletionHandler:(void (^)(NSArray<__kindof NSURLSessionTask *> *tasks))completionHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request;


// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url;


// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL;


// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(NSData *)bodyData;


// - (NSURLSessionUploadTask *)uploadTaskWithStreamedRequest:(NSURLRequest *)request;


// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request;


// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url;


// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData;



// - (NSURLSessionStreamTask *)streamTaskWithHostName:(NSString *)hostname port:(NSInteger)port __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (NSURLSessionStreamTask *)streamTaskWithNetService:(NSNetService *)service __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));



// - (NSURLSessionWebSocketTask *)webSocketTaskWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





// - (NSURLSessionWebSocketTask *)webSocketTaskWithURL:(NSURL *)url protocols:(NSArray<NSString *>*)protocols __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





// - (NSURLSessionWebSocketTask *)webSocketTaskWithRequest:(NSURLRequest *)request __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")));

/* @end */

// @interface NSURLSession (NSURLSessionAsynchronousConvenience)
// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;




// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(nullable NSData *)bodyData completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;







// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;

/* @end */


typedef NSInteger NSURLSessionTaskState; enum {
    NSURLSessionTaskStateRunning = 0,
    NSURLSessionTaskStateSuspended = 1,
    NSURLSessionTaskStateCanceling = 2,
    NSURLSessionTaskStateCompleted = 3,
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif

struct NSURLSessionTask_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger taskIdentifier;
// @property (nullable, readonly, copy) NSURLRequest *originalRequest;
// @property (nullable, readonly, copy) NSURLRequest *currentRequest;
// @property (nullable, readonly, copy) NSURLResponse *response;





// @property (readonly, strong) NSProgress *progress __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, copy) NSDate *earliestBeginDate __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property int64_t countOfBytesClientExpectsToSend __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property int64_t countOfBytesClientExpectsToReceive __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly) int64_t countOfBytesReceived;


// @property (readonly) int64_t countOfBytesSent;


// @property (readonly) int64_t countOfBytesExpectedToSend;


// @property (readonly) int64_t countOfBytesExpectedToReceive;





// @property (nullable, copy) NSString *taskDescription;







// - (void)cancel;




// @property (readonly) NSURLSessionTaskState state;





// @property (nullable, readonly, copy) NSError *error;
// - (void)suspend;
// - (void)resume;
// @property float priority __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Not supported")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Not supported")));

/* @end */


extern "C" const float NSURLSessionTaskPriorityDefault __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" const float NSURLSessionTaskPriorityLow __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" const float NSURLSessionTaskPriorityHigh __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

struct NSURLSessionDataTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")));

/* @end */









#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

struct NSURLSessionUploadTask_IMPL {
	struct NSURLSessionDataTask_IMPL NSURLSessionDataTask_IVARS;
};


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")));

/* @end */







#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

struct NSURLSessionDownloadTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};

// - (void)cancelByProducingResumeData:(void (^)(NSData * _Nullable resumeData))completionHandler;


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")));

/* @end */

__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSURLSessionStreamTask
#define _REWRITER_typedef_NSURLSessionStreamTask
typedef struct objc_object NSURLSessionStreamTask;
typedef struct {} _objc_exc_NSURLSessionStreamTask;
#endif

struct NSURLSessionStreamTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};







// - (void)readDataOfMinLength:(NSUInteger)minBytes maxLength:(NSUInteger)maxBytes timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSData * _Nullable data, BOOL atEOF, NSError * _Nullable error))completionHandler;






// - (void)writeData:(NSData *)data timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSError * _Nullable error))completionHandler;







// - (void)captureStreams;







// - (void)closeWrite;





// - (void)closeRead;






// - (void)startSecureConnection;







// - (void)stopSecureConnection __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="TLS cannot be disabled once it is enabled"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="TLS cannot be disabled once it is enabled"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="TLS cannot be disabled once it is enabled"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="TLS cannot be disabled once it is enabled")));


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")));

/* @end */


typedef NSInteger NSURLSessionWebSocketMessageType; enum {
    NSURLSessionWebSocketMessageTypeData = 0,
    NSURLSessionWebSocketMessageTypeString = 1,
} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSURLSessionWebSocketMessage
#define _REWRITER_typedef_NSURLSessionWebSocketMessage
typedef struct objc_object NSURLSessionWebSocketMessage;
typedef struct {} _objc_exc_NSURLSessionWebSocketMessage;
#endif

struct NSURLSessionWebSocketMessage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));



// - (instancetype)initWithString:(NSString *)string __attribute__((objc_designated_initializer));

// @property (readonly) NSURLSessionWebSocketMessageType type;
// @property (nullable, readonly, copy) NSData *data;
// @property (nullable, readonly, copy) NSString *string;


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */




typedef NSInteger NSURLSessionWebSocketCloseCode; enum
{
    NSURLSessionWebSocketCloseCodeInvalid = 0,
    NSURLSessionWebSocketCloseCodeNormalClosure = 1000,
    NSURLSessionWebSocketCloseCodeGoingAway = 1001,
    NSURLSessionWebSocketCloseCodeProtocolError = 1002,
    NSURLSessionWebSocketCloseCodeUnsupportedData = 1003,
    NSURLSessionWebSocketCloseCodeNoStatusReceived = 1005,
    NSURLSessionWebSocketCloseCodeAbnormalClosure = 1006,
    NSURLSessionWebSocketCloseCodeInvalidFramePayloadData = 1007,
    NSURLSessionWebSocketCloseCodePolicyViolation = 1008,
    NSURLSessionWebSocketCloseCodeMessageTooBig = 1009,
    NSURLSessionWebSocketCloseCodeMandatoryExtensionMissing = 1010,
    NSURLSessionWebSocketCloseCodeInternalServerError = 1011,
    NSURLSessionWebSocketCloseCodeTLSHandshakeFailure = 1015,
} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_NSURLSessionWebSocketTask
#define _REWRITER_typedef_NSURLSessionWebSocketTask
typedef struct objc_object NSURLSessionWebSocketTask;
typedef struct {} _objc_exc_NSURLSessionWebSocketTask;
#endif

struct NSURLSessionWebSocketTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};







// - (void)sendMessage:(NSURLSessionWebSocketMessage *)message completionHandler:(void (^)(NSError * _Nullable error))completionHandler;





// - (void)receiveMessageWithCompletionHandler:(void (^)(NSURLSessionWebSocketMessage* _Nullable message, NSError * _Nullable error))completionHandler;






// - (void)sendPingWithPongReceiveHandler:(void (^)(NSError* _Nullable error))pongReceiveHandler;




// - (void)cancelWithCloseCode:(NSURLSessionWebSocketCloseCode)closeCode reason:(NSData * _Nullable)reason;

// @property NSInteger maximumMessageSize;
// @property (readonly) NSURLSessionWebSocketCloseCode closeCode;
// @property (nullable, readonly, copy) NSData *closeReason;


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */

typedef NSInteger NSURLSessionMultipathServiceType; enum
{
    NSURLSessionMultipathServiceTypeNone = 0,
    NSURLSessionMultipathServiceTypeHandover = 1,
    NSURLSessionMultipathServiceTypeInteractive = 2,
    NSURLSessionMultipathServiceTypeAggregate = 3
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("URLSessionConfiguration.MultipathServiceType")));
__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSURLSessionConfiguration
#define _REWRITER_typedef_NSURLSessionConfiguration
typedef struct objc_object NSURLSessionConfiguration;
typedef struct {} _objc_exc_NSURLSessionConfiguration;
#endif

struct NSURLSessionConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, strong) NSURLSessionConfiguration *defaultSessionConfiguration;
@property (class, readonly, strong) NSURLSessionConfiguration *ephemeralSessionConfiguration;

// + (NSURLSessionConfiguration *)backgroundSessionConfigurationWithIdentifier:(NSString *)identifier __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSString *identifier;


// @property NSURLRequestCachePolicy requestCachePolicy;


// @property NSTimeInterval timeoutIntervalForRequest;


// @property NSTimeInterval timeoutIntervalForResource;


// @property NSURLRequestNetworkServiceType networkServiceType;


// @property BOOL allowsCellularAccess;


// @property BOOL allowsExpensiveNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// @property BOOL allowsConstrainedNetworkAccess __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property BOOL waitsForConnectivity __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// @property (getter=isDiscretionary) BOOL discretionary __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, copy) NSString *sharedContainerIdentifier __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property BOOL sessionSendsLaunchEvents __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


// @property (nullable, copy) NSDictionary *connectionProxyDictionary;


// @property SSLProtocol TLSMinimumSupportedProtocol __attribute__((availability(macos,introduced=10.9,deprecated=100000,replacement="TLSMinimumSupportedProtocolVersion"))) __attribute__((availability(ios,introduced=7.0,deprecated=100000,replacement="TLSMinimumSupportedProtocolVersion"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="TLSMinimumSupportedProtocolVersion"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="TLSMinimumSupportedProtocolVersion")));


// @property SSLProtocol TLSMaximumSupportedProtocol __attribute__((availability(macos,introduced=10.9,deprecated=100000,replacement="TLSMaximumSupportedProtocolVersion"))) __attribute__((availability(ios,introduced=7.0,deprecated=100000,replacement="TLSMaximumSupportedProtocolVersion"))) __attribute__((availability(watchos,introduced=2.0,deprecated=100000,replacement="TLSMaximumSupportedProtocolVersion"))) __attribute__((availability(tvos,introduced=9.0,deprecated=100000,replacement="TLSMaximumSupportedProtocolVersion")));


// @property tls_protocol_version_t TLSMinimumSupportedProtocolVersion __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// @property tls_protocol_version_t TLSMaximumSupportedProtocolVersion __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// @property BOOL HTTPShouldUsePipelining;


// @property BOOL HTTPShouldSetCookies;


// @property NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy;



// @property (nullable, copy) NSDictionary *HTTPAdditionalHeaders;


// @property NSInteger HTTPMaximumConnectionsPerHost;


// @property (nullable, retain) NSHTTPCookieStorage *HTTPCookieStorage;


// @property (nullable, retain) NSURLCredentialStorage *URLCredentialStorage;


// @property (nullable, retain) NSURLCache *URLCache;




// @property BOOL shouldUseExtendedBackgroundIdleMode __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSArray<Class> *protocolClasses;


// @property NSURLSessionMultipathServiceType multipathServiceType __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (instancetype)init __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.9,deprecated=10.15,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")));

/* @end */





typedef NSInteger NSURLSessionDelayedRequestDisposition; enum {
    NSURLSessionDelayedRequestContinueLoading = 0,
    NSURLSessionDelayedRequestUseNewRequest = 1,
    NSURLSessionDelayedRequestCancel = 2,
} __attribute__((swift_name("URLSession.DelayedRequestDisposition"))) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSInteger NSURLSessionAuthChallengeDisposition; enum {
    NSURLSessionAuthChallengeUseCredential = 0,
    NSURLSessionAuthChallengePerformDefaultHandling = 1,
    NSURLSessionAuthChallengeCancelAuthenticationChallenge = 2,
    NSURLSessionAuthChallengeRejectProtectionSpace = 3,
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSURLSessionResponseDisposition; enum {
    NSURLSessionResponseCancel = 0,
    NSURLSessionResponseAllow = 1,
    NSURLSessionResponseBecomeDownload = 2,
    NSURLSessionResponseBecomeStream __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3,
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @protocol NSURLSessionDelegate <NSObject>
/* @optional */





// - (void)URLSession:(NSURLSession *)session didBecomeInvalidWithError:(nullable NSError *)error;
#if 0
- (void)URLSession:(NSURLSession *)session didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                                             completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;
#endif

// - (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)session __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */





// @protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>
/* @optional */
#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                        willBeginDelayedRequest:(NSURLRequest *)request
                              completionHandler:(void (^)(NSURLSessionDelayedRequestDisposition disposition, NSURLRequest * _Nullable newRequest))completionHandler
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

#if 0
- (void)URLSession:(NSURLSession *)session taskIsWaitingForConnectivity:(NSURLSessionTask *)task
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                     willPerformHTTPRedirection:(NSHTTPURLResponse *)response
                                     newRequest:(NSURLRequest *)request
                              completionHandler:(void (^)(NSURLRequest * _Nullable))completionHandler;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                            didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                              completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;
#endif






#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                              needNewBodyStream:(void (^)(NSInputStream * _Nullable bodyStream))completionHandler;
#endif





#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                                didSendBodyData:(int64_t)bytesSent
                                 totalBytesSent:(int64_t)totalBytesSent
                       totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
#endif





// - (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)metrics __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                           didCompleteWithError:(nullable NSError *)error;
#endif


/* @end */






// @protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>
/* @optional */
#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                 didReceiveResponse:(NSURLResponse *)response
                                  completionHandler:(void (^)(NSURLSessionResponseDisposition disposition))completionHandler;
#endif





#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                              didBecomeDownloadTask:(NSURLSessionDownloadTask *)downloadTask;
#endif

#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                didBecomeStreamTask:(NSURLSessionStreamTask *)streamTask;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                     didReceiveData:(NSData *)data;
#endif








#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                  willCacheResponse:(NSCachedURLResponse *)proposedResponse
                                  completionHandler:(void (^)(NSCachedURLResponse * _Nullable cachedResponse))completionHandler;
#endif


/* @end */






// @protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>






#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                              didFinishDownloadingToURL:(NSURL *)location;
#endif


/* @optional */

#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                           didWriteData:(int64_t)bytesWritten
                                      totalBytesWritten:(int64_t)totalBytesWritten
                              totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                      didResumeAtOffset:(int64_t)fileOffset
                                     expectedTotalBytes:(int64_t)expectedTotalBytes;
#endif


/* @end */


// @protocol NSURLSessionStreamDelegate <NSURLSessionTaskDelegate>
/* @optional */







// - (void)URLSession:(NSURLSession *)session readClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;





// - (void)URLSession:(NSURLSession *)session writeClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;
// - (void)URLSession:(NSURLSession *)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask *)streamTask;







#if 0
- (void)URLSession:(NSURLSession *)session streamTask:(NSURLSessionStreamTask *)streamTask
                                 didBecomeInputStream:(NSInputStream *)inputStream
                                         outputStream:(NSOutputStream *)outputStream;
#endif


/* @end */


__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))
// @protocol NSURLSessionWebSocketDelegate <NSURLSessionTaskDelegate>
/* @optional */




// - (void)URLSession:(NSURLSession *)session webSocketTask:(NSURLSessionWebSocketTask *)webSocketTask didOpenWithProtocol:(NSString * _Nullable) protocol;





// - (void)URLSession:(NSURLSession *)session webSocketTask:(NSURLSessionWebSocketTask *)webSocketTask didCloseWithCode:(NSURLSessionWebSocketCloseCode)closeCode reason:(NSData * _Nullable)reason;

/* @end */



extern "C" NSString * const NSURLSessionDownloadTaskResumeData __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @interface NSURLSessionConfiguration (NSURLSessionDeprecated)
// + (NSURLSessionConfiguration *)backgroundSessionConfiguration:(NSString *)identifier __attribute__((availability(macos,introduced=10.9,deprecated=10.10,replacement="-backgroundSessionConfigurationWithIdentifier:"))) __attribute__((availability(ios,introduced=7.0,deprecated=8.0,replacement="-backgroundSessionConfigurationWithIdentifier:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,replacement="-backgroundSessionConfigurationWithIdentifier:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,replacement="-backgroundSessionConfigurationWithIdentifier:")));
/* @end */





typedef NSInteger NSURLSessionTaskMetricsResourceFetchType; enum {
    NSURLSessionTaskMetricsResourceFetchTypeUnknown,
    NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad,
    NSURLSessionTaskMetricsResourceFetchTypeServerPush,
    NSURLSessionTaskMetricsResourceFetchTypeLocalCache,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSURLSessionTaskTransactionMetrics
#define _REWRITER_typedef_NSURLSessionTaskTransactionMetrics
typedef struct objc_object NSURLSessionTaskTransactionMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskTransactionMetrics;
#endif

struct NSURLSessionTaskTransactionMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (copy, readonly) NSURLRequest *request;




// @property (nullable, copy, readonly) NSURLResponse *response;
// @property (nullable, copy, readonly) NSDate *fetchStartDate;




// @property (nullable, copy, readonly) NSDate *domainLookupStartDate;




// @property (nullable, copy, readonly) NSDate *domainLookupEndDate;






// @property (nullable, copy, readonly) NSDate *connectStartDate;
// @property (nullable, copy, readonly) NSDate *secureConnectionStartDate;






// @property (nullable, copy, readonly) NSDate *secureConnectionEndDate;




// @property (nullable, copy, readonly) NSDate *connectEndDate;






// @property (nullable, copy, readonly) NSDate *requestStartDate;






// @property (nullable, copy, readonly) NSDate *requestEndDate;






// @property (nullable, copy, readonly) NSDate *responseStartDate;




// @property (nullable, copy, readonly) NSDate *responseEndDate;
// @property (nullable, copy, readonly) NSString *networkProtocolName;




// @property (assign, readonly, getter=isProxyConnection) BOOL proxyConnection;




// @property (assign, readonly, getter=isReusedConnection) BOOL reusedConnection;




// @property (assign, readonly) NSURLSessionTaskMetricsResourceFetchType resourceFetchType;




// @property (readonly) int64_t countOfRequestHeaderBytesSent __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





// @property (readonly) int64_t countOfRequestBodyBytesSent __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly) int64_t countOfRequestBodyBytesBeforeEncoding __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly) int64_t countOfResponseHeaderBytesReceived __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





// @property (readonly) int64_t countOfResponseBodyBytesReceived __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly) int64_t countOfResponseBodyBytesAfterDecoding __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSString *localAddress __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSNumber *localPort __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSString *remoteAddress __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSNumber *remotePort __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSNumber *negotiatedTLSProtocolVersion __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (nullable, copy, readonly) NSNumber *negotiatedTLSCipherSuite __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly, getter=isCellular) BOOL cellular __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly, getter=isExpensive) BOOL expensive __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly, getter=isConstrained) BOOL constrained __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (readonly, getter=isMultipath) BOOL multipath __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// - (instancetype)init __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=3.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=10.0,deprecated=13.0,message="Not supported")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=3.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=10.0,deprecated=13.0,message="Not supported")));

/* @end */



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSURLSessionTaskMetrics
#define _REWRITER_typedef_NSURLSessionTaskMetrics
typedef struct objc_object NSURLSessionTaskMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskMetrics;
#endif

struct NSURLSessionTaskMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (copy, readonly) NSArray<NSURLSessionTaskTransactionMetrics *> *transactionMetrics;






// @property (copy, readonly) NSDateInterval *taskInterval;




// @property (assign, readonly) NSUInteger redirectCount;


// - (instancetype)init __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=3.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=10.0,deprecated=13.0,message="Not supported")));
// + (instancetype)new __attribute__((availability(macos,introduced=10.12,deprecated=10.15,message="Not supported"))) __attribute__((availability(ios,introduced=10.0,deprecated=13.0,message="Not supported"))) __attribute__((availability(watchos,introduced=3.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(tvos,introduced=10.0,deprecated=13.0,message="Not supported")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @protocol NSUserActivityDelegate;

typedef NSString* NSUserActivityPersistentIdentifier __attribute__((swift_bridged_typedef));



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSUserActivity
#define _REWRITER_typedef_NSUserActivity
typedef struct objc_object NSUserActivity;
typedef struct {} _objc_exc_NSUserActivity;
#endif

struct NSUserActivity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithActivityType:(NSString *)activityType __attribute__((objc_designated_initializer));



// - (instancetype)init __attribute__((availability(macosx,introduced=10.10,deprecated=10.12,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string")));



// @property (readonly, copy) NSString *activityType;



// @property (nullable, copy) NSString *title;



// @property (nullable, copy) NSDictionary *userInfo;



// - (void)addUserInfoEntriesFromDictionary:(NSDictionary *)otherDictionary;


// @property (nullable, copy) NSSet<NSString *> *requiredUserInfoKeys __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property (assign) BOOL needsSave;



// @property (nullable, copy) NSURL *webpageURL;



// @property (nullable, copy) NSURL *referrerURL __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// @property (nullable, copy) NSDate *expirationDate __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (copy) NSSet<NSString *> *keywords __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property BOOL supportsContinuationStreams;



// @property (nullable, weak) id<NSUserActivityDelegate> delegate;




// @property (nullable, copy) NSString* targetContentIdentifier __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));



// - (void)becomeCurrent;


// - (void)resignCurrent __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// - (void)invalidate;



// - (void)getContinuationStreamsWithCompletionHandler:(void (^)(NSInputStream * _Nullable inputStream, NSOutputStream * _Nullable outputStream, NSError * _Nullable error))completionHandler;


// @property (getter=isEligibleForHandoff) BOOL eligibleForHandoff __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (getter=isEligibleForSearch) BOOL eligibleForSearch __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (getter=isEligibleForPublicIndexing) BOOL eligibleForPublicIndexing __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (getter=isEligibleForPrediction) BOOL eligibleForPrediction __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (copy, nullable) NSUserActivityPersistentIdentifier persistentIdentifier __attribute__((availability(macos,introduced=15.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,unavailable)));

// +(void) deleteSavedUserActivitiesWithPersistentIdentifiers:(NSArray<NSUserActivityPersistentIdentifier>*) persistentIdentifiers completionHandler:(void(^)(void))handler __attribute__((availability(macos,introduced=15.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
// +(void) deleteAllSavedUserActivitiesWithCompletionHandler:(void(^)(void))handler __attribute__((availability(macos,introduced=15.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" NSString * const NSUserActivityTypeBrowsingWeb;



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0)))
// @protocol NSUserActivityDelegate <NSObject>
/* @optional */



// - (void)userActivityWillSave:(NSUserActivity *)userActivity;



// - (void)userActivityWasContinued:(NSUserActivity *)userActivity;



// - (void)userActivity:(NSUserActivity *)userActivity didReceiveInputStream:(NSInputStream *) inputStream outputStream:(NSOutputStream *)outputStream;

/* @end */

#pragma clang assume_nonnull end






typedef __darwin_uuid_string_t uuid_string_t;





static const uuid_t UUID_NULL __attribute__ ((unused)) = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};


extern "C" {


void uuid_clear(uuid_t uu);

int uuid_compare(const uuid_t uu1, const uuid_t uu2);

void uuid_copy(uuid_t dst, const uuid_t src);

void uuid_generate(uuid_t out);
void uuid_generate_random(uuid_t out);
void uuid_generate_time(uuid_t out);

void uuid_generate_early_random(uuid_t out);

int uuid_is_null(const uuid_t uu);

int uuid_parse(const uuid_string_t in, uuid_t uu);

void uuid_unparse(const uuid_t uu, uuid_string_t out);
void uuid_unparse_lower(const uuid_t uu, uuid_string_t out);
void uuid_unparse_upper(const uuid_t uu, uuid_string_t out);


}



#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

struct NSUUID_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)UUID;


// - (instancetype)init __attribute__((objc_designated_initializer));


// - (nullable instancetype)initWithUUIDString:(NSString *)string;


// - (instancetype)initWithUUIDBytes:(const uuid_t _Nullable)bytes;


// - (void)getUUIDBytes:(uuid_t _Nonnull)uuid;


// @property (readonly, copy) NSString *UUIDString;

/* @end */

#pragma clang assume_nonnull end










#pragma clang assume_nonnull begin

typedef double UIAccelerationValue __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="UIAcceleration has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="UIAcceleration has been replaced by the CoreMotion framework")));

// @protocol UIAccelerometerDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message="UIAcceleration has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAcceleration
#define _REWRITER_typedef_UIAcceleration
typedef struct objc_object UIAcceleration;
typedef struct {} _objc_exc_UIAcceleration;
#endif

struct UIAcceleration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UIAccelerationValue x;
// @property(nonatomic,readonly) UIAccelerationValue y;
// @property(nonatomic,readonly) UIAccelerationValue z;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message="UIAccelerometer has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAccelerometer
#define _REWRITER_typedef_UIAccelerometer
typedef struct objc_object UIAccelerometer;
typedef struct {} _objc_exc_UIAccelerometer;
#endif

struct UIAccelerometer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIAccelerometer *)sharedAccelerometer;

// @property(nonatomic) NSTimeInterval updateInterval;
// @property(nullable,nonatomic,weak) id<UIAccelerometerDelegate> delegate;

/* @end */


 __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="UIAcceleration has been replaced by the CoreMotion framework")))
// @protocol UIAccelerometerDelegate<NSObject>
/* @optional */

// - (void)accelerometer:(UIAccelerometer *)accelerometer didAccelerate:(UIAcceleration *)acceleration __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end















typedef double CGFloat;
typedef struct __attribute__((objc_bridge(id))) __IOSurface *IOSurfaceRef __attribute__((swift_name("IOSurfaceRef")));








typedef struct CGAffineTransform CGAffineTransform;



#pragma clang assume_nonnull begin


struct
CGPoint {
    CGFloat x;
    CGFloat y;
};
typedef struct __attribute__((objc_boxable)) CGPoint CGPoint;



struct CGSize {
    CGFloat width;
    CGFloat height;
};
typedef struct __attribute__((objc_boxable)) CGSize CGSize;





struct CGVector {
    CGFloat dx;
    CGFloat dy;
};
typedef struct __attribute__((objc_boxable)) CGVector CGVector;



struct CGRect {
    CGPoint origin;
    CGSize size;
};
typedef struct __attribute__((objc_boxable)) CGRect CGRect;



typedef uint32_t CGRectEdge; enum {
    CGRectMinXEdge, CGRectMinYEdge, CGRectMaxXEdge, CGRectMaxYEdge
};



extern "C" __attribute__((visibility("default"))) const CGPoint CGPointZero
      __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const CGSize CGSizeZero
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const CGRect CGRectZero
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CGRect CGRectNull
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const CGRect CGRectInfinite
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint CGPointMake(CGFloat x, CGFloat y);



static inline CGSize CGSizeMake(CGFloat width, CGFloat height);



static inline CGVector CGVectorMake(CGFloat dx, CGFloat dy);



static inline CGRect CGRectMake(CGFloat x, CGFloat y, CGFloat width,
  CGFloat height);



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMinX(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMidX(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMaxX(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMinY(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMidY(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetMaxY(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetWidth(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGRectGetHeight(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGPointEqualToPoint(CGPoint point1, CGPoint point2)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGSizeEqualToSize(CGSize size1, CGSize size2)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGRectEqualToRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGRect CGRectStandardize(CGRect rect) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGRectIsEmpty(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGRectIsNull(CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGRectIsInfinite(CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGRect CGRectIntegral(CGRect rect) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGRect CGRectUnion(CGRect r1, CGRect r2) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGRect CGRectIntersection(CGRect r1, CGRect r2) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy) __attribute__ ((warn_unused_result))
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGRectDivide(CGRect rect, CGRect * slice,
    CGRect * remainder, CGFloat amount, CGRectEdge edge)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGRectContainsPoint(CGRect rect, CGPoint point)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGRectContainsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGRectIntersectsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CFDictionaryRef CGPointCreateDictionaryRepresentation(
    CGPoint point)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPointMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGPoint * _Nullable point)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGSizeMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGSize * _Nullable size)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGRectMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGRect * _Nullable rect)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint
CGPointMake(CGFloat x, CGFloat y)
{
  CGPoint p; p.x = x; p.y = y; return p;
}

static inline CGSize
CGSizeMake(CGFloat width, CGFloat height)
{
  CGSize size; size.width = width; size.height = height; return size;
}

static inline CGVector
CGVectorMake(CGFloat dx, CGFloat dy)
{
  CGVector vector; vector.dx = dx; vector.dy = dy; return vector;
}

static inline CGRect
CGRectMake(CGFloat x, CGFloat y, CGFloat width, CGFloat height)
{
  CGRect rect;
  rect.origin.x = x; rect.origin.y = y;
  rect.size.width = width; rect.size.height = height;
  return rect;
}

static inline bool
__CGPointEqualToPoint(CGPoint point1, CGPoint point2)
{
  return point1.x == point2.x && point1.y == point2.y;
}


static inline bool
__CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return size1.width == size2.width && size1.height == size2.height;
}
#pragma clang assume_nonnull end



struct CGAffineTransform {
  CGFloat a, b, c, d;
  CGFloat tx, ty;
};



extern "C" __attribute__((visibility("default"))) const CGAffineTransform CGAffineTransformIdentity
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformMake(CGFloat a, CGFloat b,
  CGFloat c, CGFloat d, CGFloat tx, CGFloat ty)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformMakeTranslation(CGFloat tx,
  CGFloat ty) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformMakeRotation(CGFloat angle)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGAffineTransformIsIdentity(CGAffineTransform t)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformTranslate(CGAffineTransform t,
  CGFloat tx, CGFloat ty) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformScale(CGAffineTransform t,
  CGFloat sx, CGFloat sy) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformRotate(CGAffineTransform t,
  CGFloat angle) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformInvert(CGAffineTransform t)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGAffineTransformConcat(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGAffineTransformEqualToTransform(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGPoint CGPointApplyAffineTransform(CGPoint point,
  CGAffineTransform t) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGSize CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform t)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



static inline CGAffineTransform
__CGAffineTransformMake(CGFloat a, CGFloat b, CGFloat c, CGFloat d,
  CGFloat tx, CGFloat ty)
{
  CGAffineTransform t;
  t.a = a; t.b = b; t.c = c; t.d = d; t.tx = tx; t.ty = ty;
  return t;
}


static inline CGPoint
__CGPointApplyAffineTransform(CGPoint point, CGAffineTransform t)
{
  CGPoint p;
  p.x = (CGFloat)((double)t.a * point.x + (double)t.c * point.y + t.tx);
  p.y = (CGFloat)((double)t.b * point.x + (double)t.d * point.y + t.ty);
  return p;
}


static inline CGSize
__CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
{
  CGSize s;
  s.width = (CGFloat)((double)t.a * size.width + (double)t.c * size.height);
  s.height = (CGFloat)((double)t.b * size.width + (double)t.d * size.height);
  return s;
}








typedef struct __attribute__((objc_bridge(id))) CGContext *CGContextRef;




typedef struct __attribute__((objc_bridge(id))) CGColor *CGColorRef;



typedef struct __attribute__((objc_bridge(id))) CGColorSpace *CGColorSpaceRef;



typedef struct __attribute__((objc_bridge(id))) CGDataProvider *CGDataProviderRef;







#pragma clang assume_nonnull begin




typedef size_t (*CGDataProviderGetBytesCallback)(void * _Nullable info,
    void * buffer, size_t count);





typedef off_t (*CGDataProviderSkipForwardCallback)(void * _Nullable info,
    off_t count);




typedef void (*CGDataProviderRewindCallback)(void * _Nullable info);




typedef void (*CGDataProviderReleaseInfoCallback)(void * _Nullable info);
struct CGDataProviderSequentialCallbacks {
    unsigned int version;
    CGDataProviderGetBytesCallback _Nullable getBytes;
    CGDataProviderSkipForwardCallback _Nullable skipForward;
    CGDataProviderRewindCallback _Nullable rewind;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderSequentialCallbacks
    CGDataProviderSequentialCallbacks;



typedef const void * _Nullable(*CGDataProviderGetBytePointerCallback)(
    void * _Nullable info);




typedef void (*CGDataProviderReleaseBytePointerCallback)(
    void * _Nullable info, const void * pointer);




typedef size_t (*CGDataProviderGetBytesAtPositionCallback)(
    void * _Nullable info, void * buffer, off_t pos, size_t cnt);
struct CGDataProviderDirectCallbacks {
    unsigned int version;
    CGDataProviderGetBytePointerCallback _Nullable getBytePointer;
    CGDataProviderReleaseBytePointerCallback _Nullable releaseBytePointer;
    CGDataProviderGetBytesAtPositionCallback _Nullable getBytesAtPosition;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderDirectCallbacks CGDataProviderDirectCallbacks;



extern "C" __attribute__((visibility("default"))) CFTypeID CGDataProviderGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateSequential(
    void * _Nullable info,
    const CGDataProviderSequentialCallbacks * _Nullable callbacks)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateDirect(
    void * _Nullable info, off_t size,
    const CGDataProviderDirectCallbacks * _Nullable callbacks)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



typedef void (*CGDataProviderReleaseDataCallback)(void * _Nullable info,
    const void * data, size_t size);





extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateWithData(
    void * _Nullable info, const void * _Nullable data, size_t size,
    CGDataProviderReleaseDataCallback _Nullable releaseData)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateWithCFData(
    CFDataRef _Nullable data)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderCreateWithFilename(
    const char * _Nullable filename)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGDataProviderRetain(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGDataProviderRelease(CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGDataProviderCopyData(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));

extern "C" __attribute__((visibility("default"))) void* _Nullable CGDataProviderGetInfo(CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end





typedef int32_t CGColorRenderingIntent; enum {
    kCGRenderingIntentDefault,
    kCGRenderingIntentAbsoluteColorimetric,
    kCGRenderingIntentRelativeColorimetric,
    kCGRenderingIntentPerceptual,
    kCGRenderingIntentSaturation
};



typedef int32_t CGColorSpaceModel; enum {
    kCGColorSpaceModelUnknown = -1,
    kCGColorSpaceModelMonochrome,
    kCGColorSpaceModelRGB,
    kCGColorSpaceModelCMYK,
    kCGColorSpaceModelLab,
    kCGColorSpaceModelDeviceN,
    kCGColorSpaceModelIndexed,
    kCGColorSpaceModelPattern,
    kCGColorSpaceModelXYZ
};

#pragma clang assume_nonnull begin








extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericGray
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=9.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericRGB
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=9.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericCMYK
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceDisplayP3
  __attribute__((availability(macos,introduced=10.11.2))) __attribute__((availability(ios,introduced=9.3)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericRGBLinear
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=9.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceAdobeRGB1998
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=9.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceSRGB
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=9.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericGrayGamma2_2
  __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericXYZ
  __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceGenericLab
__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceACESCGLinear
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceITUR_709
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceITUR_2020
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceROMMRGB
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceDCIP3
__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedLinearITUR_2020
__attribute__((availability(macos,introduced=10.14.3))) __attribute__((availability(ios,introduced=12.3)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedLinearDisplayP3
__attribute__((availability(macos,introduced=10.14.3))) __attribute__((availability(ios,introduced=12.3)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceITUR_2020_PQ_EOTF
__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceDisplayP3_PQ_EOTF
__attribute__((availability(macos,introduced=10.14.6))) __attribute__((availability(ios,introduced=13)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceDisplayP3_HLG
__attribute__((availability(macos,introduced=10.14.6))) __attribute__((availability(ios,introduced=13)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceITUR_2020_HLG
__attribute__((availability(macos,introduced=10.14.6))) __attribute__((availability(ios,introduced=13)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedSRGB
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceLinearSRGB
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedLinearSRGB
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedGray
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceLinearGray
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorSpaceExtendedLinearGray
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceGray(void)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceRGB(void)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceCMYK(void)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedGray(const CGFloat
  whitePoint[_Nonnull 3], const CGFloat blackPoint[_Nullable 3], CGFloat gamma)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedRGB(const CGFloat
  whitePoint[_Nonnull 3], const CGFloat blackPoint[_Nullable 3],
  const CGFloat gamma[_Nullable 3], const CGFloat matrix[_Nullable 9])
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateLab(const CGFloat whitePoint[_Nonnull 3],
  const CGFloat blackPoint[_Nullable 3], const CGFloat range[_Nullable 4])
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef CGColorSpaceCreateWithICCData(CFTypeRef _Nullable data)
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateICCBased(size_t nComponents,
  const CGFloat * _Nullable range, CGDataProviderRef _Nullable profile,
  CGColorSpaceRef _Nullable alternate)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateIndexed(CGColorSpaceRef _Nullable baseSpace,
  size_t lastIndex, const unsigned char * _Nullable colorTable)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreatePattern(CGColorSpaceRef _Nullable baseSpace)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable
  CGColorSpaceCreateWithPlatformColorSpace(const void * _Nullable ref)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateWithName(CFStringRef _Nullable name)
  __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceRetain(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGColorSpaceRelease(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGColorSpaceGetName(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));


extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGColorSpaceCopyName(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) CFTypeID CGColorSpaceGetTypeID(void)
  __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceGetBaseColorSpace(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) size_t CGColorSpaceGetColorTableCount(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGColorSpaceGetColorTable(CGColorSpaceRef _Nullable space,
  uint8_t * _Nullable table) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGColorSpaceCopyICCData(CGColorSpaceRef _Nullable space)
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) bool CGColorSpaceIsWideGamutRGB(CGColorSpaceRef)
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));



extern "C" __attribute__((visibility("default"))) bool CGColorSpaceIsHDR(CGColorSpaceRef)
__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));





extern "C" __attribute__((visibility("default"))) bool CGColorSpaceSupportsOutput(CGColorSpaceRef space)
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) CFPropertyListRef _Nullable
CGColorSpaceCopyPropertyList(CGColorSpaceRef space)
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable
CGColorSpaceCreateWithPropertyList(CFPropertyListRef plist)
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));





extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorSpaceCreateWithICCProfile(CFDataRef _Nullable data)
  __attribute__((availability(macos,introduced=10.5,deprecated=10.13,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="No longer supported")));


extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGColorSpaceCopyICCProfile(CGColorSpaceRef _Nullable space)
  __attribute__((availability(macos,introduced=10.5,deprecated=10.13,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="No longer supported")));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGPattern *CGPatternRef;








#pragma clang assume_nonnull begin
typedef int32_t CGPatternTiling; enum {
    kCGPatternTilingNoDistortion,
    kCGPatternTilingConstantSpacingMinimalDistortion,
    kCGPatternTilingConstantSpacing
};
typedef void (*CGPatternDrawPatternCallback)(void * _Nullable info,
                                             CGContextRef _Nullable context);
typedef void (*CGPatternReleaseInfoCallback)(void * _Nullable info);

struct CGPatternCallbacks {
    unsigned int version;
    CGPatternDrawPatternCallback _Nullable drawPattern;
    CGPatternReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGPatternCallbacks CGPatternCallbacks;



extern "C" __attribute__((visibility("default"))) CFTypeID CGPatternGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPatternRef _Nullable CGPatternCreate(void * _Nullable info,
    CGRect bounds, CGAffineTransform matrix, CGFloat xStep, CGFloat yStep,
    CGPatternTiling tiling, bool isColored,
    const CGPatternCallbacks * _Nullable callbacks)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPatternRef _Nullable CGPatternRetain(CGPatternRef _Nullable pattern)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPatternRelease(CGPatternRef _Nullable pattern)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorCreate(CGColorSpaceRef _Nullable space,
  const CGFloat * _Nullable components)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility("default"))) CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green,
  CGFloat blue, CGFloat alpha) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility("default"))) CGColorRef CGColorCreateGenericCMYK(CGFloat cyan, CGFloat magenta,
  CGFloat yellow, CGFloat black, CGFloat alpha)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility("default"))) CGColorRef CGColorCreateGenericGrayGamma2_2(CGFloat gray, CGFloat alpha) __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green,
                                        CGFloat blue, CGFloat alpha) __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorGetConstantColor(CFStringRef _Nullable colorName)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorCreateWithPattern(CGColorSpaceRef _Nullable space,
  CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorCreateCopy(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorCreateCopyWithAlpha(CGColorRef _Nullable color,
  CGFloat alpha) __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorCreateCopyByMatchingToColorSpace(_Nullable CGColorSpaceRef,
  CGColorRenderingIntent intent, CGColorRef _Nullable color, _Nullable CFDictionaryRef options)
  __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));




extern "C" __attribute__((visibility("default"))) CGColorRef _Nullable CGColorRetain(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGColorRelease(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGColorEqualToColor(CGColorRef _Nullable color1, CGColorRef _Nullable color2)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGColorGetNumberOfComponents(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const CGFloat * _Nullable CGColorGetComponents(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGFloat CGColorGetAlpha(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGColorGetColorSpace(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPatternRef _Nullable CGColorGetPattern(CGColorRef _Nullable color)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFTypeID CGColorGetTypeID(void)
  __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorWhite
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorBlack
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorClear
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end

typedef struct __attribute__((objc_bridge(id))) CGFont *CGFontRef;



typedef unsigned short CGFontIndex;



typedef CGFontIndex CGGlyph;






typedef int32_t CGFontPostScriptFormat; enum {
    kCGFontPostScriptFormatType1 = 1,
    kCGFontPostScriptFormatType3 = 3,
    kCGFontPostScriptFormatType42 = 42
};
#pragma clang assume_nonnull begin


static const CGFontIndex kCGFontIndexMax = ((1 << 16) - 2);


static const CGFontIndex kCGFontIndexInvalid = ((1 << 16) - 1);


static const CGFontIndex kCGGlyphMax = kCGFontIndexMax;



extern "C" __attribute__((visibility("default"))) CFTypeID CGFontGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGFontRef _Nullable CGFontCreateWithPlatformFont(
    void * _Nullable platformFontReference)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) CGFontRef _Nullable CGFontCreateWithDataProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGFontRef _Nullable CGFontCreateWithFontName(
    CFStringRef _Nullable name)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGFontRef _Nullable CGFontCreateCopyWithVariations(
    CGFontRef _Nullable font, CFDictionaryRef _Nullable variations)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGFontRef _Nullable CGFontRetain(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGFontRelease(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGFontGetNumberOfGlyphs(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) int CGFontGetUnitsPerEm(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGFontCopyPostScriptName(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGFontCopyFullName(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGFontGetAscent(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGFontGetDescent(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGFontGetLeading(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGFontGetCapHeight(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGFontGetXHeight(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGRect CGFontGetFontBBox(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGFloat CGFontGetItalicAngle(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGFloat CGFontGetStemV(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CFArrayRef _Nullable CGFontCopyVariationAxes(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CFDictionaryRef _Nullable CGFontCopyVariations(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGFontGetGlyphAdvances(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, int * advances)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) bool CGFontGetGlyphBBoxes(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, CGRect * bboxes)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGGlyph CGFontGetGlyphWithGlyphName(
    CGFontRef _Nullable font, CFStringRef _Nullable name)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGFontCopyGlyphNameForGlyph(
    CGFontRef _Nullable font, CGGlyph glyph)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGFontCanCreatePostScriptSubset(CGFontRef _Nullable font,
    CGFontPostScriptFormat format)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGFontCreatePostScriptSubset(
    CGFontRef _Nullable font, CFStringRef _Nullable subsetName,
    CGFontPostScriptFormat format, const CGGlyph * _Nullable glyphs,
    size_t count, const CGGlyph encoding[_Nullable 256])
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGFontCreatePostScriptEncoding(
    CGFontRef _Nullable font, const CGGlyph encoding[_Nullable 256])
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CFArrayRef _Nullable CGFontCopyTableTags(CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGFontCopyTableForTag(
    CGFontRef _Nullable font, uint32_t tag)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGFontVariationAxisName
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGFontVariationAxisMinValue
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGFontVariationAxisMaxValue
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGFontVariationAxisDefaultValue
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



typedef int32_t CGGlyphDeprecatedEnum; enum {
  CGGlyphMin __attribute__((deprecated)),
  CGGlyphMax __attribute__((deprecated))
};
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGGradient *CGGradientRef;

typedef uint32_t CGGradientDrawingOptions; enum {
  kCGGradientDrawsBeforeStartLocation = (1 << 0),
  kCGGradientDrawsAfterEndLocation = (1 << 1)
};







#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility("default"))) CFTypeID CGGradientGetTypeID(void)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGGradientRef _Nullable CGGradientCreateWithColorComponents(
    CGColorSpaceRef _Nullable space, const CGFloat * _Nullable components,
    const CGFloat * _Nullable locations, size_t count)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGGradientRef _Nullable CGGradientCreateWithColors(
    CGColorSpaceRef _Nullable space, CFArrayRef _Nullable colors,
    const CGFloat * _Nullable locations)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGGradientRef _Nullable CGGradientRetain(
    CGGradientRef _Nullable gradient)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGGradientRelease(CGGradientRef _Nullable gradient)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGImage *CGImageRef;







#pragma clang assume_nonnull begin

typedef uint32_t CGImageAlphaInfo; enum {
    kCGImageAlphaNone,
    kCGImageAlphaPremultipliedLast,
    kCGImageAlphaPremultipliedFirst,
    kCGImageAlphaLast,
    kCGImageAlphaFirst,
    kCGImageAlphaNoneSkipLast,
    kCGImageAlphaNoneSkipFirst,
    kCGImageAlphaOnly
};

typedef uint32_t CGImageByteOrderInfo; enum {
    kCGImageByteOrderMask = 0x7000,
    kCGImageByteOrderDefault = (0 << 12),
    kCGImageByteOrder16Little = (1 << 12),
    kCGImageByteOrder32Little = (2 << 12),
    kCGImageByteOrder16Big = (3 << 12),
    kCGImageByteOrder32Big = (4 << 12)
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));

typedef uint32_t CGImagePixelFormatInfo; enum {
    kCGImagePixelFormatMask = 0xF0000,
    kCGImagePixelFormatPacked = (0 << 16),
    kCGImagePixelFormatRGB555 = (1 << 16),
    kCGImagePixelFormatRGB565 = (2 << 16),
    kCGImagePixelFormatRGB101010 = (3 << 16),
    kCGImagePixelFormatRGBCIF10 = (4 << 16),
} __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));

typedef uint32_t CGBitmapInfo; enum {
    kCGBitmapAlphaInfoMask = 0x1F,

    kCGBitmapFloatInfoMask = 0xF00,
    kCGBitmapFloatComponents = (1 << 8),

    kCGBitmapByteOrderMask = kCGImageByteOrderMask,
    kCGBitmapByteOrderDefault = kCGImageByteOrderDefault,
    kCGBitmapByteOrder16Little = kCGImageByteOrder16Little,
    kCGBitmapByteOrder32Little = kCGImageByteOrder32Little,
    kCGBitmapByteOrder16Big = kCGImageByteOrder16Big,
    kCGBitmapByteOrder32Big = kCGImageByteOrder32Big
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CFTypeID CGImageGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, CGBitmapInfo bitmapInfo,
    CGDataProviderRef _Nullable provider,
    const CGFloat * _Nullable decode, bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageMaskCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGDataProviderRef _Nullable provider, const CGFloat * _Nullable decode,
    bool shouldInterpolate)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateCopy(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateWithJPEGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(macos,introduced=10.1))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateWithPNGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateWithImageInRect(
    CGImageRef _Nullable image, CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateWithMask(
    CGImageRef _Nullable image, CGImageRef _Nullable mask)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateWithMaskingColors(
    CGImageRef _Nullable image, const CGFloat * _Nullable components)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageCreateCopyWithColorSpace(
    CGImageRef _Nullable image, CGColorSpaceRef _Nullable space)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageRetain(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGImageRelease(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGImageIsMask(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGImageGetWidth(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGImageGetHeight(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGImageGetBitsPerComponent(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGImageGetBitsPerPixel(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGImageGetBytesPerRow(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGImageGetColorSpace(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataProviderRef _Nullable CGImageGetDataProvider(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const CGFloat * _Nullable CGImageGetDecode(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGImageGetShouldInterpolate(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGColorRenderingIntent CGImageGetRenderingIntent(_Nullable CGImageRef image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGBitmapInfo CGImageGetBitmapInfo(CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGImageByteOrderInfo CGImageGetByteOrderInfo(CGImageRef _Nullable image) __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));



extern "C" __attribute__((visibility("default"))) CGImagePixelFormatInfo CGImageGetPixelFormatInfo(CGImageRef _Nullable image) __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));



extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageGetUTType(_Nullable CGImageRef image)
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGPath *CGMutablePathRef;
typedef const struct __attribute__((objc_bridge(id))) CGPath *CGPathRef;







#pragma clang assume_nonnull begin



typedef int32_t CGLineJoin; enum {
    kCGLineJoinMiter,
    kCGLineJoinRound,
    kCGLineJoinBevel
};



typedef int32_t CGLineCap; enum {
    kCGLineCapButt,
    kCGLineCapRound,
    kCGLineCapSquare
};



extern "C" __attribute__((visibility("default"))) CFTypeID CGPathGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGMutablePathRef CGPathCreateMutable(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGPathCreateCopy(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGPathCreateCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));



extern "C" __attribute__((visibility("default"))) CGMutablePathRef _Nullable CGPathCreateMutableCopy(
    CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGMutablePathRef _Nullable CGPathCreateMutableCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) CGPathRef CGPathCreateWithRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) CGPathRef CGPathCreateWithEllipseInRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) CGPathRef CGPathCreateWithRoundedRect(CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) void CGPathAddRoundedRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable transform, CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight)
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));







extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGPathCreateCopyByDashingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat phase, const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));







extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGPathCreateCopyByStrokingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat lineWidth, CGLineCap lineCap,
    CGLineJoin lineJoin, CGFloat miterLimit)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));




extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGPathRetain(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPathRelease(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGPathEqualToPath(CGPathRef _Nullable path1,
    CGPathRef _Nullable path2)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGPathMoveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGPathAddLineToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGPathAddQuadCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform *_Nullable m, CGFloat cpx, CGFloat cpy,
    CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGPathAddCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat cp1x, CGFloat cp1y,
    CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPathCloseSubpath(CGMutablePathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGPathAddRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGPathAddRects(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGRect * _Nullable rects,
    size_t count)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGPathAddLines(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGPoint * _Nullable points,
    size_t count)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGPathAddEllipseInRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGPathAddRelativeArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable matrix, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat delta)
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) void CGPathAddArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m,
    CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle,
    bool clockwise)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGPathAddArcToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x1, CGFloat y1,
    CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPathAddPath(CGMutablePathRef _Nullable path1,
    const CGAffineTransform * _Nullable m, CGPathRef _Nullable path2)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPathIsEmpty(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGPathIsRect(CGPathRef _Nullable path, CGRect * _Nullable rect)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPoint CGPathGetCurrentPoint(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGPathGetBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGPathGetPathBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) bool CGPathContainsPoint(CGPathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGPoint point, bool eoFill)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



typedef int32_t CGPathElementType; enum {
  kCGPathElementMoveToPoint,
  kCGPathElementAddLineToPoint,
  kCGPathElementAddQuadCurveToPoint,
  kCGPathElementAddCurveToPoint,
  kCGPathElementCloseSubpath
};



struct CGPathElement {
  CGPathElementType type;
  CGPoint * points;
};
typedef struct CGPathElement CGPathElement;



typedef void (*CGPathApplierFunction)(void * _Nullable info,
  const CGPathElement * element);




extern "C" __attribute__((visibility("default"))) void CGPathApply(CGPathRef _Nullable path, void * _Nullable info,
    CGPathApplierFunction _Nullable function)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));

typedef void (*CGPathApplyBlock)(const CGPathElement * element);

extern "C" __attribute__((visibility("default"))) void CGPathApplyWithBlock(CGPathRef path, CGPathApplyBlock __attribute__((noescape)) block)
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end

typedef struct __attribute__((objc_bridge(id))) CGPDFDocument *CGPDFDocumentRef;




typedef struct __attribute__((objc_bridge(id))) CGPDFPage *CGPDFPageRef;



typedef struct CGPDFDictionary *CGPDFDictionaryRef;


typedef struct CGPDFArray *CGPDFArrayRef;


#pragma clang assume_nonnull begin



typedef unsigned char CGPDFBoolean;



typedef long int CGPDFInteger;



typedef CGFloat CGPDFReal;



typedef struct CGPDFObject *CGPDFObjectRef;



typedef int32_t CGPDFObjectType; enum {
  kCGPDFObjectTypeNull = 1,
  kCGPDFObjectTypeBoolean,
  kCGPDFObjectTypeInteger,
  kCGPDFObjectTypeReal,
  kCGPDFObjectTypeName,
  kCGPDFObjectTypeString,
  kCGPDFObjectTypeArray,
  kCGPDFObjectTypeDictionary,
  kCGPDFObjectTypeStream
};



extern "C" __attribute__((visibility("default"))) CGPDFObjectType CGPDFObjectGetType(CGPDFObjectRef _Nullable object)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) bool CGPDFObjectGetValue(CGPDFObjectRef _Nullable object,
    CGPDFObjectType type, void * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end







typedef struct CGPDFStream *CGPDFStreamRef;





typedef int32_t CGPDFDataFormat; enum {
    CGPDFDataFormatRaw, CGPDFDataFormatJPEGEncoded, CGPDFDataFormatJPEG2000
};







#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) CGPDFDictionaryRef _Nullable CGPDFStreamGetDictionary(
    CGPDFStreamRef _Nullable stream)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGPDFStreamCopyData(
    CGPDFStreamRef _Nullable stream,
    CGPDFDataFormat * _Nullable format)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
typedef struct CGPDFString *CGPDFStringRef;







#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) size_t CGPDFStringGetLength(CGPDFStringRef _Nullable string)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) const unsigned char * _Nullable CGPDFStringGetBytePtr(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGPDFStringCopyTextString(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFDateRef _Nullable CGPDFStringCopyDate(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) size_t CGPDFArrayGetCount(CGPDFArrayRef _Nullable array)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetObject(CGPDFArrayRef _Nullable array, size_t index,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetNull(CGPDFArrayRef _Nullable array, size_t index)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetBoolean(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFBoolean * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetInteger(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFInteger * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetNumber(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFReal * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetName(CGPDFArrayRef _Nullable array,
    size_t index, const char * _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetString(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetArray(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetDictionary(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFArrayGetStream(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






typedef bool (*CGPDFArrayApplierBlock)(size_t index,
    CGPDFObjectRef value, void * _Nullable info);







extern "C" __attribute__((visibility("default"))) void CGPDFArrayApplyBlock(CGPDFArrayRef _Nullable array,
    CGPDFArrayApplierBlock _Nullable block, void * _Nullable info)
    __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) size_t CGPDFDictionaryGetCount(CGPDFDictionaryRef _Nullable dict)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetObject(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetBoolean(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFBoolean * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetInteger(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFInteger * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetNumber(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFReal * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetName(CGPDFDictionaryRef _Nullable dict,
    const char * key, const char * _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetString(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetArray(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetDictionary(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFDictionaryGetStream(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





typedef void (*CGPDFDictionaryApplierFunction)(const char * key,
    CGPDFObjectRef value, void * _Nullable info);





extern "C" __attribute__((visibility("default"))) void CGPDFDictionaryApplyFunction(CGPDFDictionaryRef _Nullable dict,
    CGPDFDictionaryApplierFunction _Nullable function, void * _Nullable info)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));







typedef bool (*CGPDFDictionaryApplierBlock)(const char * key,
    CGPDFObjectRef value, void * _Nullable info);







extern "C" __attribute__((visibility("default"))) void CGPDFDictionaryApplyBlock(CGPDFDictionaryRef _Nullable dict,
    CGPDFDictionaryApplierBlock _Nullable block, void * _Nullable info)
    __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef int32_t CGPDFBox; enum {
  kCGPDFMediaBox = 0,
  kCGPDFCropBox = 1,
  kCGPDFBleedBox = 2,
  kCGPDFTrimBox = 3,
  kCGPDFArtBox = 4
};




extern "C" __attribute__((visibility("default"))) CGPDFPageRef _Nullable CGPDFPageRetain(CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPDFPageRelease(CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDocumentRef _Nullable CGPDFPageGetDocument(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGPDFPageGetPageNumber(CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGPDFPageGetBoxRect(CGPDFPageRef _Nullable page, CGPDFBox box)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) int CGPDFPageGetRotationAngle(CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGAffineTransform CGPDFPageGetDrawingTransform(
    CGPDFPageRef _Nullable page, CGPDFBox box, CGRect rect, int rotate,
    bool preserveAspectRatio)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDictionaryRef _Nullable CGPDFPageGetDictionary(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFTypeID CGPDFPageGetTypeID(void)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin
typedef uint32_t CGPDFAccessPermissions; enum {
    kCGPDFAllowsLowQualityPrinting = (1 << 0),
    kCGPDFAllowsHighQualityPrinting = (1 << 1),
    kCGPDFAllowsDocumentChanges = (1 << 2),
    kCGPDFAllowsDocumentAssembly = (1 << 3),
    kCGPDFAllowsContentCopying = (1 << 4),
    kCGPDFAllowsContentAccessibility = (1 << 5),
    kCGPDFAllowsCommenting = (1 << 6),
    kCGPDFAllowsFormFieldEntry = (1 << 7)
};
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFOutlineTitle
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFOutlineChildren
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFOutlineDestination
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFOutlineDestinationRect
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPDFDocumentRef _Nullable CGPDFDocumentRetain(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPDFDocumentRelease(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFDocumentGetVersion(CGPDFDocumentRef _Nullable document,
  int * majorVersion, int * minorVersion)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGPDFDocumentIsEncrypted(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDocumentUnlockWithPassword(
    CGPDFDocumentRef _Nullable document, const char * password)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFDocumentIsUnlocked(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGPDFDocumentAllowsPrinting(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGPDFDocumentAllowsCopying(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) size_t CGPDFDocumentGetNumberOfPages(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPDFPageRef _Nullable CGPDFDocumentGetPage(
    CGPDFDocumentRef _Nullable document, size_t pageNumber)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDictionaryRef _Nullable CGPDFDocumentGetCatalog(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFDictionaryRef _Nullable CGPDFDocumentGetInfo(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFArrayRef _Nullable CGPDFDocumentGetID(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFTypeID CGPDFDocumentGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) _Nullable CFDictionaryRef CGPDFDocumentGetOutline(CGPDFDocumentRef document)
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) CGPDFAccessPermissions CGPDFDocumentGetAccessPermissions(CGPDFDocumentRef document)
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGPDFDocumentGetMediaBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));





extern "C" __attribute__((visibility("default"))) CGRect CGPDFDocumentGetCropBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) CGRect CGPDFDocumentGetBleedBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) CGRect CGPDFDocumentGetTrimBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) CGRect CGPDFDocumentGetArtBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) int CGPDFDocumentGetRotationAngle(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGShading *CGShadingRef;




typedef struct __attribute__((objc_bridge(id))) CGFunction *CGFunctionRef;








#pragma clang assume_nonnull begin





typedef void (*CGFunctionEvaluateCallback)(void * _Nullable info,
  const CGFloat * in, CGFloat * out);




typedef void (*CGFunctionReleaseInfoCallback)(void * _Nullable info);
struct CGFunctionCallbacks {
    unsigned int version;
    CGFunctionEvaluateCallback _Nullable evaluate;
    CGFunctionReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGFunctionCallbacks CGFunctionCallbacks;



extern "C" __attribute__((visibility("default"))) CFTypeID CGFunctionGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGFunctionRef _Nullable CGFunctionCreate(void * _Nullable info,
    size_t domainDimension, const CGFloat *_Nullable domain,
    size_t rangeDimension, const CGFloat * _Nullable range,
    const CGFunctionCallbacks * _Nullable callbacks)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGFunctionRef _Nullable CGFunctionRetain(
    CGFunctionRef _Nullable function)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGFunctionRelease(CGFunctionRef _Nullable function)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) CFTypeID CGShadingGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGShadingRef _Nullable CGShadingCreateAxial(
    CGColorSpaceRef _Nullable space, CGPoint start, CGPoint end,
    CGFunctionRef _Nullable function, bool extendStart, bool extendEnd)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGShadingRef _Nullable CGShadingCreateRadial(
    CGColorSpaceRef _Nullable space,
    CGPoint start, CGFloat startRadius, CGPoint end, CGFloat endRadius,
    CGFunctionRef _Nullable function, bool extendStart, bool extendEnd)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGShadingRef _Nullable CGShadingRetain(CGShadingRef _Nullable shading)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGShadingRelease(CGShadingRef _Nullable shading)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin



typedef int32_t CGPathDrawingMode; enum {
  kCGPathFill,
  kCGPathEOFill,
  kCGPathStroke,
  kCGPathFillStroke,
  kCGPathEOFillStroke
};



typedef int32_t CGTextDrawingMode; enum {
  kCGTextFill,
  kCGTextStroke,
  kCGTextFillStroke,
  kCGTextInvisible,
  kCGTextFillClip,
  kCGTextStrokeClip,
  kCGTextFillStrokeClip,
  kCGTextClip
};



typedef int32_t CGTextEncoding; enum {
  kCGEncodingFontSpecific,
  kCGEncodingMacRoman
} __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));



typedef int32_t CGInterpolationQuality; enum {
  kCGInterpolationDefault = 0,
  kCGInterpolationNone = 1,
  kCGInterpolationLow = 2,
  kCGInterpolationMedium = 4,
  kCGInterpolationHigh = 3
};
typedef int32_t CGBlendMode; enum {

    kCGBlendModeNormal,
    kCGBlendModeMultiply,
    kCGBlendModeScreen,
    kCGBlendModeOverlay,
    kCGBlendModeDarken,
    kCGBlendModeLighten,
    kCGBlendModeColorDodge,
    kCGBlendModeColorBurn,
    kCGBlendModeSoftLight,
    kCGBlendModeHardLight,
    kCGBlendModeDifference,
    kCGBlendModeExclusion,
    kCGBlendModeHue,
    kCGBlendModeSaturation,
    kCGBlendModeColor,
    kCGBlendModeLuminosity,
    kCGBlendModeClear,
    kCGBlendModeCopy,
    kCGBlendModeSourceIn,
    kCGBlendModeSourceOut,
    kCGBlendModeSourceAtop,
    kCGBlendModeDestinationOver,
    kCGBlendModeDestinationIn,
    kCGBlendModeDestinationOut,
    kCGBlendModeDestinationAtop,
    kCGBlendModeXOR,
    kCGBlendModePlusDarker,
    kCGBlendModePlusLighter
};



extern "C" __attribute__((visibility("default"))) CFTypeID CGContextGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextSaveGState(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextRestoreGState(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextScaleCTM(CGContextRef _Nullable c,
    CGFloat sx, CGFloat sy)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextTranslateCTM(CGContextRef _Nullable c,
    CGFloat tx, CGFloat ty)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextRotateCTM(CGContextRef _Nullable c, CGFloat angle)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextConcatCTM(CGContextRef _Nullable c,
    CGAffineTransform transform)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGContextGetCTM(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetLineWidth(CGContextRef _Nullable c, CGFloat width)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetLineCap(CGContextRef _Nullable c, CGLineCap cap)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetLineJoin(CGContextRef _Nullable c, CGLineJoin join)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetMiterLimit(CGContextRef _Nullable c, CGFloat limit)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetLineDash(CGContextRef _Nullable c, CGFloat phase,
    const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetFlatness(CGContextRef _Nullable c, CGFloat flatness)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetAlpha(CGContextRef _Nullable c, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetBlendMode(CGContextRef _Nullable c, CGBlendMode mode)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextBeginPath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextMoveToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextAddLineToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextAddCurveToPoint(CGContextRef _Nullable c, CGFloat cp1x,
    CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextAddQuadCurveToPoint(CGContextRef _Nullable c,
    CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextClosePath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextAddRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextAddRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextAddLines(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextAddEllipseInRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextAddArc(CGContextRef _Nullable c, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextAddArcToPoint(CGContextRef _Nullable c,
    CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextAddPath(CGContextRef _Nullable c,
    CGPathRef _Nullable path)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextReplacePathWithStrokedPath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGContextIsPathEmpty(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPoint CGContextGetPathCurrentPoint(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGRect CGContextGetPathBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPathRef _Nullable CGContextCopyPath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) bool CGContextPathContainsPoint(CGContextRef _Nullable c,
    CGPoint point, CGPathDrawingMode mode)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextDrawPath(CGContextRef _Nullable c,
    CGPathDrawingMode mode)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextFillPath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextEOFillPath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextStrokePath(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextFillRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextFillRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextStrokeRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextStrokeRectWithWidth(CGContextRef _Nullable c,
    CGRect rect, CGFloat width)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextClearRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextFillEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextStrokeEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextStrokeLineSegments(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextClip(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextEOClip(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextResetClip(CGContextRef c);
extern "C" __attribute__((visibility("default"))) void CGContextClipToMask(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable mask)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGRect CGContextGetClipBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextClipToRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextClipToRects(CGContextRef _Nullable c,
    const CGRect * rects, size_t count)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetFillColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetStrokeColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextSetFillColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetStrokeColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetFillColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextSetStrokeColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetFillPattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetStrokePattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetPatternPhase(CGContextRef _Nullable c, CGSize phase)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetGrayFillColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetGrayStrokeColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetRGBFillColor(CGContextRef _Nullable c, CGFloat red,
    CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetRGBStrokeColor(CGContextRef _Nullable c,
    CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetCMYKFillColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSetCMYKStrokeColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetRenderingIntent(CGContextRef _Nullable c,
    CGColorRenderingIntent intent)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextDrawImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextDrawTiledImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) CGInterpolationQuality
    CGContextGetInterpolationQuality(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetInterpolationQuality(CGContextRef _Nullable c,
    CGInterpolationQuality quality)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetShadowWithColor(CGContextRef _Nullable c,
    CGSize offset, CGFloat blur, CGColorRef _Nullable color)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetShadow(CGContextRef _Nullable c, CGSize offset,
    CGFloat blur)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextDrawLinearGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startPoint, CGPoint endPoint,
    CGGradientDrawingOptions options)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextDrawRadialGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startCenter, CGFloat startRadius,
    CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextDrawShading(CGContextRef _Nullable c,
    _Nullable CGShadingRef shading)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextSetCharacterSpacing(CGContextRef _Nullable c,
    CGFloat spacing)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetTextPosition(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPoint CGContextGetTextPosition(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSetTextMatrix(CGContextRef _Nullable c,
    CGAffineTransform t)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGAffineTransform CGContextGetTextMatrix(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetTextDrawingMode(CGContextRef _Nullable c,
    CGTextDrawingMode mode)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetFont(CGContextRef _Nullable c,
    CGFontRef _Nullable font)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGContextSetFontSize(CGContextRef _Nullable c, CGFloat size)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextShowGlyphsAtPositions(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGPoint * _Nullable Lpositions,
    size_t count)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextDrawPDFPage(CGContextRef _Nullable c,
    CGPDFPageRef _Nullable page)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextBeginPage(CGContextRef _Nullable c,
    const CGRect * _Nullable mediaBox)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextEndPage(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGContextRetain(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextRelease(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextFlush(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextSynchronize(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetShouldAntialias(CGContextRef _Nullable c,
    bool shouldAntialias)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetAllowsAntialiasing(CGContextRef _Nullable c,
    bool allowsAntialiasing)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetShouldSmoothFonts(CGContextRef _Nullable c,
    bool shouldSmoothFonts)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) void CGContextSetAllowsFontSmoothing(CGContextRef _Nullable c,
    bool allowsFontSmoothing)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetShouldSubpixelPositionFonts(
    CGContextRef _Nullable c, bool shouldSubpixelPositionFonts)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetAllowsFontSubpixelPositioning(
    CGContextRef _Nullable c, bool allowsFontSubpixelPositioning)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGContextSetShouldSubpixelQuantizeFonts(
    CGContextRef _Nullable c, bool shouldSubpixelQuantizeFonts)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextSetAllowsFontSubpixelQuantization(
    CGContextRef _Nullable c, bool allowsFontSubpixelQuantization)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGContextBeginTransparencyLayer(CGContextRef _Nullable c,
    CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextBeginTransparencyLayerWithRect(
    CGContextRef _Nullable c, CGRect rect, CFDictionaryRef _Nullable auxInfo)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGContextEndTransparencyLayer(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGAffineTransform
    CGContextGetUserSpaceToDeviceSpaceTransform(CGContextRef _Nullable c)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPoint CGContextConvertPointToDeviceSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPoint CGContextConvertPointToUserSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGSize CGContextConvertSizeToDeviceSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGSize CGContextConvertSizeToUserSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGContextConvertRectToDeviceSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) CGRect CGContextConvertRectToUserSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextSelectFont(CGContextRef _Nullable c,
    const char * _Nullable name, CGFloat size, CGTextEncoding textEncoding)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextShowText(CGContextRef _Nullable c,
    const char * _Nullable string, size_t length)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextShowTextAtPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y, const char * _Nullable string, size_t length)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextShowGlyphs(CGContextRef _Nullable c,
    const CGGlyph * _Nullable g, size_t count)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextShowGlyphsAtPoint(CGContextRef _Nullable c, CGFloat x,
    CGFloat y, const CGGlyph * _Nullable glyphs, size_t count)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextShowGlyphsWithAdvances(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGSize * _Nullable advances,
    size_t count)
    __attribute__((availability(macos,introduced=10.3,deprecated=10.9,message="No longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="No longer supported")));




extern "C" __attribute__((visibility("default"))) void CGContextDrawPDFDocument(CGContextRef _Nullable c, CGRect rect,
    CGPDFDocumentRef _Nullable document, int page)
    __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="No longer supported"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin




typedef void (*CGBitmapContextReleaseDataCallback)(void * _Nullable releaseInfo,
    void * _Nullable data);
extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGBitmapContextCreateWithData(
    void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent,
    size_t bytesPerRow, CGColorSpaceRef _Nullable space, uint32_t bitmapInfo,
    CGBitmapContextReleaseDataCallback _Nullable releaseCallback,
    void * _Nullable releaseInfo)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGBitmapContextCreate(void * _Nullable data,
    size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, uint32_t bitmapInfo)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void * _Nullable CGBitmapContextGetData(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGBitmapContextGetWidth(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGBitmapContextGetHeight(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGBitmapContextGetBitsPerComponent(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGBitmapContextGetBitsPerPixel(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) size_t CGBitmapContextGetBytesPerRow(CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGColorSpaceRef _Nullable CGBitmapContextGetColorSpace(
    CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGImageAlphaInfo CGBitmapContextGetAlphaInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGBitmapInfo CGBitmapContextGetBitmapInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGBitmapContextCreateImage(
    CGContextRef _Nullable context)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end

typedef const struct __attribute__((objc_bridge(id))) CGColorConversionInfo* CGColorConversionInfoRef;



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility("default"))) CFTypeID CGColorConversionInfoGetTypeID(void);

typedef uint32_t CGColorConversionInfoTransformType; enum {
  kCGColorConversionTransformFromSpace = 0,
  kCGColorConversionTransformToSpace,
  kCGColorConversionTransformApplySpace
};






extern "C" __attribute__((visibility("default"))) CGColorConversionInfoRef _Nullable CGColorConversionInfoCreate(_Nullable CGColorSpaceRef src, _Nullable CGColorSpaceRef dst)
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateWithOptions(_Nonnull CGColorSpaceRef src, _Nonnull CGColorSpaceRef dst, CFDictionaryRef _Nullable options)
__attribute__((availability(macos,introduced=10.14.6))) __attribute__((availability(ios,introduced=13)));







extern "C" __attribute__((visibility("default"))) CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromList
  (CFDictionaryRef _Nullable options, _Nullable CGColorSpaceRef, CGColorConversionInfoTransformType, CGColorRenderingIntent, ...)
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromListWithArguments
  (CFDictionaryRef _Nullable options, _Nullable CGColorSpaceRef, CGColorConversionInfoTransformType, CGColorRenderingIntent, va_list)
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));


extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorConversionBlackPointCompensation __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGColorConversionTRCSize __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end


typedef struct __attribute__((objc_bridge(id))) CGDataConsumer *CGDataConsumerRef;






#pragma clang assume_nonnull begin




typedef size_t (*CGDataConsumerPutBytesCallback)(void * _Nullable info,
    const void * buffer, size_t count);




typedef void (*CGDataConsumerReleaseInfoCallback)(void * _Nullable info);







struct CGDataConsumerCallbacks {
    CGDataConsumerPutBytesCallback _Nullable putBytes;
    CGDataConsumerReleaseInfoCallback _Nullable releaseConsumer;
};
typedef struct CGDataConsumerCallbacks CGDataConsumerCallbacks;



extern "C" __attribute__((visibility("default"))) CFTypeID CGDataConsumerGetTypeID(void)
    __attribute__((availability(macos,introduced=10.2))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGDataConsumerRef _Nullable CGDataConsumerCreate(
    void * _Nullable info, const CGDataConsumerCallbacks * _Nullable cbks)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataConsumerRef _Nullable CGDataConsumerCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataConsumerRef _Nullable CGDataConsumerCreateWithCFData(
    CFMutableDataRef _Nullable data)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGDataConsumerRef _Nullable CGDataConsumerRetain(
    CGDataConsumerRef _Nullable consumer)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGDataConsumerRelease(_Nullable CGDataConsumerRef consumer)
    __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end

typedef int32_t CGError; enum {
  kCGErrorSuccess = 0,
  kCGErrorFailure = 1000,
  kCGErrorIllegalArgument = 1001,
  kCGErrorInvalidConnection = 1002,
  kCGErrorInvalidContext = 1003,
  kCGErrorCannotComplete = 1004,
  kCGErrorNotImplemented = 1006,
  kCGErrorRangeCheck = 1007,
  kCGErrorTypeCheck = 1008,
  kCGErrorInvalidOperation = 1010,
  kCGErrorNoneAvailable = 1011,
};





typedef struct __attribute__((objc_bridge(id))) CGLayer *CGLayerRef;






#pragma clang assume_nonnull begin






extern "C" __attribute__((visibility("default"))) CGLayerRef _Nullable CGLayerCreateWithContext(
    CGContextRef _Nullable context,
    CGSize size, CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGLayerRef _Nullable CGLayerRetain(CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGLayerRelease(CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGSize CGLayerGetSize(CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGLayerGetContext(CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextDrawLayerInRect(CGContextRef _Nullable context,
    CGRect rect, CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) void CGContextDrawLayerAtPoint(CGContextRef _Nullable context,
    CGPoint point, CGLayerRef _Nullable layer)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CFTypeID CGLayerGetTypeID(void)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end








typedef struct CGPDFContentStream *CGPDFContentStreamRef;





#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) CGPDFContentStreamRef CGPDFContentStreamCreateWithPage(
  CGPDFPageRef page) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFContentStreamRef CGPDFContentStreamCreateWithStream(
  CGPDFStreamRef stream, CGPDFDictionaryRef streamResources,
  CGPDFContentStreamRef _Nullable parent)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFContentStreamRef CGPDFContentStreamRetain(
  CGPDFContentStreamRef cs) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFContentStreamRelease(CGPDFContentStreamRef cs)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CFArrayRef _Nullable CGPDFContentStreamGetStreams(CGPDFContentStreamRef cs)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) CGPDFObjectRef _Nullable CGPDFContentStreamGetResource(
  CGPDFContentStreamRef cs, const char *category, const char *name)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGPDFContextCreate(CGDataConsumerRef _Nullable consumer,
  const CGRect *_Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) CGContextRef _Nullable CGPDFContextCreateWithURL(CFURLRef _Nullable url,
  const CGRect * _Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) void CGPDFContextClose(CGContextRef _Nullable context)
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFContextBeginPage(CGContextRef _Nullable context,
  CFDictionaryRef _Nullable pageInfo)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFContextEndPage(CGContextRef _Nullable context)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) void CGPDFContextAddDocumentMetadata(CGContextRef _Nullable context,
  CFDataRef _Nullable metadata) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) void CGPDFContextSetURLForRect(CGContextRef _Nullable context, CFURLRef url,
  CGRect rect) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPDFContextAddDestinationAtPoint(CGContextRef _Nullable context,
  CFStringRef name, CGPoint point)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) void CGPDFContextSetDestinationForRect(CGContextRef _Nullable context,
  CFStringRef name, CGRect rect)
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextMediaBox
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextCropBox
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextBleedBox
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextTrimBox
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextArtBox
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextTitle
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextAuthor
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextSubject
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextKeywords
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextCreator
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextOwnerPassword
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextUserPassword
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextEncryptionKeyLength
  __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextAllowsPrinting
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextAllowsCopying
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextOutputIntent
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXOutputIntentSubtype
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXOutputConditionIdentifier
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXOutputCondition
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXRegistryName
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXInfo
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFXDestinationOutputProfile
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextOutputIntents
  __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGPDFContextAccessPermissions
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFContextSetOutline(CGContextRef context, _Nullable CFDictionaryRef outline)
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
typedef int32_t CGPDFTagType; enum {


    CGPDFTagTypeDocument = 100,
    CGPDFTagTypePart,
    CGPDFTagTypeArt,
    CGPDFTagTypeSection,
    CGPDFTagTypeDiv,
    CGPDFTagTypeBlockQuote,
    CGPDFTagTypeCaption,
    CGPDFTagTypeTOC,
    CGPDFTagTypeTOCI,
    CGPDFTagTypeIndex,
    CGPDFTagTypeNonStructure,
    CGPDFTagTypePrivate,




    CGPDFTagTypeParagraph = 200,
    CGPDFTagTypeHeader,
    CGPDFTagTypeHeader1,
    CGPDFTagTypeHeader2,
    CGPDFTagTypeHeader3,
    CGPDFTagTypeHeader4,
    CGPDFTagTypeHeader5,
    CGPDFTagTypeHeader6,


    CGPDFTagTypeList = 300,
    CGPDFTagTypeListItem,
    CGPDFTagTypeLabel,
    CGPDFTagTypeListBody,


    CGPDFTagTypeTable = 400,
    CGPDFTagTypeTableRow,
    CGPDFTagTypeTableHeaderCell,
    CGPDFTagTypeTableDataCell,
    CGPDFTagTypeTableHeader,
    CGPDFTagTypeTableBody,
    CGPDFTagTypeTableFooter,


    CGPDFTagTypeSpan = 500,
    CGPDFTagTypeQuote,
    CGPDFTagTypeNote,
    CGPDFTagTypeReference,
    CGPDFTagTypeBibliography,
    CGPDFTagTypeCode,
    CGPDFTagTypeLink,
    CGPDFTagTypeAnnotation,


    CGPDFTagTypeRuby = 600,
    CGPDFTagTypeRubyBaseText,
    CGPDFTagTypeRubyAnnotationText,
    CGPDFTagTypeRubyPunctuation,
    CGPDFTagTypeWarichu,
    CGPDFTagTypeWarichuText,
    CGPDFTagTypeWarichuPunctiation,


    CGPDFTagTypeFigure = 700,
    CGPDFTagTypeFormula,
    CGPDFTagTypeForm,
} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) const char* _Nullable CGPDFTagTypeGetName(CGPDFTagType tagType) __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));





typedef CFStringRef CGPDFTagProperty __attribute__((swift_wrapper(enum)));






extern "C" __attribute__((visibility("default"))) const CGPDFTagProperty _Nonnull kCGPDFTagPropertyActualText
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility("default"))) const CGPDFTagProperty _Nonnull kCGPDFTagPropertyAlternativeText
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility("default"))) const CGPDFTagProperty _Nonnull kCGPDFTagPropertyTitleText
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));





extern "C" __attribute__((visibility("default"))) const CGPDFTagProperty _Nonnull kCGPDFTagPropertyLanguageText
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) void CGPDFContextBeginTag(CGContextRef _Nonnull context, CGPDFTagType tagType, CFDictionaryRef _Nullable tagProperties)
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFContextEndTag(CGContextRef _Nonnull context)
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
#pragma clang assume_nonnull end



typedef struct CGPDFOperatorTable *CGPDFOperatorTableRef;


typedef struct CGPDFScanner *CGPDFScannerRef;






#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility("default"))) CGPDFScannerRef CGPDFScannerCreate(
    CGPDFContentStreamRef cs,
    CGPDFOperatorTableRef _Nullable table, void * _Nullable info)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFScannerRef _Nullable CGPDFScannerRetain(
    CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFScannerRelease(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFScannerScan(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFContentStreamRef CGPDFScannerGetContentStream(
    CGPDFScannerRef scanner)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopObject(CGPDFScannerRef scanner,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopBoolean(CGPDFScannerRef scanner,
    CGPDFBoolean * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopInteger(CGPDFScannerRef scanner,
    CGPDFInteger * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopNumber(CGPDFScannerRef scanner,
    CGPDFReal * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopName(CGPDFScannerRef scanner,
    const char * _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopString(CGPDFScannerRef scanner,
    CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopArray(CGPDFScannerRef scanner,
    CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));





extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopDictionary(CGPDFScannerRef scanner,
    CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));




extern "C" __attribute__((visibility("default"))) bool CGPDFScannerPopStream(CGPDFScannerRef scanner,
    CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef void (*CGPDFOperatorCallback)(CGPDFScannerRef scanner,
                                      void * _Nullable info);



extern "C" __attribute__((visibility("default"))) CGPDFOperatorTableRef _Nullable CGPDFOperatorTableCreate(void)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) CGPDFOperatorTableRef _Nullable CGPDFOperatorTableRetain(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFOperatorTableRelease(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));



extern "C" __attribute__((visibility("default"))) void CGPDFOperatorTableSetCallback(
    CGPDFOperatorTableRef _Nullable table,
    const char * _Nullable name, CGPDFOperatorCallback _Nullable callback)
    __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin







typedef struct __attribute__((objc_boxable)) UIEdgeInsets {
    CGFloat top, left, bottom, right;
} UIEdgeInsets;
typedef struct __attribute__((objc_boxable)) NSDirectionalEdgeInsets {
    CGFloat top, leading, bottom, trailing;
} NSDirectionalEdgeInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));



typedef struct __attribute__((objc_boxable)) UIOffset {
    CGFloat horizontal, vertical;
} UIOffset;

typedef NSUInteger UIRectEdge; enum {
    UIRectEdgeNone = 0,
    UIRectEdgeTop = 1 << 0,
    UIRectEdgeLeft = 1 << 1,
    UIRectEdgeBottom = 1 << 2,
    UIRectEdgeRight = 1 << 3,
    UIRectEdgeAll = UIRectEdgeTop | UIRectEdgeLeft | UIRectEdgeBottom | UIRectEdgeRight
} __attribute__((availability(ios,introduced=7.0)));

typedef NSUInteger UIRectCorner; enum {
    UIRectCornerTopLeft = 1 << 0,
    UIRectCornerTopRight = 1 << 1,
    UIRectCornerBottomLeft = 1 << 2,
    UIRectCornerBottomRight = 1 << 3,
    UIRectCornerAllCorners = ~0UL
};
typedef NSUInteger NSDirectionalRectEdge; enum {
    NSDirectionalRectEdgeNone = 0,
    NSDirectionalRectEdgeTop = 1 << 0,
    NSDirectionalRectEdgeLeading = 1 << 1,
    NSDirectionalRectEdgeBottom = 1 << 2,
    NSDirectionalRectEdgeTrailing = 1 << 3,
    NSDirectionalRectEdgeAll = NSDirectionalRectEdgeTop | NSDirectionalRectEdgeLeading | NSDirectionalRectEdgeBottom | NSDirectionalRectEdgeTrailing
} __attribute__((availability(ios,introduced=13.0)));


typedef NSUInteger UIDirectionalRectEdge; enum {
    UIDirectionalRectEdgeNone = 0,
    UIDirectionalRectEdgeTop = 1 << 0,
    UIDirectionalRectEdgeLeading = 1 << 1,
    UIDirectionalRectEdgeBottom = 1 << 2,
    UIDirectionalRectEdgeTrailing = 1 << 3,
    UIDirectionalRectEdgeAll = UIDirectionalRectEdgeTop | UIDirectionalRectEdgeLeading | UIDirectionalRectEdgeBottom | UIDirectionalRectEdgeTrailing
} __attribute__((availability(ios,introduced=13.0,deprecated=13.0,replacement="NSDirectionalRectEdge"))) __attribute__((availability(watchos,introduced=6.0,deprecated=6.0,replacement="NSDirectionalRectEdge"))) __attribute__((availability(tvos,introduced=13.0,deprecated=13.0,replacement="NSDirectionalRectEdge")));

typedef NSInteger NSRectAlignment; enum {
    NSRectAlignmentNone = 0,
    NSRectAlignmentTop,
    NSRectAlignmentTopLeading,
    NSRectAlignmentLeading,
    NSRectAlignmentBottomLeading,
    NSRectAlignmentBottom,
    NSRectAlignmentBottomTrailing,
    NSRectAlignmentTrailing,
    NSRectAlignmentTopTrailing,
} __attribute__((availability(ios,introduced=13.0)));



static inline UIEdgeInsets UIEdgeInsetsMake(CGFloat top, CGFloat left, CGFloat bottom, CGFloat right) {
    UIEdgeInsets insets = {top, left, bottom, right};
    return insets;
}


static inline NSDirectionalEdgeInsets NSDirectionalEdgeInsetsMake(CGFloat top, CGFloat leading, CGFloat bottom, CGFloat trailing) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
{
    NSDirectionalEdgeInsets insets = {top, leading, bottom, trailing};
    return insets;
}


static inline CGRect UIEdgeInsetsInsetRect(CGRect rect, UIEdgeInsets insets) {
    rect.origin.x += insets.left;
    rect.origin.y += insets.top;
    rect.size.width -= (insets.left + insets.right);
    rect.size.height -= (insets.top + insets.bottom);
    return rect;
}

static inline UIOffset UIOffsetMake(CGFloat horizontal, CGFloat vertical) {
    UIOffset offset = {horizontal, vertical};
    return offset;
}

static inline BOOL UIEdgeInsetsEqualToEdgeInsets(UIEdgeInsets insets1, UIEdgeInsets insets2) {
    return insets1.left == insets2.left && insets1.top == insets2.top && insets1.right == insets2.right && insets1.bottom == insets2.bottom;
}


static inline BOOL NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets(NSDirectionalEdgeInsets insets1, NSDirectionalEdgeInsets insets2) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
{
    return insets1.leading == insets2.leading && insets1.top == insets2.top && insets1.trailing == insets2.trailing && insets1.bottom == insets2.bottom;
}


static inline BOOL UIOffsetEqualToOffset(UIOffset offset1, UIOffset offset2) {
    return offset1.horizontal == offset2.horizontal && offset1.vertical == offset2.vertical;
}

extern "C" __attribute__((visibility ("default"))) const UIEdgeInsets UIEdgeInsetsZero;

extern "C" __attribute__((visibility ("default"))) const NSDirectionalEdgeInsets NSDirectionalEdgeInsetsZero __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern "C" __attribute__((visibility ("default"))) const UIOffset UIOffsetZero;

extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGPoint(CGPoint point);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGVector(CGVector vector);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGSize(CGSize size);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGRect(CGRect rect);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGAffineTransform(CGAffineTransform transform);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromUIEdgeInsets(UIEdgeInsets insets);

extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromDirectionalEdgeInsets(NSDirectionalEdgeInsets insets) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromUIOffset(UIOffset offset);

extern "C" __attribute__((visibility ("default"))) CGPoint CGPointFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGVector CGVectorFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGSize CGSizeFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGRect CGRectFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGAffineTransform CGAffineTransformFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) UIEdgeInsets UIEdgeInsetsFromString(NSString *string);

extern "C" __attribute__((visibility ("default"))) NSDirectionalEdgeInsets NSDirectionalEdgeInsetsFromString(NSString *string) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern "C" __attribute__((visibility ("default"))) UIOffset UIOffsetFromString(NSString *string);

// @interface NSValue (NSValueUIGeometryExtensions)

// + (NSValue *)valueWithCGPoint:(CGPoint)point;
// + (NSValue *)valueWithCGVector:(CGVector)vector;
// + (NSValue *)valueWithCGSize:(CGSize)size;
// + (NSValue *)valueWithCGRect:(CGRect)rect;
// + (NSValue *)valueWithCGAffineTransform:(CGAffineTransform)transform;
// + (NSValue *)valueWithUIEdgeInsets:(UIEdgeInsets)insets;

// + (NSValue *)valueWithDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

// + (NSValue *)valueWithUIOffset:(UIOffset)insets __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic, readonly) CGPoint CGPointValue;
// @property(nonatomic, readonly) CGVector CGVectorValue;
// @property(nonatomic, readonly) CGSize CGSizeValue;
// @property(nonatomic, readonly) CGRect CGRectValue;
// @property(nonatomic, readonly) CGAffineTransform CGAffineTransformValue;
// @property(nonatomic, readonly) UIEdgeInsets UIEdgeInsetsValue;

// @property(nonatomic, readonly) NSDirectionalEdgeInsets directionalEdgeInsetsValue __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

// @property(nonatomic, readonly) UIOffset UIOffsetValue __attribute__((availability(ios,introduced=5.0)));

/* @end */


// @interface NSCoder (UIGeometryKeyedCoding)

// - (void)encodeCGPoint:(CGPoint)point forKey:(NSString *)key;
// - (void)encodeCGVector:(CGVector)vector forKey:(NSString *)key;
// - (void)encodeCGSize:(CGSize)size forKey:(NSString *)key;
// - (void)encodeCGRect:(CGRect)rect forKey:(NSString *)key;
// - (void)encodeCGAffineTransform:(CGAffineTransform)transform forKey:(NSString *)key;
// - (void)encodeUIEdgeInsets:(UIEdgeInsets)insets forKey:(NSString *)key;

// - (void)encodeDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets forKey:(NSString *)key __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

// - (void)encodeUIOffset:(UIOffset)offset forKey:(NSString *)key __attribute__((availability(ios,introduced=5.0)));

// - (CGPoint)decodeCGPointForKey:(NSString *)key;
// - (CGVector)decodeCGVectorForKey:(NSString *)key;
// - (CGSize)decodeCGSizeForKey:(NSString *)key;
// - (CGRect)decodeCGRectForKey:(NSString *)key;
// - (CGAffineTransform)decodeCGAffineTransformForKey:(NSString *)key;
// - (UIEdgeInsets)decodeUIEdgeInsetsForKey:(NSString *)key;

// - (NSDirectionalEdgeInsets)decodeDirectionalEdgeInsetsForKey:(NSString *)key __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

// - (UIOffset)decodeUIOffsetForKey:(NSString *)key __attribute__((availability(ios,introduced=5.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

struct UIBezierPath_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)bezierPath;
// + (instancetype)bezierPathWithRect:(CGRect)rect;
// + (instancetype)bezierPathWithOvalInRect:(CGRect)rect;
// + (instancetype)bezierPathWithRoundedRect:(CGRect)rect cornerRadius:(CGFloat)cornerRadius;
// + (instancetype)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;
// + (instancetype)bezierPathWithArcCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise;
// + (instancetype)bezierPathWithCGPath:(CGPathRef)CGPath;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));



// @property(nonatomic) CGPathRef CGPath;
// - (CGPathRef)CGPath __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));



// - (void)moveToPoint:(CGPoint)point;
// - (void)addLineToPoint:(CGPoint)point;
// - (void)addCurveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
// - (void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint;
// - (void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise __attribute__((availability(ios,introduced=4.0)));
// - (void)closePath;

// - (void)removeAllPoints;



// - (void)appendPath:(UIBezierPath *)bezierPath;



// - (UIBezierPath *)bezierPathByReversingPath __attribute__((availability(ios,introduced=6.0)));



// - (void)applyTransform:(CGAffineTransform)transform;



// @property(readonly,getter=isEmpty) BOOL empty;
// @property(nonatomic,readonly) CGRect bounds;
// @property(nonatomic,readonly) CGPoint currentPoint;
// - (BOOL)containsPoint:(CGPoint)point;



// @property(nonatomic) CGFloat lineWidth;
// @property(nonatomic) CGLineCap lineCapStyle;
// @property(nonatomic) CGLineJoin lineJoinStyle;
// @property(nonatomic) CGFloat miterLimit;
// @property(nonatomic) CGFloat flatness;
// @property(nonatomic) BOOL usesEvenOddFillRule;

// - (void)setLineDash:(nullable const CGFloat *)pattern count:(NSInteger)count phase:(CGFloat)phase;
// - (void)getLineDash:(nullable CGFloat *)pattern count:(nullable NSInteger *)count phase:(nullable CGFloat *)phase;



// - (void)fill;
// - (void)stroke;


// - (void)fillWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
// - (void)strokeWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

// - (void)addClip;

/* @end */

#pragma clang assume_nonnull end

















extern "C" {




extern __attribute__((visibility("default"))) CFTimeInterval CACurrentMediaTime (void)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)));

}
struct CATransform3D
{
  CGFloat m11, m12, m13, m14;
  CGFloat m21, m22, m23, m24;
  CGFloat m31, m32, m33, m34;
  CGFloat m41, m42, m43, m44;
};

typedef struct __attribute__((objc_boxable)) CATransform3D CATransform3D;

extern "C" {



extern __attribute__((visibility("default"))) const CATransform3D CATransform3DIdentity
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) bool CATransform3DIsIdentity (CATransform3D t)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) bool CATransform3DEqualToTransform (CATransform3D a,
    CATransform3D b)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeTranslation (CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeScale (CGFloat sx, CGFloat sy,
    CGFloat sz)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeRotation (CGFloat angle, CGFloat x,
    CGFloat y, CGFloat z)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DTranslate (CATransform3D t, CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DScale (CATransform3D t, CGFloat sx,
    CGFloat sy, CGFloat sz)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DRotate (CATransform3D t, CGFloat angle,
    CGFloat x, CGFloat y, CGFloat z)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DConcat (CATransform3D a, CATransform3D b)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DInvert (CATransform3D t)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeAffineTransform (CGAffineTransform m)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) bool CATransform3DIsAffine (CATransform3D t)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CGAffineTransform CATransform3DGetAffineTransform (CATransform3D t)
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}





#pragma clang assume_nonnull begin

// @interface NSValue (CATransform3DAdditions)

// + (NSValue *)valueWithCATransform3D:(CATransform3D)t;

// @property(readonly) CATransform3D CATransform3DValue;

/* @end */

#pragma clang assume_nonnull end













// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


typedef NSString * CAMediaTimingFillMode __attribute__((swift_wrapper(enum)));

#pragma clang assume_nonnull begin

// @protocol CAMediaTiming




// @property CFTimeInterval beginTime;



// @property CFTimeInterval duration;





// @property float speed;






// @property CFTimeInterval timeOffset;



// @property float repeatCount;



// @property CFTimeInterval repeatDuration;




// @property BOOL autoreverses;







// @property(copy) CAMediaTimingFillMode fillMode;

/* @end */




extern __attribute__((visibility("default"))) CAMediaTimingFillMode const kCAFillModeForwards
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFillMode const kCAFillModeBackwards
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFillMode const kCAFillModeBoth
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFillMode const kCAFillModeRemoved
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end






// @class NSEnumerator;
#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

#ifndef _REWRITER_typedef_CAAnimation
#define _REWRITER_typedef_CAAnimation
typedef struct objc_object CAAnimation;
typedef struct {} _objc_exc_CAAnimation;
#endif

#ifndef _REWRITER_typedef_CALayerArray
#define _REWRITER_typedef_CALayerArray
typedef struct objc_object CALayerArray;
typedef struct {} _objc_exc_CALayerArray;
#endif

// @protocol CAAction, CALayerDelegate;

#pragma clang assume_nonnull begin

typedef NSString * CALayerContentsGravity __attribute__((swift_wrapper(enum)));
typedef NSString * CALayerContentsFormat __attribute__((swift_wrapper(enum)));
typedef NSString * CALayerContentsFilter __attribute__((swift_wrapper(enum)));
typedef NSString * CALayerCornerCurve __attribute__((swift_wrapper(enum)));



typedef unsigned int CAEdgeAntialiasingMask; enum
{
  kCALayerLeftEdge = 1U << 0,
  kCALayerRightEdge = 1U << 1,
  kCALayerBottomEdge = 1U << 2,
  kCALayerTopEdge = 1U << 3,
};



typedef NSUInteger CACornerMask; enum
{
  kCALayerMinXMinYCorner = 1U << 0,
  kCALayerMaxXMinYCorner = 1U << 1,
  kCALayerMinXMaxYCorner = 1U << 2,
  kCALayerMaxXMaxYCorner = 1U << 3,
};



__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CALayer
#define _REWRITER_typedef_CALayer
typedef struct objc_object CALayer;
typedef struct {} _objc_exc_CALayer;
#endif

	struct _CALayerIvars {
	int32_t refcount;
	uint32_t magic;
	void * _Nonnull layer;
	} ;
struct CALayer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _CALayerIvars _attr;
};




// + (instancetype)layer;



// - (instancetype)init;







// - (instancetype)initWithLayer:(id)layer;
// - (nullable instancetype)presentationLayer;







// - (instancetype)modelLayer;
// + (nullable id)defaultValueForKey:(NSString *)key;
// + (BOOL)needsDisplayForKey:(NSString *)key;






// - (BOOL)shouldArchiveValueForKey:(NSString *)key;





// @property CGRect bounds;




// @property CGPoint position;




// @property CGFloat zPosition;






// @property CGPoint anchorPoint;




// @property CGFloat anchorPointZ;




// @property CATransform3D transform;




// - (CGAffineTransform)affineTransform;
// - (void)setAffineTransform:(CGAffineTransform)m;






// @property CGRect frame;




// @property(getter=isHidden) BOOL hidden;




// @property(getter=isDoubleSided) BOOL doubleSided;







// @property(getter=isGeometryFlipped) BOOL geometryFlipped;
// - (BOOL)contentsAreFlipped;




// @property(nullable, readonly) CALayer *superlayer;




// - (void)removeFromSuperlayer;







// @property(nullable, copy) NSArray<__kindof CALayer *> *sublayers;




// - (void)addSublayer:(CALayer *)layer;





// - (void)insertSublayer:(CALayer *)layer atIndex:(unsigned)idx;





// - (void)insertSublayer:(CALayer *)layer below:(nullable CALayer *)sibling;
// - (void)insertSublayer:(CALayer *)layer above:(nullable CALayer *)sibling;





// - (void)replaceSublayer:(CALayer *)oldLayer with:(CALayer *)newLayer;






// @property CATransform3D sublayerTransform;
// @property(nullable, strong) __kindof CALayer *mask;







// @property BOOL masksToBounds;



// - (CGPoint)convertPoint:(CGPoint)p fromLayer:(nullable CALayer *)l;
// - (CGPoint)convertPoint:(CGPoint)p toLayer:(nullable CALayer *)l;
// - (CGRect)convertRect:(CGRect)r fromLayer:(nullable CALayer *)l;
// - (CGRect)convertRect:(CGRect)r toLayer:(nullable CALayer *)l;

// - (CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(nullable CALayer *)l;
// - (CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(nullable CALayer *)l;
// - (nullable __kindof CALayer *)hitTest:(CGPoint)p;



// - (BOOL)containsPoint:(CGPoint)p;
// @property(nullable, strong) id contents;
// @property CGRect contentsRect;
// @property(copy) CALayerContentsGravity contentsGravity;
// @property CGFloat contentsScale
  __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property CGRect contentsCenter;





// @property(copy) CALayerContentsFormat contentsFormat
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));







// @property(copy) CALayerContentsFilter minificationFilter;
// @property(copy) CALayerContentsFilter magnificationFilter;





// @property float minificationFilterBias;





// @property(getter=isOpaque) BOOL opaque;





// - (void)display;





// - (void)setNeedsDisplay;
// - (void)setNeedsDisplayInRect:(CGRect)r;



// - (BOOL)needsDisplay;



// - (void)displayIfNeeded;




// @property BOOL needsDisplayOnBoundsChange;
// @property BOOL drawsAsynchronously
  __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)drawInContext:(CGContextRef)ctx;
// - (void)renderInContext:(CGContextRef)ctx;
// @property CAEdgeAntialiasingMask edgeAntialiasingMask;
// @property BOOL allowsEdgeAntialiasing
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property(nullable) CGColorRef backgroundColor;





// @property CGFloat cornerRadius;




// @property CACornerMask maskedCorners
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property(copy) CALayerCornerCurve cornerCurve
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




#if 0
+ (CGFloat)cornerCurveExpansionFactor:(CALayerCornerCurve)curve
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
#endif







// @property CGFloat borderWidth;




// @property(nullable) CGColorRef borderColor;





// @property float opacity;
// @property BOOL allowsGroupOpacity
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property(nullable, strong) id compositingFilter;




// @property(nullable, copy) NSArray *filters;




// @property(nullable, copy) NSArray *backgroundFilters;
// @property BOOL shouldRasterize;





// @property CGFloat rasterizationScale;






// @property(nullable) CGColorRef shadowColor;




// @property float shadowOpacity;



// @property CGSize shadowOffset;



// @property CGFloat shadowRadius;
// @property(nullable) CGPathRef shadowPath;
// - (CGSize)preferredFrameSize;
// - (void)setNeedsLayout;



// - (BOOL)needsLayout;




// - (void)layoutIfNeeded;







// - (void)layoutSublayers;
// + (nullable id<CAAction>)defaultActionForKey:(NSString *)event;
// - (nullable id<CAAction>)actionForKey:(NSString *)event;




// @property(nullable, copy) NSDictionary<NSString *, id<CAAction>> *actions;
// - (void)addAnimation:(CAAnimation *)anim forKey:(nullable NSString *)key;



// - (void)removeAllAnimations;



// - (void)removeAnimationForKey:(NSString *)key;





// - (nullable NSArray<NSString *> *)animationKeys;





// - (nullable __kindof CAAnimation *)animationForKey:(NSString *)key;






// @property(nullable, copy) NSString *name;





// @property(nullable, weak) id <CALayerDelegate> delegate;
// @property(nullable, copy) NSDictionary *style;

/* @end */




// @protocol CAAction






#if 0
- (void)runActionForKey:(NSString *)event object:(id)anObject
    arguments:(nullable NSDictionary *)dict;
#endif


/* @end */




// @interface NSNull (CAActionAdditions) <CAAction>

/* @end */




// @protocol CALayerDelegate <NSObject>
/* @optional */





// - (void)displayLayer:(CALayer *)layer;



// - (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx;






#if 0
- (void)layerWillDraw:(CALayer *)layer
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
#endif






// - (void)layoutSublayersOfLayer:(CALayer *)layer;
// - (nullable id<CAAction>)actionForLayer:(CALayer *)layer forKey:(NSString *)event;

/* @end */




extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityCenter
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityTop
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityBottom
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityLeft
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityRight
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityTopLeft
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityTopRight
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityBottomLeft
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityBottomRight
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityResize
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityResizeAspect
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsGravity const kCAGravityResizeAspectFill
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CALayerContentsFormat const kCAContentsFormatRGBA8Uint
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern __attribute__((visibility("default"))) CALayerContentsFormat const kCAContentsFormatRGBA16Float
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern __attribute__((visibility("default"))) CALayerContentsFormat const kCAContentsFormatGray8Uint
  __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



extern __attribute__((visibility("default"))) CALayerContentsFilter const kCAFilterNearest
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CALayerContentsFilter const kCAFilterLinear
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CALayerContentsFilter const kCAFilterTrilinear
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CALayerCornerCurve const kCACornerCurveCircular
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));
extern __attribute__((visibility("default"))) CALayerCornerCurve const kCACornerCurveContinuous
    __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));



extern __attribute__((visibility("default"))) NSString * const kCAOnOrderIn
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) NSString * const kCAOnOrderOut
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) NSString * const kCATransition
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif

#ifndef _REWRITER_typedef_CAValueFunction
#define _REWRITER_typedef_CAValueFunction
typedef struct objc_object CAValueFunction;
typedef struct {} _objc_exc_CAValueFunction;
#endif

// @protocol CAAnimationDelegate;

#pragma clang assume_nonnull begin

typedef NSString * CAAnimationCalculationMode __attribute__((swift_wrapper(enum)));
typedef NSString * CAAnimationRotationMode __attribute__((swift_wrapper(enum)));
typedef NSString * CATransitionType __attribute__((swift_wrapper(enum)));
typedef NSString * CATransitionSubtype __attribute__((swift_wrapper(enum)));



__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAAnimation
#define _REWRITER_typedef_CAAnimation
typedef struct objc_object CAAnimation;
typedef struct {} _objc_exc_CAAnimation;
#endif

struct CAAnimation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_attr;
	uint32_t _flags;
};




// + (instancetype)animation;




// + (nullable id)defaultValueForKey:(NSString *)key;
// - (BOOL)shouldArchiveValueForKey:(NSString *)key;




// @property(nullable, strong) CAMediaTimingFunction *timingFunction;





// @property(nullable, strong) id <CAAnimationDelegate> delegate;




// @property(getter=isRemovedOnCompletion) BOOL removedOnCompletion;

/* @end */




// @protocol CAAnimationDelegate <NSObject>
/* @optional */



// - (void)animationDidStart:(CAAnimation *)anim;






// - (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag;

/* @end */





__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAPropertyAnimation
#define _REWRITER_typedef_CAPropertyAnimation
typedef struct objc_object CAPropertyAnimation;
typedef struct {} _objc_exc_CAPropertyAnimation;
#endif

struct CAPropertyAnimation_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};





// + (instancetype)animationWithKeyPath:(nullable NSString *)path;



// @property(nullable, copy) NSString *keyPath;







// @property(getter=isAdditive) BOOL additive;







// @property(getter=isCumulative) BOOL cumulative;





// @property(nullable, strong) CAValueFunction *valueFunction;

/* @end */





__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CABasicAnimation
#define _REWRITER_typedef_CABasicAnimation
typedef struct objc_object CABasicAnimation;
typedef struct {} _objc_exc_CABasicAnimation;
#endif

struct CABasicAnimation_IMPL {
	struct CAPropertyAnimation_IMPL CAPropertyAnimation_IVARS;
};

// @property(nullable, strong) id fromValue;
// @property(nullable, strong) id toValue;
// @property(nullable, strong) id byValue;

/* @end */





__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAKeyframeAnimation
#define _REWRITER_typedef_CAKeyframeAnimation
typedef struct objc_object CAKeyframeAnimation;
typedef struct {} _objc_exc_CAKeyframeAnimation;
#endif

struct CAKeyframeAnimation_IMPL {
	struct CAPropertyAnimation_IMPL CAPropertyAnimation_IVARS;
};





// @property(nullable, copy) NSArray *values;
// @property(nullable) CGPathRef path;







// @property(nullable, copy) NSArray<NSNumber *> *keyTimes;






// @property(nullable, copy) NSArray<CAMediaTimingFunction *> *timingFunctions;






// @property(copy) CAAnimationCalculationMode calculationMode;
// @property(nullable, copy) NSArray<NSNumber *> *tensionValues;
// @property(nullable, copy) NSArray<NSNumber *> *continuityValues;
// @property(nullable, copy) NSArray<NSNumber *> *biasValues;







// @property(nullable, copy) CAAnimationRotationMode rotationMode;

/* @end */




extern __attribute__((visibility("default"))) CAAnimationCalculationMode const kCAAnimationLinear
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAAnimationCalculationMode const kCAAnimationDiscrete
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAAnimationCalculationMode const kCAAnimationPaced
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAAnimationCalculationMode const kCAAnimationCubic
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAAnimationCalculationMode const kCAAnimationCubicPaced
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CAAnimationRotationMode const kCAAnimationRotateAuto
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAAnimationRotationMode const kCAAnimationRotateAutoReverse
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CASpringAnimation
#define _REWRITER_typedef_CASpringAnimation
typedef struct objc_object CASpringAnimation;
typedef struct {} _objc_exc_CASpringAnimation;
#endif

struct CASpringAnimation_IMPL {
	struct CABasicAnimation_IMPL CABasicAnimation_IVARS;
};





// @property CGFloat mass;




// @property CGFloat stiffness;




// @property CGFloat damping;







// @property CGFloat initialVelocity;





// @property(readonly) CFTimeInterval settlingDuration;

/* @end */




__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CATransition
#define _REWRITER_typedef_CATransition
typedef struct objc_object CATransition;
typedef struct {} _objc_exc_CATransition;
#endif

struct CATransition_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};





// @property(copy) CATransitionType type;






// @property(nullable, copy) CATransitionSubtype subtype;






// @property float startProgress;
// @property float endProgress;

/* @end */




extern __attribute__((visibility("default"))) CATransitionType const kCATransitionFade
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionType const kCATransitionMoveIn
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionType const kCATransitionPush
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionType const kCATransitionReveal
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CATransitionSubtype const kCATransitionFromRight
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionSubtype const kCATransitionFromLeft
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionSubtype const kCATransitionFromTop
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATransitionSubtype const kCATransitionFromBottom
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAAnimationGroup
#define _REWRITER_typedef_CAAnimationGroup
typedef struct objc_object CAAnimationGroup;
typedef struct {} _objc_exc_CAAnimationGroup;
#endif

struct CAAnimationGroup_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};






// @property(nullable, copy) NSArray<CAAnimation *> *animations;

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif


#pragma clang assume_nonnull begin



__attribute__((availability(ios,introduced=3.1))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)))

#ifndef _REWRITER_typedef_CADisplayLink
#define _REWRITER_typedef_CADisplayLink
typedef struct objc_object CADisplayLink;
typedef struct {} _objc_exc_CADisplayLink;
#endif

struct CADisplayLink_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};






// + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel;






// - (void)addToRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;





// - (void)removeFromRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;




// - (void)invalidate;






// @property(readonly, nonatomic) CFTimeInterval timestamp;
// @property(readonly, nonatomic) CFTimeInterval duration;



// @property(readonly, nonatomic) CFTimeInterval targetTimestamp
    __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




// @property(getter=isPaused, nonatomic) BOOL paused;
// @property(nonatomic) NSInteger frameInterval
  __attribute__((availability(ios,introduced=3.1,deprecated=10.0,message="preferredFramesPerSecond"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="preferredFramesPerSecond"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="preferredFramesPerSecond")));







// @property(nonatomic) NSInteger preferredFramesPerSecond
    __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */

#pragma clang assume_nonnull end













typedef NSUInteger EAGLRenderingAPI; enum
{
 kEAGLRenderingAPIOpenGLES1 = 1,
 kEAGLRenderingAPIOpenGLES2 = 2,
 kEAGLRenderingAPIOpenGLES3 = 3,
};

#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) void EAGLGetVersion(unsigned int* major, unsigned int* minor) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")));





__attribute__((visibility("default")))

#ifndef _REWRITER_typedef_EAGLSharegroup
#define _REWRITER_typedef_EAGLSharegroup
typedef struct objc_object EAGLSharegroup;
typedef struct {} _objc_exc_EAGLSharegroup;
#endif

struct EAGLSharegroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct _EAGLSharegroupPrivate *_private;
};


// @property (nullable, copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));

/* @end */






__attribute__((visibility("default")))
__attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")))

#ifndef _REWRITER_typedef_EAGLContext
#define _REWRITER_typedef_EAGLContext
typedef struct objc_object EAGLContext;
typedef struct {} _objc_exc_EAGLContext;
#endif

struct EAGLContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct _EAGLContextPrivate *_private;
};


// - (nullable instancetype) init __attribute__((unavailable));
// - (nullable instancetype) initWithAPI:(EAGLRenderingAPI) api;
// - (nullable instancetype) initWithAPI:(EAGLRenderingAPI) api sharegroup:(EAGLSharegroup*) sharegroup __attribute__((objc_designated_initializer));

// + (BOOL) setCurrentContext:(nullable EAGLContext*) context;
// + (nullable EAGLContext*) currentContext;

// @property (readonly) EAGLRenderingAPI API;
// @property (nonnull, readonly) EAGLSharegroup* sharegroup;

// @property (nullable, copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));
// @property (getter=isMultiThreaded, nonatomic) BOOL multiThreaded __attribute__((availability(ios,introduced=7_1)));
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyRetainedBacking;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyColorFormat;




extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGBA8;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGB565;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatSRGBA8 __attribute__((availability(ios,introduced=7_0)));





// @protocol EAGLDrawable


// @property(nullable, copy) NSDictionary<NSString*, id>* drawableProperties;

/* @end */



__attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")))
// @interface EAGLContext (EAGLContextDrawableAdditions)


// - (BOOL)renderbufferStorage:(NSUInteger)target fromDrawable:(nullable id<EAGLDrawable>)drawable;


// - (BOOL)presentRenderbuffer:(NSUInteger)target;


// - (BOOL)presentRenderbuffer:(NSUInteger)target atTime:(CFTimeInterval)presentationTime;


// - (BOOL)presentRenderbuffer:(NSUInteger)target afterMinimumDuration:(CFTimeInterval)duration;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin







__attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="OpenGLES is deprecated"))) __attribute__((availability(watchos,introduced=2.0,deprecated=5.0,message="OpenGLES is deprecated"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGLES is deprecated")))




__attribute__((availability(macos,unavailable)))

#ifndef _REWRITER_typedef_CAEAGLLayer
#define _REWRITER_typedef_CAEAGLLayer
typedef struct objc_object CAEAGLLayer;
typedef struct {} _objc_exc_CAEAGLLayer;
#endif

struct CAEAGLLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct _CAEAGLNativeWindow *_win;
};







// @property BOOL presentsWithTransaction __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




/* @end */

#pragma clang assume_nonnull end















#pragma clang assume_nonnull begin
typedef NSUInteger MTLPixelFormat; enum
{
    MTLPixelFormatInvalid = 0,



    MTLPixelFormatA8Unorm = 1,

    MTLPixelFormatR8Unorm = 10,
    MTLPixelFormatR8Unorm_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 11,

    MTLPixelFormatR8Snorm = 12,
    MTLPixelFormatR8Uint = 13,
    MTLPixelFormatR8Sint = 14,



    MTLPixelFormatR16Unorm = 20,
    MTLPixelFormatR16Snorm = 22,
    MTLPixelFormatR16Uint = 23,
    MTLPixelFormatR16Sint = 24,
    MTLPixelFormatR16Float = 25,

    MTLPixelFormatRG8Unorm = 30,
    MTLPixelFormatRG8Unorm_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 31,
    MTLPixelFormatRG8Snorm = 32,
    MTLPixelFormatRG8Uint = 33,
    MTLPixelFormatRG8Sint = 34,



    MTLPixelFormatB5G6R5Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 40,
    MTLPixelFormatA1BGR5Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 41,
    MTLPixelFormatABGR4Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 42,
    MTLPixelFormatBGR5A1Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 43,



    MTLPixelFormatR32Uint = 53,
    MTLPixelFormatR32Sint = 54,
    MTLPixelFormatR32Float = 55,

    MTLPixelFormatRG16Unorm = 60,
    MTLPixelFormatRG16Snorm = 62,
    MTLPixelFormatRG16Uint = 63,
    MTLPixelFormatRG16Sint = 64,
    MTLPixelFormatRG16Float = 65,

    MTLPixelFormatRGBA8Unorm = 70,
    MTLPixelFormatRGBA8Unorm_sRGB = 71,
    MTLPixelFormatRGBA8Snorm = 72,
    MTLPixelFormatRGBA8Uint = 73,
    MTLPixelFormatRGBA8Sint = 74,

    MTLPixelFormatBGRA8Unorm = 80,
    MTLPixelFormatBGRA8Unorm_sRGB = 81,



    MTLPixelFormatRGB10A2Unorm = 90,
    MTLPixelFormatRGB10A2Uint = 91,

    MTLPixelFormatRG11B10Float = 92,
    MTLPixelFormatRGB9E5Float = 93,

    MTLPixelFormatBGR10A2Unorm __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) = 94,

    MTLPixelFormatBGR10_XR __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 554,
    MTLPixelFormatBGR10_XR_sRGB __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 555,



    MTLPixelFormatRG32Uint = 103,
    MTLPixelFormatRG32Sint = 104,
    MTLPixelFormatRG32Float = 105,

    MTLPixelFormatRGBA16Unorm = 110,
    MTLPixelFormatRGBA16Snorm = 112,
    MTLPixelFormatRGBA16Uint = 113,
    MTLPixelFormatRGBA16Sint = 114,
    MTLPixelFormatRGBA16Float = 115,

    MTLPixelFormatBGRA10_XR __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 552,
    MTLPixelFormatBGRA10_XR_sRGB __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 553,



    MTLPixelFormatRGBA32Uint = 123,
    MTLPixelFormatRGBA32Sint = 124,
    MTLPixelFormatRGBA32Float = 125,




    MTLPixelFormatBC1_RGBA __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 130,
    MTLPixelFormatBC1_RGBA_sRGB __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 131,
    MTLPixelFormatBC2_RGBA __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 132,
    MTLPixelFormatBC2_RGBA_sRGB __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 133,
    MTLPixelFormatBC3_RGBA __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 134,
    MTLPixelFormatBC3_RGBA_sRGB __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 135,


    MTLPixelFormatBC4_RUnorm __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 140,
    MTLPixelFormatBC4_RSnorm __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 141,
    MTLPixelFormatBC5_RGUnorm __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 142,
    MTLPixelFormatBC5_RGSnorm __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 143,


    MTLPixelFormatBC6H_RGBFloat __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 150,
    MTLPixelFormatBC6H_RGBUfloat __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 151,
    MTLPixelFormatBC7_RGBAUnorm __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 152,
    MTLPixelFormatBC7_RGBAUnorm_sRGB __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 153,


    MTLPixelFormatPVRTC_RGB_2BPP __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 160,
    MTLPixelFormatPVRTC_RGB_2BPP_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 161,
    MTLPixelFormatPVRTC_RGB_4BPP __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 162,
    MTLPixelFormatPVRTC_RGB_4BPP_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 163,
    MTLPixelFormatPVRTC_RGBA_2BPP __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 164,
    MTLPixelFormatPVRTC_RGBA_2BPP_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 165,
    MTLPixelFormatPVRTC_RGBA_4BPP __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 166,
    MTLPixelFormatPVRTC_RGBA_4BPP_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 167,


    MTLPixelFormatEAC_R11Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 170,
    MTLPixelFormatEAC_R11Snorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 172,
    MTLPixelFormatEAC_RG11Unorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 174,
    MTLPixelFormatEAC_RG11Snorm __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 176,
    MTLPixelFormatEAC_RGBA8 __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 178,
    MTLPixelFormatEAC_RGBA8_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 179,

    MTLPixelFormatETC2_RGB8 __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 180,
    MTLPixelFormatETC2_RGB8_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 181,
    MTLPixelFormatETC2_RGB8A1 __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 182,
    MTLPixelFormatETC2_RGB8A1_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 183,


    MTLPixelFormatASTC_4x4_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 186,
    MTLPixelFormatASTC_5x4_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 187,
    MTLPixelFormatASTC_5x5_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 188,
    MTLPixelFormatASTC_6x5_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 189,
    MTLPixelFormatASTC_6x6_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 190,
    MTLPixelFormatASTC_8x5_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 192,
    MTLPixelFormatASTC_8x6_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 193,
    MTLPixelFormatASTC_8x8_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 194,
    MTLPixelFormatASTC_10x5_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 195,
    MTLPixelFormatASTC_10x6_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 196,
    MTLPixelFormatASTC_10x8_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 197,
    MTLPixelFormatASTC_10x10_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 198,
    MTLPixelFormatASTC_12x10_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 199,
    MTLPixelFormatASTC_12x12_sRGB __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 200,

    MTLPixelFormatASTC_4x4_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 204,
    MTLPixelFormatASTC_5x4_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 205,
    MTLPixelFormatASTC_5x5_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 206,
    MTLPixelFormatASTC_6x5_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 207,
    MTLPixelFormatASTC_6x6_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 208,
    MTLPixelFormatASTC_8x5_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 210,
    MTLPixelFormatASTC_8x6_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 211,
    MTLPixelFormatASTC_8x8_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 212,
    MTLPixelFormatASTC_10x5_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 213,
    MTLPixelFormatASTC_10x6_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 214,
    MTLPixelFormatASTC_10x8_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 215,
    MTLPixelFormatASTC_10x10_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 216,
    MTLPixelFormatASTC_12x10_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 217,
    MTLPixelFormatASTC_12x12_LDR __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 218,



    MTLPixelFormatASTC_4x4_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 222,
    MTLPixelFormatASTC_5x4_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 223,
    MTLPixelFormatASTC_5x5_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 224,
    MTLPixelFormatASTC_6x5_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 225,
    MTLPixelFormatASTC_6x6_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 226,
    MTLPixelFormatASTC_8x5_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 228,
    MTLPixelFormatASTC_8x6_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 229,
    MTLPixelFormatASTC_8x8_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 230,
    MTLPixelFormatASTC_10x5_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 231,
    MTLPixelFormatASTC_10x6_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 232,
    MTLPixelFormatASTC_10x8_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 233,
    MTLPixelFormatASTC_10x10_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 234,
    MTLPixelFormatASTC_12x10_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 235,
    MTLPixelFormatASTC_12x12_HDR __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) = 236,





    MTLPixelFormatGBGR422 = 240,






    MTLPixelFormatBGRG422 = 241,



    MTLPixelFormatDepth16Unorm __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=13.0))) = 250,
    MTLPixelFormatDepth32Float = 252,



    MTLPixelFormatStencil8 = 253,



    MTLPixelFormatDepth24Unorm_Stencil8 __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 255,
    MTLPixelFormatDepth32Float_Stencil8 __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) = 260,

    MTLPixelFormatX32_Stencil8 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) = 261,
    MTLPixelFormatX24_Stencil8 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(macCatalyst,introduced=13.0))) __attribute__((availability(ios,unavailable))) = 262,

} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=8.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @protocol MTLDrawable;






typedef void (*MTLDrawablePresentedHandler)(id/*<MTLDrawable>*/);





__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=8.0)))
// @protocol MTLDrawable <NSObject>


// - (void)present;


// - (void)presentAtTime:(CFTimeInterval)presentationTime;






// - (void)presentAfterMinimumDuration:(CFTimeInterval)duration __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





// - (void)addPresentedHandler:(MTLDrawablePresentedHandler)block __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));






// @property(nonatomic, readonly) CFTimeInterval presentedTime __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));






// @property (nonatomic, readonly) NSUInteger drawableID __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

/* @end */

#pragma clang assume_nonnull end

// @protocol MTLDevice;
// @protocol MTLTexture;
// @protocol MTLDrawable;

// @class CAMetalLayer;
#ifndef _REWRITER_typedef_CAMetalLayer
#define _REWRITER_typedef_CAMetalLayer
typedef struct objc_object CAMetalLayer;
typedef struct {} _objc_exc_CAMetalLayer;
#endif


#pragma clang assume_nonnull begin
// @protocol CAMetalDrawable <MTLDrawable>




// @property(readonly) id<MTLTexture> texture;



// @property(readonly) CAMetalLayer *layer;

/* @end */





__attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)))

#ifndef _REWRITER_typedef_CAMetalLayer
#define _REWRITER_typedef_CAMetalLayer
typedef struct objc_object CAMetalLayer;
typedef struct {} _objc_exc_CAMetalLayer;
#endif

struct CAMetalLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct _CAMetalLayerPrivate *_priv;
};








// @property(nullable, retain) id<MTLDevice> device;



// @property(nullable, readonly) id<MTLDevice> preferredDevice
  __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));





// @property MTLPixelFormat pixelFormat;
// @property BOOL framebufferOnly;





// @property CGSize drawableSize;
// - (nullable id<CAMetalDrawable>)nextDrawable;





// @property NSUInteger maximumDrawableCount
  __attribute__((availability(macos,introduced=10.13.2))) __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(watchos,introduced=4.2))) __attribute__((availability(tvos,introduced=11.2)));






// @property BOOL presentsWithTransaction;





// @property (nullable) CGColorSpaceRef colorspace;
// @property BOOL allowsNextDrawableTimeout
  __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAEmitterCell
#define _REWRITER_typedef_CAEmitterCell
typedef struct objc_object CAEmitterCell;
typedef struct {} _objc_exc_CAEmitterCell;
#endif

struct CAEmitterCell_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_attr[2];
	void *_state;
	uint32_t _flags;
};


// + (instancetype)emitterCell;




// + (nullable id)defaultValueForKey:(NSString *)key;
// - (BOOL)shouldArchiveValueForKey:(NSString *)key;



// @property(nullable, copy) NSString *name;



// @property(getter=isEnabled) BOOL enabled;




// @property float birthRate;





// @property float lifetime;
// @property float lifetimeRange;
// @property CGFloat emissionLatitude;
// @property CGFloat emissionLongitude;





// @property CGFloat emissionRange;




// @property CGFloat velocity;
// @property CGFloat velocityRange;




// @property CGFloat xAcceleration;
// @property CGFloat yAcceleration;
// @property CGFloat zAcceleration;





// @property CGFloat scale;
// @property CGFloat scaleRange;
// @property CGFloat scaleSpeed;




// @property CGFloat spin;
// @property CGFloat spinRange;





// @property(nullable) CGColorRef color;

// @property float redRange;
// @property float greenRange;
// @property float blueRange;
// @property float alphaRange;





// @property float redSpeed;
// @property float greenSpeed;
// @property float blueSpeed;
// @property float alphaSpeed;




// @property(nullable, strong) id contents;





// @property CGRect contentsRect;




// @property CGFloat contentsScale;




// @property(copy) NSString *minificationFilter;
// @property(copy) NSString *magnificationFilter;
// @property float minificationFilterBias;







// @property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;



// @property(nullable, copy) NSDictionary *style;

/* @end */

#pragma clang assume_nonnull end
typedef NSString * CAEmitterLayerEmitterShape __attribute__((swift_wrapper(enum)));
typedef NSString * CAEmitterLayerEmitterMode __attribute__((swift_wrapper(enum)));
typedef NSString * CAEmitterLayerRenderMode __attribute__((swift_wrapper(enum)));

// @class CAEmitterCell;
#ifndef _REWRITER_typedef_CAEmitterCell
#define _REWRITER_typedef_CAEmitterCell
typedef struct objc_object CAEmitterCell;
typedef struct {} _objc_exc_CAEmitterCell;
#endif


#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAEmitterLayer
#define _REWRITER_typedef_CAEmitterLayer
typedef struct objc_object CAEmitterLayer;
typedef struct {} _objc_exc_CAEmitterLayer;
#endif

struct CAEmitterLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;





// @property float birthRate;




// @property float lifetime;



// @property CGPoint emitterPosition;
// @property CGFloat emitterZPosition;





// @property CGSize emitterSize;
// @property CGFloat emitterDepth;





// @property(copy) CAEmitterLayerEmitterShape emitterShape;





// @property(copy) CAEmitterLayerEmitterMode emitterMode;







// @property(copy) CAEmitterLayerRenderMode renderMode;







// @property BOOL preservesDepth;




// @property float velocity;



// @property float scale;



// @property float spin;






// @property unsigned int seed;

/* @end */




extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerPoint
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerLine
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerRectangle
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerCuboid
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerCircle
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterShape const kCAEmitterLayerSphere
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CAEmitterLayerEmitterMode const kCAEmitterLayerPoints
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterMode const kCAEmitterLayerOutline
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterMode const kCAEmitterLayerSurface
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerEmitterMode const kCAEmitterLayerVolume
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CAEmitterLayerRenderMode const kCAEmitterLayerUnordered
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerRenderMode const kCAEmitterLayerOldestFirst
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerRenderMode const kCAEmitterLayerOldestLast
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerRenderMode const kCAEmitterLayerBackToFront
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAEmitterLayerRenderMode const kCAEmitterLayerAdditive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef NSString * CAMediaTimingFunctionName __attribute__((swift_wrapper(enum)));







__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif

struct CAMediaTimingFunction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct CAMediaTimingFunctionPrivate *_priv;
};







// + (instancetype)functionWithName:(CAMediaTimingFunctionName)name;






// + (instancetype)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;

// - (instancetype)initWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;



// - (void)getControlPointAtIndex:(size_t)idx values:(float[_Nonnull 2])ptr;

/* @end */




extern __attribute__((visibility("default"))) CAMediaTimingFunctionName const kCAMediaTimingFunctionLinear
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFunctionName const kCAMediaTimingFunctionEaseIn
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFunctionName const kCAMediaTimingFunctionEaseOut
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFunctionName const kCAMediaTimingFunctionEaseInEaseOut
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAMediaTimingFunctionName const kCAMediaTimingFunctionDefault
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSString * CAGradientLayerType __attribute__((swift_wrapper(enum)));

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAGradientLayer
#define _REWRITER_typedef_CAGradientLayer
typedef struct objc_object CAGradientLayer;
typedef struct {} _objc_exc_CAGradientLayer;
#endif

struct CAGradientLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property(nullable, copy) NSArray *colors;
// @property(nullable, copy) NSArray<NSNumber *> *locations;
// @property CGPoint startPoint;
// @property CGPoint endPoint;




// @property(copy) CAGradientLayerType type;

/* @end */




extern __attribute__((visibility("default"))) CAGradientLayerType const kCAGradientLayerAxial
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern __attribute__((visibility("default"))) CAGradientLayerType const kCAGradientLayerRadial
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







extern __attribute__((visibility("default"))) CAGradientLayerType const kCAGradientLayerConic
    __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)));
#pragma clang assume_nonnull end










#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAReplicatorLayer
#define _REWRITER_typedef_CAReplicatorLayer
typedef struct objc_object CAReplicatorLayer;
typedef struct {} _objc_exc_CAReplicatorLayer;
#endif

struct CAReplicatorLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property NSInteger instanceCount;






// @property BOOL preservesDepth;




// @property CFTimeInterval instanceDelay;






// @property CATransform3D instanceTransform;




// @property(nullable) CGColorRef instanceColor;





// @property float instanceRedOffset;
// @property float instanceGreenOffset;
// @property float instanceBlueOffset;
// @property float instanceAlphaOffset;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

typedef NSString * CAScrollLayerScrollMode __attribute__((swift_wrapper(enum)));

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAScrollLayer
#define _REWRITER_typedef_CAScrollLayer
typedef struct objc_object CAScrollLayer;
typedef struct {} _objc_exc_CAScrollLayer;
#endif

struct CAScrollLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};




// - (void)scrollToPoint:(CGPoint)p;



// - (void)scrollToRect:(CGRect)r;




// @property(copy) CAScrollLayerScrollMode scrollMode;

/* @end */


// @interface CALayer (CALayerScrolling)






// - (void)scrollPoint:(CGPoint)p;

// - (void)scrollRectToVisible:(CGRect)r;





// @property(readonly) CGRect visibleRect;

/* @end */




extern __attribute__((visibility("default"))) CAScrollLayerScrollMode const kCAScrollNone
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAScrollLayerScrollMode const kCAScrollVertically
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAScrollLayerScrollMode const kCAScrollHorizontally
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAScrollLayerScrollMode const kCAScrollBoth
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

typedef NSString * CAShapeLayerFillRule __attribute__((swift_wrapper(enum)));
typedef NSString * CAShapeLayerLineJoin __attribute__((swift_wrapper(enum)));
typedef NSString * CAShapeLayerLineCap __attribute__((swift_wrapper(enum)));
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAShapeLayer
#define _REWRITER_typedef_CAShapeLayer
typedef struct objc_object CAShapeLayer;
typedef struct {} _objc_exc_CAShapeLayer;
#endif

struct CAShapeLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};

// @property(nullable) CGPathRef path;




// @property(nullable) CGColorRef fillColor;




// @property(copy) CAShapeLayerFillRule fillRule;




// @property(nullable) CGColorRef strokeColor;
// @property CGFloat strokeStart;
// @property CGFloat strokeEnd;




// @property CGFloat lineWidth;




// @property CGFloat miterLimit;




// @property(copy) CAShapeLayerLineCap lineCap;




// @property(copy) CAShapeLayerLineJoin lineJoin;




// @property CGFloat lineDashPhase;




// @property(nullable, copy) NSArray<NSNumber *> *lineDashPattern;

/* @end */




extern __attribute__((visibility("default"))) CAShapeLayerFillRule const kCAFillRuleNonZero
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAShapeLayerFillRule const kCAFillRuleEvenOdd
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CAShapeLayerLineJoin const kCALineJoinMiter
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAShapeLayerLineJoin const kCALineJoinRound
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAShapeLayerLineJoin const kCALineJoinBevel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CAShapeLayerLineCap const kCALineCapButt
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAShapeLayerLineCap const kCALineCapRound
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAShapeLayerLineCap const kCALineCapSquare
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSString * CATextLayerTruncationMode __attribute__((swift_wrapper(enum)));
typedef NSString * CATextLayerAlignmentMode __attribute__((swift_wrapper(enum)));

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CATextLayer
#define _REWRITER_typedef_CATextLayer
typedef struct objc_object CATextLayer;
typedef struct {} _objc_exc_CATextLayer;
#endif

struct CATextLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct CATextLayerPrivate *_state;
};





// @property(nullable, copy) id string;






// @property(nullable) CFTypeRef font;




// @property CGFloat fontSize;





// @property(nullable) CGColorRef foregroundColor;




// @property(getter=isWrapped) BOOL wrapped;





// @property(copy) CATextLayerTruncationMode truncationMode;





// @property(copy) CATextLayerAlignmentMode alignmentMode;




// @property BOOL allowsFontSubpixelQuantization;

/* @end */




extern __attribute__((visibility("default"))) CATextLayerTruncationMode const kCATruncationNone
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerTruncationMode const kCATruncationStart
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerTruncationMode const kCATruncationEnd
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerTruncationMode const kCATruncationMiddle
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern __attribute__((visibility("default"))) CATextLayerAlignmentMode const kCAAlignmentNatural
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerAlignmentMode const kCAAlignmentLeft
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerAlignmentMode const kCAAlignmentRight
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerAlignmentMode const kCAAlignmentCenter
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CATextLayerAlignmentMode const kCAAlignmentJustified
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CATiledLayer
#define _REWRITER_typedef_CATiledLayer
typedef struct objc_object CATiledLayer;
typedef struct {} _objc_exc_CATiledLayer;
#endif

struct CATiledLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};






// + (CFTimeInterval)fadeDuration;







// @property size_t levelsOfDetail;







// @property size_t levelsOfDetailBias;






// @property CGSize tileSize;

/* @end */

#pragma clang assume_nonnull end
// @class CAMediaTimingFunction;
#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif


#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CATransaction
#define _REWRITER_typedef_CATransaction
typedef struct objc_object CATransaction;
typedef struct {} _objc_exc_CATransaction;
#endif

struct CATransaction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (void)begin;




// + (void)commit;




// + (void)flush;






// + (void)lock;
// + (void)unlock;





// + (CFTimeInterval)animationDuration;
// + (void)setAnimationDuration:(CFTimeInterval)dur;






// + (nullable CAMediaTimingFunction *)animationTimingFunction;
// + (void)setAnimationTimingFunction:(nullable CAMediaTimingFunction *)function;






// + (BOOL)disableActions;
// + (void)setDisableActions:(BOOL)flag;
// + (nullable void (^)(void))completionBlock;
// + (void)setCompletionBlock:(nullable void (^)(void))block;
// + (nullable id)valueForKey:(NSString *)key;
// + (void)setValue:(nullable id)anObject forKey:(NSString *)key;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationDuration
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionDisableActions
    __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationTimingFunction
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionCompletionBlock
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CATransformLayer
#define _REWRITER_typedef_CATransformLayer
typedef struct objc_object CATransformLayer;
typedef struct {} _objc_exc_CATransformLayer;
#endif

struct CATransformLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};

/* @end */

#pragma clang assume_nonnull end








typedef NSString * CAValueFunctionName __attribute__((swift_wrapper(enum)));

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_CAValueFunction
#define _REWRITER_typedef_CAValueFunction
typedef struct objc_object CAValueFunction;
typedef struct {} _objc_exc_CAValueFunction;
#endif

struct CAValueFunction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_string;
	void *_impl;
};


// + (nullable instancetype)functionWithName:(CAValueFunctionName)name;

// @property(readonly) CAValueFunctionName name;

/* @end */








extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionRotateX
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionRotateY
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionRotateZ
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionScale
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionScaleX
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionScaleY
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionScaleZ
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionTranslate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionTranslateX
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionTranslateY
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern __attribute__((visibility("default"))) CAValueFunctionName const kCAValueFunctionTranslateZ
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif


typedef NSInteger UIEventType; enum {
    UIEventTypeTouches,
    UIEventTypeMotion,
    UIEventTypeRemoteControl,
    UIEventTypePresses __attribute__((availability(ios,introduced=9.0))),
};

typedef NSInteger UIEventSubtype; enum {

    UIEventSubtypeNone = 0,


    UIEventSubtypeMotionShake = 1,


    UIEventSubtypeRemoteControlPlay = 100,
    UIEventSubtypeRemoteControlPause = 101,
    UIEventSubtypeRemoteControlStop = 102,
    UIEventSubtypeRemoteControlTogglePlayPause = 103,
    UIEventSubtypeRemoteControlNextTrack = 104,
    UIEventSubtypeRemoteControlPreviousTrack = 105,
    UIEventSubtypeRemoteControlBeginSeekingBackward = 106,
    UIEventSubtypeRemoteControlEndSeekingBackward = 107,
    UIEventSubtypeRemoteControlBeginSeekingForward = 108,
    UIEventSubtypeRemoteControlEndSeekingForward = 109,
};


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

struct UIEvent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) UIEventType type __attribute__((availability(ios,introduced=3.0)));
// @property(nonatomic,readonly) UIEventSubtype subtype __attribute__((availability(ios,introduced=3.0)));

// @property(nonatomic,readonly) NSTimeInterval timestamp;

// @property(nonatomic, readonly, nullable) NSSet <UITouch *> *allTouches;
// - (nullable NSSet <UITouch *> *)touchesForWindow:(UIWindow *)window;
// - (nullable NSSet <UITouch *> *)touchesForView:(UIView *)view;
// - (nullable NSSet <UITouch *> *)touchesForGestureRecognizer:(UIGestureRecognizer *)gesture __attribute__((availability(ios,introduced=3.2)));


// - (nullable NSArray <UITouch *> *)coalescedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9.0)));


// - (nullable NSArray <UITouch *> *)predictedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


typedef NSInteger UIMenuElementState; enum {
    UIMenuElementStateOff,
    UIMenuElementStateOn,
    UIMenuElementStateMixed
} __attribute__((swift_name("UIMenuElement.State"))) __attribute__((availability(ios,introduced=13.0)));

typedef NSUInteger UIMenuElementAttributes; enum {
    UIMenuElementAttributesDisabled = 1 << 0,
    UIMenuElementAttributesDestructive = 1 << 1,
    UIMenuElementAttributesHidden = 1 << 2
} __attribute__((swift_name("UIMenuElement.Attributes"))) __attribute__((availability(ios,introduced=13.0)));

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIMenuElement
#define _REWRITER_typedef_UIMenuElement
typedef struct objc_object UIMenuElement;
typedef struct {} _objc_exc_UIMenuElement;
#endif

struct UIMenuElement_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readonly) NSString *title;


// @property (nonatomic, nullable, readonly) UIImage *image;

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end
typedef NSString *UIMenuIdentifier __attribute__((swift_name("UIMenu.Identifier"))) __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0)));

typedef NSUInteger UIMenuOptions; enum {

    UIMenuOptionsDisplayInline = 1 << 0,


    UIMenuOptionsDestructive = 1 << 1,
} __attribute__((swift_name("UIMenu.Options"))) __attribute__((availability(ios,introduced=13.0)));

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIMenu
#define _REWRITER_typedef_UIMenu
typedef struct objc_object UIMenu;
typedef struct {} _objc_exc_UIMenu;
#endif

struct UIMenu_IMPL {
	struct UIMenuElement_IMPL UIMenuElement_IVARS;
};



// @property (nonatomic, readonly) UIMenuIdentifier identifier;


// @property (nonatomic, readonly) UIMenuOptions options;


// @property (nonatomic, readonly) NSArray<UIMenuElement *> *children;
#if 0
+ (UIMenu *)menuWithTitle:(NSString *)title
                 children:(NSArray<UIMenuElement *> *)children __attribute__((availability(swift, unavailable, message="Use init(title:image:identifier:options:children:) instead")));
#endif

#if 0
+ (UIMenu *)menuWithTitle:(NSString *)title
                    image:(nullable UIImage *)image
               identifier:(nullable UIMenuIdentifier)identifier
                  options:(UIMenuOptions)options
                 children:(NSArray<UIMenuElement *> *)children __attribute__((availability(swift, unavailable, message="Use init(title:image:identifier:options:children:) instead")));
#endif


// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));
// - (UIMenu *)menuByReplacingChildren:(NSArray<UIMenuElement *> *)newChildren;

/* @end */





extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuApplication __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuFile __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuEdit __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuView __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuWindow __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuHelp __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuAbout __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuPreferences __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuServices __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuHide __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuQuit __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuNewScene __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuClose __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuPrint __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuUndoRedo __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuStandardEdit __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuFind __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuReplace __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuShare __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuTextStyle __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSpelling __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSpellingPanel __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSpellingOptions __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSubstitutions __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSubstitutionsPanel __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSubstitutionOptions __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuTransformations __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuSpeech __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuLookup __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuLearn __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuFormat __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuFont __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuTextSize __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuTextColor __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuTextStylePasteboard __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuText __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuWritingDirection __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuAlignment __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuToolbar __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuFullscreen __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuMinimizeAndZoom __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuBringAllToFront __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) const UIMenuIdentifier UIMenuRoot __attribute__((availability(ios,introduced=13.0)));
#pragma clang assume_nonnull end

typedef NSInteger UIKeyModifierFlags; enum {
    UIKeyModifierAlphaShift = 1 << 16,
    UIKeyModifierShift = 1 << 17,
    UIKeyModifierControl = 1 << 18,
    UIKeyModifierAlternate = 1 << 19,
    UIKeyModifierCommand = 1 << 20,
    UIKeyModifierNumericPad = 1 << 21,
} __attribute__((availability(ios,introduced=7.0)));

// @class UICommand;
#ifndef _REWRITER_typedef_UICommand
#define _REWRITER_typedef_UICommand
typedef struct objc_object UICommand;
typedef struct {} _objc_exc_UICommand;
#endif

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UICommandAlternate
#define _REWRITER_typedef_UICommandAlternate
typedef struct objc_object UICommandAlternate;
typedef struct {} _objc_exc_UICommandAlternate;
#endif

struct UICommandAlternate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readonly) NSString *title;


// @property (nonatomic, readonly) SEL action;


// @property (nonatomic, readonly) UIKeyModifierFlags modifierFlags;







#if 0
+ (instancetype)alternateWithTitle:(NSString *)title
                            action:(SEL)action
                     modifierFlags:(UIKeyModifierFlags)modifierFlags;
#endif


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UICommand
#define _REWRITER_typedef_UICommand
typedef struct objc_object UICommand;
typedef struct {} _objc_exc_UICommand;
#endif

struct UICommand_IMPL {
	struct UIMenuElement_IMPL UIMenuElement_IVARS;
};



// @property (nonatomic, copy) NSString *title;


// @property (nullable, nonatomic, copy) UIImage *image;


// @property (nullable, nonatomic, copy) NSString *discoverabilityTitle;


// @property (nonatomic, readonly) SEL action;


// @property (nullable, nonatomic, readonly) id propertyList;


// @property (nonatomic) UIMenuElementAttributes attributes;


// @property (nonatomic) UIMenuElementState state;


// @property (nonatomic, readonly) NSArray<UICommandAlternate *> *alternates;
#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                    propertyList:(nullable id)propertyList
    __attribute__((availability(swift, unavailable, message="Use init(title:image:action:propertyList:alternates:discoverabilityTitle:attributes:state:) instead.")));
#endif

#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                    propertyList:(nullable id)propertyList
                      alternates:(NSArray<UICommandAlternate *> *)alternates
    __attribute__((availability(swift, unavailable, message="Use init(title:image:action:propertyList:alternates:discoverabilityTitle:attributes:state:) instead.")));
#endif


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSString *const UICommandTagShare __attribute__((availability(ios,introduced=13.0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunguarded-availability"
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIKeyCommand
#define _REWRITER_typedef_UIKeyCommand
typedef struct objc_object UIKeyCommand;
typedef struct {} _objc_exc_UIKeyCommand;
#endif

struct UIKeyCommand_IMPL {
	struct UICommand_IMPL UICommand_IVARS;
};

#pragma clang diagnostic pop

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (nonatomic, copy) NSString *title __attribute__((availability(ios,introduced=13.0)));


// @property (nullable, nonatomic, copy) UIImage *image __attribute__((availability(ios,introduced=13.0)));


// @property (nullable, nonatomic, copy) NSString *discoverabilityTitle __attribute__((availability(ios,introduced=9.0)));


// @property (nullable, nonatomic, readonly) SEL action;

// @property (nullable, nonatomic, readonly) NSString *input;
// @property (nonatomic, readonly) UIKeyModifierFlags modifierFlags;


// @property (nullable, nonatomic, readonly) id propertyList __attribute__((availability(ios,introduced=13.0)));


// @property (nonatomic) UIMenuElementAttributes attributes __attribute__((availability(ios,introduced=13.0)));


// @property (nonatomic) UIMenuElementState state __attribute__((availability(ios,introduced=13.0)));


// @property (nonatomic, readonly) NSArray<UICommandAlternate *> *alternates __attribute__((availability(ios,introduced=13.0)));
#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                           input:(NSString *)input
                   modifierFlags:(UIKeyModifierFlags)modifierFlags
                    propertyList:(nullable id)propertyList
    __attribute__((availability(swift, unavailable, message="Use init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:) instead.")));
#endif

#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                           input:(NSString *)input
                   modifierFlags:(UIKeyModifierFlags)modifierFlags
                    propertyList:(nullable id)propertyList
                      alternates:(NSArray<UICommandAlternate *> *)alternates
    __attribute__((availability(swift, unavailable, message="Use init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:) instead.")));
#endif





// + (instancetype)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action;


// + (instancetype)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action discoverabilityTitle:(NSString *)discoverabilityTitle __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="keyCommandWithInput:modifierFlags:action:")));


#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                    propertyList:(nullable id)propertyList __attribute__((unavailable));
#endif

#if 0
+ (instancetype)commandWithTitle:(NSString *)title
                           image:(nullable UIImage *)image
                          action:(SEL)action
                    propertyList:(nullable id)propertyList
                      alternates:(NSArray<UICommandAlternate *> *)alternates __attribute__((unavailable));
#endif


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPasteConfiguration;
#ifndef _REWRITER_typedef_UIPasteConfiguration
#define _REWRITER_typedef_UIPasteConfiguration
typedef struct objc_object UIPasteConfiguration;
typedef struct {} _objc_exc_UIPasteConfiguration;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UIPasteConfigurationSupporting <NSObject>

// @property (nonatomic, copy, nullable) UIPasteConfiguration *pasteConfiguration;

/* @optional */
// - (void)pasteItemProviders:(NSArray<NSItemProvider *> *)itemProviders;
// - (BOOL)canPasteItemProviders:(NSArray<NSItemProvider *> *)itemProviders;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



__attribute__((availability(ios,introduced=8.0))) // @protocol UIUserActivityRestoring <NSObject>

// - (void)restoreUserActivityState:(NSUserActivity *)userActivity;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIMenuBuilder;

// @class UIPress;
#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif

// @class UIPressesEvent;
#ifndef _REWRITER_typedef_UIPressesEvent
#define _REWRITER_typedef_UIPressesEvent
typedef struct objc_object UIPressesEvent;
typedef struct {} _objc_exc_UIPressesEvent;
#endif


typedef NSDictionary<NSAttributedStringKey, id> * _Nonnull(*UITextAttributesConversionHandler)(NSDictionary<NSAttributedStringKey, id> * _Nonnull);

typedef NSInteger UIEditingInteractionConfiguration; enum {
    UIEditingInteractionConfigurationNone = 0,
    UIEditingInteractionConfigurationDefault = 1,
} __attribute__((availability(ios,introduced=13.0)));

// @protocol UIResponderStandardEditActions <NSObject>
/* @optional */
// - (void)cut:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));
// - (void)copy:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));
// - (void)paste:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));
// - (void)select:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));
// - (void)selectAll:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));
// - (void)delete:(nullable id)sender __attribute__((availability(ios,introduced=3.2)));
// - (void)makeTextWritingDirectionLeftToRight:(nullable id)sender __attribute__((availability(ios,introduced=5.0)));
// - (void)makeTextWritingDirectionRightToLeft:(nullable id)sender __attribute__((availability(ios,introduced=5.0)));
// - (void)toggleBoldface:(nullable id)sender __attribute__((availability(ios,introduced=6.0)));
// - (void)toggleItalics:(nullable id)sender __attribute__((availability(ios,introduced=6.0)));
// - (void)toggleUnderline:(nullable id)sender __attribute__((availability(ios,introduced=6.0)));

// - (void)increaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7.0)));
// - (void)decreaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7.0)));

// - (void)updateTextAttributesWithConversionHandler:(__attribute__((noescape)) UITextAttributesConversionHandler _Nonnull)conversionHandler __attribute__((availability(ios,introduced=13.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIResponder
#define _REWRITER_typedef_UIResponder
typedef struct objc_object UIResponder;
typedef struct {} _objc_exc_UIResponder;
#endif

struct UIResponder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, readonly, nullable) UIResponder *nextResponder;

// @property(nonatomic, readonly) BOOL canBecomeFirstResponder;
// - (BOOL)becomeFirstResponder;

// @property(nonatomic, readonly) BOOL canResignFirstResponder;
// - (BOOL)resignFirstResponder;

// @property(nonatomic, readonly) BOOL isFirstResponder;






// - (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> *)touches __attribute__((availability(ios,introduced=9.1)));
// - (void)pressesBegan:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesChanged:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesEnded:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesCancelled:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));

// - (void)motionBegan:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3.0)));
// - (void)motionEnded:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3.0)));
// - (void)motionCancelled:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3.0)));

// - (void)remoteControlReceivedWithEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=4.0)));

// - (BOOL)canPerformAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=3.0)));

// - (nullable id)targetForAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=7.0)));


// - (void)buildMenuWithBuilder:(id<UIMenuBuilder>)builder;
// - (void)validateCommand:(UICommand *)command;

// @property(nullable, nonatomic,readonly) NSUndoManager *undoManager __attribute__((availability(ios,introduced=3.0)));


// @property (nonatomic, readonly) UIEditingInteractionConfiguration editingInteractionConfiguration __attribute__((availability(ios,introduced=13.0)));

/* @end */


// @interface UIResponder (UIResponderKeyCommands)
// @property (nullable,nonatomic,readonly) NSArray<UIKeyCommand *> *keyCommands __attribute__((availability(ios,introduced=7.0)));
/* @end */


// @class UIInputViewController;
#ifndef _REWRITER_typedef_UIInputViewController
#define _REWRITER_typedef_UIInputViewController
typedef struct objc_object UIInputViewController;
typedef struct {} _objc_exc_UIInputViewController;
#endif

// @class UITextInputMode;
#ifndef _REWRITER_typedef_UITextInputMode
#define _REWRITER_typedef_UITextInputMode
typedef struct objc_object UITextInputMode;
typedef struct {} _objc_exc_UITextInputMode;
#endif

// @class UITextInputAssistantItem;
#ifndef _REWRITER_typedef_UITextInputAssistantItem
#define _REWRITER_typedef_UITextInputAssistantItem
typedef struct objc_object UITextInputAssistantItem;
typedef struct {} _objc_exc_UITextInputAssistantItem;
#endif


// @interface UIResponder (UIResponderInputViewAdditions)


// @property (nullable, nonatomic, readonly, strong) __kindof UIView *inputView __attribute__((availability(ios,introduced=3.2)));
// @property (nullable, nonatomic, readonly, strong) __kindof UIView *inputAccessoryView __attribute__((availability(ios,introduced=3.2)));





// @property (nonnull, nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nullable, nonatomic, readonly, strong) UIInputViewController *inputViewController __attribute__((availability(ios,introduced=8.0)));
// @property (nullable, nonatomic, readonly, strong) UIInputViewController *inputAccessoryViewController __attribute__((availability(ios,introduced=8.0)));




// @property (nullable, nonatomic, readonly, strong) UITextInputMode *textInputMode __attribute__((availability(ios,introduced=7.0)));



// @property (nullable, nonatomic, readonly, strong) NSString *textInputContextIdentifier __attribute__((availability(ios,introduced=7.0)));

// + (void)clearTextInputContextIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=7.0)));


// - (void)reloadInputViews __attribute__((availability(ios,introduced=3.2)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputUpArrow __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputDownArrow __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputLeftArrow __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputRightArrow __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputEscape __attribute__((availability(ios,introduced=7.0)));

// @interface UIResponder (ActivityContinuation) <UIUserActivityRestoring>
// @property (nullable, nonatomic, strong) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8.0)));
// - (void)updateUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8.0)));
// - (void)restoreUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8.0)));
/* @end */



// @interface UIResponder (UIPasteConfigurationSupporting) <UIPasteConfigurationSupporting>
/* @end */

#pragma clang assume_nonnull end











#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIVector
#define _REWRITER_typedef_CIVector
typedef struct objc_object CIVector;
typedef struct {} _objc_exc_CIVector;
#endif

struct CIVector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	size_t _count;

	union  {
	CGFloat vec[4];
	CGFloat * _Nonnull ptr;
	} _u;
};




// + (instancetype)vectorWithValues:(const CGFloat *)values count:(size_t)count;

// + (instancetype)vectorWithX:(CGFloat)x;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;


// + (instancetype)vectorWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));


// + (instancetype)vectorWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));


// + (instancetype)vectorWithCGAffineTransform:(CGAffineTransform)t __attribute__((availability(ios,introduced=5_0)));

// + (instancetype)vectorWithString:(NSString *)representation;



// - (instancetype)initWithValues:(const CGFloat *)values count:(size_t)count __attribute__((objc_designated_initializer));

// - (instancetype)initWithX:(CGFloat)x;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;
// - (instancetype)initWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithCGAffineTransform:(CGAffineTransform)r __attribute__((availability(ios,introduced=5_0)));

// - (instancetype)initWithString:(NSString *)representation;




// - (CGFloat)valueAtIndex:(size_t)index;


// @property (readonly) size_t count;



// @property (readonly) CGFloat X;
// @property (readonly) CGFloat Y;
// @property (readonly) CGFloat Z;
// @property (readonly) CGFloat W;
// @property (readonly) CGPoint CGPointValue __attribute__((availability(ios,introduced=5_0)));
// @property (readonly) CGRect CGRectValue __attribute__((availability(ios,introduced=5_0)));
// @property (readonly) CGAffineTransform CGAffineTransformValue __attribute__((availability(ios,introduced=5_0)));





// @property (readonly) NSString *stringRepresentation;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIColor
#define _REWRITER_typedef_CIColor
typedef struct objc_object CIColor;
typedef struct {} _objc_exc_CIColor;
#endif

struct CIColor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
	void *_pad[3];
};



// + (instancetype)colorWithCGColor:(CGColorRef)c;




// + (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
// + (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b;



// + (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
// + (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));



// + (instancetype)colorWithString:(NSString *)representation;



// - (instancetype)initWithCGColor:(CGColorRef)c __attribute__((objc_designated_initializer));




// - (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
// - (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b __attribute__((availability(ios,introduced=9_0)));



// - (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
// - (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));


// @property (readonly) size_t numberOfComponents;


// @property (readonly) const CGFloat *components __attribute__((objc_returns_inner_pointer));


// @property (readonly) CGFloat alpha;


// @property (readonly) CGColorSpaceRef colorSpace __attribute__((cf_returns_not_retained));


// @property (readonly) CGFloat red;
// @property (readonly) CGFloat green;
// @property (readonly) CGFloat blue;





// @property (readonly) NSString *stringRepresentation;


@property (class, strong, readonly) CIColor *blackColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *whiteColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *grayColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *redColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *greenColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *blueColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *cyanColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *magentaColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *yellowColor __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *clearColor __attribute__((availability(ios,introduced=10_0)));

/* @end */

#pragma clang assume_nonnull end
extern "C" {
typedef uint64_t CVOptionFlags;
struct CVSMPTETime
{
    SInt16 subframes;
    SInt16 subframeDivisor;
    UInt32 counter;
    UInt32 type;
    UInt32 flags;
    SInt16 hours;
    SInt16 minutes;
    SInt16 seconds;
    SInt16 frames;
};
typedef struct CVSMPTETime CVSMPTETime;
typedef uint32_t CVSMPTETimeType; enum
{
    kCVSMPTETimeType24 = 0,
    kCVSMPTETimeType25 = 1,
    kCVSMPTETimeType30Drop = 2,
    kCVSMPTETimeType30 = 3,
    kCVSMPTETimeType2997 = 4,
    kCVSMPTETimeType2997Drop = 5,
    kCVSMPTETimeType60 = 6,
    kCVSMPTETimeType5994 = 7
};
typedef uint32_t CVSMPTETimeFlags; enum
{
    kCVSMPTETimeValid = (1L << 0),
    kCVSMPTETimeRunning = (1L << 1)
};


typedef int32_t CVTimeFlags; enum {
    kCVTimeIsIndefinite = 1 << 0
};

typedef struct
{
    int64_t timeValue;
    int32_t timeScale;
    int32_t flags;
} CVTime;
typedef struct
{
    uint32_t version;
    int32_t videoTimeScale;
    int64_t videoTime;
    uint64_t hostTime;
    double rateScalar;
    int64_t videoRefreshPeriod;
    CVSMPTETime smpteTime;
    uint64_t flags;
    uint64_t reserved;
} CVTimeStamp;


typedef uint64_t CVTimeStampFlags; enum
{
    kCVTimeStampVideoTimeValid = (1L << 0),
    kCVTimeStampHostTimeValid = (1L << 1),
    kCVTimeStampSMPTETimeValid = (1L << 2),
    kCVTimeStampVideoRefreshPeriodValid = (1L << 3),
    kCVTimeStampRateScalarValid = (1L << 4),


    kCVTimeStampTopField = (1L << 16),
    kCVTimeStampBottomField = (1L << 17),


    kCVTimeStampVideoHostTimeValid = (kCVTimeStampVideoTimeValid | kCVTimeStampHostTimeValid),
    kCVTimeStampIsInterlaced = (kCVTimeStampTopField | kCVTimeStampBottomField)
};

__attribute__((visibility("default"))) extern const CVTime kCVZeroTime;
__attribute__((visibility("default"))) extern const CVTime kCVIndefiniteTime;


}


extern "C" {
typedef int32_t CVReturn;



enum _CVReturn

{
    kCVReturnSuccess = 0,

    kCVReturnFirst = -6660,

    kCVReturnError = kCVReturnFirst,
    kCVReturnInvalidArgument = -6661,
    kCVReturnAllocationFailed = -6662,
 kCVReturnUnsupported = -6663,


    kCVReturnInvalidDisplay = -6670,
    kCVReturnDisplayLinkAlreadyRunning = -6671,
    kCVReturnDisplayLinkNotRunning = -6672,
    kCVReturnDisplayLinkCallbacksNotSet = -6673,


    kCVReturnInvalidPixelFormat = -6680,
    kCVReturnInvalidSize = -6681,
    kCVReturnInvalidPixelBufferAttributes = -6682,
    kCVReturnPixelBufferNotOpenGLCompatible = -6683,
    kCVReturnPixelBufferNotMetalCompatible = -6684,


    kCVReturnWouldExceedAllocationThreshold = -6689,
    kCVReturnPoolAllocationFailed = -6690,
    kCVReturnInvalidPoolAttributes = -6691,
    kCVReturnRetry = -6692,

    kCVReturnLast = -6699

};


}











extern "C" {






__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferNonPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferMovieTimeKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferTimeValueKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferTimeScaleKey __attribute__((availability(ios,introduced=4.0)));




typedef uint32_t CVAttachmentMode; enum
{
 kCVAttachmentMode_ShouldNotPropagate = 0,
 kCVAttachmentMode_ShouldPropagate = 1
};






typedef struct __attribute__((objc_bridge(id))) __CVBuffer *CVBufferRef;
__attribute__((visibility("default"))) extern CVBufferRef _Nullable CVBufferRetain( CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));






__attribute__((visibility("default"))) extern void CVBufferRelease( __attribute__((cf_consumed)) CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferSetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CFTypeRef _Nonnull value, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFTypeRef _Nullable CVBufferGetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CVAttachmentMode * _Nullable attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferRemoveAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVBufferRemoveAllAttachments( CVBufferRef _Nonnull buffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVBufferGetAttachments( CVBufferRef _Nonnull buffer, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVBufferSetAttachments( CVBufferRef _Nonnull buffer, CFDictionaryRef _Nonnull theAttachments, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferPropagateAttachments( CVBufferRef _Nonnull sourceBuffer, CVBufferRef _Nonnull destinationBuffer ) __attribute__((availability(ios,introduced=4.0)));


}
extern "C" {




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCGColorSpaceKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureWidthKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHeightKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHorizontalOffsetKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureVerticalOffsetKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPreferredCleanApertureKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldCountKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalTopFirst __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalBottomFirst __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineEarly __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineLate __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioHorizontalSpacingKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioVerticalSpacingKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayDimensionsKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayWidthKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayHeightKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferGammaLevelKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferICCProfileKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrixKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_601_4 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_P3_D65 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimariesKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_EBU_3213 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_SMPTE_C __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P22 __attribute__((availability(ios,introduced=6.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P3_D65 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunctionKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_UseGamma __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_EBU_3213 __attribute__((availability(ios,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_C __attribute__((availability(ios,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_sRGB __attribute__((availability(ios,introduced=11.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_ST_428_1 __attribute__((availability(ios,introduced=10.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ __attribute__((availability(ios,introduced=11.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_2100_HLG __attribute__((availability(ios,introduced=11.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_Linear __attribute__((availability(ios,introduced=12.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocationTopFieldKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocationBottomFieldKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Left __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Center __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_TopLeft __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Top __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_BottomLeft __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Bottom __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_DV420 __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsamplingKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_420 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_422 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_411 __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelIsOpaque __attribute__((availability(ios,introduced=8.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelModeKey __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelMode_StraightAlpha __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelMode_PremultipliedAlpha __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));


__attribute__((visibility("default"))) extern int CVYCbCrMatrixGetIntegerCodePointForString( _Nullable CFStringRef yCbCrMatrixString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern int CVColorPrimariesGetIntegerCodePointForString( _Nullable CFStringRef colorPrimariesString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern int CVTransferFunctionGetIntegerCodePointForString( _Nullable CFStringRef transferFunctionString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));


__attribute__((visibility("default"))) extern _Nullable CFStringRef CVYCbCrMatrixGetStringForIntegerCodePoint( int yCbCrMatrixCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern _Nullable CFStringRef CVColorPrimariesGetStringForIntegerCodePoint( int colorPrimariesCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern _Nullable CFStringRef CVTransferFunctionGetStringForIntegerCodePoint( int transferFunctionCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
typedef CVBufferRef CVImageBufferRef;
__attribute__((visibility("default"))) extern CGSize CVImageBufferGetEncodedSize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGSize CVImageBufferGetDisplaySize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGRect CVImageBufferGetCleanRect( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern Boolean CVImageBufferIsFlipped( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGColorSpaceRef _Nullable CVImageBufferCreateColorSpaceFromAttachments( CFDictionaryRef _Nonnull attachments ) __attribute__((availability(ios,introduced=10.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferMasteringDisplayColorVolumeKey __attribute__((availability(ios,introduced=11.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferContentLightLevelInfoKey __attribute__((availability(ios,introduced=11.0)));


}



extern "C" {
enum

{
  kCVPixelFormatType_1Monochrome = 0x00000001,
  kCVPixelFormatType_2Indexed = 0x00000002,
  kCVPixelFormatType_4Indexed = 0x00000004,
  kCVPixelFormatType_8Indexed = 0x00000008,
  kCVPixelFormatType_1IndexedGray_WhiteIsZero = 0x00000021,
  kCVPixelFormatType_2IndexedGray_WhiteIsZero = 0x00000022,
  kCVPixelFormatType_4IndexedGray_WhiteIsZero = 0x00000024,
  kCVPixelFormatType_8IndexedGray_WhiteIsZero = 0x00000028,
  kCVPixelFormatType_16BE555 = 0x00000010,
  kCVPixelFormatType_16LE555 = 'L555',
  kCVPixelFormatType_16LE5551 = '5551',
  kCVPixelFormatType_16BE565 = 'B565',
  kCVPixelFormatType_16LE565 = 'L565',
  kCVPixelFormatType_24RGB = 0x00000018,
  kCVPixelFormatType_24BGR = '24BG',
  kCVPixelFormatType_32ARGB = 0x00000020,
  kCVPixelFormatType_32BGRA = 'BGRA',
  kCVPixelFormatType_32ABGR = 'ABGR',
  kCVPixelFormatType_32RGBA = 'RGBA',
  kCVPixelFormatType_64ARGB = 'b64a',
  kCVPixelFormatType_48RGB = 'b48r',
  kCVPixelFormatType_32AlphaGray = 'b32a',
  kCVPixelFormatType_16Gray = 'b16g',
  kCVPixelFormatType_30RGB = 'R10k',
  kCVPixelFormatType_422YpCbCr8 = '2vuy',
  kCVPixelFormatType_4444YpCbCrA8 = 'v408',
  kCVPixelFormatType_4444YpCbCrA8R = 'r408',
  kCVPixelFormatType_4444AYpCbCr8 = 'y408',
  kCVPixelFormatType_4444AYpCbCr16 = 'y416',
  kCVPixelFormatType_444YpCbCr8 = 'v308',
  kCVPixelFormatType_422YpCbCr16 = 'v216',
  kCVPixelFormatType_422YpCbCr10 = 'v210',
  kCVPixelFormatType_444YpCbCr10 = 'v410',
  kCVPixelFormatType_420YpCbCr8Planar = 'y420',
  kCVPixelFormatType_420YpCbCr8PlanarFullRange = 'f420',
  kCVPixelFormatType_422YpCbCr_4A_8BiPlanar = 'a2vy',
  kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange = '420v',
  kCVPixelFormatType_420YpCbCr8BiPlanarFullRange = '420f',
  kCVPixelFormatType_422YpCbCr8_yuvs = 'yuvs',
  kCVPixelFormatType_422YpCbCr8FullRange = 'yuvf',
  kCVPixelFormatType_OneComponent8 = 'L008',
  kCVPixelFormatType_TwoComponent8 = '2C08',
  kCVPixelFormatType_30RGBLEPackedWideGamut = 'w30r',
  kCVPixelFormatType_ARGB2101010LEPacked = 'l10r',
  kCVPixelFormatType_OneComponent16Half = 'L00h',
  kCVPixelFormatType_OneComponent32Float = 'L00f',
  kCVPixelFormatType_TwoComponent16Half = '2C0h',
  kCVPixelFormatType_TwoComponent32Float = '2C0f',
  kCVPixelFormatType_64RGBAHalf = 'RGhA',
  kCVPixelFormatType_128RGBAFloat = 'RGfA',
  kCVPixelFormatType_14Bayer_GRBG = 'grb4',
  kCVPixelFormatType_14Bayer_RGGB = 'rgg4',
  kCVPixelFormatType_14Bayer_BGGR = 'bgg4',
  kCVPixelFormatType_14Bayer_GBRG = 'gbr4',
  kCVPixelFormatType_DisparityFloat16 = 'hdis',
  kCVPixelFormatType_DisparityFloat32 = 'fdis',
  kCVPixelFormatType_DepthFloat16 = 'hdep',
  kCVPixelFormatType_DepthFloat32 = 'fdep',
  kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange = 'x420',
  kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange = 'x422',
  kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange = 'x444',
  kCVPixelFormatType_420YpCbCr10BiPlanarFullRange = 'xf20',
  kCVPixelFormatType_422YpCbCr10BiPlanarFullRange = 'xf22',
  kCVPixelFormatType_444YpCbCr10BiPlanarFullRange = 'xf44',
  kCVPixelFormatType_420YpCbCr8VideoRange_8A_TriPlanar = 'v0a8',
};
typedef CVOptionFlags CVPixelBufferLockFlags; enum
{
 kCVPixelBufferLock_ReadOnly = 0x00000001,
};






struct CVPlanarComponentInfo {
  int32_t offset;
  uint32_t rowBytes;
};
typedef struct CVPlanarComponentInfo CVPlanarComponentInfo;
struct CVPlanarPixelBufferInfo {
  CVPlanarComponentInfo componentInfo[1];
};
typedef struct CVPlanarPixelBufferInfo CVPlanarPixelBufferInfo;
struct CVPlanarPixelBufferInfo_YCbCrPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCb;
  CVPlanarComponentInfo componentInfoCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrPlanar CVPlanarPixelBufferInfo_YCbCrPlanar;
struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCbCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrBiPlanar CVPlanarPixelBufferInfo_YCbCrBiPlanar;


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPixelFormatTypeKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferMemoryAllocatorKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferWidthKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferHeightKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsLeftKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsTopKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsRightKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsBottomKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferBytesPerRowAlignmentKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferCGBitmapContextCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferCGImageCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
 __attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPlaneAlignmentKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfacePropertiesKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESCompatibilityKey __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferMetalCompatibilityKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLTextureCacheCompatibilityKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESTextureCacheCompatibilityKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable)));






typedef CVImageBufferRef CVPixelBufferRef;

__attribute__((visibility("default"))) extern CFTypeID CVPixelBufferGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVPixelBufferRef _Nullable CVPixelBufferRetain( CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVPixelBufferRelease( __attribute__((cf_consumed)) CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateResolvedAttributesDictionary(
    CFAllocatorRef _Nullable allocator,
    CFArrayRef _Nullable attributes,
    __attribute__((cf_returns_retained)) CFDictionaryRef _Nullable * _Nonnull resolvedDictionaryOut) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreate(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleaseBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable baseAddress );
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nonnull baseAddress,
    size_t bytesPerRow,
    CVPixelBufferReleaseBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleasePlanarBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable dataPtr, size_t dataSize, size_t numberOfPlanes, const void * _Nullable planeAddresses[_Nullable ] );
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithPlanarBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nullable dataPtr,
    size_t dataSize,
    size_t numberOfPlanes,
    void * _Nullable planeBaseAddress[_Nonnull ],
    size_t planeWidth[_Nonnull ],
    size_t planeHeight[_Nonnull ],
    size_t planeBytesPerRow[_Nonnull ],
    CVPixelBufferReleasePlanarBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferLockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags lockFlags ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferUnlockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags unlockFlags ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetWidth( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetHeight( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern OSType CVPixelBufferGetPixelFormatType( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void * _Nullable CVPixelBufferGetBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetBytesPerRow( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetDataSize( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern Boolean CVPixelBufferIsPlanar( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetPlaneCount( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetWidthOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetHeightOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void * _Nullable CVPixelBufferGetBaseAddressOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetBytesPerRowOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVPixelBufferGetExtendedPixels(
        CVPixelBufferRef _Nonnull pixelBuffer,
        size_t * _Nullable extraColumnsOnLeft,
        size_t * _Nullable extraColumnsOnRight,
        size_t * _Nullable extraRowsOnTop,
        size_t * _Nullable extraRowsOnBottom ) __attribute__((availability(ios,introduced=4.0)));






__attribute__((visibility("default"))) extern CVReturn CVPixelBufferFillExtendedPixels( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));



}









typedef uint32_t IOSurfaceID;

typedef uint32_t IOSurfaceLockOptions; enum
{



    kIOSurfaceLockReadOnly = 0x00000001,




    kIOSurfaceLockAvoidSync = 0x00000002,
};

typedef uint32_t IOSurfacePurgeabilityState; enum
{
    kIOSurfacePurgeableNonVolatile = 0,
    kIOSurfacePurgeableVolatile = 1,
    kIOSurfacePurgeableEmpty = 2,
    kIOSurfacePurgeableKeepCurrent = 3,
};







enum {
    kIOSurfaceDefaultCache = 0,
    kIOSurfaceInhibitCache = 1,
    kIOSurfaceWriteThruCache = 2,
    kIOSurfaceCopybackCache = 3,
    kIOSurfaceWriteCombineCache = 4,
    kIOSurfaceCopybackInnerCache = 5
};


enum {
    kIOSurfaceMapCacheShift = 8,
    kIOSurfaceMapDefaultCache = kIOSurfaceDefaultCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapInhibitCache = kIOSurfaceInhibitCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapWriteThruCache = kIOSurfaceWriteThruCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapCopybackCache = kIOSurfaceCopybackCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapWriteCombineCache = kIOSurfaceWriteCombineCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapCopybackInnerCache = kIOSurfaceCopybackInnerCache << kIOSurfaceMapCacheShift,
};

typedef struct __attribute__((objc_bridge(id))) __attribute__((objc_bridge_mutable(IOSurface))) __IOSurface *IOSurfaceRef __attribute__((swift_name("IOSurfaceRef")));

extern "C" {


#pragma clang assume_nonnull begin






extern const CFStringRef kIOSurfaceAllocSize __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceBytesPerRow __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceBytesPerElement __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceElementWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceElementHeight __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceOffset __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneInfo __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneBytesPerRow __attribute__((availability(ios,introduced=3.0)));



extern const CFStringRef kIOSurfacePlaneOffset __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneSize __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneBase __attribute__((availability(ios,introduced=3.0)));



extern const CFStringRef kIOSurfacePlaneBitsPerElement __attribute__((availability(ios,introduced=11.0)));


extern const CFStringRef kIOSurfacePlaneBytesPerElement __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneElementWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneElementHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceCacheMode __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceIsGlobal __attribute__((availability(ios,introduced=3.0,deprecated=9.0)));


extern const CFStringRef kIOSurfacePixelFormat __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePixelSizeCastingAllowed __attribute__((availability(ios,introduced=10.0)));


extern const CFStringRef kIOSurfacePlaneComponentBitDepths __attribute__((availability(ios,introduced=11.0)));


extern const CFStringRef kIOSurfacePlaneComponentBitOffsets __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentName; enum {
    kIOSurfaceComponentNameUnknown = 0,
    kIOSurfaceComponentNameAlpha = 1,
    kIOSurfaceComponentNameRed = 2,
    kIOSurfaceComponentNameGreen = 3,
    kIOSurfaceComponentNameBlue = 4,
    kIOSurfaceComponentNameLuma = 5,
    kIOSurfaceComponentNameChromaRed = 6,
    kIOSurfaceComponentNameChromaBlue = 7,
};



extern const CFStringRef kIOSurfacePlaneComponentNames __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentType; enum {
    kIOSurfaceComponentTypeUnknown = 0,
    kIOSurfaceComponentTypeUnsignedInteger = 1,
    kIOSurfaceComponentTypeSignedInteger = 2,
    kIOSurfaceComponentTypeFloat = 3,
};


extern const CFStringRef kIOSurfacePlaneComponentTypes __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentRange; enum {
    kIOSurfaceComponentRangeUnknown = 0,
    kIOSurfaceComponentRangeFullRange = 1,
    kIOSurfaceComponentRangeVideoRange = 2,
    kIOSurfaceComponentRangeWideRange = 3,
};


extern const CFStringRef kIOSurfacePlaneComponentRanges __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceSubsampling; enum {
    kIOSurfaceSubsamplingUnknown = 0,
    kIOSurfaceSubsamplingNone = 1,
    kIOSurfaceSubsampling422 = 2,
    kIOSurfaceSubsampling420 = 3,
    kIOSurfaceSubsampling411 = 4,
};


extern const CFStringRef kIOSurfaceSubsampling __attribute__((availability(ios,introduced=11.0)));

CFTypeID IOSurfaceGetTypeID(void)
    __attribute__((availability(ios,introduced=3.0)));


IOSurfaceRef _Nullable IOSurfaceCreate(CFDictionaryRef properties)
    __attribute__((availability(ios,introduced=3.0)));






IOSurfaceRef _Nullable IOSurfaceLookup(IOSurfaceID csid) __attribute__((cf_returns_retained))
    __attribute__((availability(ios,introduced=3.0)));


IOSurfaceID IOSurfaceGetID(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));
kern_return_t IOSurfaceLock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed)
    __attribute__((availability(ios,introduced=3.0)));
kern_return_t IOSurfaceUnlock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed)
    __attribute__((availability(ios,introduced=3.0)));


size_t IOSurfaceGetAllocSize(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetWidth(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetHeight(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerElement(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerRow(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

void *IOSurfaceGetBaseAddress(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementWidth(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementHeight(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

OSType IOSurfaceGetPixelFormat(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));



uint32_t IOSurfaceGetSeed(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));


size_t IOSurfaceGetPlaneCount(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetWidthOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetHeightOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerElementOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerRowOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

void *IOSurfaceGetBaseAddressOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementWidthOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementHeightOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=3.0)));




size_t IOSurfaceGetNumberOfComponentsOfPlane(IOSurfaceRef buffer, size_t planeIndex)
    __attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentName IOSurfaceGetNameOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
    __attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentType IOSurfaceGetTypeOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
    __attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentRange IOSurfaceGetRangeOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
    __attribute__((availability(ios,introduced=11.0)));

size_t IOSurfaceGetBitDepthOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
    __attribute__((availability(ios,introduced=11.0)));

size_t IOSurfaceGetBitOffsetOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
    __attribute__((availability(ios,introduced=11.0)));

IOSurfaceSubsampling IOSurfaceGetSubsampling(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=11.0)));




void IOSurfaceSetValue(IOSurfaceRef buffer, CFStringRef key, CFTypeRef value)
    __attribute__((availability(ios,introduced=3.0)));

CFTypeRef _Nullable IOSurfaceCopyValue(IOSurfaceRef buffer, CFStringRef key)
    __attribute__((availability(ios,introduced=3.0)));

void IOSurfaceRemoveValue(IOSurfaceRef buffer, CFStringRef key)
    __attribute__((availability(ios,introduced=3.0)));



void IOSurfaceSetValues(IOSurfaceRef buffer, CFDictionaryRef keysAndValues)
    __attribute__((availability(ios,introduced=3.0)));

CFDictionaryRef _Nullable IOSurfaceCopyAllValues(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));

void IOSurfaceRemoveAllValues(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));






mach_port_t IOSurfaceCreateMachPort(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));



IOSurfaceRef _Nullable IOSurfaceLookupFromMachPort(mach_port_t port) __attribute__((cf_returns_retained))
    __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetPropertyMaximum(CFStringRef property)
    __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetPropertyAlignment(CFStringRef property)
    __attribute__((availability(ios,introduced=3.0)));



size_t IOSurfaceAlignProperty(CFStringRef property, size_t value)
    __attribute__((availability(ios,introduced=3.0)));
void IOSurfaceIncrementUseCount(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));


void IOSurfaceDecrementUseCount(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));


int32_t IOSurfaceGetUseCount(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));


Boolean IOSurfaceIsInUse(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=3.0)));


Boolean IOSurfaceAllowsPixelSizeCasting(IOSurfaceRef buffer)
    __attribute__((availability(ios,introduced=10.0)));
kern_return_t IOSurfaceSetPurgeable(IOSurfaceRef buffer, uint32_t newState, uint32_t * _Nullable oldState)
    __attribute__((availability(ios,introduced=10.0)));

}
#pragma clang assume_nonnull end
extern "C" {



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLTextureCompatibilityKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLFBOCompatibilityKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLESTextureCompatibilityKey __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLESFBOCompatibilityKey __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern IOSurfaceRef _Nullable CVPixelBufferGetIOSurface(CVPixelBufferRef _Nullable pixelBuffer) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithIOSurface(
  CFAllocatorRef _Nullable allocator,
  IOSurfaceRef _Nonnull surface,
  CFDictionaryRef _Nullable pixelBufferAttributes,
  CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));






}
extern "C" {


typedef struct __attribute__((objc_bridge(id))) __CVPixelBufferPool *CVPixelBufferPoolRef;




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolMinimumBufferCountKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolMaximumBufferAgeKey __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFTypeID CVPixelBufferPoolGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVPixelBufferPoolRef _Nullable CVPixelBufferPoolRetain( CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVPixelBufferPoolRelease( __attribute__((cf_consumed)) CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable poolAttributes,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferPoolRef _Nullable * _Nonnull poolOut ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetPixelBufferAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreatePixelBuffer(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    CFDictionaryRef _Nullable auxAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolAllocationThresholdKey __attribute__((availability(ios,introduced=4.0)));





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolFreeBufferNotification __attribute__((availability(ios,introduced=4.0)));
typedef CVOptionFlags CVPixelBufferPoolFlushFlags; enum
{
 kCVPixelBufferPoolFlushExcessBuffers = 1,
};
__attribute__((visibility("default"))) extern void CVPixelBufferPoolFlush( CVPixelBufferPoolRef _Nonnull pool, CVPixelBufferPoolFlushFlags options );



}








typedef uint32_t GLbitfield;
typedef uint8_t GLboolean;
typedef int8_t GLbyte;
typedef float GLclampf;
typedef uint32_t GLenum;
typedef float GLfloat;
typedef int32_t GLint;
typedef int16_t GLshort;
typedef int32_t GLsizei;
typedef uint8_t GLubyte;
typedef uint32_t GLuint;
typedef uint16_t GLushort;
typedef void GLvoid;


typedef char GLchar;

typedef int32_t GLclampx;
typedef int32_t GLfixed;

typedef uint16_t GLhalf;


typedef int64_t GLint64;
typedef struct __GLsync *GLsync;
typedef uint64_t GLuint64;

typedef intptr_t GLintptr;
typedef intptr_t GLsizeiptr;



extern "C" {
typedef CVImageBufferRef CVOpenGLESTextureRef;

__attribute__((visibility("default"))) extern CFTypeID CVOpenGLESTextureGetTypeID(void) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern GLenum CVOpenGLESTextureGetTarget( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern GLuint CVOpenGLESTextureGetName( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern Boolean CVOpenGLESTextureIsFlipped( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVOpenGLESTextureGetCleanTexCoords( CVOpenGLESTextureRef _Nonnull image,
                                                   GLfloat lowerLeft[_Nonnull 2],
                                                   GLfloat lowerRight[_Nonnull 2],
                                                   GLfloat upperRight[_Nonnull 2],
                                                   GLfloat upperLeft[_Nonnull 2] ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));


}
extern "C" {







typedef struct __attribute__((objc_bridge(id))) __CVOpenGLESTextureCache *CVOpenGLESTextureCacheRef;






// @class EAGLContext;
#ifndef _REWRITER_typedef_EAGLContext
#define _REWRITER_typedef_EAGLContext
typedef struct objc_object EAGLContext;
typedef struct {} _objc_exc_EAGLContext;
#endif

typedef EAGLContext *CVEAGLContext;
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVOpenGLESTextureCacheMaximumTextureAgeKey __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));




__attribute__((visibility("default"))) extern CFTypeID CVOpenGLESTextureCacheGetTypeID(void) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVOpenGLESTextureCacheCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable cacheAttributes,
    CVEAGLContext _Nonnull eaglContext,
    CFDictionaryRef _Nullable textureAttributes,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureCacheRef _Nullable * _Nonnull cacheOut) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVOpenGLESTextureCacheCreateTextureFromImage(
    CFAllocatorRef _Nullable allocator,
    CVOpenGLESTextureCacheRef _Nonnull textureCache,
    CVImageBufferRef _Nonnull sourceImage,
    CFDictionaryRef _Nullable textureAttributes,
    GLenum target,
    GLint internalFormat,
    GLsizei width,
    GLsizei height,
    GLenum format,
    GLenum type,
    size_t planeIndex,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureRef _Nullable * _Nonnull textureOut ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVOpenGLESTextureCacheFlush( CVOpenGLESTextureCacheRef _Nonnull textureCache, CVOptionFlags options ) __attribute__((availability(ios,introduced=5.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=12.0,message="OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)"))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));


}


extern "C" {





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatName __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatConstant __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCodecType __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatFourCC __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsAlpha __attribute__((availability(ios,introduced=4.3)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsYCbCr __attribute__((availability(ios,introduced=8.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsRGB __attribute__((availability(ios,introduced=8.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsGrayscale __attribute__((availability(ios,introduced=12.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_VideoRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_FullRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_WideRange __attribute__((availability(ios,introduced=9.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatPlanes __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockWidth __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockHeight __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBitsPerBlock __attribute__((availability(ios,introduced=4.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockHorizontalAlignment __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockVerticalAlignment __attribute__((availability(ios,introduced=4.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlackBlock __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatHorizontalSubsampling __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatVerticalSubsampling __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLFormat __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLType __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLInternalFormat __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapInfo __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatQDCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapContextCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGImageCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLESCompatibility __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable)));



typedef Boolean (*CVFillExtendedPixelsCallBack)(CVPixelBufferRef _Nonnull pixelBuffer, void * _Nullable refCon);
typedef struct {
    CFIndex version;
    CVFillExtendedPixelsCallBack _Nullable fillCallBack;
    void * _Nullable refCon;
} CVFillExtendedPixelsCallBackData;


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatFillExtendedPixelsCallback __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionCreateWithPixelFormatType(CFAllocatorRef _Nullable allocator, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFArrayRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes(CFAllocatorRef _Nullable allocator) __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern void CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType(CFDictionaryRef _Nonnull description, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));
}



extern "C" {





// @protocol MTLTexture;
typedef CVImageBufferRef CVMetalTextureRef;

__attribute__((visibility("default"))) extern CFTypeID CVMetalTextureGetTypeID(void) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern id /*<MTLTexture>*/ _Nullable CVMetalTextureGetTexture( CVMetalTextureRef _Nonnull image ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern Boolean CVMetalTextureIsFlipped( CVMetalTextureRef _Nonnull image ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVMetalTextureGetCleanTexCoords( CVMetalTextureRef _Nonnull image,
                                                   float lowerLeft[_Nonnull 2],
                                                   float lowerRight[_Nonnull 2],
                                                   float upperRight[_Nonnull 2],
                                                   float upperLeft[_Nonnull 2] ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVMetalTextureUsage __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVMetalTextureStorageMode __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));




}
extern "C" {
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVMetalTextureCacheMaximumTextureAgeKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
// @protocol MTLDevice;






typedef struct __attribute__((objc_bridge(id))) __CVMetalTextureCache *CVMetalTextureCacheRef;

__attribute__((visibility("default"))) extern CFTypeID CVMetalTextureCacheGetTypeID(void) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVMetalTextureCacheCreate(
     CFAllocatorRef _Nullable allocator,
     CFDictionaryRef _Nullable cacheAttributes,
     id /*<MTLDevice>*/ _Nonnull metalDevice,
     CFDictionaryRef _Nullable textureAttributes,
     __attribute__((cf_returns_retained)) CVMetalTextureCacheRef _Nullable * _Nonnull cacheOut ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVMetalTextureCacheCreateTextureFromImage(
            CFAllocatorRef _Nullable allocator,
            CVMetalTextureCacheRef _Nonnull textureCache,
            CVImageBufferRef _Nonnull sourceImage,
            CFDictionaryRef _Nullable textureAttributes,
               MTLPixelFormat pixelFormat,
               size_t width,
               size_t height,
               size_t planeIndex,
            __attribute__((cf_returns_retained)) CVMetalTextureRef _Nullable * _Nonnull textureOut ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVMetalTextureCacheFlush(CVMetalTextureCacheRef _Nonnull textureCache, CVOptionFlags options) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));




}

typedef struct __attribute__((objc_bridge(id))) CGImageSource * CGImageSourceRef;



typedef const struct __attribute__((objc_bridge(id))) CGImageMetadata *CGImageMetadataRef;







extern "C" __attribute__((visibility("default"))) CFTypeID CGImageMetadataGetTypeID(void);







typedef struct __attribute__((objc_bridge(id))) CGImageMetadata *CGMutableImageMetadataRef;





extern "C" __attribute__((visibility("default"))) CGMutableImageMetadataRef _Nonnull CGImageMetadataCreateMutable(void) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CGMutableImageMetadataRef _Nullable CGImageMetadataCreateMutableCopy(CGImageMetadataRef _Nonnull metadata) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
typedef struct __attribute__((objc_bridge(id))) CGImageMetadataTag *CGImageMetadataTagRef;







extern "C" __attribute__((visibility("default"))) CFTypeID CGImageMetadataTagGetTypeID(void) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));






#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceExif __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceExifAux __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceExifEX __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceDublinCore __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceIPTCCore __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceIPTCExtension __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespacePhotoshop __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceTIFF __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceXMPBasic __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataNamespaceXMPRights __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixExif __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixExifAux __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixExifEX __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixDublinCore __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixIPTCCore __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixIPTCExtension __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixPhotoshop __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixTIFF __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixXMPBasic __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataPrefixXMPRights __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
typedef int32_t CGImageMetadataType; enum {
    kCGImageMetadataTypeInvalid = -1,
    kCGImageMetadataTypeDefault = 0,
    kCGImageMetadataTypeString = 1,
    kCGImageMetadataTypeArrayUnordered = 2,
    kCGImageMetadataTypeArrayOrdered = 3,
    kCGImageMetadataTypeAlternateArray = 4,
    kCGImageMetadataTypeAlternateText = 5,
    kCGImageMetadataTypeStructure = 6
};
extern "C" __attribute__((visibility("default"))) CGImageMetadataTagRef _Nullable CGImageMetadataTagCreate (CFStringRef _Nonnull xmlns, CFStringRef _Nullable prefix, CFStringRef _Nonnull name, CGImageMetadataType type, CFTypeRef _Nonnull value) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageMetadataTagCopyNamespace(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));





extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageMetadataTagCopyPrefix(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));





extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageMetadataTagCopyName(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFTypeRef _Nullable CGImageMetadataTagCopyValue(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));







extern "C" __attribute__((visibility("default"))) CGImageMetadataType CGImageMetadataTagGetType(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFArrayRef _Nullable CGImageMetadataTagCopyQualifiers(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFArrayRef _Nullable CGImageMetadataCopyTags(CGImageMetadataRef _Nonnull metadata) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagWithPath(CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageMetadataCopyStringValueWithPath(CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) bool CGImageMetadataRegisterNamespaceForPrefix(CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull xmlns, CFStringRef _Nonnull prefix, _Nullable CFErrorRef * _Nullable err) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) bool CGImageMetadataSetTagWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) bool CGImageMetadataSetValueWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CFTypeRef _Nonnull value) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) bool CGImageMetadataRemoveTagWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
typedef bool(*CGImageMetadataTagBlock)(CFStringRef _Nonnull path, CGImageMetadataTagRef _Nonnull tag);
extern "C" __attribute__((visibility("default"))) void CGImageMetadataEnumerateTagsUsingBlock(CGImageMetadataRef _Nonnull metadata, CFStringRef _Nullable rootPath, CFDictionaryRef _Nullable options, CGImageMetadataTagBlock _Nonnull block) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef _Nonnull kCGImageMetadataEnumerateRecursively __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagMatchingImageProperty(CGImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) bool CGImageMetadataSetValueMatchingImageProperty(CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName, CFTypeRef _Nonnull value) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CFDataRef _Nullable CGImageMetadataCreateXMPData (CGImageMetadataRef _Nonnull metadata, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) CGImageMetadataRef _Nullable CGImageMetadataCreateFromXMPData (CFDataRef _Nonnull data) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef _Nonnull kCFErrorDomainCGImageMetadata;





typedef int32_t CGImageMetadataErrors; enum {
    kCGImageMetadataErrorUnknown = 0,
    kCGImageMetadataErrorUnsupportedFormat = 1,
    kCGImageMetadataErrorBadArgument = 2,
    kCGImageMetadataErrorConflictingArguments = 3,
    kCGImageMetadataErrorPrefixConflict = 4,
};



typedef int32_t CGImageSourceStatus; enum {
    kCGImageStatusUnexpectedEOF = -5,
    kCGImageStatusInvalidData = -4,
    kCGImageStatusUnknownType = -3,
    kCGImageStatusReadingHeader = -2,
    kCGImageStatusIncomplete = -1,
    kCGImageStatusComplete = 0
};

#pragma clang assume_nonnull begin








extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceTypeIdentifierHint __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceShouldCache __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceShouldCacheImmediately __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceShouldAllowFloat __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceCreateThumbnailFromImageIfAbsent __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceCreateThumbnailFromImageAlways __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceThumbnailMaxPixelSize __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceCreateThumbnailWithTransform __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageSourceSubsampleFactor __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end





extern "C" __attribute__((visibility("default"))) CFTypeID CGImageSourceGetTypeID (void) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) CFArrayRef _Nonnull CGImageSourceCopyTypeIdentifiers(void) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CGImageSourceRef _Nullable CGImageSourceCreateWithDataProvider(CGDataProviderRef _Nonnull provider, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CGImageSourceRef _Nullable CGImageSourceCreateWithData(CFDataRef _Nonnull data, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CGImageSourceRef _Nullable CGImageSourceCreateWithURL(CFURLRef _Nonnull url, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) CFStringRef _Nullable CGImageSourceGetType(CGImageSourceRef _Nonnull isrc) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) size_t CGImageSourceGetCount(CGImageSourceRef _Nonnull isrc) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CFDictionaryRef _Nullable CGImageSourceCopyProperties(CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) CFDictionaryRef _Nullable CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CGImageMetadataRef _Nullable CGImageSourceCopyMetadataAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));





extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageSourceCreateImageAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) void CGImageSourceRemoveCacheAtIndex(CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));






extern "C" __attribute__((visibility("default"))) CGImageRef _Nullable CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));







extern "C" __attribute__((visibility("default"))) CGImageSourceRef _Nonnull CGImageSourceCreateIncremental(CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) void CGImageSourceUpdateData(CGImageSourceRef _Nonnull isrc, CFDataRef _Nonnull data, bool final) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) void CGImageSourceUpdateDataProvider(CGImageSourceRef _Nonnull isrc, CGDataProviderRef _Nonnull provider, bool final) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility("default"))) CGImageSourceStatus CGImageSourceGetStatus(CGImageSourceRef _Nonnull isrc) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) CGImageSourceStatus CGImageSourceGetStatusAtIndex(CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) size_t CGImageSourceGetPrimaryImageIndex(CGImageSourceRef _Nonnull isrc) __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) CFDictionaryRef _Nullable CGImageSourceCopyAuxiliaryDataInfoAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFStringRef _Nonnull auxiliaryImageDataType ) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));

typedef struct __attribute__((objc_bridge(id))) CGImageDestination * CGImageDestinationRef;
#pragma clang assume_nonnull begin








extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationLossyCompressionQuality __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationBackgroundColor __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationImageMaxPixelSize __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationEmbedThumbnail __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationOptimizeColorForSharing __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=9.3)));
#pragma clang assume_nonnull end





extern "C" __attribute__((visibility("default"))) CFTypeID CGImageDestinationGetTypeID(void) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) CFArrayRef _Nonnull CGImageDestinationCopyTypeIdentifiers(void) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) CGImageDestinationRef _Nullable CGImageDestinationCreateWithDataConsumer(CGDataConsumerRef _Nonnull consumer, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) CGImageDestinationRef _Nullable CGImageDestinationCreateWithData(CFMutableDataRef _Nonnull data, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) CGImageDestinationRef _Nullable CGImageDestinationCreateWithURL(CFURLRef _Nonnull url, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) void CGImageDestinationSetProperties(CGImageDestinationRef _Nonnull idst, CFDictionaryRef _Nullable properties) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) void CGImageDestinationAddImage(CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CFDictionaryRef _Nullable properties) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) void CGImageDestinationAddImageFromSource(CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable properties) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));







extern "C" __attribute__((visibility("default"))) bool CGImageDestinationFinalize(CGImageDestinationRef _Nonnull idst) __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));






extern "C" __attribute__((visibility("default"))) void CGImageDestinationAddImageAndMetadata(CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CGImageMetadataRef _Nullable metadata, CFDictionaryRef _Nullable options) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));






#pragma clang assume_nonnull begin






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationMetadata __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationMergeMetadata __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));






extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataShouldExcludeXMP __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageMetadataShouldExcludeGPS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationDateTime __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageDestinationOrientation __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
extern "C" __attribute__((visibility("default"))) bool CGImageDestinationCopyImageSource(CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options, _Nullable CFErrorRef * _Nullable err) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) void CGImageDestinationAddAuxiliaryDataInfo(CGImageDestinationRef _Nonnull idst, CFStringRef _Nonnull auxiliaryImageDataType, CFDictionaryRef _Nonnull auxiliaryDataInfoDictionary ) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));

#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSDictionary __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyRawDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerMinoltaDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerFujiDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerOlympusDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerPentaxDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageProperty8BIMDictionary __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxDictionary __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyOpenEXRDictionary __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerAppleDictionary __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyFileContentsDictionary __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyFileSize __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPixelHeight __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPixelWidth __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDPIHeight __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDPIWidth __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDepth __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyOrientation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIsFloat __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIsIndexed __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHasAlpha __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyColorModel __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyProfileName __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPrimaryImage __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyColorModelRGB __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyColorModelGray __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyColorModelCMYK __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyColorModelLab __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFCompression __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFPhotometricInterpretation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFDocumentName __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFImageDescription __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFMake __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFModel __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFOrientation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFXResolution __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFYResolution __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFResolutionUnit __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFSoftware __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFTransferFunction __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFDateTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFArtist __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFHostComputer __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFCopyright __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFWhitePoint __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFPrimaryChromaticities __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFTileWidth __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyTIFFTileLength __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFVersion __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFXDensity __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFYDensity __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFDensityUnit __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyJFIFIsProgressive __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSLoopCount __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSDelayTime __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSUnclampedDelayTime __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSCanvasPixelWidth __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSCanvasPixelHeight __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHEICSFrameInfoArray __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifExposureTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFNumber __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifExposureProgram __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSpectralSensitivity __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifISOSpeedRatings __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifOECF __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSensitivityType __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifStandardOutputSensitivity __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifRecommendedExposureIndex __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifISOSpeed __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifISOSpeedLatitudeyyy __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifISOSpeedLatitudezzz __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifVersion __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifDateTimeOriginal __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifDateTimeDigitized __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifOffsetTime __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifOffsetTimeOriginal __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifOffsetTimeDigitized __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifComponentsConfiguration __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifCompressedBitsPerPixel __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifShutterSpeedValue __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifApertureValue __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifBrightnessValue __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifExposureBiasValue __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifMaxApertureValue __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubjectDistance __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifMeteringMode __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifLightSource __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFlash __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFocalLength __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubjectArea __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifMakerNote __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifUserComment __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubsecTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubsecTimeOriginal __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubsecTimeDigitized __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFlashPixVersion __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifColorSpace __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifPixelXDimension __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifPixelYDimension __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifRelatedSoundFile __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFlashEnergy __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSpatialFrequencyResponse __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFocalPlaneXResolution __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFocalPlaneYResolution __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFocalPlaneResolutionUnit __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubjectLocation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifExposureIndex __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSensingMethod __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFileSource __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSceneType __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifCFAPattern __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifCustomRendered __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifExposureMode __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifWhiteBalance __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifDigitalZoomRatio __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifFocalLenIn35mmFilm __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSceneCaptureType __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifGainControl __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifContrast __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSaturation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSharpness __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifDeviceSettingDescription __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubjectDistRange __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifImageUniqueID __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifCameraOwnerName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifBodySerialNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifLensSpecification __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifLensMake __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifLensModel __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifLensSerialNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifGamma __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifCompositeImage __attribute__((availability(macos,introduced=10.15.1))) __attribute__((availability(ios,introduced=13.1)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSourceImageNumberOfCompositeImage __attribute__((availability(macos,introduced=10.15.1))) __attribute__((availability(ios,introduced=13.1)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSourceExposureTimesOfCompositeImage __attribute__((availability(macos,introduced=10.15.1))) __attribute__((availability(ios,introduced=13.1)));


extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifSubsecTimeOrginal __attribute__((availability(macos,introduced=10.4,deprecated=10.11,message="No longer supported"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="No longer supported")));


extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxLensInfo __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxLensModel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxLensID __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxLensSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxImageNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxFlashCompensation __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxOwnerName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyExifAuxFirmware __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFLoopCount __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFDelayTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFImageColorMap __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFHasGlobalColorMap __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFUnclampedDelayTime __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFCanvasPixelWidth __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFCanvasPixelHeight __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGIFFrameInfoArray __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGAuthor __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGChromaticities __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGComment __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGCopyright __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGCreationTime __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGDescription __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGDisclaimer __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGGamma __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGInterlaceType __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGModificationTime __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGSoftware __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGSource __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGsRGBIntent __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGTitle __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGWarning __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGXPixelsPerMeter __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGYPixelsPerMeter __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGLoopCount __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGDelayTime __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGUnclampedDelayTime __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGFrameInfoArray __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGCanvasPixelWidth __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAPNGCanvasPixelHeight __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSVersion __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSLatitudeRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSLatitude __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSLongitudeRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSLongitude __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSAltitudeRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSAltitude __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSTimeStamp __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSSatellites __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSStatus __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSMeasureMode __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDOP __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSSpeedRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSSpeed __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSTrackRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSTrack __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSImgDirectionRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSImgDirection __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSMapDatum __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestLatitudeRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestLatitude __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestLongitudeRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestLongitude __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestBearingRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestBearing __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestDistanceRef __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDestDistance __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSProcessingMethod __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSAreaInformation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDateStamp __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSDifferental __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyGPSHPositioningError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCObjectTypeReference __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCObjectAttributeReference __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCObjectName __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCEditStatus __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCEditorialUpdate __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCUrgency __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCSubjectReference __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCategory __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCSupplementalCategory __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCFixtureIdentifier __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCKeywords __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContentLocationCode __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContentLocationName __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCReleaseDate __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCReleaseTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExpirationDate __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExpirationTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCSpecialInstructions __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCActionAdvised __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCReferenceService __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCReferenceDate __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCReferenceNumber __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCDateCreated __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCTimeCreated __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCDigitalCreationDate __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCDigitalCreationTime __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCOriginatingProgram __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCProgramVersion __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCObjectCycle __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCByline __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCBylineTitle __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCity __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCSubLocation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCProvinceState __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCountryPrimaryLocationCode __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCountryPrimaryLocationName __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCOriginalTransmissionReference __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCHeadline __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCredit __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCSource __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCopyrightNotice __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContact __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCaptionAbstract __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCWriterEditor __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCImageType __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCImageOrientation __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCLanguageIdentifier __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCStarRating __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCCreatorContactInfo __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCRightsUsageTerms __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCScene __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAboutCvTerm __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAboutCvTermCvId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAboutCvTermId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAboutCvTermName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAboutCvTermRefinedAbout __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAddlModelInfo __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkOrObject __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCircaDateCreated __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkContentDescription __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkContributionDescription __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightNotice __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCreator __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCreatorID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightOwnerID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightOwnerName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkLicensorID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkLicensorName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkDateCreated __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkPhysicalDescription __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkSource __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkSourceInventoryNo __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkSourceInvURL __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkStylePeriod __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtArtworkTitle __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAudioBitrate __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAudioBitrateMode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtAudioChannelCount __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCircaDateCreated __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContainerFormat __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContainerFormatIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContainerFormatName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContributor __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContributorIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContributorName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtContributorRole __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCopyrightYear __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCreator __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCreatorIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCreatorName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtCreatorRole __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtControlledVocabularyTerm __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreen __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegion __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionD __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionH __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionText __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionUnit __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionW __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionX __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionY __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDigitalImageGUID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDigitalSourceFileType __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDigitalSourceType __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDopesheet __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDopesheetLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDopesheetLinkLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEmbdEncRightsExpr __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEpisode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEpisodeIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEpisodeName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEpisodeNumber __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtEvent __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtShownEvent __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtShownEventIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtShownEventName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtExternalMetadataLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtFeedIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtGenre __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtGenreCvId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtGenreCvTermId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtGenreCvTermName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtGenreCvTermRefinedAbout __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtHeadline __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtIPTCLastEdited __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLinkedEncRightsExpr __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExpr __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExprType __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationCreated __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationCity __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationCountryCode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationCountryName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationGPSAltitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationGPSLatitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationGPSLongitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationLocationId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationLocationName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationProvinceState __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationSublocation __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationWorldRegion __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtLocationShown __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtMaxAvailHeight __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtMaxAvailWidth __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtModelAge __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtOrganisationInImageCode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtOrganisationInImageName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonHeard __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonHeardIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonHeardName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImage __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageWDetails __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageCharacteristic __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermCvId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageDescription __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPersonInImageName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtProductInImage __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtProductInImageDescription __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtProductInImageGTIN __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtProductInImageName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPublicationEvent __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPublicationEventDate __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPublicationEventIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtPublicationEventName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRating __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRatingRegion __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionCity __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionCountryCode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionCountryName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSAltitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSLatitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSLongitude __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionLocationId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionLocationName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionProvinceState __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionSublocation __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingRegionWorldRegion __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingScaleMaxValue __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingScaleMinValue __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingSourceLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingValue __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRatingValueLogoLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRegistryID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRegistryEntryRole __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRegistryItemID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtRegistryOrganisationID __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtReleaseReady __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeason __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeasonIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeasonName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeasonNumber __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeries __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeriesIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSeriesName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtStorylineIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtStreamReady __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtStylePeriod __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSupplyChainSource __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSupplyChainSourceIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtSupplyChainSourceName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTemporalCoverage __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTemporalCoverageFrom __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTemporalCoverageTo __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTranscript __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTranscriptLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTranscriptLinkLink __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoBitrate __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoBitrateMode __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoDisplayAspectRatio __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoEncodingProfile __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoShotType __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoShotTypeIdentifier __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoShotTypeName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVideoStreamsCount __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtVisualColor __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtWorkflowTag __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermId __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermName __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoCity __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoCountry __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoAddress __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoPostalCode __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoStateProvince __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoEmails __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoPhones __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyIPTCContactInfoWebURLs __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageProperty8BIMLayerNames __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageProperty8BIMVersion __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGVersion __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBackwardVersion __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGUniqueCameraModel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGLocalizedCameraModel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCameraSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGLensInfo __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBlackLevel __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGWhiteLevel __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCalibrationIlluminant1 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCalibrationIlluminant2 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGColorMatrix1 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGColorMatrix2 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCameraCalibration1 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCameraCalibration2 __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAsShotNeutral __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAsShotWhiteXY __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBaselineExposure __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBaselineNoise __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBaselineSharpness __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPrivateData __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCameraCalibrationSignature __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileCalibrationSignature __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGNoiseProfile __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGWarpRectilinear __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGWarpFisheye __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGFixVignetteRadial __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGActiveArea __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAnalogBalance __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAntiAliasStrength __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAsShotICCProfile __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAsShotPreProfileMatrix __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGAsShotProfileName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBaselineExposureOffset __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBayerGreenSplit __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBestQualityScale __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBlackLevelDeltaH __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBlackLevelDeltaV __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGBlackLevelRepeatDim __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCFALayout __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCFAPlaneColor __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGChromaBlurRadius __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGColorimetricReference __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCurrentICCProfile __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGCurrentPreProfileMatrix __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDefaultBlackRender __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDefaultCropOrigin __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDefaultCropSize __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDefaultScale __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGDefaultUserCrop __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGExtraCameraProfiles __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGForwardMatrix1 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGForwardMatrix2 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGLinearizationTable __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGLinearResponseLimit __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGMakerNoteSafety __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGMaskedAreas __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGNewRawImageDigest __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGNoiseReductionApplied __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOpcodeList1 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOpcodeList2 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOpcodeList3 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalBestQualityFinalSize __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalDefaultCropSize __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalDefaultFinalSize __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalRawFileData __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalRawFileDigest __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGOriginalRawFileName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewApplicationName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewApplicationVersion __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewColorSpace __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewDateTime __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewSettingsDigest __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGPreviewSettingsName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileCopyright __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileEmbedPolicy __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileHueSatMapData1 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileHueSatMapData2 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileHueSatMapDims __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileHueSatMapEncoding __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileLookTableData __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileLookTableDims __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileLookTableEncoding __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileName __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGProfileToneCurve __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGRawDataUniqueID __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGRawImageDigest __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGRawToPreviewGain __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGReductionMatrix1 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGReductionMatrix2 __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGRowInterleaveFactor __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGShadowScale __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyDNGSubTileBlockSize __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));





extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFDescription __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFFirmware __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFOwnerName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFImageName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFImageFileName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFReleaseMethod __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFReleaseTiming __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFRecordID __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFSelfTimingTime __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFCameraSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFImageSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFContinuousDrive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFFocusMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFMeteringMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFShootingMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFLensModel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFLensMaxMM __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFLensMinMM __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFWhiteBalanceIndex __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFFlashExposureComp __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyCIFFMeasuredEV __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonISOSetting __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonColorMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonQuality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonWhiteBalanceMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonSharpenMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonFocusMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonFlashSetting __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonISOSelection __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonFlashExposureComp __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonImageAdjustment __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonLensAdapter __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonLensType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonLensInfo __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonFocusDistance __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonDigitalZoom __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonShootingMode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonCameraSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerNikonShutterCount __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonOwnerName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonCameraSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonImageSerialNumber __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonFlashExposureComp __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonContinuousDrive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonLensModel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonFirmware __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyMakerCanonAspectRatioInfo __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=4.0)));



extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyOpenEXRAspectRatio __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=11.3)));



typedef uint32_t CGImagePropertyOrientation; enum {
    kCGImagePropertyOrientationUp = 1,
    kCGImagePropertyOrientationUpMirrored,
    kCGImagePropertyOrientationDown,
    kCGImagePropertyOrientationDownMirrored,
    kCGImagePropertyOrientationLeftMirrored,
    kCGImagePropertyOrientationRight,
    kCGImagePropertyOrientationRightMirrored,
    kCGImagePropertyOrientationLeft
};
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPNGCompressionFilter __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypeDepth __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypeDisparity __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypePortraitEffectsMatte __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0)));

extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypeSemanticSegmentationSkinMatte __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypeSemanticSegmentationHairMatte __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataTypeSemanticSegmentationTeethMatte __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));







extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataInfoData __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataInfoDataDescription __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAuxiliaryDataInfoMetadata __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));


extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyImageCount __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyWidth __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyHeight __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyBytesPerRow __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyNamedColorSpace __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyPixelFormat __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyImages __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyThumbnailImages __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAuxiliaryData __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImagePropertyAuxiliaryDataType __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin


typedef OSStatus CGImageAnimationStatus; enum {
    kCGImageAnimationStatus_ParameterError = -22140,
    kCGImageAnimationStatus_CorruptInputImage = -22141,
    kCGImageAnimationStatus_UnsupportedFormat = -22142,
    kCGImageAnimationStatus_IncompleteInputImage = -22143,
    kCGImageAnimationStatus_AllocationFailure = -22144
};




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAnimationStartIndex __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAnimationDelayTime __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));




extern "C" __attribute__((visibility("default"))) const CFStringRef kCGImageAnimationLoopCount __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));


typedef void (*CGImageSourceAnimationBlock)(size_t index, CGImageRef image, bool* stop);







extern "C" __attribute__((visibility("default"))) OSStatus CGAnimateImageAtURLWithBlock(CFURLRef url, CFDictionaryRef _Nullable options, CGImageSourceAnimationBlock block) __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));







extern "C" __attribute__((visibility("default"))) OSStatus CGAnimateImageDataWithBlock(CFDataRef data, CFDictionaryRef _Nullable options, CGImageSourceAnimationBlock block) __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

#ifndef _REWRITER_typedef_CIColor
#define _REWRITER_typedef_CIColor
typedef struct objc_object CIColor;
typedef struct {} _objc_exc_CIColor;
#endif

#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif

// @class AVDepthData;
#ifndef _REWRITER_typedef_AVDepthData
#define _REWRITER_typedef_AVDepthData
typedef struct objc_object AVDepthData;
typedef struct {} _objc_exc_AVDepthData;
#endif

// @class AVPortraitEffectsMatte;
#ifndef _REWRITER_typedef_AVPortraitEffectsMatte
#define _REWRITER_typedef_AVPortraitEffectsMatte
typedef struct objc_object AVPortraitEffectsMatte;
typedef struct {} _objc_exc_AVPortraitEffectsMatte;
#endif

// @class AVSemanticSegmentationMatte;
#ifndef _REWRITER_typedef_AVSemanticSegmentationMatte
#define _REWRITER_typedef_AVSemanticSegmentationMatte
typedef struct objc_object AVSemanticSegmentationMatte;
typedef struct {} _objc_exc_AVSemanticSegmentationMatte;
#endif


// @protocol MTLTexture;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

struct CIImage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};




typedef int CIFormat __attribute__((swift_wrapper(enum)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatARGB8 __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatBGRA8;
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBA8;
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatABGR8 __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBAh __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBA16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBAf __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatA8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatA16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatAh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatAf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatR8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatR16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRG8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRG16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatL8 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatL16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLh __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLf __attribute__((availability(ios,introduced=10_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLA8 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLA16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLAh __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLAf __attribute__((availability(ios,introduced=10_0)));
typedef NSString * CIImageOption __attribute__((swift_wrapper(enum)));




extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageColorSpace;



extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageNearestSampling __attribute__((availability(ios,introduced=11_0)));







extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageProperties __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageApplyOrientationProperty __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageTextureTarget __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageTextureFormat __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliaryDepth __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliaryDisparity __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliaryPortraitEffectsMatte __attribute__((availability(ios,introduced=12_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliarySemanticSegmentationSkinMatte __attribute__((availability(ios,introduced=13_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliarySemanticSegmentationHairMatte __attribute__((availability(ios,introduced=13_0)));
extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageAuxiliarySemanticSegmentationTeethMatte __attribute__((availability(ios,introduced=13_0)));



// + (CIImage *)imageWithCGImage:(CGImageRef)image;
#if 0
+ (CIImage *)imageWithCGImage:(CGImageRef)image
                      options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif



#if 0
+ (CIImage *)imageWithCGImageSource:(CGImageSourceRef)source
                              index:(size_t)index
                            options:(nullable NSDictionary<CIImageOption, id> *)dict __attribute__((availability(ios,introduced=13_0)));
#endif



// + (CIImage *)imageWithCGLayer:(CGLayerRef)layer __attribute__((availability(ios,unavailable)));
#if 0
+ (CIImage *)imageWithCGLayer:(CGLayerRef)layer
                      options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,unavailable)));
#endif






#if 0
+ (CIImage *)imageWithBitmapData:(NSData *)data
                     bytesPerRow:(size_t)bytesPerRow
                            size:(CGSize)size
                          format:(CIFormat)format
                      colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif







#if 0
+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                   colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0,deprecated=12_0,message="" "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#endif







#if 0
+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                      options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,unavailable)));
#endif





#if 0
+ (nullable CIImage *)imageWithMTLTexture:(id<MTLTexture>)texture
                                  options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif


// + (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url;
#if 0
+ (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url
                                     options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif


// + (nullable CIImage *)imageWithData:(NSData *)data;
#if 0
+ (nullable CIImage *)imageWithData:(NSData *)data
                            options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif



// + (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
#if 0
+ (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                            options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif



// + (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                            options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif




// + (CIImage *)imageWithIOSurface:(IOSurfaceRef)surface __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIImage *)imageWithIOSurface:(IOSurfaceRef)surface
                        options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif





// + (CIImage *)imageWithColor:(CIColor *)color;


// + (CIImage *)emptyImage;


@property (class, strong, readonly) CIImage *blackImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *whiteImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *grayImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *redImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *greenImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *blueImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *cyanImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *magentaImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *yellowImage __attribute__((availability(ios,introduced=13_0)));
@property (class, strong, readonly) CIImage *clearImage __attribute__((availability(ios,introduced=13_0)));



// - (instancetype)initWithCGImage:(CGImageRef)image;
#if 0
- (instancetype)initWithCGImage:(CGImageRef)image
                        options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif


#if 0
- (instancetype) initWithCGImageSource:(CGImageSourceRef)source
                                 index:(size_t)index
                               options:(nullable NSDictionary<CIImageOption, id> *)dict __attribute__((availability(ios,introduced=13_0)));
#endif


#if 0
- (instancetype)initWithCGLayer:(CGLayerRef)layer
    __attribute__((availability(ios,unavailable)));
#endif

#if 0
- (instancetype)initWithCGLayer:(CGLayerRef)layer
                        options:(nullable NSDictionary<CIImageOption, id> *)options
    __attribute__((availability(ios,unavailable)));
#endif


// - (nullable instancetype)initWithData:(NSData *)data;
#if 0
- (nullable instancetype)initWithData:(NSData *)data
                              options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif


#if 0
- (instancetype)initWithBitmapData:(NSData *)data
                       bytesPerRow:(size_t)bytesPerRow
                              size:(CGSize)size
                            format:(CIFormat)format
                        colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif


#if 0
- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                     colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0,deprecated=12_0,message="" "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#endif


#if 0
- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                        options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,unavailable)));
#endif



#if 0
- (nullable instancetype)initWithMTLTexture:(id<MTLTexture>)texture
                                    options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif


// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
#if 0
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url
                                       options:(nullable NSDictionary<CIImageOption, id> *)options;
#endif



// - (instancetype)initWithIOSurface:(IOSurfaceRef)surface __attribute__((availability(ios,introduced=5_0)));

#if 0
- (instancetype)initWithIOSurface:(IOSurfaceRef)surface
                          options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif

// - (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
#if 0
- (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                              options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif


// - (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
#if 0
- (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                              options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif


// - (instancetype)initWithColor:(CIColor *)color;



// - (CIImage *)imageByApplyingTransform:(CGAffineTransform)matrix;


#if 0
- (CIImage *)imageByApplyingTransform:(CGAffineTransform)matrix
                highQualityDownsample:(BOOL)highQualityDownsample __attribute__((availability(ios,introduced=10_0)));
#endif





// - (CIImage *)imageByApplyingOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));




// - (CGAffineTransform)imageTransformForOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));


// - (CIImage *)imageByApplyingCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios,introduced=11_0)));


// - (CGAffineTransform)imageTransformForCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios,introduced=11_0)));



// - (CIImage *)imageByCompositingOverImage:(CIImage *)dest __attribute__((availability(ios,introduced=8_0)));


// - (CIImage *)imageByCroppingToRect:(CGRect)rect;


// - (CIImage *)imageByClampingToExtent __attribute__((availability(ios,introduced=8_0)));



// - (CIImage *)imageByClampingToRect:(CGRect)rect __attribute__((availability(ios,introduced=10_0)));





#if 0
- (CIImage *)imageByApplyingFilter:(NSString *)filterName
               withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));
#endif






// - (CIImage *)imageByApplyingFilter:(NSString *)filterName __attribute__((availability(ios,introduced=11_0)));




// - (nullable CIImage *)imageByColorMatchingColorSpaceToWorkingSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));



// - (nullable CIImage *)imageByColorMatchingWorkingSpaceToColorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageByPremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageByUnpremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageBySettingAlphaOneInExtent:(CGRect)extent __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageByApplyingGaussianBlurWithSigma:(double)sigma __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageBySettingProperties:(NSDictionary*)properties __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageBySamplingLinear __attribute__((availability(ios,introduced=11_0)));


// - (CIImage *)imageBySamplingNearest __attribute__((availability(ios,introduced=11_0)));



// - (CIImage *)imageByInsertingIntermediate __attribute__((availability(ios,introduced=12_0)));



// - (CIImage *)imageByInsertingIntermediate:(BOOL)cache __attribute__((availability(ios,introduced=12_0)));


// @property (nonatomic, readonly) CGRect extent;




// @property (atomic, readonly) NSDictionary<NSString *,id> *properties __attribute__((availability(ios,introduced=5_0)));


// @property (atomic, readonly) CIFilterShape *definition __attribute__((availability(ios,unavailable)));



// @property (atomic, readonly, nullable) NSURL *url __attribute__((availability(ios,introduced=9_0)));



// @property (atomic, readonly, nullable) CGColorSpaceRef colorSpace __attribute__((availability(ios,introduced=9_0))) __attribute__((cf_returns_not_retained));




// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer __attribute__((availability(ios,introduced=10_0)));



// @property (nonatomic, readonly, nullable) CGImageRef CGImage __attribute__((availability(ios,introduced=10_0)));



#if 0
- (CGRect)regionOfInterestForImage:(CIImage *)image
                            inRect:(CGRect)rect __attribute__((availability(ios,introduced=6_0)));
#endif


/* @end */



// @interface CIImage (AutoAdjustment)



typedef NSString * CIImageAutoAdjustmentOption __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility("default"))) CIImageAutoAdjustmentOption const kCIImageAutoAdjustEnhance __attribute__((availability(ios,introduced=5_0)));




extern "C" __attribute__((visibility("default"))) CIImageAutoAdjustmentOption const kCIImageAutoAdjustRedEye __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility("default"))) CIImageAutoAdjustmentOption const kCIImageAutoAdjustFeatures __attribute__((availability(ios,introduced=5_0)));




extern "C" __attribute__((visibility("default"))) CIImageAutoAdjustmentOption const kCIImageAutoAdjustCrop __attribute__((availability(ios,introduced=8_0)));




extern "C" __attribute__((visibility("default"))) CIImageAutoAdjustmentOption const kCIImageAutoAdjustLevel __attribute__((availability(ios,introduced=8_0)));
// - (NSArray<CIFilter *> *)autoAdjustmentFilters __attribute__((availability(ios,introduced=5_0)));
#if 0
- (NSArray<CIFilter *> *)autoAdjustmentFiltersWithOptions:(nullable NSDictionary<CIImageAutoAdjustmentOption, id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


/* @end */


// @interface CIImage (AVDepthData)



// @property (nonatomic, readonly, nullable) AVDepthData *depthData __attribute__((availability(ios,introduced=11_0)));

#if 0
-(nullable instancetype) initWithDepthData:(AVDepthData *)data
                                   options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=11_0)));
#endif


// -(nullable instancetype)initWithDepthData:(AVDepthData *)data __attribute__((availability(ios,introduced=11_0)));

#if 0
+(nullable instancetype)imageWithDepthData:(AVDepthData *)data
                                   options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=11_0)));
#endif


// +(nullable instancetype)imageWithDepthData:(AVDepthData *)data __attribute__((availability(ios,introduced=11_0)));

/* @end */



// @interface CIImage (AVPortraitEffectsMatte)



// @property (nonatomic, readonly, nullable) AVPortraitEffectsMatte *portraitEffectsMatte __attribute__((availability(ios,introduced=12_0)));

#if 0
-(nullable instancetype) initWithPortaitEffectsMatte:(AVPortraitEffectsMatte *)matte
                                             options:(nullable NSDictionary<CIImageOption,id> *)options __attribute__((availability(ios,introduced=12_0)));
#endif


// -(nullable instancetype)initWithPortaitEffectsMatte:(AVPortraitEffectsMatte *)matte __attribute__((availability(ios,introduced=11_0)));

#if 0
+(nullable instancetype)imageWithPortaitEffectsMatte:(AVPortraitEffectsMatte *)matte
                                            options:(nullable NSDictionary<CIImageOption,id> *)options __attribute__((availability(ios,introduced=12_0)));
#endif


// +(nullable instancetype)imageWithPortaitEffectsMatte:(AVPortraitEffectsMatte *)matte __attribute__((availability(ios,introduced=12_0)));

/* @end */


// @interface CIImage (AVSemanticSegmentationMatte)



// @property (nonatomic, readonly, nullable) AVSemanticSegmentationMatte *semanticSegmentationMatte __attribute__((availability(ios,introduced=13_0)));

#if 0
-(nullable instancetype)initWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte *)matte
                                                  options:(nullable NSDictionary<CIImageOption,id> *)options __attribute__((availability(ios,introduced=13_0)));
#endif


// -(nullable instancetype)initWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte *)matte __attribute__((availability(ios,introduced=13_0)));

#if 0
+(nullable instancetype)imageWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte *)matte
                                                   options:(nullable NSDictionary<CIImageOption,id> *)options __attribute__((availability(ios,introduced=13_0)));
#endif


// +(nullable instancetype)imageWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte *)matte __attribute__((availability(ios,introduced=13_0)));


/* @end */

#pragma clang assume_nonnull end
// @class CIFilter;
#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif


// @protocol MTLDevice, MTLTexture, MTLCommandBuffer, MTLCommandQueue;

#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

struct CIContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};




typedef NSString * CIContextOption __attribute__((swift_wrapper(enum)));



extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextOutputColorSpace;



extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextWorkingColorSpace;






extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextWorkingFormat __attribute__((availability(ios,introduced=8_0)));





extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextHighQualityDownsample __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextOutputPremultiplied __attribute__((availability(ios,introduced=7_0)));




extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextCacheIntermediates __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextUseSoftwareRenderer;



extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextPriorityRequestLow __attribute__((availability(ios,introduced=8_0)));




extern "C" __attribute__((visibility("default"))) CIContextOption const kCIContextAllowLowPower __attribute__((availability(ios,introduced=13_0)));
#if 0
+ (CIContext *)contextWithCGContext:(CGContextRef)cgctx
                            options:(nullable NSDictionary<CIContextOption, id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif

#if 0
+ (CIContext *)contextWithOptions:(nullable NSDictionary<CIContextOption, id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


// + (CIContext *)context __attribute__((availability(ios,introduced=5_0)));

#if 0
- (instancetype)initWithOptions:(nullable NSDictionary<CIContextOption, id> *)options
__attribute__((availability(ios,introduced=5_0)));
#endif


// - (instancetype)init __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
    __attribute__((availability(ios,introduced=5_0,deprecated=12_0,message="" "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#endif


#if 0
+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
                              options:(nullable NSDictionary<CIContextOption, id> *)options
    __attribute__((availability(ios,introduced=5_0,deprecated=12_0,message="" "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#endif

// + (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device __attribute__((availability(ios,introduced=9_0)));

#if 0
+ (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device
                            options:(nullable NSDictionary<CIContextOption, id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif





// + (CIContext *)contextWithMTLCommandQueue:(id<MTLCommandQueue>)commandQueue __attribute__((availability(ios,introduced=13_0)));

#if 0
+ (CIContext *)contextWithMTLCommandQueue:(id<MTLCommandQueue>)commandQueue
                            options:(nullable NSDictionary<CIContextOption, id> *)options
__attribute__((availability(ios,introduced=13_0)));
#endif







// @property (nullable, nonatomic, readonly) CGColorSpaceRef workingColorSpace __attribute__((availability(ios,introduced=9_0)));


// @property (nonatomic, readonly) CIFormat workingFormat __attribute__((availability(ios,introduced=9_0)));






#if 0
- (void)drawImage:(CIImage *)image
          atPoint:(CGPoint)atPoint
         fromRect:(CGRect)fromRect __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));
#endif




#if 0
- (void)drawImage:(CIImage *)image
           inRect:(CGRect)inRect
         fromRect:(CGRect)fromRect;
#endif






#if 0
- (nullable CGLayerRef)createCGLayerWithSize:(CGSize)size
                                        info:(nullable CFDictionaryRef)info
__attribute__((cf_returns_retained)) __attribute__((availability(ios,unavailable)));
#endif

#if 0
- (void)render:(CIImage *)image
   toBitmap:(void *)data
   rowBytes:(ptrdiff_t)rowBytes
  bounds:(CGRect)bounds
  format:(CIFormat)format
 colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif

#if 0
- (void)render:(CIImage *)image
   toIOSurface:(IOSurfaceRef)surface
  bounds:(CGRect)bounds
 colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=5_0)));
#endif

#if 0
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer __attribute__((availability(ios,introduced=5_0)));
#endif

#if 0
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer
        bounds:(CGRect)bounds
    colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=5_0)));
#endif








#if 0
- (void)render:(CIImage *)image
  toMTLTexture:(id<MTLTexture>)texture
 commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer
        bounds:(CGRect)bounds
    colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=9_0)));
#endif

// - (void)reclaimResources __attribute__((availability(ios,unavailable)));



// - (void)clearCaches __attribute__((availability(ios,introduced=10_0)));



// - (CGSize)inputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));



// - (CGSize)outputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @interface CIContext (createCGImage)





#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
__attribute__((cf_returns_retained));
#endif








#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
__attribute__((cf_returns_retained));
#endif

#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
                            deferred:(BOOL)deferred
__attribute__((cf_returns_retained)) __attribute__((availability(ios,introduced=10_0)));
#endif


/* @end */



// @interface CIContext (OfflineGPUSupport)




// +(unsigned int)offlineGPUCount __attribute__((availability(ios,unavailable)));
/* @end */


typedef NSString * CIImageRepresentationOption __attribute__((swift_wrapper(enum)));

// @interface CIContext (ImageRepresentation)


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationAVDepthData __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationDepthImage __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationDisparityImage __attribute__((availability(ios,introduced=11_0)));



extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationAVPortraitEffectsMatte __attribute__((availability(ios,introduced=12_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationPortraitEffectsMatteImage __attribute__((availability(ios,introduced=12_0)));



extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationAVSemanticSegmentationMattes __attribute__((availability(ios,introduced=13_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationSemanticSegmentationSkinMatteImage __attribute__((availability(ios,introduced=13_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationSemanticSegmentationHairMatteImage __attribute__((availability(ios,introduced=13_0)));


extern "C" __attribute__((visibility("default"))) CIImageRepresentationOption const kCIImageRepresentationSemanticSegmentationTeethMatteImage __attribute__((availability(ios,introduced=13_0)));






#if 0
- (nullable NSData*) TIFFRepresentationOfImage:(CIImage*)image
                                        format:(CIFormat)format
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary<CIImageRepresentationOption, id>*)options __attribute__((availability(ios,introduced=10_0)));
#endif






#if 0
- (nullable NSData*) JPEGRepresentationOfImage:(CIImage*)image
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary<CIImageRepresentationOption, id>*)options __attribute__((availability(ios,introduced=10_0)));
#endif







#if 0
- (nullable NSData*) HEIFRepresentationOfImage:(CIImage*)image
                                        format:(CIFormat)format
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary<CIImageRepresentationOption, id>*)options __attribute__((availability(ios,introduced=11_0)));
#endif






#if 0
- (nullable NSData*) PNGRepresentationOfImage:(CIImage*)image
                                       format:(CIFormat)format
                                   colorSpace:(CGColorSpaceRef)colorSpace
                                      options:(NSDictionary<CIImageRepresentationOption, id>*)options __attribute__((availability(ios,introduced=11_0)));
#endif






#if 0
- (BOOL) writeTIFFRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary<CIImageRepresentationOption, id>*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));
#endif






#if 0
- (BOOL) writePNGRepresentationOfImage:(CIImage*)image
                                 toURL:(NSURL*)url
                                format:(CIFormat)format
                            colorSpace:(CGColorSpaceRef)colorSpace
                               options:(NSDictionary<CIImageRepresentationOption, id>*)options
                                 error:(NSError **)errorPtr __attribute__((availability(ios,introduced=11_0)));
#endif






#if 0
- (BOOL) writeJPEGRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary<CIImageRepresentationOption, id>*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));
#endif







#if 0
- (BOOL) writeHEIFRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary<CIImageRepresentationOption, id>*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=11_0)));
#endif



/* @end */


// @interface CIContext (CIDepthBlurEffect)
// - (nullable CIFilter *) depthBlurEffectFilterForImageURL:(NSURL *)url options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=12_0)));






// - (nullable CIFilter *) depthBlurEffectFilterForImageData:(NSData *)data options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=12_0)));
#if 0
- (nullable CIFilter *) depthBlurEffectFilterForImage:(CIImage *)image
                                       disparityImage:(CIImage *)disparityImage
                                 portraitEffectsMatte:(nullable CIImage *)portraitEffectsMatte
                                          orientation:(CGImagePropertyOrientation)orientation
                                              options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=12_0)));
#endif


#if 0
- (nullable CIFilter *) depthBlurEffectFilterForImage:(CIImage *)image
                                       disparityImage:(CIImage *)disparityImage
                                 portraitEffectsMatte:(nullable CIImage *)portraitEffectsMatte
                             hairSemanticSegmentation:(nullable CIImage *)hairSemanticSegmentation
                                          orientation:(CGImagePropertyOrientation)orientation
                                              options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=13_0)));
#endif



/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class CIFilter;
#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif




#pragma clang assume_nonnull begin

// @protocol CIFilterConstructor
// - (nullable CIFilter *)filterWithName:(NSString *)name;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin




extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterDisplayName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDescription __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_Mac __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_iOS __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeReferenceDocumentation __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterCategories;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeClass;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeType;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeMin;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeMax;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMin;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMax;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDefault;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeIdentity;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDisplayName;




extern "C" __attribute__((visibility("default"))) NSString * const kCIUIParameterSet __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetBasic __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetIntermediate __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetAdvanced __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetDevelopment __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTime;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeScalar;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeDistance;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeAngle;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeBoolean;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeInteger __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeCount __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOffset;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition3;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeRectangle;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOpaqueColor __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeColor __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeGradient __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeImage __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTransform __attribute__((availability(ios,introduced=5_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryDistortionEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGeometryAdjustment;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryCompositeOperation;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryHalftoneEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryColorAdjustment;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryColorEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryTransition;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryTileEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGenerator;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryReduction __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGradient;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryStylize;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategorySharpen;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryBlur;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryVideo;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryStillImage;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryInterlaced;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryNonSquarePixels;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryHighDynamicRange;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryBuiltIn;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryFilterGenerator __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionExtent __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionDefinition __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionUserInfo __attribute__((availability(ios,unavailable)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionColorSpace __attribute__((availability(ios,unavailable)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIOutputImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBackgroundImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputDepthImageKey __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputDisparityImageKey __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputAmountKey __attribute__((availability(ios,introduced=12_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTimeKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTransformKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputScaleKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputAspectRatioKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputCenterKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputRadiusKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputAngleKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputRefractionKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputWidthKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputSharpnessKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputIntensityKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputEVKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputSaturationKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputColorKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBrightnessKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputContrastKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBiasKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputWeightsKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputGradientImageKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputMaskImageKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputMatteImageKey __attribute__((availability(ios,introduced=12_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputShadingImageKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTargetImageKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputExtentKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputVersionKey __attribute__((availability(ios,introduced=6_0)));


// @class CIKernel;
#ifndef _REWRITER_typedef_CIKernel
#define _REWRITER_typedef_CIKernel
typedef struct objc_object CIKernel;
typedef struct {} _objc_exc_CIKernel;
#endif

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

// @protocol CIFilterConstructor;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif

struct CIFilter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv[8];
};


// @property (readonly, nonatomic, nullable) CIImage *outputImage __attribute__((availability(ios,introduced=5_0)));






// @property (nonatomic, copy) NSString *name;
// - (NSString *)name __attribute__((availability(ios,introduced=5_0)));
// - (void)setName:(NSString *)aString __attribute__((availability(ios,introduced=10_0)));




// @property (getter=isEnabled) BOOL enabled __attribute__((availability(ios,unavailable)));



// @property (nonatomic, readonly) NSArray<NSString *> *inputKeys;


// @property (nonatomic, readonly) NSArray<NSString *> *outputKeys;


// - (void)setDefaults;


// @property (nonatomic, readonly) NSDictionary<NSString *,id> *attributes;
#if 0
- (nullable CIImage *)apply:(CIKernel *)k
      arguments:(nullable NSArray *)args
           options:(nullable NSDictionary<NSString *,id> *)dict __attribute__((availability(ios,unavailable)));
#endif



// - (nullable CIImage *)apply:(CIKernel *)k, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,unavailable))) __attribute__((availability(swift, unavailable, message="")));

/* @end */



// @protocol CIFilter

    // @property (readonly, nonatomic, nullable) CIImage *outputImage;

    /* @optional */



    // + (nullable NSDictionary<NSString *,id>*) customAttributes;

/* @end */





// @interface CIFilter (CIFilterRegistry)




// + (nullable CIFilter *) filterWithName:(NSString *) name;





#if 0
+ (nullable CIFilter *)filterWithName:(NSString *)name
                        keysAndValues:key0, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="")));
#endif






#if 0
+ (nullable CIFilter *)filterWithName:(NSString *)name
                  withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));
#endif



// + (NSArray<NSString *> *)filterNamesInCategory:(nullable NSString *)category;


// + (NSArray<NSString *> *)filterNamesInCategories:(nullable NSArray<NSString *> *)categories;
#if 0
+ (void)registerFilterName:(NSString *)name
               constructor:(id<CIFilterConstructor>)anObject
           classAttributes:(NSDictionary<NSString *,id> *)attributes __attribute__((availability(ios,introduced=9_0)));
#endif



// + (nullable NSString *)localizedNameForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));


// + (NSString *)localizedNameForCategory:(NSString *)category __attribute__((availability(ios,introduced=9_0)));


// + (nullable NSString *)localizedDescriptionForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));




// + (nullable NSURL *)localizedReferenceDocumentationForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));

/* @end */




// @interface CIFilter (CIFilterXMPSerialization)
#if 0
+ (nullable NSData*)serializedXMPFromFilters:(NSArray<CIFilter *> *)filters
                            inputImageExtent:(CGRect)extent
    __attribute__((availability(ios,introduced=6_0)));
#endif




#if 0
+ (NSArray<CIFilter *> *)filterArrayFromSerializedXMP:(NSData *)xmpData
                                     inputImageExtent:(CGRect)extent
                                                error:(NSError **)outError
    __attribute__((availability(ios,introduced=6_0)));
#endif


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef CGRect (*CIKernelROICallback)(int index, CGRect destRect);


// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIKernel
#define _REWRITER_typedef_CIKernel
typedef struct objc_object CIKernel;
typedef struct {} _objc_exc_CIKernel;
#endif

struct CIKernel_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};

// + (nullable NSArray<CIKernel *> *)kernelsWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0,deprecated=12_0,message="" "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));






// + (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0,deprecated=12_0,message="" "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));







#if 0
+ (nullable instancetype)kernelWithFunctionName:(NSString *)name
                           fromMetalLibraryData:(NSData *)data
                                          error:(NSError **)error __attribute__((availability(ios,introduced=11_0)));
#endif


#if 0
+ (nullable instancetype)kernelWithFunctionName:(NSString *)name
                           fromMetalLibraryData:(NSData *)data
                              outputPixelFormat:(CIFormat)format
                                          error:(NSError **)error __attribute__((availability(ios,introduced=11_0)));
#endif



// @property (atomic, readonly) NSString *name __attribute__((availability(ios,introduced=8_0)));
// - (void)setROISelector:(SEL)method __attribute__((availability(ios,introduced=9_0)));
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                            arguments:(nullable NSArray<id> *)args __attribute__((availability(ios,introduced=8_0)));
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIColorKernel
#define _REWRITER_typedef_CIColorKernel
typedef struct objc_object CIColorKernel;
typedef struct {} _objc_exc_CIColorKernel;
#endif

struct CIColorKernel_IMPL {
	struct CIKernel_IMPL CIKernel_IVARS;
};







// + (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0,deprecated=12_0,message="" "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                            arguments:(nullable NSArray<id> *)args;
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIWarpKernel
#define _REWRITER_typedef_CIWarpKernel
typedef struct objc_object CIWarpKernel;
typedef struct {} _objc_exc_CIWarpKernel;
#endif

struct CIWarpKernel_IMPL {
	struct CIKernel_IMPL CIKernel_IVARS;
};







// + (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0,deprecated=12_0,message="" "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                           inputImage:(CIImage*)image
                            arguments:(nullable NSArray<id> *)args;
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIBlendKernel
#define _REWRITER_typedef_CIBlendKernel
typedef struct objc_object CIBlendKernel;
typedef struct {} _objc_exc_CIBlendKernel;
#endif

struct CIBlendKernel_IMPL {
	struct CIColorKernel_IMPL CIColorKernel_IVARS;
};



// + (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0,deprecated=12_0,message="" "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")));
#if 0
- (nullable CIImage *)applyWithForeground:(CIImage*)foreground
                               background:(CIImage*)background;
#endif

#if 0
- (nullable CIImage *)applyWithForeground:(CIImage*)foreground
                               background:(CIImage*)background
                               colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=13_0)));
#endif


/* @end */


// @interface CIBlendKernel (BuiltIn)





@property (class, strong, readonly) CIBlendKernel *componentAdd;
@property (class, strong, readonly) CIBlendKernel *componentMultiply;
@property (class, strong, readonly) CIBlendKernel *componentMin;
@property (class, strong, readonly) CIBlendKernel *componentMax;




@property (class, strong, readonly) CIBlendKernel *clear;
@property (class, strong, readonly) CIBlendKernel *source;
@property (class, strong, readonly) CIBlendKernel *destination;
@property (class, strong, readonly) CIBlendKernel *sourceOver;
@property (class, strong, readonly) CIBlendKernel *destinationOver;
@property (class, strong, readonly) CIBlendKernel *sourceIn;
@property (class, strong, readonly) CIBlendKernel *destinationIn;
@property (class, strong, readonly) CIBlendKernel *sourceOut;
@property (class, strong, readonly) CIBlendKernel *destinationOut;
@property (class, strong, readonly) CIBlendKernel *sourceAtop;
@property (class, strong, readonly) CIBlendKernel *destinationAtop;
@property (class, strong, readonly) CIBlendKernel *exclusiveOr;






@property (class, strong, readonly) CIBlendKernel *multiply;
@property (class, strong, readonly) CIBlendKernel *screen;
@property (class, strong, readonly) CIBlendKernel *overlay;
@property (class, strong, readonly) CIBlendKernel *darken;
@property (class, strong, readonly) CIBlendKernel *lighten;
@property (class, strong, readonly) CIBlendKernel *colorDodge;
@property (class, strong, readonly) CIBlendKernel *colorBurn;
@property (class, strong, readonly) CIBlendKernel *hardLight;
@property (class, strong, readonly) CIBlendKernel *softLight;
@property (class, strong, readonly) CIBlendKernel *difference;
@property (class, strong, readonly) CIBlendKernel *exclusion;


@property (class, strong, readonly) CIBlendKernel *hue;
@property (class, strong, readonly) CIBlendKernel *saturation;
@property (class, strong, readonly) CIBlendKernel *color;
@property (class, strong, readonly) CIBlendKernel *luminosity;


@property (class, strong, readonly) CIBlendKernel *subtract;
@property (class, strong, readonly) CIBlendKernel *divide;
@property (class, strong, readonly) CIBlendKernel *linearBurn;
@property (class, strong, readonly) CIBlendKernel *linearDodge;
@property (class, strong, readonly) CIBlendKernel *vividLight;
@property (class, strong, readonly) CIBlendKernel *linearLight;
@property (class, strong, readonly) CIBlendKernel *pinLight;
@property (class, strong, readonly) CIBlendKernel *hardMix;
@property (class, strong, readonly) CIBlendKernel *darkerColor;
@property (class, strong, readonly) CIBlendKernel *lighterColor;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

// @class CIFeature;
#ifndef _REWRITER_typedef_CIFeature
#define _REWRITER_typedef_CIFeature
typedef struct objc_object CIFeature;
typedef struct {} _objc_exc_CIFeature;
#endif






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIDetector
#define _REWRITER_typedef_CIDetector
typedef struct objc_object CIDetector;
typedef struct {} _objc_exc_CIDetector;
#endif

struct CIDetector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (nullable CIDetector *)detectorOfType:(NSString*)type
                                context:(nullable CIContext *)context
                                options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif




#if 0
- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
    __attribute__((availability(ios,introduced=5_0)));
#endif





#if 0
- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
                                  options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


/* @end */






extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeFace __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeRectangle __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeQRCode __attribute__((availability(ios,introduced=8_0)));



extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeText __attribute__((availability(ios,introduced=9_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracy __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyLow __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyHigh __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTracking __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorMinFeatureSize __attribute__((availability(ios,introduced=6_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorMaxFeatureCount __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorNumberOfAngles __attribute__((availability(ios,introduced=9_0)));







extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorImageOrientation __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorEyeBlink __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorSmile __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorFocalLength __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAspectRatio __attribute__((availability(ios,introduced=8_0)));



extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorReturnSubFeatures __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFeature
#define _REWRITER_typedef_CIFeature
typedef struct objc_object CIFeature;
typedef struct {} _objc_exc_CIFeature;
#endif

struct CIFeature_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly, retain) NSString *type;

// @property (readonly, assign) CGRect bounds;

/* @end */



extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeFace;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeRectangle;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeQRCode;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeText;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFaceFeature
#define _REWRITER_typedef_CIFaceFeature
typedef struct objc_object CIFaceFeature;
typedef struct {} _objc_exc_CIFaceFeature;
#endif

struct CIFaceFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	BOOL hasLeftEyePosition;
	CGPoint leftEyePosition;
	BOOL hasRightEyePosition;
	CGPoint rightEyePosition;
	BOOL hasMouthPosition;
	CGPoint mouthPosition;
	BOOL hasTrackingID;
	int trackingID;
	BOOL hasTrackingFrameCount;
	int trackingFrameCount;
	BOOL hasFaceAngle;
	float faceAngle;
	BOOL hasSmile;
	BOOL leftEyeClosed;
	BOOL rightEyeClosed;
};








// @property (readonly, assign) CGRect bounds;
// @property (readonly, assign) BOOL hasLeftEyePosition;
// @property (readonly, assign) CGPoint leftEyePosition;
// @property (readonly, assign) BOOL hasRightEyePosition;
// @property (readonly, assign) CGPoint rightEyePosition;
// @property (readonly, assign) BOOL hasMouthPosition;
// @property (readonly, assign) CGPoint mouthPosition;

// @property (readonly, assign) BOOL hasTrackingID;
// @property (readonly, assign) int trackingID;
// @property (readonly, assign) BOOL hasTrackingFrameCount;
// @property (readonly, assign) int trackingFrameCount;

// @property (readonly, assign) BOOL hasFaceAngle;
// @property (readonly, assign) float faceAngle;

// @property (readonly, assign) BOOL hasSmile;
// @property (readonly, assign) BOOL leftEyeClosed;
// @property (readonly, assign) BOOL rightEyeClosed;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIRectangleFeature
#define _REWRITER_typedef_CIRectangleFeature
typedef struct objc_object CIRectangleFeature;
typedef struct {} _objc_exc_CIRectangleFeature;
#endif

struct CIRectangleFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	CGPoint topLeft;
	CGPoint topRight;
	CGPoint bottomLeft;
	CGPoint bottomRight;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;

/* @end */





// @class CIQRCodeDescriptor;
#ifndef _REWRITER_typedef_CIQRCodeDescriptor
#define _REWRITER_typedef_CIQRCodeDescriptor
typedef struct objc_object CIQRCodeDescriptor;
typedef struct {} _objc_exc_CIQRCodeDescriptor;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIQRCodeFeature
#define _REWRITER_typedef_CIQRCodeFeature
typedef struct objc_object CIQRCodeFeature;
typedef struct {} _objc_exc_CIQRCodeFeature;
#endif

struct CIQRCodeFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	CGPoint topLeft;
	CGPoint topRight;
	CGPoint bottomLeft;
	CGPoint bottomRight;
	CIQRCodeDescriptor *symbolDescriptor;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;

// @property (nullable, readonly) NSString* messageString;

// @property (nullable, readonly) CIQRCodeDescriptor *symbolDescriptor __attribute__((availability(ios,introduced=11_0)));

/* @end */






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CITextFeature
#define _REWRITER_typedef_CITextFeature
typedef struct objc_object CITextFeature;
typedef struct {} _objc_exc_CITextFeature;
#endif

struct CITextFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;
// @property (nullable, readonly) NSArray *subFeatures;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @interface CIImage (CIImageProvider)






#if 0
+ (CIImage *)imageWithImageProvider:(id)p
          size:(size_t)width
                                   :(size_t)height
        format:(CIFormat)f
       colorSpace:(nullable CGColorSpaceRef)cs
                            options:(nullable NSDictionary<CIImageOption,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif


#if 0
- (instancetype)initWithImageProvider:(id)p
                                 size:(size_t)width
                                     :(size_t)height
                               format:(CIFormat)f
                           colorSpace:(nullable CGColorSpaceRef)cs
                              options:(nullable NSDictionary<CIImageOption,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif


/* @end */



// @interface NSObject (CIImageProvider)
#if 0
- (void)provideImageData:(void *)data
    bytesPerRow:(size_t)rowbytes
      origin:(size_t)x
                        :(size_t)y
     size:(size_t)width
                        :(size_t)height
    userInfo:(nullable id)info;
#endif


/* @end */

extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageProviderTileSize __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) CIImageOption const kCIImageProviderUserInfo __attribute__((availability(ios,introduced=9_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol MTLTexture, MTLCommandBuffer;

// @protocol CIImageProcessorInput;
// @protocol CIImageProcessorOutput;






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_CIImageProcessorKernel
#define _REWRITER_typedef_CIImageProcessorKernel
typedef struct objc_object CIImageProcessorKernel;
typedef struct {} _objc_exc_CIImageProcessorKernel;
#endif

struct CIImageProcessorKernel_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (BOOL)processWithInputs:(nullable NSArray<id<CIImageProcessorInput>> *)inputs
                arguments:(nullable NSDictionary<NSString*,id> *)arguments
                   output:(id <CIImageProcessorOutput>)output
                    error:(NSError **)error;
#endif

#if 0
+ (CGRect)roiForInput:(int)input
            arguments:(nullable NSDictionary<NSString*,id> *)arguments
           outputRect:(CGRect)outputRect;
#endif

// + (CIFormat)formatForInputAtIndex:(int)input;
@property (class, readonly) CIFormat outputFormat;
@property (class, readonly) bool outputIsOpaque __attribute__((availability(ios,introduced=11_0)));
@property (class, readonly) bool synchronizeInputs;
#if 0
+ (nullable CIImage *)applyWithExtent:(CGRect)extent
                               inputs:(nullable NSArray<CIImage*> *)inputs
                            arguments:(nullable NSDictionary<NSString*,id> *)args
                                error:(NSError **)error;
#endif

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
// @protocol CIImageProcessorInput



// @property (nonatomic, readonly) CGRect region;



// @property (nonatomic, readonly) size_t bytesPerRow;


// @property (nonatomic, readonly) CIFormat format;



// @property (readonly, nonatomic) const void *baseAddress __attribute__((objc_returns_inner_pointer));




// @property (nonatomic, readonly) IOSurfaceRef surface;




// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;




// @property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
// @protocol CIImageProcessorOutput


// @property (nonatomic, readonly) CGRect region;



// @property (nonatomic, readonly) size_t bytesPerRow;


// @property (nonatomic, readonly) CIFormat format;


// @property (readonly, nonatomic) void *baseAddress __attribute__((objc_returns_inner_pointer));



// @property (nonatomic, readonly) IOSurfaceRef surface;



// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;



// @property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;


// @property (nonatomic, readonly, nullable) id<MTLCommandBuffer> metalCommandBuffer;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CIImageAccumulator
#define _REWRITER_typedef_CIImageAccumulator
typedef struct objc_object CIImageAccumulator;
typedef struct {} _objc_exc_CIImageAccumulator;
#endif

struct CIImageAccumulator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_state;
};








#if 0
+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format;
#endif


#if 0
+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format
                                         colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));
#endif


#if 0
- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format;
#endif


#if 0
- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));
#endif



// @property (readonly) CGRect extent;


// @property (readonly) CIFormat format;




// - (CIImage *)image;


// - (void)setImage:(CIImage *)image;




// - (void)setImage:(CIImage *)image dirtyRect:(CGRect)dirtyRect;


// - (void)clear;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

struct CIFilterShape_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	uint32_t _pad;
	void *_priv;
};



// + (instancetype)shapeWithRect:(CGRect)r;



// - (instancetype)initWithRect:(CGRect)r;
// - (CIFilterShape *)transformBy:(CGAffineTransform)m interior:(BOOL)flag;


// - (CIFilterShape *)insetByX:(int)dx Y:(int)dy;


// - (CIFilterShape *)unionWith:(CIFilterShape *)s2;



// - (CIFilterShape *)unionWithRect:(CGRect)r;


// - (CIFilterShape *)intersectWith:(CIFilterShape *)s2;



// - (CIFilterShape *)intersectWithRect:(CGRect)r;



// @property (readonly) CGRect extent;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class CIFilterShape;
#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CISampler
#define _REWRITER_typedef_CISampler
typedef struct objc_object CISampler;
typedef struct {} _objc_exc_CISampler;
#endif

struct CISampler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};



// + (instancetype)samplerWithImage:(CIImage *)im;
// + (instancetype)samplerWithImage:(CIImage *)im keysAndValues:key0, ... __attribute__((sentinel(0,1)));
// + (instancetype)samplerWithImage:(CIImage *)im options:(nullable NSDictionary *)dict;



// - (instancetype)initWithImage:(CIImage *)im;
// - (instancetype)initWithImage:(CIImage *)im keysAndValues:key0, ...;
// - (instancetype)initWithImage:(CIImage *)im options:(nullable NSDictionary *)dict __attribute__((objc_designated_initializer));






// @property (readonly) CIFilterShape * definition;




// @property (readonly) CGRect extent;

/* @end */





extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerAffineMatrix __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapMode __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterMode __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapBlack __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapClamp __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterNearest __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterLinear __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerColorSpace __attribute__((availability(ios,introduced=9_0)));
#pragma clang assume_nonnull end
// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


typedef NSString * CIRAWFilterOption __attribute__((swift_wrapper(enum)));



// @interface CIFilter (CIRAWFilter)


// + (CIFilter *)filterWithImageURL:(NSURL *)url options:(NSDictionary<CIRAWFilterOption, id> *)options __attribute__((availability(ios,introduced=10_0)));




// + (CIFilter *)filterWithImageData:(NSData *)data options:(NSDictionary<CIRAWFilterOption, id> *)options __attribute__((availability(ios,introduced=10_0)));






// + (CIFilter *)filterWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer properties:(NSDictionary *)properties options:(NSDictionary<CIRAWFilterOption, id> *)options __attribute__((availability(ios,introduced=10_0)));


// + (NSArray<NSString*> *) supportedRawCameraModels __attribute__((availability(ios,introduced=13_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputAllowDraftModeKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputDecoderVersionKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCISupportedDecoderVersionsKey __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputBaselineExposureKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputBoostKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputBoostShadowAmountKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputDisableGamutMapKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNeutralChromaticityXKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNeutralChromaticityYKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNeutralTemperatureKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNeutralTintKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNeutralLocationKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputScaleFactorKey __attribute__((availability(ios,introduced=10_0)));





extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputIgnoreImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputEnableSharpeningKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputEnableChromaticNoiseTrackingKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputMoireAmountKey __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputEnableVendorLensCorrectionKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputLuminanceNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputColorNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNoiseReductionSharpnessAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNoiseReductionContrastAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputNoiseReductionDetailAmountKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputEnableEDRModeKey __attribute__((availability(ios,introduced=12_0)));





extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIInputLinearSpaceFilter __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIOutputNativeSizeKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) CIRAWFilterOption const kCIActiveKeys __attribute__((availability(ios,introduced=10_0)));

/* @end */

#pragma clang assume_nonnull begin





typedef NSString *IOSurfacePropertyKey __attribute__((swift_wrapper(enum)));






extern IOSurfacePropertyKey IOSurfacePropertyKeyAllocSize __attribute__((availability(ios,introduced=12.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyBytesPerRow __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyBytesPerElement __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyElementWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyElementHeight __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyOffset __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneInfo __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBytesPerRow __attribute__((availability(ios,introduced=10.0)));



extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneOffset __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneSize __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBase __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBytesPerElement __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneElementWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneElementHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyCacheMode __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPixelFormat __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPixelSizeCastingAllowed __attribute__((availability(ios,introduced=10.0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_IOSurface
#define _REWRITER_typedef_IOSurface
typedef struct objc_object IOSurface;
typedef struct {} _objc_exc_IOSurface;
#endif

struct IOSurface_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};



// - (nullable instancetype)initWithProperties:(NSDictionary <IOSurfacePropertyKey, id> *)properties;
// - (kern_return_t)lockWithOptions:(IOSurfaceLockOptions)options seed:(nullable uint32_t *)seed;
// - (kern_return_t)unlockWithOptions:(IOSurfaceLockOptions)options seed:(nullable uint32_t *)seed;


// @property (readonly) NSInteger allocationSize;

// @property (readonly) NSInteger width;
// @property (readonly) NSInteger height;
// @property (readonly) void *baseAddress __attribute__((objc_returns_inner_pointer));
// @property (readonly) OSType pixelFormat;

// @property (readonly) NSInteger bytesPerRow;
// @property (readonly) NSInteger bytesPerElement;
// @property (readonly) NSInteger elementWidth;
// @property (readonly) NSInteger elementHeight;



// @property (readonly) uint32_t seed;


// @property (readonly) NSUInteger planeCount;




// - (NSInteger)widthOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)heightOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)bytesPerRowOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)bytesPerElementOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)elementWidthOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)elementHeightOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (void *)baseAddressOfPlaneAtIndex:(NSUInteger)planeIndex __attribute__((objc_returns_inner_pointer));




// - (void)setAttachment:(id)anObject forKey:(NSString *)key;
// - (nullable id)attachmentForKey:(NSString *)key;
// - (void)removeAttachmentForKey:(NSString *)key;
// - (void)setAllAttachments:(NSDictionary<NSString *, id> *)dict;
// - (nullable NSDictionary<NSString *, id> *)allAttachments;
// - (void)removeAllAttachments;
// @property (readonly, getter = isInUse) BOOL inUse;
// - (void)incrementUseCount;
// - (void)decrementUseCount;




// @property (readonly ) int32_t localUseCount;




// @property (readonly) BOOL allowsPixelSizeCasting;


#if 0
- (kern_return_t)setPurgeable:(IOSurfacePurgeabilityState)newState oldState:(IOSurfacePurgeabilityState * _Nullable)oldState
    __attribute__((availability(ios,introduced=11.0)));
#endif


/* @end */



extern IOSurfacePropertyKey IOSurfacePropertyAllocSizeKey __attribute__((availability(ios,introduced=10.0,deprecated=12.0)));
#pragma clang assume_nonnull end



// @protocol MTLTexture, MTLCommandBuffer;

#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderDestination
#define _REWRITER_typedef_CIRenderDestination
typedef struct objc_object CIRenderDestination;
typedef struct {} _objc_exc_CIRenderDestination;
#endif

struct CIRenderDestination_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};

// - (instancetype) initWithPixelBuffer:(CVPixelBufferRef)pixelBuffer;
// - (instancetype) initWithIOSurface:(IOSurface*)surface;
#if 0
- (instancetype) initWithMTLTexture:(id<MTLTexture>)texture
                      commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer;
#endif

#if 0
- (instancetype) initWithWidth:(NSUInteger)width
                        height:(NSUInteger)height
                   pixelFormat:(MTLPixelFormat)pixelFormat
                 commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer
            mtlTextureProvider:(nullable id<MTLTexture> (^)(void))block;
#endif

#if 0
- (instancetype) initWithGLTexture:(unsigned int)texture
                      target:(unsigned int)target
                             width:(NSUInteger)width
                            height:(NSUInteger)height;
#endif

#if 0
- (instancetype) initWithBitmapData:(void *)data
                              width:(NSUInteger)width
                             height:(NSUInteger)height
                        bytesPerRow:(NSUInteger)bytesPerRow
                             format:(CIFormat)format;
#endif





// @property (readonly) NSUInteger width;
// @property (readonly) NSUInteger height;


typedef NSUInteger CIRenderDestinationAlphaMode; enum {
    CIRenderDestinationAlphaNone = 0,
    CIRenderDestinationAlphaPremultiplied = 1,
    CIRenderDestinationAlphaUnpremultiplied = 2
};




// @property CIRenderDestinationAlphaMode alphaMode;
// @property (getter=isFlipped) BOOL flipped;



// @property (getter=isDithered) BOOL dithered;




// @property (getter=isClamped) BOOL clamped;






// @property (nullable, nonatomic) CGColorSpaceRef colorSpace;



// @property (nullable, nonatomic, retain) CIBlendKernel* blendKernel;




// @property BOOL blendsInDestinationColorSpace;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderInfo
#define _REWRITER_typedef_CIRenderInfo
typedef struct objc_object CIRenderInfo;
typedef struct {} _objc_exc_CIRenderInfo;
#endif

struct CIRenderInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};



// @property (readonly) NSTimeInterval kernelExecutionTime;




// @property (readonly) NSInteger passCount;


// @property (readonly) NSInteger pixelsProcessed;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderTask
#define _REWRITER_typedef_CIRenderTask
typedef struct objc_object CIRenderTask;
typedef struct {} _objc_exc_CIRenderTask;
#endif

struct CIRenderTask_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (nullable CIRenderInfo*) waitUntilCompletedAndReturnError:(NSError**)error;

/* @end */



// @interface CIContext (CIRenderDestination)
#if 0
- (nullable CIRenderTask*) startTaskToRender:(CIImage*)image
                                    fromRect:(CGRect)fromRect
                               toDestination:(CIRenderDestination*)destination
                                     atPoint:(CGPoint)atPoint
                                       error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif





#if 0
- (nullable CIRenderTask*) startTaskToRender:(CIImage*)image
                               toDestination:(CIRenderDestination*)destination
                                       error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif

#if 0
- (BOOL) prepareRender:(CIImage*)image
              fromRect:(CGRect)fromRect
         toDestination:(CIRenderDestination*)destination
               atPoint:(CGPoint)atPoint
                 error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif





#if 0
- (nullable CIRenderTask*) startTaskToClear:(CIRenderDestination*)destination
                                      error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif


/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIBarcodeDescriptor
#define _REWRITER_typedef_CIBarcodeDescriptor
typedef struct objc_object CIBarcodeDescriptor;
typedef struct {} _objc_exc_CIBarcodeDescriptor;
#endif

struct CIBarcodeDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

/* @end */

typedef NSInteger CIQRCodeErrorCorrectionLevel; enum
{
    CIQRCodeErrorCorrectionLevelL __attribute__((swift_name("levelL"))) = 'L',
    CIQRCodeErrorCorrectionLevelM __attribute__((swift_name("levelM"))) = 'M',
    CIQRCodeErrorCorrectionLevelQ __attribute__((swift_name("levelQ"))) = 'Q',
    CIQRCodeErrorCorrectionLevelH __attribute__((swift_name("levelH"))) = 'H',

} __attribute__((swift_name("CIQRCodeDescriptor.ErrorCorrectionLevel")));






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIQRCodeDescriptor
#define _REWRITER_typedef_CIQRCodeDescriptor
typedef struct objc_object CIQRCodeDescriptor;
typedef struct {} _objc_exc_CIQRCodeDescriptor;
#endif

struct CIQRCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *errorCorrectedPayload;
	NSInteger symbolVersion;
	uint8_t maskPattern;
	CIQRCodeErrorCorrectionLevel errorCorrectionLevel;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) NSInteger symbolVersion;
// @property (readonly) uint8_t maskPattern;
// @property (readonly) CIQRCodeErrorCorrectionLevel errorCorrectionLevel;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                           symbolVersion:(NSInteger)symbolVersion
                             maskPattern:(uint8_t)maskPattern
                    errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                 symbolVersion:(NSInteger)symbolVersion
                                   maskPattern:(uint8_t)maskPattern
                          errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
#endif


/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIAztecCodeDescriptor
#define _REWRITER_typedef_CIAztecCodeDescriptor
typedef struct objc_object CIAztecCodeDescriptor;
typedef struct {} _objc_exc_CIAztecCodeDescriptor;
#endif

struct CIAztecCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *errorCorrectedPayload;
	BOOL isCompact;
	NSInteger layerCount;
	NSInteger dataCodewordCount;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) BOOL isCompact;
// @property (readonly) NSInteger layerCount;
// @property (readonly) NSInteger dataCodewordCount;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                               isCompact:(BOOL)isCompact
                              layerCount:(NSInteger)layerCount
                       dataCodewordCount:(NSInteger)dataCodewordCount;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                     isCompact:(BOOL)isCompact
                                    layerCount:(NSInteger)layerCount
                             dataCodewordCount:(NSInteger)dataCodewordCount;
#endif


/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIPDF417CodeDescriptor
#define _REWRITER_typedef_CIPDF417CodeDescriptor
typedef struct objc_object CIPDF417CodeDescriptor;
typedef struct {} _objc_exc_CIPDF417CodeDescriptor;
#endif

struct CIPDF417CodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *errorCorrectedPayload;
	BOOL isCompact;
	NSInteger rowCount;
	NSInteger columnCount;
};

// @property(readonly) NSData *errorCorrectedPayload;
// @property (readonly) BOOL isCompact;
// @property (readonly) NSInteger rowCount;
// @property (readonly) NSInteger columnCount;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                               isCompact:(BOOL)isCompact
                                rowCount:(NSInteger)rowCount
                             columnCount:(NSInteger)columnCount;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                     isCompact:(BOOL)isCompact
                                      rowCount:(NSInteger)rowCount
                                   columnCount:(NSInteger)columnCount;
#endif


/* @end */

typedef NSInteger CIDataMatrixCodeECCVersion; enum
{
    CIDataMatrixCodeECCVersion000 __attribute__((swift_name("v000"))) = 0,
    CIDataMatrixCodeECCVersion050 __attribute__((swift_name("v050"))) = 50,
    CIDataMatrixCodeECCVersion080 __attribute__((swift_name("v080"))) = 80,
    CIDataMatrixCodeECCVersion100 __attribute__((swift_name("v100"))) = 100,
    CIDataMatrixCodeECCVersion140 __attribute__((swift_name("v140"))) = 140,
    CIDataMatrixCodeECCVersion200 __attribute__((swift_name("v200"))) = 200,

} __attribute__((swift_name("CIDataMatrixCodeDescriptor.ECCVersion")));







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIDataMatrixCodeDescriptor
#define _REWRITER_typedef_CIDataMatrixCodeDescriptor
typedef struct objc_object CIDataMatrixCodeDescriptor;
typedef struct {} _objc_exc_CIDataMatrixCodeDescriptor;
#endif

struct CIDataMatrixCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *errorCorrectedPayload;
	NSInteger rowCount;
	NSInteger columnCount;
	CIDataMatrixCodeECCVersion eccVersion;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) NSInteger rowCount;
// @property (readonly) NSInteger columnCount;
// @property (readonly) CIDataMatrixCodeECCVersion eccVersion;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                                rowCount:(NSInteger)rowCount
                             columnCount:(NSInteger)columnCount
                              eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                      rowCount:(NSInteger)rowCount
                                   columnCount:(NSInteger)columnCount
                                    eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
#endif


/* @end */

// @class NSUserActivity;
#ifndef _REWRITER_typedef_NSUserActivity
#define _REWRITER_typedef_NSUserActivity
typedef struct objc_object NSUserActivity;
typedef struct {} _objc_exc_NSUserActivity;
#endif


// @interface NSUserActivity (CIBarcodeDescriptor)




// @property (nonatomic, nullable, readonly, copy) CIBarcodeDescriptor *detectedBarcodeDescriptor __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3)));

/* @end */

#pragma clang assume_nonnull end











#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

struct UIColor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (UIColor *)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
// + (UIColor *)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
// + (UIColor *)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
// + (UIColor *)colorWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10.0)));
// + (UIColor *)colorWithCGColor:(CGColorRef)cgColor;
// + (UIColor *)colorWithPatternImage:(UIImage *)image;

// + (UIColor *)colorWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5.0)));



// - (UIColor *)initWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
// - (UIColor *)initWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
// - (UIColor *)initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
// - (UIColor *)initWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10.0)));
// - (UIColor *)initWithCGColor:(CGColorRef)cgColor;
// - (UIColor *)initWithPatternImage:(UIImage*)image;

// - (UIColor *)initWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5.0)));




@property(class, nonatomic, readonly) UIColor *blackColor;
@property(class, nonatomic, readonly) UIColor *darkGrayColor;
@property(class, nonatomic, readonly) UIColor *lightGrayColor;
@property(class, nonatomic, readonly) UIColor *whiteColor;
@property(class, nonatomic, readonly) UIColor *grayColor;
@property(class, nonatomic, readonly) UIColor *redColor;
@property(class, nonatomic, readonly) UIColor *greenColor;
@property(class, nonatomic, readonly) UIColor *blueColor;
@property(class, nonatomic, readonly) UIColor *cyanColor;
@property(class, nonatomic, readonly) UIColor *yellowColor;
@property(class, nonatomic, readonly) UIColor *magentaColor;
@property(class, nonatomic, readonly) UIColor *orangeColor;
@property(class, nonatomic, readonly) UIColor *purpleColor;
@property(class, nonatomic, readonly) UIColor *brownColor;
@property(class, nonatomic, readonly) UIColor *clearColor;


// - (void)set;


// - (void)setFill;
// - (void)setStroke;



// - (BOOL)getWhite:(nullable CGFloat *)white alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5.0)));
// - (BOOL)getHue:(nullable CGFloat *)hue saturation:(nullable CGFloat *)saturation brightness:(nullable CGFloat *)brightness alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5.0)));
// - (BOOL)getRed:(nullable CGFloat *)red green:(nullable CGFloat *)green blue:(nullable CGFloat *)blue alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5.0)));


// - (UIColor *)colorWithAlphaComponent:(CGFloat)alpha;


// @property(nonatomic,readonly) CGColorRef CGColor;
// - (CGColorRef)CGColor __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

// @property(nonatomic,readonly) CIColor *CIColor __attribute__((availability(ios,introduced=5.0)));


/* @end */



// @interface UIColor (UINSItemProvider) <NSItemProviderReading, NSItemProviderWriting>

/* @end */




// @interface CIColor(UIKitAdditions)

// - (instancetype)initWithColor:(UIColor *)color __attribute__((availability(ios,introduced=5.0)));

/* @end */



// @interface UIColor (UIColorNamedColors)
// + (nullable UIColor *)colorNamed:(NSString *)name __attribute__((availability(ios,introduced=11.0)));
// + (nullable UIColor *)colorNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=11.0)));
/* @end */


// @interface UIColor (DynamicColors)
// + (UIColor *)colorWithDynamicProvider:(UIColor * (^)(UITraitCollection *traitCollection))dynamicProvider __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
// - (UIColor *)initWithDynamicProvider:(UIColor * (^)(UITraitCollection *traitCollection))dynamicProvider __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));



// - (UIColor *)resolvedColorWithTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef uint32_t UIFontDescriptorSymbolicTraits; enum {




    UIFontDescriptorTraitItalic = 1u << 0,
    UIFontDescriptorTraitBold = 1u << 1,
    UIFontDescriptorTraitExpanded = 1u << 5,
    UIFontDescriptorTraitCondensed = 1u << 6,
    UIFontDescriptorTraitMonoSpace = 1u << 10,
    UIFontDescriptorTraitVertical = 1u << 11,
    UIFontDescriptorTraitUIOptimized = 1u << 12,
    UIFontDescriptorTraitTightLeading = 1u << 15,
    UIFontDescriptorTraitLooseLeading = 1u << 16,




    UIFontDescriptorClassMask = 0xF0000000,

    UIFontDescriptorClassUnknown = 0u << 28,
    UIFontDescriptorClassOldStyleSerifs = 1u << 28,
    UIFontDescriptorClassTransitionalSerifs = 2u << 28,
    UIFontDescriptorClassModernSerifs = 3u << 28,
    UIFontDescriptorClassClarendonSerifs = 4u << 28,
    UIFontDescriptorClassSlabSerifs = 5u << 28,
    UIFontDescriptorClassFreeformSerifs = 7u << 28,
    UIFontDescriptorClassSansSerif = 8u << 28,
    UIFontDescriptorClassOrnamentals = 9u << 28,
    UIFontDescriptorClassScripts = 10u << 28,
    UIFontDescriptorClassSymbolic = 12u << 28
} __attribute__((availability(ios,introduced=7.0)));

typedef NSUInteger UIFontDescriptorClass;
typedef NSString * UIFontTextStyle __attribute__((swift_wrapper(enum)));
typedef NSString * UIFontDescriptorAttributeName __attribute__((swift_wrapper(enum)));
typedef NSString * UIFontDescriptorTraitKey __attribute__((swift_wrapper(enum)));
typedef NSString * UIFontDescriptorFeatureKey __attribute__((swift_wrapper(struct)));
typedef CGFloat UIFontWeight __attribute__((swift_wrapper(struct)));

typedef NSString * UIFontDescriptorSystemDesign __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorSystemDesign const UIFontDescriptorSystemDesignDefault __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=5.2))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorSystemDesign const UIFontDescriptorSystemDesignRounded __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=5.2))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorSystemDesign const UIFontDescriptorSystemDesignSerif __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorSystemDesign const UIFontDescriptorSystemDesignMonospaced __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIFontDescriptor
#define _REWRITER_typedef_UIFontDescriptor
typedef struct objc_object UIFontDescriptor;
typedef struct {} _objc_exc_UIFontDescriptor;
#endif

struct UIFontDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property(nonatomic, readonly) NSString *postscriptName;
// @property(nonatomic, readonly) CGFloat pointSize;
// @property(nonatomic, readonly) CGAffineTransform matrix __attribute__((availability(macCatalyst,unavailable)));
// @property(nonatomic, readonly) UIFontDescriptorSymbolicTraits symbolicTraits;

// - (nullable id)objectForKey:(UIFontDescriptorAttributeName)anAttribute;

// @property(nonatomic, readonly) NSDictionary<UIFontDescriptorAttributeName, id> *fontAttributes;



// - (NSArray<UIFontDescriptor *> *)matchingFontDescriptorsWithMandatoryKeys:(nullable NSSet<UIFontDescriptorAttributeName> *)mandatoryKeys;


// + (UIFontDescriptor *)fontDescriptorWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes;
// + (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName size:(CGFloat)size;
// + (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName matrix:(CGAffineTransform)matrix;


// + (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style;

// + (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable)));

// - (instancetype)initWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes __attribute__((objc_designated_initializer));

// - (UIFontDescriptor *)fontDescriptorByAddingAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes;
// - (UIFontDescriptor *)fontDescriptorWithSize:(CGFloat)newPointSize;
// - (UIFontDescriptor *)fontDescriptorWithMatrix:(CGAffineTransform)matrix __attribute__((availability(macCatalyst,unavailable)));
// - (UIFontDescriptor *)fontDescriptorWithFace:(NSString *)newFace;
// - (UIFontDescriptor *)fontDescriptorWithFamily:(NSString *)newFamily;

// - (nullable UIFontDescriptor *)fontDescriptorWithSymbolicTraits:(UIFontDescriptorSymbolicTraits)symbolicTraits;
// - (nullable UIFontDescriptor *)fontDescriptorWithDesign:(UIFontDescriptorSystemDesign)design __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=5.2))) __attribute__((availability(tvos,introduced=13.0)));


/* @end */




extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFamilyAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorNameAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFaceAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorSizeAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorVisibleNameAttribute __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorMatrixAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorCharacterSetAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorCascadeListAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorTraitsAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFixedAdvanceAttribute __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFeatureSettingsAttribute __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorTextStyleAttribute __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontSymbolicTrait __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontWeightTrait __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontWidthTrait __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontSlantTrait __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightUltraLight __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightThin __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightLight __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightRegular __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightMedium __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightSemibold __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightBold __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightHeavy __attribute__((availability(ios,introduced=8.2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightBlack __attribute__((availability(ios,introduced=8.2)));



extern "C" __attribute__((visibility ("default"))) UIFontDescriptorFeatureKey const UIFontFeatureTypeIdentifierKey __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorFeatureKey const UIFontFeatureSelectorIdentifierKey __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleLargeTitle __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle1 __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle2 __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle3 __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleHeadline __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleSubheadline __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleBody __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCallout __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleFootnote __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption1 __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption2 __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

struct UIFont_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style __attribute__((availability(ios,introduced=7.0)));

// + (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable)));


// + (nullable UIFont *)fontWithName:(NSString *)fontName size:(CGFloat)fontSize;


@property(class, nonatomic, readonly) NSArray<NSString *> *familyNames;


// + (NSArray<NSString *> *)fontNamesForFamilyName:(NSString *)familyName;





// + (UIFont *)systemFontOfSize:(CGFloat)fontSize;
// + (UIFont *)boldSystemFontOfSize:(CGFloat)fontSize;
// + (UIFont *)italicSystemFontOfSize:(CGFloat)fontSize;




// + (UIFont *)systemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios,introduced=8.2)));
// + (UIFont *)monospacedDigitSystemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios,introduced=9.0)));


// + (UIFont *)monospacedSystemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios,introduced=12.0)));



// @property(nonatomic,readonly,strong) NSString *familyName;
// @property(nonatomic,readonly,strong) NSString *fontName;
// @property(nonatomic,readonly) CGFloat pointSize;
// @property(nonatomic,readonly) CGFloat ascender;
// @property(nonatomic,readonly) CGFloat descender;
// @property(nonatomic,readonly) CGFloat capHeight;
// @property(nonatomic,readonly) CGFloat xHeight;
// @property(nonatomic,readonly) CGFloat lineHeight __attribute__((availability(ios,introduced=4.0)));
// @property(nonatomic,readonly) CGFloat leading;


// - (UIFont *)fontWithSize:(CGFloat)fontSize;


// + (UIFont *)fontWithDescriptor:(UIFontDescriptor *)descriptor size:(CGFloat)pointSize __attribute__((availability(ios,introduced=7.0)));


// @property(nonatomic, readonly) UIFontDescriptor *fontDescriptor __attribute__((availability(ios,introduced=7.0)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIBarStyle; enum {
    UIBarStyleDefault = 0,
    UIBarStyleBlack = 1,

    UIBarStyleBlackOpaque __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use UIBarStyleBlack instead."))) = 1,
    UIBarStyleBlackTranslucent __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use UIBarStyleBlack and set the translucent property to YES instead."))) = 2,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIUserInterfaceSizeClass; enum {
    UIUserInterfaceSizeClassUnspecified = 0,
    UIUserInterfaceSizeClassCompact = 1,
    UIUserInterfaceSizeClassRegular = 2,
} __attribute__((availability(ios,introduced=8.0)));

typedef NSInteger UIUserInterfaceStyle; enum {
    UIUserInterfaceStyleUnspecified,
    UIUserInterfaceStyleLight,
    UIUserInterfaceStyleDark,
} __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,unavailable)));

typedef NSInteger UIUserInterfaceLayoutDirection; enum {
    UIUserInterfaceLayoutDirectionLeftToRight,
    UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=5.0)));


typedef NSInteger UITraitEnvironmentLayoutDirection; enum {
    UITraitEnvironmentLayoutDirectionUnspecified = -1,
    UITraitEnvironmentLayoutDirectionLeftToRight = UIUserInterfaceLayoutDirectionLeftToRight,
    UITraitEnvironmentLayoutDirectionRightToLeft = UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=10.0)));

typedef NSInteger UIDisplayGamut; enum {
    UIDisplayGamutUnspecified = -1,
    UIDisplayGamutSRGB,
    UIDisplayGamutP3
} __attribute__((availability(ios,introduced=10.0)));




typedef NSInteger UIAccessibilityContrast; enum {
    UIAccessibilityContrastUnspecified = -1,
    UIAccessibilityContrastNormal,
    UIAccessibilityContrastHigh,
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));


typedef NSInteger UILegibilityWeight; enum {
    UILegibilityWeightUnspecified = -1,
    UILegibilityWeightRegular,
    UILegibilityWeightBold
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

typedef NSInteger UIUserInterfaceLevel; enum {
    UIUserInterfaceLevelUnspecified = -1,
    UIUserInterfaceLevelBase,
    UIUserInterfaceLevelElevated
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @interface UIColor (UIColorSystemColors)







@property (class, nonatomic, readonly) UIColor *systemRedColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGreenColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemBlueColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemOrangeColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemYellowColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemPinkColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemPurpleColor __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemTealColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemIndigoColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));



@property (class, nonatomic, readonly) UIColor *systemGrayColor __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGray2Color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGray3Color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGray4Color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGray5Color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemGray6Color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));





@property (class, nonatomic, readonly) UIColor *labelColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *secondaryLabelColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *tertiaryLabelColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *quaternaryLabelColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));



@property (class, nonatomic, readonly) UIColor *linkColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));



@property (class, nonatomic, readonly) UIColor *placeholderTextColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));






@property (class, nonatomic, readonly) UIColor *separatorColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *opaqueSeparatorColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *secondarySystemBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *tertiarySystemBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






@property (class, nonatomic, readonly) UIColor *systemGroupedBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *secondarySystemGroupedBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *tertiarySystemGroupedBackgroundColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property (class, nonatomic, readonly) UIColor *systemFillColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




@property (class, nonatomic, readonly) UIColor *secondarySystemFillColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




@property (class, nonatomic, readonly) UIColor *tertiarySystemFillColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




@property (class, nonatomic, readonly) UIColor *quaternarySystemFillColor __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






@property(class, nonatomic, readonly) UIColor *lightTextColor __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *darkTextColor __attribute__((availability(tvos,unavailable)));



@property(class, nonatomic, readonly) UIColor *groupTableViewBackgroundColor __attribute__((availability(ios,introduced=2.0,deprecated=13.0,replacement="systemGroupedBackgroundColor"))) __attribute__((availability(tvos,introduced=13.0,deprecated=13.0,replacement="systemGroupedBackgroundColor")));

@property(class, nonatomic, readonly) UIColor *viewFlipsideBackgroundColor __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *scrollViewTexturedBackgroundColor __attribute__((availability(ios,introduced=3.2,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *underPageBackgroundColor __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */





// @interface UIFont (UIFontSystemFonts)
@property(class, nonatomic, readonly) CGFloat labelFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat buttonFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat smallSystemFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat systemFontSize __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

// @protocol UIAppearanceContainer <NSObject> /* @end */


// @protocol UIAppearance <NSObject>






// + (instancetype)appearance;
// + (instancetype)appearanceWhenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=5.0,deprecated=9.0,replacement="appearanceWhenContainedInInstancesOfClasses:"))) __attribute__((availability(tvos,unavailable)));
// + (instancetype)appearanceWhenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9.0)));

// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait __attribute__((availability(ios,introduced=8.0)));
// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=8.0,deprecated=9.0,replacement="appearanceForTraitCollection:whenContainedInInstancesOfClasses:"))) __attribute__((availability(tvos,unavailable)));
// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDynamicAnimator;
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif

// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif


typedef NSUInteger UIDynamicItemCollisionBoundsType; enum {
    UIDynamicItemCollisionBoundsTypeRectangle,
    UIDynamicItemCollisionBoundsTypeEllipse,
    UIDynamicItemCollisionBoundsTypePath
} __attribute__((availability(ios,introduced=9.0)));

// @protocol UIDynamicItem <NSObject>

// @property (nonatomic, readwrite) CGPoint center;
// @property (nonatomic, readonly) CGRect bounds;
// @property (nonatomic, readwrite) CGAffineTransform transform;

/* @optional */




// @property (nonatomic, readonly) UIDynamicItemCollisionBoundsType collisionBoundsType __attribute__((availability(ios,introduced=9.0)));





// @property (nonatomic, readonly) UIBezierPath *collisionBoundingPath __attribute__((availability(ios,introduced=9.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIDynamicItemGroup
#define _REWRITER_typedef_UIDynamicItemGroup
typedef struct objc_object UIDynamicItemGroup;
typedef struct {} _objc_exc_UIDynamicItemGroup;
#endif

struct UIDynamicItemGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIDynamicBehavior
#define _REWRITER_typedef_UIDynamicBehavior
typedef struct objc_object UIDynamicBehavior;
typedef struct {} _objc_exc_UIDynamicBehavior;
#endif

struct UIDynamicBehavior_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)addChildBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeChildBehavior:(UIDynamicBehavior *)behavior;

// @property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior *> *childBehaviors;


// @property (nullable, nonatomic,copy) void (^action)(void);

// - (void)willMoveToAnimator:(nullable UIDynamicAnimator *)dynamicAnimator;

// @property (nullable, nonatomic, readonly) UIDynamicAnimator *dynamicAnimator;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSLayoutAnchor
#define _REWRITER_typedef_NSLayoutAnchor
typedef struct objc_object NSLayoutAnchor;
typedef struct {} _objc_exc_NSLayoutAnchor;
#endif


typedef float UILayoutPriority __attribute__((swift_wrapper(struct)));
static const UILayoutPriority UILayoutPriorityRequired __attribute__((availability(ios,introduced=6.0))) = 1000;
static const UILayoutPriority UILayoutPriorityDefaultHigh __attribute__((availability(ios,introduced=6.0))) = 750;
static const UILayoutPriority UILayoutPriorityDragThatCanResizeScene __attribute__((availability(macCatalyst,introduced=13.0))) = 510;
static const UILayoutPriority UILayoutPrioritySceneSizeStayPut __attribute__((availability(macCatalyst,introduced=13.0))) = 500;
static const UILayoutPriority UILayoutPriorityDragThatCannotResizeScene __attribute__((availability(macCatalyst,introduced=13.0))) = 490;
static const UILayoutPriority UILayoutPriorityDefaultLow __attribute__((availability(ios,introduced=6.0))) = 250;
static const UILayoutPriority UILayoutPriorityFittingSizeLevel __attribute__((availability(ios,introduced=6.0))) = 50;
typedef NSInteger NSLayoutRelation; enum {
    NSLayoutRelationLessThanOrEqual = -1,
    NSLayoutRelationEqual = 0,
    NSLayoutRelationGreaterThanOrEqual = 1,
};

typedef NSInteger NSLayoutAttribute; enum {
    NSLayoutAttributeLeft = 1,
    NSLayoutAttributeRight,
    NSLayoutAttributeTop,
    NSLayoutAttributeBottom,
    NSLayoutAttributeLeading,
    NSLayoutAttributeTrailing,
    NSLayoutAttributeWidth,
    NSLayoutAttributeHeight,
    NSLayoutAttributeCenterX,
    NSLayoutAttributeCenterY,
    NSLayoutAttributeLastBaseline,

    NSLayoutAttributeBaseline __attribute__((availability(swift, unavailable, message="Use 'lastBaseline' instead"))) = NSLayoutAttributeLastBaseline,



    NSLayoutAttributeFirstBaseline __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))),


    NSLayoutAttributeLeftMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeRightMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeTopMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeBottomMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeLeadingMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeTrailingMargin __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeCenterXWithinMargins __attribute__((availability(ios,introduced=8.0))),
    NSLayoutAttributeCenterYWithinMargins __attribute__((availability(ios,introduced=8.0))),


    NSLayoutAttributeNotAnAttribute = 0
};

typedef NSUInteger NSLayoutFormatOptions; enum {
    NSLayoutFormatAlignAllLeft = (1 << NSLayoutAttributeLeft),
    NSLayoutFormatAlignAllRight = (1 << NSLayoutAttributeRight),
    NSLayoutFormatAlignAllTop = (1 << NSLayoutAttributeTop),
    NSLayoutFormatAlignAllBottom = (1 << NSLayoutAttributeBottom),
    NSLayoutFormatAlignAllLeading = (1 << NSLayoutAttributeLeading),
    NSLayoutFormatAlignAllTrailing = (1 << NSLayoutAttributeTrailing),
    NSLayoutFormatAlignAllCenterX = (1 << NSLayoutAttributeCenterX),
    NSLayoutFormatAlignAllCenterY = (1 << NSLayoutAttributeCenterY),
    NSLayoutFormatAlignAllLastBaseline = (1 << NSLayoutAttributeLastBaseline),
    NSLayoutFormatAlignAllFirstBaseline __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) = (1 << NSLayoutAttributeFirstBaseline),

    NSLayoutFormatAlignAllBaseline __attribute__((availability(swift, unavailable, message="Use 'alignAllLastBaseline' instead"))) = NSLayoutFormatAlignAllLastBaseline,




    NSLayoutFormatAlignmentMask = 0xFFFF,



    NSLayoutFormatDirectionLeadingToTrailing = 0 << 16,
    NSLayoutFormatDirectionLeftToRight = 1 << 16,
    NSLayoutFormatDirectionRightToLeft = 2 << 16,

    NSLayoutFormatDirectionMask = 0x3 << 16,




    NSLayoutFormatSpacingEdgeToEdge __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 0 << 19,
    NSLayoutFormatSpacingBaselineToBaseline __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 1 << 19,

    NSLayoutFormatSpacingMask __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 0x1 << 19,

};

extern "C" __attribute((visibility("default"))) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLayoutConstraint
#define _REWRITER_typedef_NSLayoutConstraint
typedef struct objc_object NSLayoutConstraint;
typedef struct {} _objc_exc_NSLayoutConstraint;
#endif

struct NSLayoutConstraint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (NSArray<NSLayoutConstraint *> *)constraintsWithVisualFormat:(NSString *)format options:(NSLayoutFormatOptions)opts metrics:(nullable NSDictionary<NSString *, id> *)metrics views:(NSDictionary<NSString *, id> *)views __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" __attribute((visibility("default"))) NSDictionary<NSString *, id> *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, _Nullable id firstValue, ...) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=6.0)));





// + (instancetype)constraintWithItem:(id)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(nullable id)view2 attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property UILayoutPriority priority;







// @property BOOL shouldBeArchived;





// @property (nullable, readonly, assign) id firstItem;
// @property (nullable, readonly, assign) id secondItem;
// @property (readonly) NSLayoutAttribute firstAttribute;
// @property (readonly) NSLayoutAttribute secondAttribute;




// @property (readonly, copy) NSLayoutAnchor *firstAnchor __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
// @property (readonly, copy, nullable) NSLayoutAnchor *secondAnchor __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
// @property (readonly) NSLayoutRelation relation;
// @property (readonly) CGFloat multiplier;



// @property CGFloat constant;


// @property (getter=isActive) BOOL active __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));


// + (void)activateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));


// + (void)deactivateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));

/* @end */


// @interface NSLayoutConstraint (NSIdentifier)




// @property (nullable, copy) NSString *identifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0)));

/* @end */

// @class NSLayoutYAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

// @protocol UILayoutSupport <NSObject>
// @property(nonatomic,readonly) CGFloat length;



// @property(readonly, strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(readonly, strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(readonly, strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9.0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIDeviceOrientation; enum {
    UIDeviceOrientationUnknown,
    UIDeviceOrientationPortrait,
    UIDeviceOrientationPortraitUpsideDown,
    UIDeviceOrientationLandscapeLeft,
    UIDeviceOrientationLandscapeRight,
    UIDeviceOrientationFaceUp,
    UIDeviceOrientationFaceDown
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIDeviceBatteryState; enum {
    UIDeviceBatteryStateUnknown,
    UIDeviceBatteryStateUnplugged,
    UIDeviceBatteryStateCharging,
    UIDeviceBatteryStateFull,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIUserInterfaceIdiom; enum {
    UIUserInterfaceIdiomUnspecified = -1,
    UIUserInterfaceIdiomPhone __attribute__((availability(ios,introduced=3.2))),
    UIUserInterfaceIdiomPad __attribute__((availability(ios,introduced=3.2))),
    UIUserInterfaceIdiomTV __attribute__((availability(ios,introduced=9.0))),
    UIUserInterfaceIdiomCarPlay __attribute__((availability(ios,introduced=9.0))),
};

static inline BOOL UIDeviceOrientationIsPortrait(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationPortrait || (orientation) == UIDeviceOrientationPortraitUpsideDown);
}

static inline BOOL UIDeviceOrientationIsLandscape(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationLandscapeLeft || (orientation) == UIDeviceOrientationLandscapeRight);
}

static inline __attribute__((always_inline)) BOOL UIDeviceOrientationIsFlat(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationFaceUp || (orientation) == UIDeviceOrientationFaceDown);
}

static inline __attribute__((always_inline)) BOOL UIDeviceOrientationIsValidInterfaceOrientation(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationPortrait || (orientation) == UIDeviceOrientationPortraitUpsideDown || (orientation) == UIDeviceOrientationLandscapeLeft || (orientation) == UIDeviceOrientationLandscapeRight);
}

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIDevice
#define _REWRITER_typedef_UIDevice
typedef struct objc_object UIDevice;
typedef struct {} _objc_exc_UIDevice;
#endif

struct UIDevice_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property(class, nonatomic, readonly) UIDevice *currentDevice;

// @property(nonatomic,readonly,strong) NSString *name;
// @property(nonatomic,readonly,strong) NSString *model;
// @property(nonatomic,readonly,strong) NSString *localizedModel;
// @property(nonatomic,readonly,strong) NSString *systemName;
// @property(nonatomic,readonly,strong) NSString *systemVersion;
// @property(nonatomic,readonly) UIDeviceOrientation orientation __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic,readonly,strong) NSUUID *identifierForVendor __attribute__((availability(ios,introduced=6.0)));

// @property(nonatomic,readonly,getter=isGeneratingDeviceOrientationNotifications) BOOL generatesDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
// - (void)beginGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
// - (void)endGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,getter=isBatteryMonitoringEnabled) BOOL batteryMonitoringEnabled __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) UIDeviceBatteryState batteryState __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) float batteryLevel __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,getter=isProximityMonitoringEnabled) BOOL proximityMonitoringEnabled __attribute__((availability(ios,introduced=3.0)));
// @property(nonatomic,readonly) BOOL proximityState __attribute__((availability(ios,introduced=3.0)));

// @property(nonatomic,readonly,getter=isMultitaskingSupported) BOOL multitaskingSupported __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic,readonly) UIUserInterfaceIdiom userInterfaceIdiom __attribute__((availability(ios,introduced=3.2)));

// - (void)playInputClick __attribute__((availability(ios,introduced=4.2)));

/* @end */


// @protocol UIInputViewAudioFeedback <NSObject>
/* @optional */

// @property (nonatomic, readonly) BOOL enableInputClicksWhenVisible;

/* @end */




static inline UIUserInterfaceIdiom UI_USER_INTERFACE_IDIOM() __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use -[UIDevice userInterfaceIdiom] directly."))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Use -[UIDevice userInterfaceIdiom] directly."))) {
    return (((BOOL (*)(id, SEL, SEL))(void *)objc_msgSend)((id)((UIDevice * _Nonnull (*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("UIDevice"), sel_registerName("currentDevice")), sel_registerName("respondsToSelector:"), sel_registerName("userInterfaceIdiom")) ?
            ((UIUserInterfaceIdiom (*)(id, SEL))(void *)objc_msgSend)((id)((UIDevice * _Nonnull (*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("UIDevice"), sel_registerName("currentDevice")), sel_registerName("userInterfaceIdiom")) :
            UIUserInterfaceIdiomPhone);
}

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceOrientationDidChangeNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryStateDidChangeNotification __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryLevelDidChangeNotification __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceProximityStateDidChangeNotification __attribute__((availability(ios,introduced=3.0)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif


typedef NSInteger UITouchPhase; enum {
    UITouchPhaseBegan,
    UITouchPhaseMoved,
    UITouchPhaseStationary,
    UITouchPhaseEnded,
    UITouchPhaseCancelled,
};

typedef NSInteger UIForceTouchCapability; enum {
    UIForceTouchCapabilityUnknown = 0,
    UIForceTouchCapabilityUnavailable = 1,
    UIForceTouchCapabilityAvailable = 2
};

typedef NSInteger UITouchType; enum {
    UITouchTypeDirect,
    UITouchTypeIndirect,
    UITouchTypePencil __attribute__((availability(ios,introduced=9.1))),
    UITouchTypeStylus __attribute__((availability(ios,introduced=9.1))) = UITouchTypePencil,
} __attribute__((availability(ios,introduced=9.0)));

typedef NSInteger UITouchProperties; enum {
    UITouchPropertyForce = (1UL << 0),
    UITouchPropertyAzimuth = (1UL << 1),
    UITouchPropertyAltitude = (1UL << 2),
    UITouchPropertyLocation = (1UL << 3),
} __attribute__((availability(ios,introduced=9.1)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

struct UITouch_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UITouchPhase phase;
// @property(nonatomic,readonly) NSUInteger tapCount;
// @property(nonatomic,readonly) UITouchType type __attribute__((availability(ios,introduced=9.0)));



// @property(nonatomic,readonly) CGFloat majorRadius __attribute__((availability(ios,introduced=8.0)));
// @property(nonatomic,readonly) CGFloat majorRadiusTolerance __attribute__((availability(ios,introduced=8.0)));

// @property(nullable,nonatomic,readonly,strong) UIWindow *window;
// @property(nullable,nonatomic,readonly,strong) UIView *view;
// @property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3.2)));

// - (CGPoint)locationInView:(nullable UIView *)view;
// - (CGPoint)previousLocationInView:(nullable UIView *)view;



// - (CGPoint)preciseLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9.1)));
// - (CGPoint)precisePreviousLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9.1)));


// @property(nonatomic,readonly) CGFloat force __attribute__((availability(ios,introduced=9.0)));

// @property(nonatomic,readonly) CGFloat maximumPossibleForce __attribute__((availability(ios,introduced=9.0)));



// - (CGFloat)azimuthAngleInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9.1)));


// - (CGVector)azimuthUnitVectorInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9.1)));




// @property(nonatomic,readonly) CGFloat altitudeAngle __attribute__((availability(ios,introduced=9.1)));



// @property(nonatomic,readonly) NSNumber * _Nullable estimationUpdateIndex __attribute__((availability(ios,introduced=9.1)));


// @property(nonatomic,readonly) UITouchProperties estimatedProperties __attribute__((availability(ios,introduced=9.1)));



// @property(nonatomic,readonly) UITouchProperties estimatedPropertiesExpectingUpdates __attribute__((availability(ios,introduced=9.1)));


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSString * UIContentSizeCategory __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryUnspecified __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraSmall __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategorySmall __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryMedium __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraExtraLarge __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityMedium __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraLarge __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraExtraLarge __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIContentSizeCategoryDidChangeNotification __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIContentSizeCategoryNewValueKey __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((swift_private));
extern "C" __attribute__((visibility ("default"))) NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((swift_private));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

struct UITraitCollection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (BOOL)containsTraitsInCollection:(nullable UITraitCollection *)trait;



// + (UITraitCollection *)traitCollectionWithTraitsFromCollections:(NSArray<UITraitCollection *> *)traitCollections;


// + (UITraitCollection *)traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom)idiom;
// @property (nonatomic, readonly) UIUserInterfaceIdiom userInterfaceIdiom;

// + (UITraitCollection *)traitCollectionWithUserInterfaceStyle:(UIUserInterfaceStyle)userInterfaceStyle __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, readonly) UIUserInterfaceStyle userInterfaceStyle __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,unavailable)));

// + (UITraitCollection *)traitCollectionWithLayoutDirection:(UITraitEnvironmentLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, readonly) UITraitEnvironmentLayoutDirection layoutDirection __attribute__((availability(ios,introduced=10.0)));

// + (UITraitCollection *)traitCollectionWithDisplayScale:(CGFloat)scale;
// @property (nonatomic, readonly) CGFloat displayScale;

// + (UITraitCollection *)traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass)horizontalSizeClass;
// @property (nonatomic, readonly) UIUserInterfaceSizeClass horizontalSizeClass;

// + (UITraitCollection *)traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass)verticalSizeClass;
// @property (nonatomic, readonly) UIUserInterfaceSizeClass verticalSizeClass;

// + (UITraitCollection *)traitCollectionWithForceTouchCapability:(UIForceTouchCapability)capability __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic, readonly) UIForceTouchCapability forceTouchCapability __attribute__((availability(ios,introduced=9.0)));

// + (UITraitCollection *)traitCollectionWithPreferredContentSizeCategory:(UIContentSizeCategory)preferredContentSizeCategory __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, copy, readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=10.0)));

// + (UITraitCollection *)traitCollectionWithDisplayGamut:(UIDisplayGamut)displayGamut __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, readonly) UIDisplayGamut displayGamut __attribute__((availability(ios,introduced=10.0)));

// + (UITraitCollection *)traitCollectionWithAccessibilityContrast:(UIAccessibilityContrast)accessibilityContrast __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, readonly) UIAccessibilityContrast accessibilityContrast __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

// + (UITraitCollection *)traitCollectionWithUserInterfaceLevel:(UIUserInterfaceLevel)userInterfaceLevel __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, readonly) UIUserInterfaceLevel userInterfaceLevel __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// + (UITraitCollection *)traitCollectionWithLegibilityWeight:(UILegibilityWeight)legibilityWeight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// @property (nonatomic, readonly) UILegibilityWeight legibilityWeight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */



// @protocol UITraitEnvironment <NSObject>
// @property (nonatomic, readonly) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8.0)));


// - (void)traitCollectionDidChange:(nullable UITraitCollection *)previousTraitCollection __attribute__((availability(ios,introduced=8.0)));
/* @end */



// @interface UITraitCollection (CurrentTraitCollection)




@property (class, nonatomic, strong) UITraitCollection *currentTraitCollection __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));






// - (void)performAsCurrentTraitCollection:(void (__attribute__((noescape)) ^)(void))actions __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface UITraitCollection (DynamicAppearance)
// - (BOOL)hasDifferentColorAppearanceComparedToTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @class UIImageConfiguration;
#ifndef _REWRITER_typedef_UIImageConfiguration
#define _REWRITER_typedef_UIImageConfiguration
typedef struct objc_object UIImageConfiguration;
typedef struct {} _objc_exc_UIImageConfiguration;
#endif


// @interface UITraitCollection (ImageConfiguration)




// @property (nonatomic, strong, readonly) UIImageConfiguration *imageConfiguration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif


#pragma clang assume_nonnull begin
// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif







extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_UILayoutGuide
#define _REWRITER_typedef_UILayoutGuide
typedef struct objc_object UILayoutGuide;
typedef struct {} _objc_exc_UILayoutGuide;
#endif

struct UILayoutGuide_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property(nonatomic,readonly) CGRect layoutFrame;






// @property(nonatomic,weak,nullable) UIView *owningView;




// @property(nonatomic,copy) NSString *identifier;




// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leadingAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *trailingAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leftAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *rightAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *topAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *bottomAnchor;
// @property(nonatomic,readonly,strong) NSLayoutDimension *widthAnchor;
// @property(nonatomic,readonly,strong) NSLayoutDimension *heightAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *centerXAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *centerYAnchor;

/* @end */

#pragma clang assume_nonnull end


// @protocol UIFocusEnvironment;

#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIFocusGuide
#define _REWRITER_typedef_UIFocusGuide
typedef struct objc_object UIFocusGuide;
typedef struct {} _objc_exc_UIFocusGuide;
#endif

struct UIFocusGuide_IMPL {
	struct UILayoutGuide_IMPL UILayoutGuide_IVARS;
};



// @property (nonatomic, getter=isEnabled) BOOL enabled;



// @property (nonatomic, copy, null_resettable) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments __attribute__((availability(ios,introduced=10.0)));


// @property (nonatomic, weak, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9.0,deprecated=10.0,replacement="preferredFocusEnvironments")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) // @protocol UIFocusAnimationContext <NSObject>


// @property (nonatomic, readonly) NSTimeInterval duration;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIFocusAnimationCoordinator
#define _REWRITER_typedef_UIFocusAnimationCoordinator
typedef struct objc_object UIFocusAnimationCoordinator;
typedef struct {} _objc_exc_UIFocusAnimationCoordinator;
#endif

struct UIFocusAnimationCoordinator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (void)addCoordinatedAnimations:(nullable void (^)(void))animations completion:(nullable void (^)(void))completion;
// - (void)addCoordinatedFocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> animationContext))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)addCoordinatedUnfocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> animationContext))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end


// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIFocusUpdateContext
#define _REWRITER_typedef_UIFocusUpdateContext
typedef struct objc_object UIFocusUpdateContext;
typedef struct {} _objc_exc_UIFocusUpdateContext;
#endif

#ifndef _REWRITER_typedef_UIFocusMovementHint
#define _REWRITER_typedef_UIFocusMovementHint
typedef struct objc_object UIFocusMovementHint;
typedef struct {} _objc_exc_UIFocusMovementHint;
#endif

// @protocol UICoordinateSpace, UIFocusItemContainer;

typedef NSUInteger UIFocusHeading; enum {
    UIFocusHeadingNone = 0,
    UIFocusHeadingUp = 1 << 0,
    UIFocusHeadingDown = 1 << 1,
    UIFocusHeadingLeft = 1 << 2,
    UIFocusHeadingRight = 1 << 3,
    UIFocusHeadingNext = 1 << 4,
    UIFocusHeadingPrevious = 1 << 5,
} __attribute__((availability(ios,introduced=9.0)));

typedef NSString * UIFocusSoundIdentifier __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) // @protocol UIFocusEnvironment <NSObject>




// @property (nonatomic, copy, readonly) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments;



// @property (nonatomic, weak, readonly, nullable) id<UIFocusEnvironment> parentFocusEnvironment __attribute__((swift_name("parentFocusEnvironment"))) __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));


// @property (nonatomic, readonly, nullable) id<UIFocusItemContainer> focusItemContainer __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));



// - (void)setNeedsFocusUpdate;



// - (void)updateFocusIfNeeded;


// - (BOOL)shouldUpdateFocusInContext:(UIFocusUpdateContext *)context;


// - (void)didUpdateFocusInContext:(UIFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator;

/* @optional */





// - (nullable UIFocusSoundIdentifier)soundIdentifierForFocusUpdateInContext:(UIFocusUpdateContext *)context __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic, weak, readonly, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9.0,deprecated=10.0,replacement="preferredFocusEnvironments")));

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) // @protocol UIFocusItem <UIFocusEnvironment>



// @property(nonatomic, readonly) BOOL canBecomeFocused;


// @property (nonatomic, readonly) CGRect frame __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));

/* @optional */



// - (void)didHintFocusMovement:(UIFocusMovementHint *)hint __attribute__((availability(ios,introduced=12.0)));

/* @end */





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=12.0))) // @protocol UIFocusItemContainer <NSObject>





// @property (nonatomic, readonly) id<UICoordinateSpace> coordinateSpace;


// - (NSArray<id<UIFocusItem>> *)focusItemsInRect:(CGRect)rect;

/* @end */





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=12.0))) // @protocol UIFocusItemScrollableContainer <UIFocusItemContainer>


// @property (nonatomic, readwrite) CGPoint contentOffset;



// @property (nonatomic, readonly) CGSize contentSize;


// @property (nonatomic, readonly) CGSize visibleSize;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIFocusUpdateContext
#define _REWRITER_typedef_UIFocusUpdateContext
typedef struct objc_object UIFocusUpdateContext;
typedef struct {} _objc_exc_UIFocusUpdateContext;
#endif

struct UIFocusUpdateContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, weak, readonly, nullable) id<UIFocusItem> previouslyFocusedItem __attribute__((availability(ios,introduced=10.0)));


// @property (nonatomic, weak, readonly, nullable) id<UIFocusItem> nextFocusedItem __attribute__((availability(ios,introduced=10.0)));




// @property (nonatomic, weak, readonly, nullable) UIView *previouslyFocusedView;




// @property (nonatomic, weak, readonly, nullable) UIView *nextFocusedView;


// @property (nonatomic, assign, readonly) UIFocusHeading focusHeading;

/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIFocusDidUpdateNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIFocusMovementDidFailNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

extern "C" __attribute__((visibility ("default"))) NSString * const UIFocusUpdateContextKey __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) NSString * const UIFocusUpdateAnimationCoordinatorKey __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) UIFocusSoundIdentifier const UIFocusSoundIdentifierNone __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) UIFocusSoundIdentifier const UIFocusSoundIdentifierDefault __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIViewAnimationCurve; enum {
    UIViewAnimationCurveEaseInOut,
    UIViewAnimationCurveEaseIn,
    UIViewAnimationCurveEaseOut,
    UIViewAnimationCurveLinear,
};

typedef NSInteger UIViewContentMode; enum {
    UIViewContentModeScaleToFill,
    UIViewContentModeScaleAspectFit,
    UIViewContentModeScaleAspectFill,
    UIViewContentModeRedraw,
    UIViewContentModeCenter,
    UIViewContentModeTop,
    UIViewContentModeBottom,
    UIViewContentModeLeft,
    UIViewContentModeRight,
    UIViewContentModeTopLeft,
    UIViewContentModeTopRight,
    UIViewContentModeBottomLeft,
    UIViewContentModeBottomRight,
};

typedef NSInteger UIViewAnimationTransition; enum {
    UIViewAnimationTransitionNone,
    UIViewAnimationTransitionFlipFromLeft,
    UIViewAnimationTransitionFlipFromRight,
    UIViewAnimationTransitionCurlUp,
    UIViewAnimationTransitionCurlDown,
};

typedef NSUInteger UIViewAutoresizing; enum {
    UIViewAutoresizingNone = 0,
    UIViewAutoresizingFlexibleLeftMargin = 1 << 0,
    UIViewAutoresizingFlexibleWidth = 1 << 1,
    UIViewAutoresizingFlexibleRightMargin = 1 << 2,
    UIViewAutoresizingFlexibleTopMargin = 1 << 3,
    UIViewAutoresizingFlexibleHeight = 1 << 4,
    UIViewAutoresizingFlexibleBottomMargin = 1 << 5
};

typedef NSUInteger UIViewAnimationOptions; enum {
    UIViewAnimationOptionLayoutSubviews = 1 << 0,
    UIViewAnimationOptionAllowUserInteraction = 1 << 1,
    UIViewAnimationOptionBeginFromCurrentState = 1 << 2,
    UIViewAnimationOptionRepeat = 1 << 3,
    UIViewAnimationOptionAutoreverse = 1 << 4,
    UIViewAnimationOptionOverrideInheritedDuration = 1 << 5,
    UIViewAnimationOptionOverrideInheritedCurve = 1 << 6,
    UIViewAnimationOptionAllowAnimatedContent = 1 << 7,
    UIViewAnimationOptionShowHideTransitionViews = 1 << 8,
    UIViewAnimationOptionOverrideInheritedOptions = 1 << 9,

    UIViewAnimationOptionCurveEaseInOut = 0 << 16,
    UIViewAnimationOptionCurveEaseIn = 1 << 16,
    UIViewAnimationOptionCurveEaseOut = 2 << 16,
    UIViewAnimationOptionCurveLinear = 3 << 16,

    UIViewAnimationOptionTransitionNone = 0 << 20,
    UIViewAnimationOptionTransitionFlipFromLeft = 1 << 20,
    UIViewAnimationOptionTransitionFlipFromRight = 2 << 20,
    UIViewAnimationOptionTransitionCurlUp = 3 << 20,
    UIViewAnimationOptionTransitionCurlDown = 4 << 20,
    UIViewAnimationOptionTransitionCrossDissolve = 5 << 20,
    UIViewAnimationOptionTransitionFlipFromTop = 6 << 20,
    UIViewAnimationOptionTransitionFlipFromBottom = 7 << 20,

    UIViewAnimationOptionPreferredFramesPerSecondDefault = 0 << 24,
    UIViewAnimationOptionPreferredFramesPerSecond60 = 3 << 24,
    UIViewAnimationOptionPreferredFramesPerSecond30 = 7 << 24,

} __attribute__((availability(ios,introduced=4.0)));

typedef NSUInteger UIViewKeyframeAnimationOptions; enum {
    UIViewKeyframeAnimationOptionLayoutSubviews = UIViewAnimationOptionLayoutSubviews,
    UIViewKeyframeAnimationOptionAllowUserInteraction = UIViewAnimationOptionAllowUserInteraction,
    UIViewKeyframeAnimationOptionBeginFromCurrentState = UIViewAnimationOptionBeginFromCurrentState,
    UIViewKeyframeAnimationOptionRepeat = UIViewAnimationOptionRepeat,
    UIViewKeyframeAnimationOptionAutoreverse = UIViewAnimationOptionAutoreverse,
    UIViewKeyframeAnimationOptionOverrideInheritedDuration = UIViewAnimationOptionOverrideInheritedDuration,
    UIViewKeyframeAnimationOptionOverrideInheritedOptions = UIViewAnimationOptionOverrideInheritedOptions,

    UIViewKeyframeAnimationOptionCalculationModeLinear = 0 << 10,
    UIViewKeyframeAnimationOptionCalculationModeDiscrete = 1 << 10,
    UIViewKeyframeAnimationOptionCalculationModePaced = 2 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubic = 3 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubicPaced = 4 << 10
} __attribute__((availability(ios,introduced=7.0)));

typedef NSUInteger UISystemAnimation; enum {
    UISystemAnimationDelete,
} __attribute__((availability(ios,introduced=7.0)));

typedef NSInteger UIViewTintAdjustmentMode; enum {
    UIViewTintAdjustmentModeAutomatic,

    UIViewTintAdjustmentModeNormal,
    UIViewTintAdjustmentModeDimmed,
} __attribute__((availability(ios,introduced=7.0)));

typedef NSInteger UISemanticContentAttribute; enum {
    UISemanticContentAttributeUnspecified = 0,
    UISemanticContentAttributePlayback,
    UISemanticContentAttributeSpatial,
    UISemanticContentAttributeForceLeftToRight,
    UISemanticContentAttributeForceRightToLeft
} __attribute__((availability(ios,introduced=9.0)));

// @protocol UICoordinateSpace <NSObject>

// - (CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8.0)));
// - (CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8.0)));
// - (CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8.0)));
// - (CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8.0)));

// @property (readonly, nonatomic) CGRect bounds __attribute__((availability(ios,introduced=8.0)));

/* @end */


// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UIMotionEffect
#define _REWRITER_typedef_UIMotionEffect
typedef struct objc_object UIMotionEffect;
typedef struct {} _objc_exc_UIMotionEffect;
#endif

#ifndef _REWRITER_typedef_CALayer
#define _REWRITER_typedef_CALayer
typedef struct objc_object CALayer;
typedef struct {} _objc_exc_CALayer;
#endif

#ifndef _REWRITER_typedef_UILayoutGuide
#define _REWRITER_typedef_UILayoutGuide
typedef struct objc_object UILayoutGuide;
typedef struct {} _objc_exc_UILayoutGuide;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

struct UIView_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};


@property(class, nonatomic, readonly) Class layerClass;

// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
// @property(nonatomic) NSInteger tag;
// @property(nonatomic,readonly,strong) CALayer *layer;

// @property(nonatomic,readonly) BOOL canBecomeFocused __attribute__((availability(ios,introduced=9.0)));
// @property (readonly, nonatomic, getter=isFocused) BOOL focused __attribute__((availability(ios,introduced=9.0)));

// @property (nonatomic) UISemanticContentAttribute semanticContentAttribute __attribute__((availability(ios,introduced=9.0)));


// + (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute __attribute__((availability(ios,introduced=9.0)));


// + (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10.0)));


// @property (readonly, nonatomic) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection __attribute__((availability(ios,introduced=10.0)));

/* @end */


// @interface UIView(UIViewGeometry)


// @property(nonatomic) CGRect frame;


// @property(nonatomic) CGRect bounds;
// @property(nonatomic) CGPoint center;
// @property(nonatomic) CGAffineTransform transform;
// @property(nonatomic) CATransform3D transform3D __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0)));
// @property(nonatomic) CGFloat contentScaleFactor __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic,getter=isMultipleTouchEnabled) BOOL multipleTouchEnabled __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isExclusiveTouch) BOOL exclusiveTouch __attribute__((availability(tvos,unavailable)));

// - (nullable UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event;
// - (BOOL)pointInside:(CGPoint)point withEvent:(nullable UIEvent *)event;

// - (CGPoint)convertPoint:(CGPoint)point toView:(nullable UIView *)view;
// - (CGPoint)convertPoint:(CGPoint)point fromView:(nullable UIView *)view;
// - (CGRect)convertRect:(CGRect)rect toView:(nullable UIView *)view;
// - (CGRect)convertRect:(CGRect)rect fromView:(nullable UIView *)view;

// @property(nonatomic) BOOL autoresizesSubviews;
// @property(nonatomic) UIViewAutoresizing autoresizingMask;

// - (CGSize)sizeThatFits:(CGSize)size;
// - (void)sizeToFit;

/* @end */


// @interface UIView(UIViewHierarchy)

// @property(nullable, nonatomic,readonly) UIView *superview;
// @property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *subviews;
// @property(nullable, nonatomic,readonly) UIWindow *window;

// - (void)removeFromSuperview;
// - (void)insertSubview:(UIView *)view atIndex:(NSInteger)index;
// - (void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;

// - (void)addSubview:(UIView *)view;
// - (void)insertSubview:(UIView *)view belowSubview:(UIView *)siblingSubview;
// - (void)insertSubview:(UIView *)view aboveSubview:(UIView *)siblingSubview;

// - (void)bringSubviewToFront:(UIView *)view;
// - (void)sendSubviewToBack:(UIView *)view;

// - (void)didAddSubview:(UIView *)subview;
// - (void)willRemoveSubview:(UIView *)subview;

// - (void)willMoveToSuperview:(nullable UIView *)newSuperview;
// - (void)didMoveToSuperview;
// - (void)willMoveToWindow:(nullable UIWindow *)newWindow;
// - (void)didMoveToWindow;

// - (BOOL)isDescendantOfView:(UIView *)view;
// - (nullable __kindof UIView *)viewWithTag:(NSInteger)tag;


// - (void)setNeedsLayout;
// - (void)layoutIfNeeded;

// - (void)layoutSubviews;
// @property (nonatomic) UIEdgeInsets layoutMargins __attribute__((availability(ios,introduced=8.0)));




// @property (nonatomic) NSDirectionalEdgeInsets directionalLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic) BOOL preservesSuperviewLayoutMargins __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic) BOOL insetsLayoutMarginsFromSafeArea __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// - (void)layoutMarginsDidChange __attribute__((availability(ios,introduced=8.0)));

// @property (nonatomic,readonly) UIEdgeInsets safeAreaInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)safeAreaInsetsDidChange __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property(readonly,strong) UILayoutGuide *layoutMarginsGuide __attribute__((availability(ios,introduced=9.0)));


// @property (nonatomic, readonly, strong) UILayoutGuide *readableContentGuide __attribute__((availability(ios,introduced=9.0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *safeAreaLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
/* @end */


// @interface UIView(UIViewRendering)

// - (void)drawRect:(CGRect)rect;

// - (void)setNeedsDisplay;
// - (void)setNeedsDisplayInRect:(CGRect)rect;

// @property(nonatomic) BOOL clipsToBounds;
// @property(nullable, nonatomic,copy) UIColor *backgroundColor __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) CGFloat alpha;
// @property(nonatomic,getter=isOpaque) BOOL opaque;
// @property(nonatomic) BOOL clearsContextBeforeDrawing;
// @property(nonatomic,getter=isHidden) BOOL hidden;
// @property(nonatomic) UIViewContentMode contentMode;
// @property(nonatomic) CGRect contentStretch __attribute__((availability(ios,introduced=3.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic,strong) UIView *maskView __attribute__((availability(ios,introduced=8.0)));







// @property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7.0)));







// @property(nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode __attribute__((availability(ios,introduced=7.0)));




// - (void)tintColorDidChange __attribute__((availability(ios,introduced=7.0)));

/* @end */


// @interface UIView(UIViewAnimation)

// + (void)setAnimationsEnabled:(BOOL)enabled;
@property(class, nonatomic, readonly) BOOL areAnimationsEnabled;
// + (void)performWithoutAnimation:(void (__attribute__((noescape)) ^)(void))actionsWithoutAnimation __attribute__((availability(ios,introduced=7.0)));

@property(class, nonatomic, readonly) NSTimeInterval inheritedAnimationDuration __attribute__((availability(ios,introduced=9.0)));

/* @end */


// @interface UIView(UIViewAnimationWithBlocks)

// + (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4.0)));

// + (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4.0)));

// + (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=4.0)));


// + (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7.0)));

// + (void)transitionWithView:(UIView *)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4.0)));

// + (void)transitionFromView:(UIView *)fromView toView:(UIView *)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4.0)));



// + (void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<__kindof UIView *> *)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7.0)));


// + (void)modifyAnimationsWithRepeatCount:(CGFloat)count autoreverses:(BOOL)autoreverses animations:(void(__attribute__((noescape)) ^)(void))animations __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(tvos,introduced=12.0)));

/* @end */


// @interface UIView (UIViewKeyframeAnimations)

// + (void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7.0)));
// + (void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=7.0)));

/* @end */


// @interface UIView (UIViewGestureRecognizers)

// @property(nullable, nonatomic,copy) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3.2)));

// - (void)addGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3.2)));
// - (void)removeGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3.2)));




// - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer __attribute__((availability(ios,introduced=6.0)));

/* @end */


// @interface UIView (UIViewMotionEffects)






// - (void)addMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7.0)));



// - (void)removeMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7.0)));

// @property (copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects __attribute__((availability(ios,introduced=7.0)));

/* @end */







typedef NSInteger UILayoutConstraintAxis; enum {
    UILayoutConstraintAxisHorizontal = 0,
    UILayoutConstraintAxisVertical = 1
};






// @interface UIView (UIConstraintBasedLayoutInstallingConstraints)

// @property(nonatomic,readonly) NSArray<__kindof NSLayoutConstraint *> *constraints __attribute__((availability(ios,introduced=6.0)));

// - (void)addConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6.0)));
// - (void)addConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6.0)));
// - (void)removeConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6.0)));
// - (void)removeConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6.0)));
/* @end */

// @interface UIView (UIConstraintBasedLayoutCoreMethods)
// - (void)updateConstraintsIfNeeded __attribute__((availability(ios,introduced=6.0)));
// - (void)updateConstraints __attribute__((availability(ios,introduced=6.0))) __attribute__((objc_requires_super));
// - (BOOL)needsUpdateConstraints __attribute__((availability(ios,introduced=6.0)));
// - (void)setNeedsUpdateConstraints __attribute__((availability(ios,introduced=6.0)));
/* @end */




// @interface UIView (UIConstraintBasedCompatibility)







// @property(nonatomic) BOOL translatesAutoresizingMaskIntoConstraints __attribute__((availability(ios,introduced=6.0)));



@property(class, nonatomic, readonly) BOOL requiresConstraintBasedLayout __attribute__((availability(ios,introduced=6.0)));

/* @end */




// @interface UIView (UIConstraintBasedLayoutLayering)
// - (CGRect)alignmentRectForFrame:(CGRect)frame __attribute__((availability(ios,introduced=6.0)));
// - (CGRect)frameForAlignmentRect:(CGRect)alignmentRect __attribute__((availability(ios,introduced=6.0)));



// @property(nonatomic, readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6.0)));

// - (UIView *)viewForBaselineLayout __attribute__((availability(ios,introduced=6.0,deprecated=9.0,message="Override -viewForFirstBaselineLayout or -viewForLastBaselineLayout as appropriate, instead"))) __attribute__((availability(tvos,unavailable)));
// @property(readonly,strong) UIView *viewForFirstBaselineLayout __attribute__((availability(ios,introduced=9.0)));
// @property(readonly,strong) UIView *viewForLastBaselineLayout __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) const CGFloat UIViewNoIntrinsicMetric __attribute__((availability(ios,introduced=6.0)));
// @property(nonatomic, readonly) CGSize intrinsicContentSize __attribute__((availability(ios,introduced=6.0)));
// - (void)invalidateIntrinsicContentSize __attribute__((availability(ios,introduced=6.0)));

// - (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6.0)));
// - (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6.0)));

// - (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6.0)));
// - (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6.0)));
/* @end */




extern "C" __attribute__((visibility ("default"))) const CGSize UILayoutFittingCompressedSize __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) const CGSize UILayoutFittingExpandedSize __attribute__((availability(ios,introduced=6.0)));

// @interface UIView (UIConstraintBasedLayoutFittingSize)



// - (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize __attribute__((availability(ios,introduced=6.0)));
// - (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority __attribute__((availability(ios,introduced=8.0)));
/* @end */


// @interface UIView (UILayoutGuideSupport)



// @property(nonatomic,readonly,copy) NSArray<__kindof UILayoutGuide *> *layoutGuides __attribute__((availability(ios,introduced=9.0)));



// - (void)addLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9.0)));



// - (void)removeLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9.0)));
/* @end */


// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

// @interface UIView (UIViewLayoutConstraintCreation)


// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leadingAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *trailingAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leftAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *rightAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutDimension *widthAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *centerXAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *centerYAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *firstBaselineAnchor __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *lastBaselineAnchor __attribute__((availability(ios,introduced=9.0)));

/* @end */






// @interface UIView (UIConstraintBasedLayoutDebugging)




// - (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6.0)));






// @property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=6.0)));

// - (void)exerciseAmbiguityInLayout __attribute__((availability(ios,introduced=6.0)));
/* @end */




// @interface UILayoutGuide (UIConstraintBasedLayoutDebugging)




// - (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=10.0)));





// @property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=10.0)));
/* @end */


// @interface UIView (UIStateRestoration)
// @property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6.0)));
// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
/* @end */


// @interface UIView (UISnapshotting)
// - (nullable UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7.0)));
// - (nullable UIView *)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates withCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=7.0)));

// - (BOOL)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7.0)));
/* @end */


// @interface UIView (DeprecatedAnimations)



// + (void)beginAnimations:(nullable NSString *)animationID context:(nullable void *)context __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)commitAnimations __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationDelegate:(nullable id)delegate __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationWillStartSelector:(nullable SEL)selector __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationDidStopSelector:(nullable SEL)selector __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationDuration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationDelay:(NSTimeInterval)delay __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationStartDate:(NSDate *)startDate __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationCurve:(UIViewAnimationCurve)curve __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationRepeatCount:(float)repeatCount __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationRepeatAutoreverses:(BOOL)repeatAutoreverses __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationBeginsFromCurrentState:(BOOL)fromCurrentState __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));
// + (void)setAnimationTransition:(UIViewAnimationTransition)transition forView:(UIView *)view cache:(BOOL)cache __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the block-based animation API instead")));

/* @end */


// @interface UIView (UserInterfaceStyle)
// @property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIPickerViewDataSource, UIPickerViewDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPickerView
#define _REWRITER_typedef_UIPickerView
typedef struct objc_object UIPickerView;
typedef struct {} _objc_exc_UIPickerView;
#endif

struct UIPickerView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable,nonatomic,weak) id<UIPickerViewDataSource> dataSource;
// @property(nullable,nonatomic,weak) id<UIPickerViewDelegate> delegate;
// @property(nonatomic) BOOL showsSelectionIndicator __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="This property has no effect on iOS 7 and later.")));


// @property(nonatomic,readonly) NSInteger numberOfComponents;
// - (NSInteger)numberOfRowsInComponent:(NSInteger)component;
// - (CGSize)rowSizeForComponent:(NSInteger)component;




// - (nullable UIView *)viewForRow:(NSInteger)row forComponent:(NSInteger)component;


// - (void)reloadAllComponents;
// - (void)reloadComponent:(NSInteger)component;


// - (void)selectRow:(NSInteger)row inComponent:(NSInteger)component animated:(BOOL)animated;

// - (NSInteger)selectedRowInComponent:(NSInteger)component;

/* @end */



__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewDataSource<NSObject>
/* @required */


// - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView;


// - (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component;
/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewDelegate<NSObject>
/* @optional */


// - (CGFloat)pickerView:(UIPickerView *)pickerView widthForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
// - (CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));




// - (nullable NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView attributedTitleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
// - (UIView *)pickerView:(UIPickerView *)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(nullable UIView *)view __attribute__((availability(tvos,unavailable)));

// - (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSUInteger UIControlEvents; enum {
    UIControlEventTouchDown = 1 << 0,
    UIControlEventTouchDownRepeat = 1 << 1,
    UIControlEventTouchDragInside = 1 << 2,
    UIControlEventTouchDragOutside = 1 << 3,
    UIControlEventTouchDragEnter = 1 << 4,
    UIControlEventTouchDragExit = 1 << 5,
    UIControlEventTouchUpInside = 1 << 6,
    UIControlEventTouchUpOutside = 1 << 7,
    UIControlEventTouchCancel = 1 << 8,

    UIControlEventValueChanged = 1 << 12,
    UIControlEventPrimaryActionTriggered __attribute__((availability(ios,introduced=9.0))) = 1 << 13,

    UIControlEventEditingDidBegin = 1 << 16,
    UIControlEventEditingChanged = 1 << 17,
    UIControlEventEditingDidEnd = 1 << 18,
    UIControlEventEditingDidEndOnExit = 1 << 19,

    UIControlEventAllTouchEvents = 0x00000FFF,
    UIControlEventAllEditingEvents = 0x000F0000,
    UIControlEventApplicationReserved = 0x0F000000,
    UIControlEventSystemReserved = 0xF0000000,
    UIControlEventAllEvents = 0xFFFFFFFF
};

typedef NSInteger UIControlContentVerticalAlignment; enum {
    UIControlContentVerticalAlignmentCenter = 0,
    UIControlContentVerticalAlignmentTop = 1,
    UIControlContentVerticalAlignmentBottom = 2,
    UIControlContentVerticalAlignmentFill = 3,
};

typedef NSInteger UIControlContentHorizontalAlignment; enum {
    UIControlContentHorizontalAlignmentCenter = 0,
    UIControlContentHorizontalAlignmentLeft = 1,
    UIControlContentHorizontalAlignmentRight = 2,
    UIControlContentHorizontalAlignmentFill = 3,
    UIControlContentHorizontalAlignmentLeading __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 4,
    UIControlContentHorizontalAlignmentTrailing __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 5,
};

typedef NSUInteger UIControlState; enum {
    UIControlStateNormal = 0,
    UIControlStateHighlighted = 1 << 0,
    UIControlStateDisabled = 1 << 1,
    UIControlStateSelected = 1 << 2,
    UIControlStateFocused __attribute__((availability(ios,introduced=9.0))) = 1 << 3,
    UIControlStateApplication = 0x00FF0000,
    UIControlStateReserved = 0xFF000000
};

// @class UITouch;
#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIControl
#define _REWRITER_typedef_UIControl
typedef struct objc_object UIControl;
typedef struct {} _objc_exc_UIControl;
#endif

struct UIControl_IMPL {
	struct UIView_IMPL UIView_IVARS;
};



// @property(nonatomic,getter=isEnabled) BOOL enabled;
// @property(nonatomic,getter=isSelected) BOOL selected;
// @property(nonatomic,getter=isHighlighted) BOOL highlighted;
// @property(nonatomic) UIControlContentVerticalAlignment contentVerticalAlignment;
// @property(nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment;
// @property(nonatomic, readonly) UIControlContentHorizontalAlignment effectiveContentHorizontalAlignment;

// @property(nonatomic,readonly) UIControlState state;
// @property(nonatomic,readonly,getter=isTracking) BOOL tracking;
// @property(nonatomic,readonly,getter=isTouchInside) BOOL touchInside;

// - (BOOL)beginTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (BOOL)continueTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (void)endTrackingWithTouch:(nullable UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (void)cancelTrackingWithEvent:(nullable UIEvent *)event;




// - (void)addTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents;


// - (void)removeTarget:(nullable id)target action:(nullable SEL)action forControlEvents:(UIControlEvents)controlEvents;


// @property(nonatomic,readonly) NSSet *allTargets;
// @property(nonatomic,readonly) UIControlEvents allControlEvents;

// - (nullable NSArray<NSString *> *)actionsForTarget:(nullable id)target forControlEvent:(UIControlEvents)controlEvent;


// - (void)sendAction:(SEL)action to:(nullable id)target forEvent:(nullable UIEvent *)event;
// - (void)sendActionsForControlEvents:(UIControlEvents)controlEvents;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIRefreshControl
#define _REWRITER_typedef_UIRefreshControl
typedef struct objc_object UIRefreshControl;
typedef struct {} _objc_exc_UIRefreshControl;
#endif

struct UIRefreshControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};








// - (instancetype)init;

// @property (nonatomic, readonly, getter=isRefreshing) BOOL refreshing;

// @property (null_resettable, nonatomic, strong) UIColor *tintColor;
// @property (nullable, nonatomic, strong) NSAttributedString *attributedTitle __attribute__((annotate("ui_appearance_selector")));


// - (void)beginRefreshing __attribute__((availability(ios,introduced=6.0)));

// - (void)endRefreshing __attribute__((availability(ios,introduced=6.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIScrollViewIndicatorStyle; enum {
    UIScrollViewIndicatorStyleDefault,
    UIScrollViewIndicatorStyleBlack,
    UIScrollViewIndicatorStyleWhite
};

typedef NSInteger UIScrollViewKeyboardDismissMode; enum {
    UIScrollViewKeyboardDismissModeNone,
    UIScrollViewKeyboardDismissModeOnDrag,
    UIScrollViewKeyboardDismissModeInteractive,
} __attribute__((availability(ios,introduced=7.0)));

typedef NSInteger UIScrollViewIndexDisplayMode; enum {
    UIScrollViewIndexDisplayModeAutomatic,
    UIScrollViewIndexDisplayModeAlwaysHidden,
} __attribute__((availability(tvos,introduced=10.2)));

typedef NSInteger UIScrollViewContentInsetAdjustmentBehavior; enum {
    UIScrollViewContentInsetAdjustmentAutomatic,
    UIScrollViewContentInsetAdjustmentScrollableAxes,
    UIScrollViewContentInsetAdjustmentNever,
    UIScrollViewContentInsetAdjustmentAlways,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef CGFloat UIScrollViewDecelerationRate __attribute__((swift_wrapper(enum)));

extern "C" __attribute__((visibility ("default"))) const UIScrollViewDecelerationRate UIScrollViewDecelerationRateNormal __attribute__((availability(ios,introduced=3.0)));
extern "C" __attribute__((visibility ("default"))) const UIScrollViewDecelerationRate UIScrollViewDecelerationRateFast __attribute__((availability(ios,introduced=3.0)));

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIPanGestureRecognizer
#define _REWRITER_typedef_UIPanGestureRecognizer
typedef struct objc_object UIPanGestureRecognizer;
typedef struct {} _objc_exc_UIPanGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UIPinchGestureRecognizer
#define _REWRITER_typedef_UIPinchGestureRecognizer
typedef struct objc_object UIPinchGestureRecognizer;
typedef struct {} _objc_exc_UIPinchGestureRecognizer;
#endif

// @protocol UIScrollViewDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIScrollView
#define _REWRITER_typedef_UIScrollView
typedef struct objc_object UIScrollView;
typedef struct {} _objc_exc_UIScrollView;
#endif

struct UIScrollView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic) CGPoint contentOffset;
// @property(nonatomic) CGSize contentSize;
// @property(nonatomic) UIEdgeInsets contentInset;




// @property(nonatomic, readonly) UIEdgeInsets adjustedContentInset __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (void)adjustedContentInsetDidChange __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((objc_requires_super));




// @property(nonatomic) UIScrollViewContentInsetAdjustmentBehavior contentInsetAdjustmentBehavior __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property(nonatomic) BOOL automaticallyAdjustsScrollIndicatorInsets __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *contentLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *frameLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property(nullable,nonatomic,weak) id<UIScrollViewDelegate> delegate;
// @property(nonatomic,getter=isDirectionalLockEnabled) BOOL directionalLockEnabled;
// @property(nonatomic) BOOL bounces;
// @property(nonatomic) BOOL alwaysBounceVertical;
// @property(nonatomic) BOOL alwaysBounceHorizontal;
// @property(nonatomic,getter=isPagingEnabled) BOOL pagingEnabled __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isScrollEnabled) BOOL scrollEnabled;

// @property(nonatomic) BOOL showsVerticalScrollIndicator;
// @property(nonatomic) BOOL showsHorizontalScrollIndicator;
// @property(nonatomic) UIScrollViewIndicatorStyle indicatorStyle;

// @property(nonatomic) UIEdgeInsets verticalScrollIndicatorInsets __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(tvos,introduced=11.1)));
// @property(nonatomic) UIEdgeInsets horizontalScrollIndicatorInsets __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(tvos,introduced=11.1)));
// @property(nonatomic) UIEdgeInsets scrollIndicatorInsets;
// - (UIEdgeInsets)scrollIndicatorInsets __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="The scrollIndicatorInsets getter is deprecated, use the verticalScrollIndicatorInsets and horizontalScrollIndicatorInsets getters instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="The scrollIndicatorInsets getter is deprecated, use the verticalScrollIndicatorInsets and horizontalScrollIndicatorInsets getters instead.")));
// @property(nonatomic) UIScrollViewDecelerationRate decelerationRate __attribute__((availability(ios,introduced=3.0)));
// @property(nonatomic) UIScrollViewIndexDisplayMode indexDisplayMode __attribute__((availability(tvos,introduced=10.2)));

// - (void)setContentOffset:(CGPoint)contentOffset animated:(BOOL)animated;
// - (void)scrollRectToVisible:(CGRect)rect animated:(BOOL)animated;

// - (void)flashScrollIndicators;
// @property(nonatomic,readonly,getter=isTracking) BOOL tracking;
// @property(nonatomic,readonly,getter=isDragging) BOOL dragging;
// @property(nonatomic,readonly,getter=isDecelerating) BOOL decelerating;

// @property(nonatomic) BOOL delaysContentTouches;
// @property(nonatomic) BOOL canCancelContentTouches;





// - (BOOL)touchesShouldBegin:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event inContentView:(UIView *)view;



// - (BOOL)touchesShouldCancelInContentView:(UIView *)view;
// @property(nonatomic) CGFloat minimumZoomScale;
// @property(nonatomic) CGFloat maximumZoomScale;

// @property(nonatomic) CGFloat zoomScale __attribute__((availability(ios,introduced=3.0)));
// - (void)setZoomScale:(CGFloat)scale animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0)));
// - (void)zoomToRect:(CGRect)rect animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0)));

// @property(nonatomic) BOOL bouncesZoom;

// @property(nonatomic,readonly,getter=isZooming) BOOL zooming;
// @property(nonatomic,readonly,getter=isZoomBouncing) BOOL zoomBouncing;



// @property(nonatomic) BOOL scrollsToTop __attribute__((availability(tvos,unavailable)));





// @property(nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer __attribute__((availability(ios,introduced=5.0)));

// @property(nullable, nonatomic, readonly) UIPinchGestureRecognizer *pinchGestureRecognizer __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic, readonly) UIGestureRecognizer *directionalPressGestureRecognizer __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Configuring the panGestureRecognizer for indirect scrolling automatically supports directional presses now, so this property is no longer useful.")));

// @property(nonatomic) UIScrollViewKeyboardDismissMode keyboardDismissMode __attribute__((availability(ios,introduced=7.0)));

// @property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIScrollViewDelegate<NSObject>

/* @optional */

// - (void)scrollViewDidScroll:(UIScrollView *)scrollView;
// - (void)scrollViewDidZoom:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=3.2)));


// - (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView;

// - (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset __attribute__((availability(ios,introduced=5.0)));

// - (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate;

// - (void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView;
// - (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView;

// - (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView;

// - (nullable UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView;
// - (void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view __attribute__((availability(ios,introduced=3.2)));
// - (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view atScale:(CGFloat)scale;

// - (BOOL)scrollViewShouldScrollToTop:(UIScrollView *)scrollView;
// - (void)scrollViewDidScrollToTop:(UIScrollView *)scrollView;



// - (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin







__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewAccessibilityDelegate <UIPickerViewDelegate>

/* @optional */
// - (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityLabelForComponent:(NSInteger)component;
// - (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityHintForComponent:(NSInteger)component;
// - (NSArray<NSString *> *)pickerView:(UIPickerView *)pickerView accessibilityUserInputLabelsForComponent:(NSInteger)component __attribute__((availability(ios,introduced=13.0)));


// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView accessibilityAttributedLabelForComponent:(NSInteger)component __attribute__((availability(ios,introduced=11.0)));
// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView accessibilityAttributedHintForComponent:(NSInteger)component __attribute__((availability(ios,introduced=11.0)));
// - (NSArray<NSAttributedString *> *)pickerView:(UIPickerView *)pickerView accessibilityAttributedUserInputLabelsForComponent:(NSInteger)component __attribute__((availability(ios,introduced=13.0)));

/* @end */








// @protocol UIScrollViewAccessibilityDelegate <UIScrollViewDelegate>

/* @optional */
// - (nullable NSString *)accessibilityScrollStatusForScrollView:(UIScrollView *)scrollView;


// - (nullable NSAttributedString *)accessibilityAttributedScrollStatusForScrollView:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

// @interface UIView (UIAccessibilityInvertColors)
// @property(nonatomic) BOOL accessibilityIgnoresInvertColors __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef uint64_t UIAccessibilityTraits __attribute__((swift_wrapper(enum)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNone;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitButton;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitLink;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitHeader __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSearchField;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitImage;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSelected;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitPlaysSound;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitKeyboardKey;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStaticText;







extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSummaryElement;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNotEnabled;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitUpdatesFrequently;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStartsMediaSession __attribute__((availability(ios,introduced=4.0)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAdjustable __attribute__((availability(ios,introduced=4.0)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAllowsDirectInteraction __attribute__((availability(ios,introduced=5.0)));






extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitCausesPageTurn __attribute__((availability(ios,introduced=5.0)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitTabBar __attribute__((availability(ios,introduced=10.0)));
typedef uint32_t UIAccessibilityNotifications __attribute__((swift_wrapper(enum)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityScreenChangedNotification;






extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityLayoutChangedNotification;






extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityAnnouncementNotification __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPageScrolledNotification __attribute__((availability(ios,introduced=4.2)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPauseAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityResumeAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8.0)));





extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityAnnouncementDidFinishNotification __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyStringValue __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyWasSuccessful __attribute__((availability(ios,introduced=6.0)));




extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityElementFocusedNotification __attribute__((availability(ios,introduced=9.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityFocusedElementKey __attribute__((availability(ios,introduced=9.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityUnfocusedElementKey __attribute__((availability(ios,introduced=9.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAssistiveTechnologyKey __attribute__((availability(ios,introduced=9.0)));

typedef NSString * UIAccessibilityAssistiveTechnologyIdentifier __attribute__((swift_wrapper(enum)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityAssistiveTechnologyIdentifier const UIAccessibilityNotificationSwitchControlIdentifier __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityAssistiveTechnologyIdentifier const UIAccessibilityNotificationVoiceOverIdentifier __attribute__((availability(ios,introduced=9.0)));





typedef NSInteger UIAccessibilityNavigationStyle; enum {




    UIAccessibilityNavigationStyleAutomatic = 0,




    UIAccessibilityNavigationStyleSeparate = 1,





    UIAccessibilityNavigationStyleCombined = 2,
} __attribute__((availability(ios,introduced=8.0)));


typedef NSInteger UIAccessibilityContainerType; enum {
    UIAccessibilityContainerTypeNone = 0,
    UIAccessibilityContainerTypeDataTable,
    UIAccessibilityContainerTypeList,
    UIAccessibilityContainerTypeLandmark,
    UIAccessibilityContainerTypeSemanticGroup __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)))
} __attribute__((availability(ios,introduced=11.0)));




typedef NSString * UIAccessibilityTextualContext __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextWordProcessing __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextNarrative __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextMessaging __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextSpreadsheet __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextFileSystem __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextSourceCode __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityTextualContext const UIAccessibilityTextualContextConsole __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributePunctuation __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributeLanguage __attribute__((availability(ios,introduced=7.0)));




extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributePitch __attribute__((availability(ios,introduced=7.0)));




extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributeQueueAnnouncement __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributeIPANotation __attribute__((availability(ios,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilitySpeechAttributeSpellOut __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilityTextAttributeHeadingLevel __attribute__((availability(ios,introduced=11.0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilityTextAttributeCustom __attribute__((availability(ios,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const UIAccessibilityTextAttributeContext __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @interface NSObject (UIAccessibilityContainer)




// - (NSInteger)accessibilityElementCount;





// - (nullable id)accessibilityElementAtIndex:(NSInteger)index;





// - (NSInteger)indexOfAccessibilityElement:(id)element;




// @property (nullable, nonatomic, strong) NSArray *accessibilityElements __attribute__((availability(ios,introduced=8.0)));




// @property (nonatomic) UIAccessibilityContainerType accessibilityContainerType __attribute__((availability(ios,introduced=11.0)));

/* @end */







extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) // @protocol UIAccessibilityContainerDataTableCell <NSObject>
/* @required */



// - (NSRange)accessibilityRowRange;
// - (NSRange)accessibilityColumnRange;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) // @protocol UIAccessibilityContainerDataTable <NSObject>
/* @required */



// - (nullable id<UIAccessibilityContainerDataTableCell>)accessibilityDataTableCellElementForRow:(NSUInteger)row column:(NSUInteger)column;

// - (NSUInteger)accessibilityRowCount;
// - (NSUInteger)accessibilityColumnCount;

/* @optional */


// - (nullable NSArray<id<UIAccessibilityContainerDataTableCell>> *)accessibilityHeaderElementsForRow:(NSUInteger)row;
// - (nullable NSArray<id<UIAccessibilityContainerDataTableCell>> *)accessibilityHeaderElementsForColumn:(NSUInteger)column;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomAction
#define _REWRITER_typedef_UIAccessibilityCustomAction
typedef struct objc_object UIAccessibilityCustomAction;
typedef struct {} _objc_exc_UIAccessibilityCustomAction;
#endif

struct UIAccessibilityCustomAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithName:(NSString *)name target:(nullable id)target selector:(SEL)selector;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName target:(nullable id)target selector:(SEL)selector __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef BOOL(*UIAccessibilityCustomActionHandler)(UIAccessibilityCustomAction *customAction);
// - (instancetype)initWithName:(NSString *)name actionHandler:(UIAccessibilityCustomActionHandler)actionHandler __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName actionHandler:(UIAccessibilityCustomActionHandler)actionHandler __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property (nonatomic, copy) NSString *name;





// @property (nonatomic, copy) NSAttributedString *attributedName __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property (nullable, nonatomic, weak) id target;







// @property (nonatomic, assign) SEL selector;




// @property (nonatomic, copy, nullable) UIAccessibilityCustomActionHandler actionHandler __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin








typedef NSInteger UITextAutocapitalizationType; enum {
    UITextAutocapitalizationTypeNone,
    UITextAutocapitalizationTypeWords,
    UITextAutocapitalizationTypeSentences,
    UITextAutocapitalizationTypeAllCharacters,
};
typedef NSInteger UITextAutocorrectionType; enum {
    UITextAutocorrectionTypeDefault,
    UITextAutocorrectionTypeNo,
    UITextAutocorrectionTypeYes,
};






typedef NSInteger UITextSpellCheckingType; enum {
    UITextSpellCheckingTypeDefault,
    UITextSpellCheckingTypeNo,
    UITextSpellCheckingTypeYes,
} __attribute__((availability(ios,introduced=5.0)));





typedef NSInteger UITextSmartQuotesType; enum {
    UITextSmartQuotesTypeDefault,
    UITextSmartQuotesTypeNo,
    UITextSmartQuotesTypeYes,
} __attribute__((availability(ios,introduced=11.0)));





typedef NSInteger UITextSmartDashesType; enum {
    UITextSmartDashesTypeDefault,
    UITextSmartDashesTypeNo,
    UITextSmartDashesTypeYes,
} __attribute__((availability(ios,introduced=11.0)));





typedef NSInteger UITextSmartInsertDeleteType; enum {
    UITextSmartInsertDeleteTypeDefault,
    UITextSmartInsertDeleteTypeNo,
    UITextSmartInsertDeleteTypeYes,
} __attribute__((availability(ios,introduced=11.0)));
typedef NSInteger UIKeyboardType; enum {
    UIKeyboardTypeDefault,
    UIKeyboardTypeASCIICapable,
    UIKeyboardTypeNumbersAndPunctuation,
    UIKeyboardTypeURL,
    UIKeyboardTypeNumberPad,
    UIKeyboardTypePhonePad,
    UIKeyboardTypeNamePhonePad,
    UIKeyboardTypeEmailAddress,
    UIKeyboardTypeDecimalPad __attribute__((availability(ios,introduced=4.1))),
    UIKeyboardTypeTwitter __attribute__((availability(ios,introduced=5.0))),
    UIKeyboardTypeWebSearch __attribute__((availability(ios,introduced=7.0))),
    UIKeyboardTypeASCIICapableNumberPad __attribute__((availability(ios,introduced=10.0))),

    UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable,

};
typedef NSInteger UIKeyboardAppearance; enum {
    UIKeyboardAppearanceDefault,
    UIKeyboardAppearanceDark __attribute__((availability(ios,introduced=7.0))),
    UIKeyboardAppearanceLight __attribute__((availability(ios,introduced=7.0))),
    UIKeyboardAppearanceAlert = UIKeyboardAppearanceDark,
};
typedef NSInteger UIReturnKeyType; enum {
    UIReturnKeyDefault,
    UIReturnKeyGo,
    UIReturnKeyGoogle,
    UIReturnKeyJoin,
    UIReturnKeyNext,
    UIReturnKeyRoute,
    UIReturnKeySearch,
    UIReturnKeySend,
    UIReturnKeyYahoo,
    UIReturnKeyDone,
    UIReturnKeyEmergencyCall,
    UIReturnKeyContinue __attribute__((availability(ios,introduced=9.0))),
};

typedef NSString * UITextContentType __attribute__((swift_wrapper(enum)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=12.0))) 
#ifndef _REWRITER_typedef_UITextInputPasswordRules
#define _REWRITER_typedef_UITextInputPasswordRules
typedef struct objc_object UITextInputPasswordRules;
typedef struct {} _objc_exc_UITextInputPasswordRules;
#endif

struct UITextInputPasswordRules_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic,readonly) NSString *passwordRulesDescriptor;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));
// + (instancetype)passwordRulesWithDescriptor:(NSString *)passwordRulesDescriptor;

/* @end */








// @protocol UITextInputTraits <NSObject>

/* @optional */

// @property(nonatomic) UITextAutocapitalizationType autocapitalizationType;
// @property(nonatomic) UITextAutocorrectionType autocorrectionType;
// @property(nonatomic) UITextSpellCheckingType spellCheckingType __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic) UITextSmartQuotesType smartQuotesType __attribute__((availability(ios,introduced=11.0)));
// @property(nonatomic) UITextSmartDashesType smartDashesType __attribute__((availability(ios,introduced=11.0)));
// @property(nonatomic) UITextSmartInsertDeleteType smartInsertDeleteType __attribute__((availability(ios,introduced=11.0)));
// @property(nonatomic) UIKeyboardType keyboardType;
// @property(nonatomic) UIKeyboardAppearance keyboardAppearance;
// @property(nonatomic) UIReturnKeyType returnKeyType;
// @property(nonatomic) BOOL enablesReturnKeyAutomatically;
// @property(nonatomic,getter=isSecureTextEntry) BOOL secureTextEntry;


// @property(null_unspecified,nonatomic,copy) UITextContentType textContentType __attribute__((availability(ios,introduced=10.0)));






// @property(nullable,nonatomic,copy) UITextInputPasswordRules *passwordRules __attribute__((availability(ios,introduced=12.0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNamePrefix __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeGivenName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeMiddleName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFamilyName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNameSuffix __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNickname __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeJobTitle __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeOrganizationName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeLocation __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFullStreetAddress __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine1 __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine2 __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCity __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressState __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCityAndState __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeSublocality __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCountryName __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypePostalCode __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeTelephoneNumber __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeEmailAddress __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeURL __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCreditCardNumber __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeUsername __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypePassword __attribute__((availability(ios,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNewPassword __attribute__((availability(ios,introduced=12.0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeOneTimeCode __attribute__((availability(ios,introduced=12.0)));
#pragma clang assume_nonnull end


// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

// @class UIFontDescriptor;
#ifndef _REWRITER_typedef_UIFontDescriptor
#define _REWRITER_typedef_UIFontDescriptor
typedef struct objc_object UIFontDescriptor;
typedef struct {} _objc_exc_UIFontDescriptor;
#endif








// @class NSParagraphStyle;
#ifndef _REWRITER_typedef_NSParagraphStyle
#define _REWRITER_typedef_NSParagraphStyle
typedef struct objc_object NSParagraphStyle;
typedef struct {} _objc_exc_NSParagraphStyle;
#endif

// @class NSTextTab;
#ifndef _REWRITER_typedef_NSTextTab
#define _REWRITER_typedef_NSTextTab
typedef struct objc_object NSTextTab;
typedef struct {} _objc_exc_NSTextTab;
#endif






extern "C" {
#pragma clang assume_nonnull begin





typedef const struct __attribute__((objc_bridge_related(NSParagraphStyle,,))) __CTParagraphStyle * CTParagraphStyleRef;







CFTypeID CTParagraphStyleGetTypeID( void ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
typedef uint8_t CTTextAlignment; enum {
    kCTTextAlignmentLeft = 0,
    kCTTextAlignmentRight = 1,
    kCTTextAlignmentCenter = 2,
    kCTTextAlignmentJustified = 3,
    kCTTextAlignmentNatural = 4,

    kCTLeftTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentLeft,
    kCTRightTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
    = kCTTextAlignmentRight,
    kCTCenterTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentCenter,
    kCTJustifiedTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentJustified,
    kCTNaturalTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentNatural
};
typedef uint8_t CTLineBreakMode; enum {
    kCTLineBreakByWordWrapping = 0,
    kCTLineBreakByCharWrapping = 1,
    kCTLineBreakByClipping = 2,
    kCTLineBreakByTruncatingHead = 3,
    kCTLineBreakByTruncatingTail = 4,
    kCTLineBreakByTruncatingMiddle = 5
};
typedef int8_t CTWritingDirection; enum {
    kCTWritingDirectionNatural = -1,
    kCTWritingDirectionLeftToRight = 0,
    kCTWritingDirectionRightToLeft = 1
};
typedef uint32_t CTParagraphStyleSpecifier; enum {
    kCTParagraphStyleSpecifierAlignment = 0,
    kCTParagraphStyleSpecifierFirstLineHeadIndent = 1,
    kCTParagraphStyleSpecifierHeadIndent = 2,
    kCTParagraphStyleSpecifierTailIndent = 3,
    kCTParagraphStyleSpecifierTabStops = 4,
    kCTParagraphStyleSpecifierDefaultTabInterval = 5,
    kCTParagraphStyleSpecifierLineBreakMode = 6,
    kCTParagraphStyleSpecifierLineHeightMultiple = 7,
    kCTParagraphStyleSpecifierMaximumLineHeight = 8,
    kCTParagraphStyleSpecifierMinimumLineHeight = 9,
    kCTParagraphStyleSpecifierLineSpacing __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="See documentation for replacements"))) __attribute__((availability(ios,introduced=3.2,deprecated=6.0,message="See documentation for replacements"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 10,
    kCTParagraphStyleSpecifierParagraphSpacing = 11,
    kCTParagraphStyleSpecifierParagraphSpacingBefore = 12,
    kCTParagraphStyleSpecifierBaseWritingDirection = 13,
    kCTParagraphStyleSpecifierMaximumLineSpacing = 14,
    kCTParagraphStyleSpecifierMinimumLineSpacing = 15,
    kCTParagraphStyleSpecifierLineSpacingAdjustment = 16,
    kCTParagraphStyleSpecifierLineBoundsOptions = 17,

    kCTParagraphStyleSpecifierCount
};
typedef struct CTParagraphStyleSetting
{
    CTParagraphStyleSpecifier spec;
    size_t valueSize;
    const void * value;

} CTParagraphStyleSetting;
CTParagraphStyleRef CTParagraphStyleCreate(
    const CTParagraphStyleSetting * _Nullable settings,
    size_t settingCount ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
CTParagraphStyleRef CTParagraphStyleCreateCopy(
    CTParagraphStyleRef paragraphStyle ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
bool CTParagraphStyleGetValueForSpecifier(
    CTParagraphStyleRef paragraphStyle,
    CTParagraphStyleSpecifier spec,
    size_t valueBufferSize,
    void * valueBuffer ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


}



#pragma clang assume_nonnull begin




typedef NSInteger NSTextAlignment; enum {
    NSTextAlignmentLeft = 0,

    NSTextAlignmentCenter = 1,
    NSTextAlignmentRight = 2,




    NSTextAlignmentJustified = 3,
    NSTextAlignmentNatural = 4
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSWritingDirection; enum {
    NSWritingDirectionNatural = -1,
    NSWritingDirectionLeftToRight = 0,
    NSWritingDirectionRightToLeft = 1
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern "C" __attribute__((visibility ("default"))) CTTextAlignment NSTextAlignmentToCTTextAlignment(NSTextAlignment nsTextAlignment) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSTextAlignment NSTextAlignmentFromCTTextAlignment(CTTextAlignment ctTextAlignment) __attribute__((availability(ios,introduced=6.0)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

// @protocol UIKeyInput <UITextInputTraits>

// @property(nonatomic, readonly) BOOL hasText;
// - (void)insertText:(NSString *)text;
// - (void)deleteBackward;

/* @end */






// @class NSTextAlternatives;
#ifndef _REWRITER_typedef_NSTextAlternatives
#define _REWRITER_typedef_NSTextAlternatives
typedef struct objc_object NSTextAlternatives;
typedef struct {} _objc_exc_NSTextAlternatives;
#endif

// @class UITextPosition;
#ifndef _REWRITER_typedef_UITextPosition
#define _REWRITER_typedef_UITextPosition
typedef struct objc_object UITextPosition;
typedef struct {} _objc_exc_UITextPosition;
#endif

// @class UITextRange;
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

// @class UITextSelectionRect;
#ifndef _REWRITER_typedef_UITextSelectionRect
#define _REWRITER_typedef_UITextSelectionRect
typedef struct objc_object UITextSelectionRect;
typedef struct {} _objc_exc_UITextSelectionRect;
#endif

// @class UIBarButtonItemGroup;
#ifndef _REWRITER_typedef_UIBarButtonItemGroup
#define _REWRITER_typedef_UIBarButtonItemGroup
typedef struct objc_object UIBarButtonItemGroup;
typedef struct {} _objc_exc_UIBarButtonItemGroup;
#endif


// @protocol UITextInputTokenizer;
// @protocol UITextInputDelegate;

typedef NSInteger UITextStorageDirection; enum {
    UITextStorageDirectionForward = 0,
    UITextStorageDirectionBackward
};

typedef NSInteger UITextLayoutDirection; enum {
    UITextLayoutDirectionRight = 2,
    UITextLayoutDirectionLeft,
    UITextLayoutDirectionUp,
    UITextLayoutDirectionDown
};

typedef NSInteger UITextDirection __attribute__((swift_wrapper(enum)));

typedef NSInteger UITextGranularity; enum {
    UITextGranularityCharacter,
    UITextGranularityWord,
    UITextGranularitySentence,
    UITextGranularityParagraph,
    UITextGranularityLine,
    UITextGranularityDocument
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.1))) 
#ifndef _REWRITER_typedef_UIDictationPhrase
#define _REWRITER_typedef_UIDictationPhrase
typedef struct objc_object UIDictationPhrase;
typedef struct {} _objc_exc_UIDictationPhrase;
#endif

struct UIDictationPhrase_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *_text;
	NSArray * _Nullable _alternativeInterpretations;
};





// @property (nonatomic, readonly) NSString *text;
// @property (nullable, nonatomic, readonly) NSArray<NSString *> *alternativeInterpretations;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UITextInputAssistantItem
#define _REWRITER_typedef_UITextInputAssistantItem
typedef struct objc_object UITextInputAssistantItem;
typedef struct {} _objc_exc_UITextInputAssistantItem;
#endif

struct UITextInputAssistantItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readwrite, assign) BOOL allowsHidingShortcuts;

// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *leadingBarButtonGroups;

// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *trailingBarButtonGroups;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UITextPlaceholder
#define _REWRITER_typedef_UITextPlaceholder
typedef struct objc_object UITextPlaceholder;
typedef struct {} _objc_exc_UITextPlaceholder;
#endif

struct UITextPlaceholder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) NSArray<UITextSelectionRect *> *rects;
/* @end */


typedef NSInteger UITextAlternativeStyle; enum {
    UITextAlternativeStyleNone,
    UITextAlternativeStyleLowConfidence
};

// @protocol UITextInput <UIKeyInput>
/* @required */


// - (nullable NSString *)textInRange:(UITextRange *)range;
// - (void)replaceRange:(UITextRange *)range withText:(NSString *)text;




// @property (nullable, readwrite, copy) UITextRange *selectedTextRange;
// @property (nullable, nonatomic, readonly) UITextRange *markedTextRange;
// @property (nullable, nonatomic, copy) NSDictionary<NSAttributedStringKey, id> *markedTextStyle;
// - (void)setMarkedText:(nullable NSString *)markedText selectedRange:(NSRange)selectedRange;
// - (void)unmarkText;


// @property (nonatomic, readonly) UITextPosition *beginningOfDocument;
// @property (nonatomic, readonly) UITextPosition *endOfDocument;


// - (nullable UITextRange *)textRangeFromPosition:(UITextPosition *)fromPosition toPosition:(UITextPosition *)toPosition;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position offset:(NSInteger)offset;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction offset:(NSInteger)offset;


// - (NSComparisonResult)comparePosition:(UITextPosition *)position toPosition:(UITextPosition *)other;
// - (NSInteger)offsetFromPosition:(UITextPosition *)from toPosition:(UITextPosition *)toPosition;


// @property (nullable, nonatomic, weak) id <UITextInputDelegate> inputDelegate;


// @property (nonatomic, readonly) id <UITextInputTokenizer> tokenizer;


// - (nullable UITextPosition *)positionWithinRange:(UITextRange *)range farthestInDirection:(UITextLayoutDirection)direction;
// - (nullable UITextRange *)characterRangeByExtendingPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction;


// - (NSWritingDirection)baseWritingDirectionForPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;
// - (void)setBaseWritingDirection:(NSWritingDirection)writingDirection forRange:(UITextRange *)range;


// - (CGRect)firstRectForRange:(UITextRange *)range;
// - (CGRect)caretRectForPosition:(UITextPosition *)position;
// - (NSArray<UITextSelectionRect *> *)selectionRectsForRange:(UITextRange *)range __attribute__((availability(ios,introduced=6.0)));


// - (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point;
// - (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point withinRange:(UITextRange *)range;
// - (nullable UITextRange *)characterRangeAtPoint:(CGPoint)point;

/* @optional */

// - (BOOL)shouldChangeTextInRange:(UITextRange *)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=6.0)));



// - (nullable NSDictionary<NSAttributedStringKey, id> *)textStylingAtPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;


// - (nullable UITextPosition *)positionWithinRange:(UITextRange *)range atCharacterOffset:(NSInteger)offset;
// - (NSInteger)characterOffsetOfPosition:(UITextPosition *)position withinRange:(UITextRange *)range;



// @property (nonatomic, readonly) __kindof UIView *textInputView;




// @property (nonatomic) UITextStorageDirection selectionAffinity;





// - (void)insertDictationResult:(NSArray<UIDictationPhrase *> *)dictationResult;


// - (void)dictationRecordingDidEnd;
// - (void)dictationRecognitionFailed;





// @property(nonatomic, readonly) id insertDictationResultPlaceholder;
// - (CGRect)frameForDictationResultPlaceholder:(id)placeholder;

// - (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)willInsertResult;



// - (void)insertText:(NSString *)text alternatives:(NSArray<NSString *> *)alternatives style:(UITextAlternativeStyle)style;


// - (void)setAttributedMarkedText:(nullable NSAttributedString *)markedText selectedRange:(NSRange)selectedRange;




// - (UITextPlaceholder *)insertTextPlaceholderWithSize:(CGSize)size;


// - (void)removeTextPlaceholder:(UITextPlaceholder *)textPlaceholder;





// - (void)beginFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9.0)));
// - (void)updateFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9.0)));
// - (void)endFloatingCursor __attribute__((availability(ios,introduced=9.0)));

/* @end */





extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextBackgroundColorKey __attribute__((availability(ios,introduced=3.2,deprecated=8.0,replacement="NSBackgroundColorAttributeName"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextColorKey __attribute__((availability(ios,introduced=3.2,deprecated=8.0,replacement="NSForegroundColorAttributeName"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextFontKey __attribute__((availability(ios,introduced=3.2,deprecated=8.0,replacement="NSFontAttributeName"))) __attribute__((availability(tvos,unavailable)));





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UITextPosition
#define _REWRITER_typedef_UITextPosition
typedef struct objc_object UITextPosition;
typedef struct {} _objc_exc_UITextPosition;
#endif

struct UITextPosition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

struct UITextRange_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly, getter=isEmpty) BOOL empty;
// @property (nonatomic, readonly) UITextPosition *start;
// @property (nonatomic, readonly) UITextPosition *end;

/* @end */





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UITextSelectionRect
#define _REWRITER_typedef_UITextSelectionRect
typedef struct objc_object UITextSelectionRect;
typedef struct {} _objc_exc_UITextSelectionRect;
#endif

struct UITextSelectionRect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) CGRect rect;
// @property (nonatomic, readonly) NSWritingDirection writingDirection;
// @property (nonatomic, readonly) BOOL containsStart;
// @property (nonatomic, readonly) BOOL containsEnd;
// @property (nonatomic, readonly) BOOL isVertical;

/* @end */



// @protocol UITextInputDelegate <NSObject>

// - (void)selectionWillChange:(nullable id <UITextInput>)textInput;
// - (void)selectionDidChange:(nullable id <UITextInput>)textInput;
// - (void)textWillChange:(nullable id <UITextInput>)textInput;
// - (void)textDidChange:(nullable id <UITextInput>)textInput;

/* @end */




// @protocol UITextInputTokenizer <NSObject>

/* @required */

// - (nullable UITextRange *)rangeEnclosingPosition:(UITextPosition *)position withGranularity:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (BOOL)isPosition:(UITextPosition *)position atBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position toBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (BOOL)isPosition:(UITextPosition *)position withinTextUnit:(UITextGranularity)granularity inDirection:(UITextDirection)direction;

/* @end */





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UITextInputStringTokenizer
#define _REWRITER_typedef_UITextInputStringTokenizer
typedef struct objc_object UITextInputStringTokenizer;
typedef struct {} _objc_exc_UITextInputStringTokenizer;
#endif

struct UITextInputStringTokenizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTextInput:(UIResponder <UITextInput> *)textInput;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) 
#ifndef _REWRITER_typedef_UITextInputMode
#define _REWRITER_typedef_UITextInputMode
typedef struct objc_object UITextInputMode;
typedef struct {} _objc_exc_UITextInputMode;
#endif

struct UITextInputMode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nullable, nonatomic, readonly, strong) NSString *primaryLanguage;


// + (nullable UITextInputMode *)currentInputMode __attribute__((availability(ios,introduced=4.2,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) NSArray<UITextInputMode *> *activeInputModes;

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextInputCurrentInputModeDidChangeNotification __attribute__((availability(ios,introduced=4.2)));

typedef NSWritingDirection UITextWritingDirection __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="NSWritingDirection"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="NSWritingDirection")));

static const UITextWritingDirection UITextWritingDirectionNatural __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="NSWritingDirectionNatural"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="NSWritingDirectionNatural"))) = NSWritingDirectionNatural;
static const UITextWritingDirection UITextWritingDirectionLeftToRight __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="NSWritingDirectionLeftToRight"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="NSWritingDirectionLeftToRight"))) = NSWritingDirectionLeftToRight;
static const UITextWritingDirection UITextWritingDirectionRightToLeft __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="NSWritingDirectionRightToLeft"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="NSWritingDirectionRightToLeft"))) = NSWritingDirectionRightToLeft;
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIAccessibilityCustomRotor;
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotor
#define _REWRITER_typedef_UIAccessibilityCustomRotor
typedef struct objc_object UIAccessibilityCustomRotor;
typedef struct {} _objc_exc_UIAccessibilityCustomRotor;
#endif

#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
#define _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
typedef struct objc_object UIAccessibilityCustomRotorItemResult;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorItemResult;
#endif

#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
#define _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
typedef struct objc_object UIAccessibilityCustomRotorSearchPredicate;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorSearchPredicate;
#endif


typedef NSInteger UIAccessibilityCustomRotorDirection; enum {
    UIAccessibilityCustomRotorDirectionPrevious __attribute__((availability(ios,introduced=10.0))),
    UIAccessibilityCustomRotorDirectionNext __attribute__((availability(ios,introduced=10.0))),
};





typedef NSInteger UIAccessibilityCustomSystemRotorType; enum {
    UIAccessibilityCustomSystemRotorTypeNone = 0,
    UIAccessibilityCustomSystemRotorTypeLink,
    UIAccessibilityCustomSystemRotorTypeVisitedLink,
    UIAccessibilityCustomSystemRotorTypeHeading,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel1,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel2,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel3,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel4,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel5,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel6,
    UIAccessibilityCustomSystemRotorTypeBoldText,
    UIAccessibilityCustomSystemRotorTypeItalicText,
    UIAccessibilityCustomSystemRotorTypeUnderlineText,
    UIAccessibilityCustomSystemRotorTypeMisspelledWord,
    UIAccessibilityCustomSystemRotorTypeImage,
    UIAccessibilityCustomSystemRotorTypeTextField,
    UIAccessibilityCustomSystemRotorTypeTable,
    UIAccessibilityCustomSystemRotorTypeList,
    UIAccessibilityCustomSystemRotorTypeLandmark,
} __attribute__((availability(ios,introduced=11.0)));

typedef UIAccessibilityCustomRotorItemResult *_Nullable(*UIAccessibilityCustomRotorSearch)(UIAccessibilityCustomRotorSearchPredicate *predicate);


// @interface NSObject (UIAccessibilityCustomRotor)
// @property (nonatomic, retain, nullable) NSArray<UIAccessibilityCustomRotor *> *accessibilityCustomRotors __attribute__((availability(ios,introduced=10.0)));
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
#define _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
typedef struct objc_object UIAccessibilityCustomRotorSearchPredicate;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorSearchPredicate;
#endif

struct UIAccessibilityCustomRotorSearchPredicate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, retain) UIAccessibilityCustomRotorItemResult *currentItem;
// @property (nonatomic) UIAccessibilityCustomRotorDirection searchDirection;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotor
#define _REWRITER_typedef_UIAccessibilityCustomRotor
typedef struct objc_object UIAccessibilityCustomRotor;
typedef struct {} _objc_exc_UIAccessibilityCustomRotor;
#endif

struct UIAccessibilityCustomRotor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithName:(NSString *)name itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (instancetype)initWithSystemType:(UIAccessibilityCustomSystemRotorType)type itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock __attribute__((availability(ios,introduced=11.0)));


// @property (nonatomic, copy) NSString *name;



// @property (nonatomic, copy) NSAttributedString *attributedName __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property (nonatomic, copy) UIAccessibilityCustomRotorSearch itemSearchBlock;



// @property (nonatomic, readonly) UIAccessibilityCustomSystemRotorType systemRotorType __attribute__((availability(ios,introduced=11.0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
#define _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
typedef struct objc_object UIAccessibilityCustomRotorItemResult;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorItemResult;
#endif

struct UIAccessibilityCustomRotorItemResult_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTargetElement:(id<NSObject>)targetElement targetRange:(nullable UITextRange *)targetRange;


// @property (nonatomic, weak) id<NSObject> targetElement;



// @property (nullable, nonatomic, retain) UITextRange *targetRange;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



typedef NSInteger UIPreferredPresentationStyle; enum {
    UIPreferredPresentationStyleUnspecified = 0,
    UIPreferredPresentationStyleInline,
    UIPreferredPresentationStyleAttachment,
};

// @interface NSItemProvider (UIKitAdditions)

// @property (nonatomic, copy, nullable) NSData *teamData __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) CGSize preferredPresentationSize __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) UIPreferredPresentationStyle preferredPresentationStyle;

/* @end */


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UIItemProviderPresentationSizeProviding <NSObject>





// @property (nonatomic, readonly) CGSize preferredPresentationSizeForItemProvider;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

enum {
    NSAttachmentCharacter __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0xFFFC
};

// @class NSTextContainer;
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

// @class NSLayoutManager;
#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif




// @protocol NSTextAttachmentContainer <NSObject>




// - (nullable UIImage *)imageForBounds:(CGRect)imageBounds textContainer:(nullable NSTextContainer *)textContainer characterIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));



// - (CGRect)attachmentBoundsForTextContainer:(nullable NSTextContainer *)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif

struct NSTextAttachment_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithData:(nullable NSData *)contentData ofType:(nullable NSString *)uti __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));







// @property (nullable, copy, nonatomic) NSData *contents __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
// @property (nullable, copy, nonatomic) NSString *fileType __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));




// @property (nullable, strong, nonatomic) UIImage *image __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic) CGRect bounds __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));





// @property (nullable, strong, nonatomic) NSFileWrapper *fileWrapper;


/* @end */


// @interface NSAttributedString (NSAttributedStringAttachmentConveniences)

// + (NSAttributedString *)attributedStringWithAttachment:(NSTextAttachment *)attachment __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin


// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

#ifndef _REWRITER_typedef_UIImageAsset
#define _REWRITER_typedef_UIImageAsset
typedef struct objc_object UIImageAsset;
typedef struct {} _objc_exc_UIImageAsset;
#endif




// @class UIGraphicsImageRendererFormat;
#ifndef _REWRITER_typedef_UIGraphicsImageRendererFormat
#define _REWRITER_typedef_UIGraphicsImageRendererFormat
typedef struct objc_object UIGraphicsImageRendererFormat;
typedef struct {} _objc_exc_UIGraphicsImageRendererFormat;
#endif



typedef NSInteger UIImageOrientation; enum {
    UIImageOrientationUp,
    UIImageOrientationDown,
    UIImageOrientationLeft,
    UIImageOrientationRight,
    UIImageOrientationUpMirrored,
    UIImageOrientationDownMirrored,
    UIImageOrientationLeftMirrored,
    UIImageOrientationRightMirrored,
};






typedef NSInteger UIImageResizingMode; enum {

    UIImageResizingModeTile = 0,
    UIImageResizingModeStretch = 1,




};



typedef NSInteger UIImageRenderingMode; enum {
    UIImageRenderingModeAutomatic,

    UIImageRenderingModeAlwaysOriginal,
    UIImageRenderingModeAlwaysTemplate,
} __attribute__((availability(ios,introduced=7.0)));

// @class UIImageConfiguration;
#ifndef _REWRITER_typedef_UIImageConfiguration
#define _REWRITER_typedef_UIImageConfiguration
typedef struct objc_object UIImageConfiguration;
typedef struct {} _objc_exc_UIImageConfiguration;
#endif

// @class UIImageSymbolConfiguration;
#ifndef _REWRITER_typedef_UIImageSymbolConfiguration
#define _REWRITER_typedef_UIImageSymbolConfiguration
typedef struct objc_object UIImageSymbolConfiguration;
typedef struct {} _objc_exc_UIImageSymbolConfiguration;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

struct UIImage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (nullable UIImage *)systemImageNamed:(NSString *)name __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// + (nullable UIImage *)systemImageNamed:(NSString *)name withConfiguration:(nullable UIImageConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));


// + (nullable UIImage *)systemImageNamed:(NSString *)name compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));



// + (nullable UIImage *)imageNamed:(NSString *)name;
// + (nullable UIImage *)imageNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle withConfiguration:(nullable UIImageConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

// + (nullable UIImage *)imageNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8.0)));


// + (nullable UIImage *)imageWithContentsOfFile:(NSString *)path;
// + (nullable UIImage *)imageWithData:(NSData *)data;
// + (nullable UIImage *)imageWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6.0)));
// + (UIImage *)imageWithCGImage:(CGImageRef)cgImage;
// + (UIImage *)imageWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4.0)));

// + (UIImage *)imageWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5.0)));
// + (UIImage *)imageWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6.0)));


// - (nullable instancetype)initWithContentsOfFile:(NSString *)path;
// - (nullable instancetype)initWithData:(NSData *)data;
// - (nullable instancetype)initWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6.0)));
// - (instancetype)initWithCGImage:(CGImageRef)cgImage;
// - (instancetype)initWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4.0)));

// - (instancetype)initWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5.0)));
// - (instancetype)initWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6.0)));


// @property(nonatomic,readonly) CGSize size;
// @property(nullable, nonatomic,readonly) CGImageRef CGImage;
// - (nullable CGImageRef)CGImage __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

// @property(nullable,nonatomic,readonly) CIImage *CIImage __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic,readonly) UIImageOrientation imageOrientation;
// @property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic,readonly,getter=isSymbolImage) BOOL symbolImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));



// + (nullable UIImage *)animatedImageNamed:(NSString *)name duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5.0)));
// + (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5.0)));
// + (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=6.0)));
// + (nullable UIImage *)animatedImageWithImages:(NSArray<UIImage *> *)images duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5.0)));

// @property(nullable, nonatomic,readonly) NSArray<UIImage *> *images __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic,readonly) NSTimeInterval duration __attribute__((availability(ios,introduced=5.0)));



// - (void)drawAtPoint:(CGPoint)point;
// - (void)drawAtPoint:(CGPoint)point blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
// - (void)drawInRect:(CGRect)rect;
// - (void)drawInRect:(CGRect)rect blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

// - (void)drawAsPatternInRect:(CGRect)rect;

// - (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=5.0)));
// - (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode __attribute__((availability(ios,introduced=6.0)));

// @property(nonatomic,readonly) UIEdgeInsets capInsets __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic,readonly) UIImageResizingMode resizingMode __attribute__((availability(ios,introduced=6.0)));






// - (UIImage *)imageWithAlignmentRectInsets:(UIEdgeInsets)alignmentInsets __attribute__((availability(ios,introduced=6.0)));
// @property(nonatomic,readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6.0)));


// - (UIImage *)imageWithRenderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic, readonly) UIImageRenderingMode renderingMode __attribute__((availability(ios,introduced=7.0)));



// @property (nonatomic, readonly) UIGraphicsImageRendererFormat *imageRendererFormat __attribute__((availability(ios,introduced=10.0)));



// @property (nonatomic, readonly, copy) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8.0)));
// @property (nullable, nonatomic, readonly) UIImageAsset *imageAsset __attribute__((availability(ios,introduced=8.0)));




// - (UIImage *)imageFlippedForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic, readonly) BOOL flipsForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9.0)));


// - (UIImage *)imageWithHorizontallyFlippedOrientation __attribute__((availability(ios,introduced=10.0)));







// @property (nonatomic, readonly) CGFloat baselineOffsetFromBottom __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((swift_private));
// @property (nonatomic, readonly) BOOL hasBaseline __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((swift_private));
// - (UIImage *)imageWithBaselineOffsetFromBottom:(CGFloat)baselineOffset __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (UIImage *)imageWithoutBaseline __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// @property (nullable, nonatomic, copy, readonly) __kindof UIImageConfiguration *configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (UIImage *)imageWithConfiguration:(UIImageConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// @property (nullable, nonatomic, copy, readonly) UIImageSymbolConfiguration *symbolConfiguration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (nullable UIImage *)imageByApplyingSymbolConfiguration:(UIImageSymbolConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));


// - (UIImage *)imageWithTintColor:(UIColor *)color __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (UIImage *)imageWithTintColor:(UIColor *)color renderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */


// @interface UIImage (PreconfiguredSystemImages)

@property (class, readonly, strong) UIImage *actionsImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, strong) UIImage *addImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, strong) UIImage *removeImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, strong) UIImage *checkmarkImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
@property (class, readonly, strong) UIImage *strokedCheckmarkImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

/* @end */



// @interface UIImage (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting, UIItemProviderPresentationSizeProviding>




/* @end */



// @interface NSTextAttachment (UIImage)

// + (NSTextAttachment *)textAttachmentWithImage:(UIImage *)image __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */




// @interface UIImage(UIImageDeprecated)



// - (UIImage *)stretchableImageWithLeftCapWidth:(NSInteger)leftCapWidth topCapHeight:(NSInteger)topCapHeight __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger leftCapWidth __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger topCapHeight __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface CIImage(UIKitAdditions)

// - (nullable instancetype)initWithImage:(UIImage *)image __attribute__((availability(ios,introduced=5.0)));
// - (nullable instancetype)initWithImage:(UIImage *)image options:(nullable NSDictionary<CIImageOption, id> *)options __attribute__((availability(ios,introduced=5.0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSData * _Nullable UIImagePNGRepresentation(UIImage * _Nonnull image);
extern "C" __attribute__((visibility ("default"))) NSData * _Nullable UIImageJPEGRepresentation(UIImage * _Nonnull image, CGFloat compressionQuality);
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIBarItem
#define _REWRITER_typedef_UIBarItem
typedef struct objc_object UIBarItem;
typedef struct {} _objc_exc_UIBarItem;
#endif

struct UIBarItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nonatomic,getter=isEnabled) BOOL enabled;
// @property(nullable, nonatomic,copy) NSString *title;
// @property(nullable, nonatomic,strong) UIImage *image;
// @property(nullable, nonatomic,strong) UIImage *landscapeImagePhone __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));


// @property(nullable, nonatomic,strong) UIImage *largeContentSizeImage __attribute__((availability(ios,introduced=11.0)));

// @property(nonatomic) UIEdgeInsets imageInsets;
// @property(nonatomic) UIEdgeInsets landscapeImagePhoneInsets __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UIEdgeInsets largeContentSizeImageInsets __attribute__((availability(ios,introduced=11.0)));
// @property(nonatomic) NSInteger tag;



// - (void)setTitleTextAttributes:(nullable NSDictionary<NSAttributedStringKey,id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary<NSAttributedStringKey,id> *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIAccessibilityIdentification <NSObject>
/* @required */





// @property(nullable, nonatomic, copy) NSString *accessibilityIdentifier __attribute__((availability(ios,introduced=5.0)));

/* @end */


// @interface UIView (UIAccessibility) <UIAccessibilityIdentification>
/* @end */


// @interface UIBarItem (UIAccessibility) <UIAccessibilityIdentification>
/* @end */






// @interface UIImage (UIAccessibility) <UIAccessibilityIdentification>
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.0))) 
#ifndef _REWRITER_typedef_UIAccessibilityElement
#define _REWRITER_typedef_UIAccessibilityElement
typedef struct objc_object UIAccessibilityElement;
typedef struct {} _objc_exc_UIAccessibilityElement;
#endif

struct UIAccessibilityElement_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};



// - (instancetype)initWithAccessibilityContainer:(id)container;

// @property (nullable, nonatomic, weak) id accessibilityContainer;
// @property (nonatomic, assign) BOOL isAccessibilityElement;
// @property (nullable, nonatomic, strong) NSString *accessibilityLabel;
// @property (nullable, nonatomic, strong) NSString *accessibilityHint;
// @property (nullable, nonatomic, strong) NSString *accessibilityValue;
// @property (nonatomic, assign) CGRect accessibilityFrame;
// @property (nonatomic, assign) UIAccessibilityTraits accessibilityTraits;



// @property (nonatomic, assign) CGRect accessibilityFrameInContainerSpace __attribute__((availability(ios,introduced=10.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin





typedef NSInteger UIAccessibilityZoomType; enum {
    UIAccessibilityZoomTypeInsertionPoint,
} __attribute__((availability(ios,introduced=5.0)));

extern "C" __attribute__((visibility ("default"))) void UIAccessibilityZoomFocusChanged(UIAccessibilityZoomType type, CGRect frame, UIView * _Nonnull view) __attribute__((availability(ios,introduced=5.0)));





extern "C" __attribute__((visibility ("default"))) void UIAccessibilityRegisterGestureConflictWithZoom(void) __attribute__((availability(ios,introduced=5.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSErrorDomain const UIGuidedAccessErrorDomain __attribute__((availability(ios,introduced=12.2)));

typedef NSInteger UIGuidedAccessErrorCode; enum {

    UIGuidedAccessErrorPermissionDenied,

    UIGuidedAccessErrorFailed = 9223372036854775807L
} __attribute__((availability(ios,introduced=12.2))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger UIGuidedAccessRestrictionState; enum {
    UIGuidedAccessRestrictionStateAllow,
    UIGuidedAccessRestrictionStateDeny
};
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) // @protocol UIGuidedAccessRestrictionDelegate <NSObject>

/* @required */






// @property(nonatomic, readonly, nullable) NSArray<NSString *> *guidedAccessRestrictionIdentifiers;


// - (void)guidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier didChangeState:(UIGuidedAccessRestrictionState)newRestrictionState;


// - (nullable NSString *)textForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

/* @optional */


// - (nullable NSString *)detailTextForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

/* @end */



extern "C" __attribute__((visibility ("default"))) UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier(NSString *restrictionIdentifier) __attribute__((availability(ios,introduced=7.0)));






typedef NSUInteger UIGuidedAccessAccessibilityFeature; enum {
    UIGuidedAccessAccessibilityFeatureVoiceOver = 1 << 0,
    UIGuidedAccessAccessibilityFeatureZoom = 1 << 1,
    UIGuidedAccessAccessibilityFeatureAssistiveTouch = 1 << 2,
    UIGuidedAccessAccessibilityFeatureInvertColors = 1 << 3,
    UIGuidedAccessAccessibilityFeatureGrayscaleDisplay = 1 << 4,
} __attribute__((availability(ios,introduced=12.2))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) void UIGuidedAccessConfigureAccessibilityFeatures(UIGuidedAccessAccessibilityFeature features, BOOL enabled, void (^completion)(BOOL success, NSError *error)) __attribute__((availability(ios,introduced=12.2))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin








extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIAccessibilityLocationDescriptor
#define _REWRITER_typedef_UIAccessibilityLocationDescriptor
typedef struct objc_object UIAccessibilityLocationDescriptor;
typedef struct {} _objc_exc_UIAccessibilityLocationDescriptor;
#endif

struct UIAccessibilityLocationDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));






// - (instancetype)initWithName:(NSString *)name view:(UIView *)view;




// - (instancetype)initWithName:(NSString *)name point:(CGPoint)point inView:(UIView *)view;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName point:(CGPoint)point inView:(UIView *)view __attribute__((objc_designated_initializer));







// @property (nonatomic, readonly, weak) UIView *view;



// @property (nonatomic, readonly) CGPoint point;




// @property (nonatomic, readonly, strong) NSString *name;




// @property (nonatomic, readonly, strong) NSAttributedString *attributedName;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
// @interface NSObject (UIAccessibility)







// @property (nonatomic) BOOL isAccessibilityElement;
// @property (nullable, nonatomic, copy) NSString *accessibilityLabel;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedLabel __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, nonatomic, copy) NSString *accessibilityHint;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedHint __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, nonatomic, copy) NSString *accessibilityValue;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedValue __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic) UIAccessibilityTraits accessibilityTraits;







// @property (nonatomic) CGRect accessibilityFrame;




extern "C" __attribute__((visibility ("default"))) CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view) __attribute__((availability(ios,introduced=7.0)));







// @property (nullable, nonatomic, copy) UIBezierPath *accessibilityPath __attribute__((availability(ios,introduced=7.0)));




extern "C" __attribute__((visibility ("default"))) UIBezierPath *UIAccessibilityConvertPathToScreenCoordinates(UIBezierPath *path, UIView *view) __attribute__((availability(ios,introduced=7.0)));





// @property (nonatomic) CGPoint accessibilityActivationPoint __attribute__((availability(ios,introduced=5.0)));
// @property (nullable, nonatomic, strong) NSString *accessibilityLanguage;





// @property (nonatomic) BOOL accessibilityElementsHidden __attribute__((availability(ios,introduced=5.0)));






// @property (nonatomic) BOOL accessibilityViewIsModal __attribute__((availability(ios,introduced=5.0)));
// @property (nonatomic) BOOL shouldGroupAccessibilityChildren __attribute__((availability(ios,introduced=6.0)));
// @property (nonatomic) UIAccessibilityNavigationStyle accessibilityNavigationStyle __attribute__((availability(ios,introduced=8.0)));







// @property (nonatomic) BOOL accessibilityRespondsToUserInteraction __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
// @property (null_resettable, nonatomic, strong) NSArray<NSString *> *accessibilityUserInputLabels __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));





// @property (null_resettable, nonatomic, copy) NSArray<NSAttributedString *> *accessibilityAttributedUserInputLabels __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));







// @property(nullable, nonatomic, copy) NSArray *accessibilityHeaderElements __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));
// @property(nullable, nonatomic, strong) UIAccessibilityTextualContext accessibilityTextualContext __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));


/* @end */

// @interface NSObject (UIAccessibilityFocus)


// - (void)accessibilityElementDidBecomeFocused __attribute__((availability(ios,introduced=4.0)));
// - (void)accessibilityElementDidLoseFocus __attribute__((availability(ios,introduced=4.0)));


// - (BOOL)accessibilityElementIsFocused __attribute__((availability(ios,introduced=4.0)));


// - (nullable NSSet<UIAccessibilityAssistiveTechnologyIdentifier> *)accessibilityAssistiveTechnologyFocusedIdentifiers __attribute__((availability(ios,introduced=9.0)));





extern "C" __attribute__((visibility ("default"))) _Nullable id UIAccessibilityFocusedElement(UIAccessibilityAssistiveTechnologyIdentifier _Nullable assistiveTechnologyIdentifier) __attribute__((availability(ios,introduced=9.0)));

/* @end */







// @interface NSObject (UIAccessibilityAction)
// - (BOOL)accessibilityActivate __attribute__((availability(ios,introduced=7.0)));







// - (void)accessibilityIncrement __attribute__((availability(ios,introduced=4.0)));
// - (void)accessibilityDecrement __attribute__((availability(ios,introduced=4.0)));
typedef NSInteger UIAccessibilityScrollDirection; enum {
    UIAccessibilityScrollDirectionRight = 1,
    UIAccessibilityScrollDirectionLeft,
    UIAccessibilityScrollDirectionUp,
    UIAccessibilityScrollDirectionDown,
    UIAccessibilityScrollDirectionNext __attribute__((availability(ios,introduced=5.0))),
    UIAccessibilityScrollDirectionPrevious __attribute__((availability(ios,introduced=5.0))),
};

// - (BOOL)accessibilityScroll:(UIAccessibilityScrollDirection)direction __attribute__((availability(ios,introduced=4.2)));
// - (BOOL)accessibilityPerformEscape __attribute__((availability(ios,introduced=5.0)));







// - (BOOL)accessibilityPerformMagicTap __attribute__((availability(ios,introduced=6.0)));







// @property (nullable, nonatomic, strong) NSArray <UIAccessibilityCustomAction *> *accessibilityCustomActions __attribute__((availability(ios,introduced=8.0)));
/* @end */








// @protocol UIAccessibilityReadingContent
/* @required */


// - (NSInteger)accessibilityLineNumberForPoint:(CGPoint)point __attribute__((availability(ios,introduced=5.0)));


// - (nullable NSString *)accessibilityContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5.0)));


// - (CGRect)accessibilityFrameForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5.0)));


// - (nullable NSString *)accessibilityPageContent __attribute__((availability(ios,introduced=5.0)));

/* @optional */

// - (nullable NSAttributedString *)accessibilityAttributedContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (nullable NSAttributedString *)accessibilityAttributedPageContent __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSObject(UIAccessibilityDragging)
// @property (nullable, nonatomic, copy) NSArray<UIAccessibilityLocationDescriptor *> *accessibilityDragSourceDescriptors __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (nullable, nonatomic, copy) NSArray<UIAccessibilityLocationDescriptor *> *accessibilityDropPointDescriptors __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


/* @end */

extern "C" __attribute__((visibility ("default"))) void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, _Nullable id argument);







extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsVoiceOverRunning(void) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityVoiceOverStatusChanged __attribute__((availability(ios,introduced=4.0,deprecated=11.0,replacement="UIAccessibilityVoiceOverStatusDidChangeNotification"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,replacement="UIAccessibilityVoiceOverStatusDidChangeNotification")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityVoiceOverStatusDidChangeNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsMonoAudioEnabled(void) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityMonoAudioStatusDidChangeNotification __attribute__((availability(ios,introduced=5.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsClosedCaptioningEnabled(void) __attribute__((availability(ios,introduced=5.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityClosedCaptioningStatusDidChangeNotification __attribute__((availability(ios,introduced=5.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsInvertColorsEnabled(void) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityInvertColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGuidedAccessEnabled(void) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityGuidedAccessStatusDidChangeNotification __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsBoldTextEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityBoldTextStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGrayscaleEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityGrayscaleStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceTransparencyEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityReduceTransparencyStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceMotionEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityReduceMotionStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsVideoAutoplayEnabled(void) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityVideoAutoplayStatusDidChangeNotification __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityDarkerSystemColorsEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityDarkerSystemColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));





extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSwitchControlRunning(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilitySwitchControlStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakSelectionEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilitySpeakSelectionStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakScreenEnabled(void) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilitySpeakScreenStatusDidChangeNotification __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsShakeToUndoEnabled(void) __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityShakeToUndoDidChangeNotification __attribute__((availability(ios,introduced=9.0)));



extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsAssistiveTouchRunning(void) __attribute__((availability(ios,introduced=10.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityAssistiveTouchStatusDidChangeNotification __attribute__((availability(ios,introduced=10.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityShouldDifferentiateWithoutColor(void) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsOnOffSwitchLabelsEnabled(void) __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityOnOffSwitchLabelsDidChangeNotification __attribute__((availability(ios,introduced=13.0)));







extern "C" __attribute__((visibility ("default"))) void UIAccessibilityRequestGuidedAccessSession(BOOL enable, void(^completionHandler)(BOOL didSucceed)) __attribute__((availability(ios,introduced=7.0)));

typedef NSUInteger UIAccessibilityHearingDeviceEar; enum {
    UIAccessibilityHearingDeviceEarNone = 0,
    UIAccessibilityHearingDeviceEarLeft = 1 << 1,
    UIAccessibilityHearingDeviceEarRight = 1 << 2,
    UIAccessibilityHearingDeviceEarBoth = UIAccessibilityHearingDeviceEarLeft | UIAccessibilityHearingDeviceEarRight,
} __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar(void) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityHearingDevicePairedEarDidChangeNotification __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIImageSymbolConfiguration
#define _REWRITER_typedef_UIImageSymbolConfiguration
typedef struct objc_object UIImageSymbolConfiguration;
typedef struct {} _objc_exc_UIImageSymbolConfiguration;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

struct UIImageView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithImage:(nullable UIImage *)image;
// - (instancetype)initWithImage:(nullable UIImage *)image highlightedImage:(nullable UIImage *)highlightedImage __attribute__((availability(ios,introduced=3.0)));

// @property (nullable, nonatomic, strong) UIImage *image;
// @property (nullable, nonatomic, strong) UIImage *highlightedImage __attribute__((availability(ios,introduced=3.0)));
// @property (nullable, nonatomic, strong) UIImageSymbolConfiguration* preferredSymbolConfiguration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// @property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;

// @property (nonatomic, getter=isHighlighted) BOOL highlighted __attribute__((availability(ios,introduced=3.0)));



// @property (nullable, nonatomic, copy) NSArray<UIImage *> *animationImages;
// @property (nullable, nonatomic, copy) NSArray<UIImage *> *highlightedAnimationImages __attribute__((availability(ios,introduced=3.0)));

// @property (nonatomic) NSTimeInterval animationDuration;
// @property (nonatomic) NSInteger animationRepeatCount;



// @property (null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7.0)));

// - (void)startAnimating;
// - (void)stopAnimating;
// @property(nonatomic, readonly, getter=isAnimating) BOOL animating;


// @property (nonatomic) BOOL adjustsImageWhenAncestorFocused __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));



// @property(readonly,strong) UILayoutGuide *focusedFrameGuide __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));





// @property (nonatomic, strong, readonly) UIView *overlayContentView __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=11_0)));






// @property (nonatomic) BOOL masksFocusEffectToContents __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=11_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



typedef NSInteger NSLineBreakMode; enum {
    NSLineBreakByWordWrapping = 0,
    NSLineBreakByCharWrapping,
    NSLineBreakByClipping,
    NSLineBreakByTruncatingHead,
    NSLineBreakByTruncatingTail,
    NSLineBreakByTruncatingMiddle
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef NSString * NSTextTabOptionKey __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) NSTextTabOptionKey const NSTabColumnTerminatorsAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_NSTextTab
#define _REWRITER_typedef_NSTextTab
typedef struct objc_object NSTextTab;
typedef struct {} _objc_exc_NSTextTab;
#endif

struct NSTextTab_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSCharacterSet *)columnTerminatorsForLocale:(nullable NSLocale *)aLocale __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));

// - (instancetype)initWithTextAlignment:(NSTextAlignment)alignment location:(CGFloat)loc options:(NSDictionary<NSTextTabOptionKey, id> *)options __attribute__((objc_designated_initializer));


// @property (readonly, nonatomic) NSTextAlignment alignment;
// @property (readonly, nonatomic) CGFloat location;
// @property (readonly, nonatomic) NSDictionary<NSTextTabOptionKey, id> *options;
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_NSParagraphStyle
#define _REWRITER_typedef_NSParagraphStyle
typedef struct objc_object NSParagraphStyle;
typedef struct {} _objc_exc_NSParagraphStyle;
#endif

struct NSParagraphStyle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, copy, nonatomic) NSParagraphStyle *defaultParagraphStyle;

// + (NSWritingDirection)defaultWritingDirectionForLanguage:(nullable NSString *)languageName;

// @property (readonly, nonatomic) CGFloat lineSpacing;
// @property (readonly, nonatomic) CGFloat paragraphSpacing;
// @property (readonly, nonatomic) NSTextAlignment alignment;



// @property (readonly, nonatomic) CGFloat headIndent;
// @property (readonly, nonatomic) CGFloat tailIndent;
// @property (readonly, nonatomic) CGFloat firstLineHeadIndent;

// @property (readonly, nonatomic) CGFloat minimumLineHeight;
// @property (readonly, nonatomic) CGFloat maximumLineHeight;

// @property (readonly, nonatomic) NSLineBreakMode lineBreakMode;

// @property (readonly, nonatomic) NSWritingDirection baseWritingDirection;

// @property (readonly, nonatomic) CGFloat lineHeightMultiple;
// @property (readonly, nonatomic) CGFloat paragraphSpacingBefore;


// @property (readonly, nonatomic) float hyphenationFactor;

// @property (readonly,copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
// @property (readonly, nonatomic) CGFloat defaultTabInterval __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

// @property (readonly, nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_NSMutableParagraphStyle
#define _REWRITER_typedef_NSMutableParagraphStyle
typedef struct objc_object NSMutableParagraphStyle;
typedef struct {} _objc_exc_NSMutableParagraphStyle;
#endif

struct NSMutableParagraphStyle_IMPL {
	struct NSParagraphStyle_IMPL NSParagraphStyle_IVARS;
};


// @property (nonatomic) CGFloat lineSpacing;
// @property (nonatomic) CGFloat paragraphSpacing;
// @property (nonatomic) NSTextAlignment alignment;
// @property (nonatomic) CGFloat firstLineHeadIndent;
// @property (nonatomic) CGFloat headIndent;
// @property (nonatomic) CGFloat tailIndent;
// @property (nonatomic) NSLineBreakMode lineBreakMode;
// @property (nonatomic) CGFloat minimumLineHeight;
// @property (nonatomic) CGFloat maximumLineHeight;
// @property (nonatomic) NSWritingDirection baseWritingDirection;
// @property (nonatomic) CGFloat lineHeightMultiple;
// @property (nonatomic) CGFloat paragraphSpacingBefore;
// @property (nonatomic) float hyphenationFactor;
// @property (null_resettable, copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat defaultTabInterval __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));

// - (void)addTabStop:(NSTextTab *)anObject __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));
// - (void)removeTabStop:(NSTextTab *)anObject __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));

// - (void)setParagraphStyle:(NSParagraphStyle *)obj __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeFont __attribute__((availability(ios,introduced=5.0,deprecated=7.0,replacement="NSFontAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextColor __attribute__((availability(ios,introduced=5.0,deprecated=7.0,replacement="NSForegroundColorAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowColor __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowOffset __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));


typedef NSInteger UILineBreakMode; enum {
    UILineBreakModeWordWrap = 0,
    UILineBreakModeCharacterWrap,
    UILineBreakModeClip,
    UILineBreakModeHeadTruncation,
    UILineBreakModeTailTruncation,
    UILineBreakModeMiddleTruncation,
} __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));


typedef NSInteger UITextAlignment; enum {
    UITextAlignmentLeft = 0,
    UITextAlignmentCenter,
    UITextAlignmentRight,
} __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIBaselineAdjustment; enum {
    UIBaselineAdjustmentAlignBaselines = 0,
    UIBaselineAdjustmentAlignCenters,
    UIBaselineAdjustmentNone,
};

// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif




// @interface NSString(UIStringDrawing)


// - (CGSize)sizeWithFont:(UIFont *)font __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="sizeWithAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)sizeWithFont:(UIFont *)font forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


// - (CGSize)drawAtPoint:(CGPoint)point withFont:(UIFont *)font __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawAtPoint:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));




// - (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode alignment:(NSTextAlignment)alignment __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));






// - (CGSize)sizeWithFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));

// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font fontSize:(CGFloat)fontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2.0,deprecated=7.0,replacement="drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

/* @end */


#pragma clang assume_nonnull begin

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UISpringLoadedInteractionSupporting <NSObject>

// @property (nonatomic, assign, getter=isSpringLoaded) BOOL springLoaded __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIImageSymbolConfiguration
#define _REWRITER_typedef_UIImageSymbolConfiguration
typedef struct objc_object UIImageSymbolConfiguration;
typedef struct {} _objc_exc_UIImageSymbolConfiguration;
#endif


typedef NSInteger UIButtonType; enum {
    UIButtonTypeCustom = 0,
    UIButtonTypeSystem __attribute__((availability(ios,introduced=7.0))),

    UIButtonTypeDetailDisclosure,
    UIButtonTypeInfoLight,
    UIButtonTypeInfoDark,
    UIButtonTypeContactAdd,

    UIButtonTypePlain __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),

    UIButtonTypeClose __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))),

    UIButtonTypeRoundedRect = UIButtonTypeSystem
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

struct UIButton_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// + (instancetype)buttonWithType:(UIButtonType)buttonType;
// + (instancetype)systemButtonWithImage:(UIImage *)image target:(nullable id)target action:(nullable SEL)action __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

// @property(nonatomic) UIEdgeInsets contentEdgeInsets __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) UIEdgeInsets titleEdgeInsets;
// @property(nonatomic) BOOL reversesTitleShadowWhenHighlighted;
// @property(nonatomic) UIEdgeInsets imageEdgeInsets;
// @property(nonatomic) BOOL adjustsImageWhenHighlighted;
// @property(nonatomic) BOOL adjustsImageWhenDisabled;
// @property(nonatomic) BOOL showsTouchWhenHighlighted __attribute__((availability(tvos,unavailable)));
// @property(null_resettable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic,readonly) UIButtonType buttonType;





// - (void)setTitle:(nullable NSString *)title forState:(UIControlState)state;
// - (void)setTitleColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setTitleShadowColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setBackgroundImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setPreferredSymbolConfiguration:(nullable UIImageSymbolConfiguration *)configuration forImageInState:(UIControlState)state __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (void)setAttributedTitle:(nullable NSAttributedString *)title forState:(UIControlState)state __attribute__((availability(ios,introduced=6.0)));

// - (nullable NSString *)titleForState:(UIControlState)state;
// - (nullable UIColor *)titleColorForState:(UIControlState)state;
// - (nullable UIColor *)titleShadowColorForState:(UIControlState)state;
// - (nullable UIImage *)imageForState:(UIControlState)state;
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state;
// - (nullable UIImageSymbolConfiguration *)preferredSymbolConfigurationForImageInState:(UIControlState)state __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// - (nullable NSAttributedString *)attributedTitleForState:(UIControlState)state __attribute__((availability(ios,introduced=6.0)));





// @property(nullable, nonatomic,readonly,strong) NSString *currentTitle;
// @property(nonatomic,readonly,strong) UIColor *currentTitleColor;
// @property(nullable, nonatomic,readonly,strong) UIColor *currentTitleShadowColor;
// @property(nullable, nonatomic,readonly,strong) UIImage *currentImage;
// @property(nullable, nonatomic,readonly,strong) UIImage *currentBackgroundImage;
// @property(nullable, nonatomic,readonly,strong) UIImageSymbolConfiguration *currentPreferredSymbolConfiguration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
// @property(nullable, nonatomic,readonly,strong) NSAttributedString *currentAttributedTitle __attribute__((availability(ios,introduced=6.0)));


// @property(nullable, nonatomic,readonly,strong) UILabel *titleLabel __attribute__((availability(ios,introduced=3.0)));
// @property(nullable, nonatomic,readonly,strong) UIImageView *imageView __attribute__((availability(ios,introduced=3.0)));





// - (CGRect)backgroundRectForBounds:(CGRect)bounds;
// - (CGRect)contentRectForBounds:(CGRect)bounds;
// - (CGRect)titleRectForContentRect:(CGRect)contentRect;
// - (CGRect)imageRectForContentRect:(CGRect)contentRect;
/* @end */


// @interface UIButton(UIButtonDeprecated)

// @property(nonatomic,strong) UIFont *font __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) CGSize titleShadowOffset __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIButton (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol UIAccessibilityContentSizeCategoryImageAdjusting <NSObject>


// @property (nonatomic) BOOL adjustsImageSizeForAccessibilityContentSizeCategory;

/* @end */



// @interface UIImageView (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */



// @interface UIButton (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */




// @interface NSTextAttachment (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef NSInteger UIActivityIndicatorViewStyle; enum {
    UIActivityIndicatorViewStyleMedium __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) = 100,
    UIActivityIndicatorViewStyleLarge __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) = 101,

    UIActivityIndicatorViewStyleWhiteLarge __attribute__((availability(ios,introduced=2.0,deprecated=13.0,replacement="UIActivityIndicatorViewStyleLarge"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="UIActivityIndicatorViewStyleLarge"))) = 0,
    UIActivityIndicatorViewStyleWhite __attribute__((availability(ios,introduced=2.0,deprecated=13.0,replacement="UIActivityIndicatorViewStyleMedium"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="UIActivityIndicatorViewStyleMedium"))) = 1,
    UIActivityIndicatorViewStyleGray __attribute__((availability(ios,introduced=2.0,deprecated=13.0,replacement="UIActivityIndicatorViewStyleMedium"))) __attribute__((availability(tvos,unavailable))) = 2,
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIActivityIndicatorView
#define _REWRITER_typedef_UIActivityIndicatorView
typedef struct objc_object UIActivityIndicatorView;
typedef struct {} _objc_exc_UIActivityIndicatorView;
#endif

struct UIActivityIndicatorView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style __attribute__((objc_designated_initializer));
// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
// @property(nonatomic) BOOL hidesWhenStopped;

// @property (null_resettable, readwrite, nonatomic, strong) UIColor *color __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)startAnimating;
// - (void)stopAnimating;
// @property(nonatomic, readonly, getter=isAnimating) BOOL animating;

/* @end */

#pragma clang assume_nonnull end
















#pragma clang assume_nonnull begin

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=13.0))) // @protocol UIInteraction <NSObject>

// @property (nonatomic, nullable, weak, readonly) __kindof UIView *view;

// - (void)willMoveToView:(nullable UIView *)view;
// - (void)didMoveToView:(nullable UIView *)view;

/* @end */



// @interface UIView (Interactions)

// - (void)addInteraction:(id<UIInteraction>)interaction __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (void)removeInteraction:(id<UIInteraction>)interaction __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=13.0)));

// @property (nonatomic, copy) NSArray<id<UIInteraction>> *interactions __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIDragAnimating, UIDropInteractionDelegate, UIDropSession;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDropInteraction
#define _REWRITER_typedef_UIDropInteraction
typedef struct objc_object UIDropInteraction;
typedef struct {} _objc_exc_UIDropInteraction;
#endif

struct UIDropInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDelegate:(id<UIDropInteractionDelegate>)delegate __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, nullable, readonly, weak) id<UIDropInteractionDelegate> delegate;







// @property (nonatomic, assign) BOOL allowsSimultaneousDropSessions;

/* @end */






typedef NSUInteger UIDropOperation; enum {
    UIDropOperationCancel = 0,







    UIDropOperationForbidden = 1,
    UIDropOperationCopy = 2,
    UIDropOperationMove = 3,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDropProposal
#define _REWRITER_typedef_UIDropProposal
typedef struct objc_object UIDropProposal;
typedef struct {} _objc_exc_UIDropProposal;
#endif

struct UIDropProposal_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property (nonatomic, readonly) UIDropOperation operation;





// @property (nonatomic, getter=isPrecise) BOOL precise;







// @property (nonatomic) BOOL prefersFullSizePreview;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDropInteractionDelegate <NSObject>

/* @optional */
// - (BOOL)dropInteraction:(UIDropInteraction *)interaction canHandleSession:(id<UIDropSession>)session;



// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidEnter:(id<UIDropSession>)session;
// - (UIDropProposal *)dropInteraction:(UIDropInteraction *)interaction sessionDidUpdate:(id<UIDropSession>)session;



// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidExit:(id<UIDropSession>)session;






// - (void)dropInteraction:(UIDropInteraction *)interaction performDrop:(id<UIDropSession>)session;







// - (void)dropInteraction:(UIDropInteraction *)interaction concludeDrop:(id<UIDropSession>)session;







// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidEnd:(id<UIDropSession>)session;
// - (nullable UITargetedDragPreview *)dropInteraction:(UIDropInteraction *)interaction previewForDroppingItem:(UIDragItem *)item withDefault:(UITargetedDragPreview *)defaultPreview;





// - (void)dropInteraction:(UIDropInteraction *)interaction item:(UIDragItem *)item willAnimateDropWithAnimator:(id<UIDragAnimating>)animator;

/* @end */

#pragma clang assume_nonnull end


typedef NSInteger UIViewAnimatingState; enum
{
    UIViewAnimatingStateInactive,
    UIViewAnimatingStateActive,
    UIViewAnimatingStateStopped,
} __attribute__((availability(ios,introduced=10.0))) ;

typedef NSInteger UIViewAnimatingPosition; enum {
    UIViewAnimatingPositionEnd,
    UIViewAnimatingPositionStart,
    UIViewAnimatingPositionCurrent,
} __attribute__((availability(ios,introduced=10.0)));


#pragma clang assume_nonnull begin

// @protocol UIViewAnimating <NSObject>

// @property(nonatomic, readonly) UIViewAnimatingState state;



// @property(nonatomic, readonly, getter=isRunning) BOOL running;



// @property(nonatomic, getter=isReversed) BOOL reversed;







// @property(nonatomic) CGFloat fractionComplete;


// - (void)startAnimation;


// - (void)startAnimationAfterDelay:(NSTimeInterval)delay;



// - (void)pauseAnimation;







// - (void)stopAnimation:(BOOL) withoutFinishing;



// - (void)finishAnimationAtPosition:(UIViewAnimatingPosition)finalPosition;

/* @end */


// @protocol UITimingCurveProvider;

// @protocol UIViewImplicitlyAnimating <UIViewAnimating>

/* @optional */

// - (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;
// - (void)addAnimations:(void (^)(void))animation;
// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;
// - (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIDragInteractionDelegate, UIDragSession;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragAnimating <NSObject>







// - (void)addAnimations:(void (^)(void))animations;
// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragInteraction
#define _REWRITER_typedef_UIDragInteraction
typedef struct objc_object UIDragInteraction;
typedef struct {} _objc_exc_UIDragInteraction;
#endif

struct UIDragInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDelegate:(id<UIDragInteractionDelegate>)delegate __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, nullable, readonly, weak) id<UIDragInteractionDelegate> delegate;






// @property (nonatomic) BOOL allowsSimultaneousRecognitionDuringLift;





// @property (nonatomic, getter=isEnabled) BOOL enabled;




@property (class, nonatomic, readonly, getter=isEnabledByDefault) BOOL enabledByDefault;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragInteractionDelegate <NSObject>

/* @required */
// - (NSArray<UIDragItem *> *)dragInteraction:(UIDragInteraction *)interaction itemsForBeginningSession:(id<UIDragSession>)session;

/* @optional */





// - (nullable UITargetedDragPreview *)dragInteraction:(UIDragInteraction *)interaction previewForLiftingItem:(UIDragItem *)item session:(id<UIDragSession>)session;





// - (void)dragInteraction:(UIDragInteraction *)interaction willAnimateLiftWithAnimator:(id<UIDragAnimating>)animator session:(id<UIDragSession>)session;






// - (void)dragInteraction:(UIDragInteraction *)interaction sessionWillBegin:(id<UIDragSession>)session;
// - (BOOL)dragInteraction:(UIDragInteraction *)interaction sessionAllowsMoveOperation:(id<UIDragSession>)session;
// - (BOOL)dragInteraction:(UIDragInteraction *)interaction sessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;







// - (BOOL)dragInteraction:(UIDragInteraction *)interaction prefersFullSizePreviewsForSession:(id<UIDragSession>)session;




// - (void)dragInteraction:(UIDragInteraction *)interaction sessionDidMove:(id<UIDragSession>)session;







// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session willEndWithOperation:(UIDropOperation)operation;







// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session didEndWithOperation:(UIDropOperation)operation;





// - (void)dragInteraction:(UIDragInteraction *)interaction sessionDidTransferItems:(id<UIDragSession>)session;
// - (NSArray<UIDragItem *> *)dragInteraction:(UIDragInteraction *)interaction itemsForAddingToSession:(id<UIDragSession>)session withTouchAtPoint:(CGPoint)point;
// - (nullable id<UIDragSession>)dragInteraction:(UIDragInteraction *)interaction sessionForAddingItems:(NSArray<id<UIDragSession>> *)sessions withTouchAtPoint:(CGPoint)point;
// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session willAddItems:(NSArray<UIDragItem *> *)items forInteraction:(UIDragInteraction *)addingInteraction;
// - (nullable UITargetedDragPreview *)dragInteraction:(UIDragInteraction *)interaction previewForCancellingItem:(UIDragItem *)item withDefault:(UITargetedDragPreview *)defaultPreview;





// - (void)dragInteraction:(UIDragInteraction *)interaction item:(UIDragItem *)item willAnimateCancelWithAnimator:(id<UIDragAnimating>)animator;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UITextDragOptions; enum {
    UITextDragOptionsNone = 0,
    UITextDragOptionStripTextColorFromPreviews = (1 << 0)
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @protocol UITextDragDelegate;



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDraggable <UITextInput>

// @property (nonatomic, weak, nullable) id<UITextDragDelegate> textDragDelegate;





// @property (nonatomic, readonly, nullable) UIDragInteraction *textDragInteraction;



// @property (nonatomic, readonly, getter=isTextDragActive) BOOL textDragActive;

// @property (nonatomic) UITextDragOptions textDragOptions;

/* @end */



// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif

// @protocol UIDragSession, UITextDragRequest;

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDragDelegate <NSObject>

/* @optional */
// - (NSArray<UIDragItem *> *)textDraggableView:(UIView<UITextDraggable> *)textDraggableView itemsForDrag:(id<UITextDragRequest>)dragRequest;
// - (nullable UITargetedDragPreview *)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragPreviewForLiftingItem:(UIDragItem *)item session:(id<UIDragSession>)session;





// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView willAnimateLiftWithAnimator:(id<UIDragAnimating>)animator session:(id<UIDragSession>)session;





// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragSessionWillBegin:(id<UIDragSession>)session;




// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragSessionDidEnd:(id<UIDragSession>)session withOperation:(UIDropOperation)operation;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDragRequest <NSObject>

/* @required */



// @property (nonatomic, readonly) UITextRange *dragRange;





// @property (nonatomic, readonly) NSArray<UIDragItem *> *suggestedItems;




// @property (nonatomic, readonly) NSArray<UIDragItem *> *existingItems;






// @property (nonatomic, readonly, getter=isSelected) BOOL selected;



// @property (nonatomic, readonly) id<UIDragSession> dragSession;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSUInteger UITextDropAction; enum {


    UITextDropActionInsert = 0,




    UITextDropActionReplaceSelection,




    UITextDropActionReplaceAll,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UITextDropProgressMode; enum {



    UITextDropProgressModeSystem = 0,



    UITextDropProgressModeCustom
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UITextDropPerformer; enum {






    UITextDropPerformerView = 0,
    UITextDropPerformerDelegate,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITextDropProposal
#define _REWRITER_typedef_UITextDropProposal
typedef struct objc_object UITextDropProposal;
typedef struct {} _objc_exc_UITextDropProposal;
#endif

struct UITextDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};







// @property (nonatomic) UITextDropAction dropAction;



// @property (nonatomic) UITextDropProgressMode dropProgressMode;







// @property (nonatomic) BOOL useFastSameViewOperations;
// @property (nonatomic) UITextDropPerformer dropPerformer;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIPasteConfiguration
#define _REWRITER_typedef_UIPasteConfiguration
typedef struct objc_object UIPasteConfiguration;
typedef struct {} _objc_exc_UIPasteConfiguration;
#endif

struct UIPasteConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, copy) NSArray<NSString *> *acceptableTypeIdentifiers;

// - (instancetype)init __attribute__((objc_designated_initializer));

// - (instancetype)initWithAcceptableTypeIdentifiers:(NSArray<NSString *> *)acceptableTypeIdentifiers;
// - (void)addAcceptableTypeIdentifiers:(NSArray<NSString *> *)acceptableTypeIdentifiers;


// - (instancetype)initWithTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading>)aClass;
// - (void)addTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading>)aClass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UITextPasteConfigurationSupporting;
// @protocol UITextPasteItem;

// @class UITextRange;
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

// @class NSTextAttachment;
#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteDelegate <NSObject>

/* @optional */
// - (void)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting transformPasteItem:(id<UITextPasteItem>)item;
// - (NSAttributedString *)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting combineItemAttributedStrings:(NSArray<NSAttributedString *> *)itemStrings forRange:(UITextRange*)textRange;
// - (UITextRange*)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting performPasteOfAttributedString:(NSAttributedString*)attributedString toRange:(UITextRange*)textRange;







// - (BOOL)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting shouldAnimatePasteOfAttributedString:(NSAttributedString*)attributedString toRange:(UITextRange*)textRange;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteItem <NSObject>



// @property (nonatomic, readonly) __kindof NSItemProvider *itemProvider;



// @property (nonatomic, readonly, nullable) id localObject;




// @property (nonatomic, readonly) NSDictionary<NSAttributedStringKey, id> *defaultAttributes;


// - (void)setStringResult:(NSString*)string;


// - (void)setAttributedStringResult:(NSAttributedString*)string;


// - (void)setAttachmentResult:(NSTextAttachment*)textAttachment;



// - (void)setNoResult;





// - (void)setDefaultResult;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteConfigurationSupporting <UIPasteConfigurationSupporting>

// @property (nonatomic, weak, nullable) id<UITextPasteDelegate> pasteDelegate;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIDropInteraction;
#ifndef _REWRITER_typedef_UIDropInteraction
#define _REWRITER_typedef_UIDropInteraction
typedef struct objc_object UIDropInteraction;
typedef struct {} _objc_exc_UIDropInteraction;
#endif

// @protocol UITextDropDelegate;



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDroppable <UITextInput, UITextPasteConfigurationSupporting>

// @property (nonatomic, weak, nullable) id<UITextDropDelegate> textDropDelegate;





// @property (nonatomic, readonly, nullable) UIDropInteraction *textDropInteraction;



// @property (nonatomic, readonly, getter=isTextDropActive) BOOL textDropActive;

/* @end */



typedef NSUInteger UITextDropEditability; enum {



    UITextDropEditabilityNo = 0,




    UITextDropEditabilityTemporary,




    UITextDropEditabilityYes,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @protocol UITextDropRequest;


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDropDelegate <NSObject>

/* @optional */






// - (UITextDropEditability)textDroppableView:(UIView<UITextDroppable> *)textDroppableView willBecomeEditableForDrop:(id<UITextDropRequest>)drop;
// - (UITextDropProposal*)textDroppableView:(UIView<UITextDroppable> *)textDroppableView proposalForDrop:(id<UITextDropRequest>)drop;





// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView willPerformDrop:(id<UITextDropRequest>)drop;
// - (nullable UITargetedDragPreview *)textDroppableView:(UIView<UITextDroppable> *)textDroppableView previewForDroppingAllItemsWithDefault:(UITargetedDragPreview *)defaultPreview;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidEnter:(id<UIDropSession>)session;






// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidUpdate:(id<UIDropSession>)session;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidExit:(id<UIDropSession>)session;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidEnd:(id<UIDropSession>)session;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDropRequest <NSObject>



// @property (nonatomic, readonly) UITextPosition *dropPosition;



// @property (nonatomic, readonly) UITextDropProposal *suggestedProposal;




// @property (nonatomic, readonly, getter=isSameView) BOOL sameView;




// @property (nonatomic, readonly) id<UIDropSession> dropSession;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) // @protocol UIContentSizeCategoryAdjusting <NSObject>







// @property (nonatomic) BOOL adjustsFontForContentSizeCategory;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

// @class UITextFieldAtomBackgroundView;
#ifndef _REWRITER_typedef_UITextFieldAtomBackgroundView
#define _REWRITER_typedef_UITextFieldAtomBackgroundView
typedef struct objc_object UITextFieldAtomBackgroundView;
typedef struct {} _objc_exc_UITextFieldAtomBackgroundView;
#endif

// @class UITextFieldBackgroundView;
#ifndef _REWRITER_typedef_UITextFieldBackgroundView
#define _REWRITER_typedef_UITextFieldBackgroundView
typedef struct objc_object UITextFieldBackgroundView;
typedef struct {} _objc_exc_UITextFieldBackgroundView;
#endif

// @class UITextFieldBorderView;
#ifndef _REWRITER_typedef_UITextFieldBorderView
#define _REWRITER_typedef_UITextFieldBorderView
typedef struct objc_object UITextFieldBorderView;
typedef struct {} _objc_exc_UITextFieldBorderView;
#endif

// @class UITextFieldLabel;
#ifndef _REWRITER_typedef_UITextFieldLabel
#define _REWRITER_typedef_UITextFieldLabel
typedef struct objc_object UITextFieldLabel;
typedef struct {} _objc_exc_UITextFieldLabel;
#endif

// @class UITextInputTraits;
#ifndef _REWRITER_typedef_UITextInputTraits
#define _REWRITER_typedef_UITextInputTraits
typedef struct objc_object UITextInputTraits;
typedef struct {} _objc_exc_UITextInputTraits;
#endif

// @class UITextSelectionView;
#ifndef _REWRITER_typedef_UITextSelectionView
#define _REWRITER_typedef_UITextSelectionView
typedef struct objc_object UITextSelectionView;
typedef struct {} _objc_exc_UITextSelectionView;
#endif

// @class UITextInteractionAssistant;
#ifndef _REWRITER_typedef_UITextInteractionAssistant
#define _REWRITER_typedef_UITextInteractionAssistant
typedef struct objc_object UITextInteractionAssistant;
typedef struct {} _objc_exc_UITextInteractionAssistant;
#endif

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @protocol UITextFieldDelegate;
// @protocol UITextSelecting;

typedef NSInteger UITextBorderStyle; enum {
    UITextBorderStyleNone,
    UITextBorderStyleLine,
    UITextBorderStyleBezel,
    UITextBorderStyleRoundedRect
};

typedef NSInteger UITextFieldViewMode; enum {
    UITextFieldViewModeNever,
    UITextFieldViewModeWhileEditing,
    UITextFieldViewModeUnlessEditing,
    UITextFieldViewModeAlways
};

typedef NSInteger UITextFieldDidEndEditingReason; enum {
    UITextFieldDidEndEditingReasonCommitted,
    UITextFieldDidEndEditingReasonCancelled __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=10_0)))
} __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

struct UITextField_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nullable, nonatomic,copy) NSString *text;
// @property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6.0)));
// @property(nullable, nonatomic,strong) UIColor *textColor;
// @property(nullable, nonatomic,strong) UIFont *font;
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) UITextBorderStyle borderStyle;
// @property(nonatomic,copy) NSDictionary<NSAttributedStringKey,id> *defaultTextAttributes __attribute__((availability(ios,introduced=7.0)));

// @property(nullable, nonatomic,copy) NSString *placeholder;
// @property(nullable, nonatomic,copy) NSAttributedString *attributedPlaceholder __attribute__((availability(ios,introduced=6.0)));
// @property(nonatomic) BOOL clearsOnBeginEditing;
// @property(nonatomic) BOOL adjustsFontSizeToFitWidth;
// @property(nonatomic) CGFloat minimumFontSize;
// @property(nullable, nonatomic,weak) id<UITextFieldDelegate> delegate;
// @property(nullable, nonatomic,strong) UIImage *background;
// @property(nullable, nonatomic,strong) UIImage *disabledBackground;

// @property(nonatomic,readonly,getter=isEditing) BOOL editing;
// @property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6.0)));
// @property(nullable, nonatomic,copy) NSDictionary<NSAttributedStringKey,id> *typingAttributes __attribute__((availability(ios,introduced=6.0)));
// @property(nonatomic) UITextFieldViewMode clearButtonMode;

// @property(nullable, nonatomic,strong) UIView *leftView;
// @property(nonatomic) UITextFieldViewMode leftViewMode;

// @property(nullable, nonatomic,strong) UIView *rightView;
// @property(nonatomic) UITextFieldViewMode rightViewMode;



// - (CGRect)borderRectForBounds:(CGRect)bounds;
// - (CGRect)textRectForBounds:(CGRect)bounds;
// - (CGRect)placeholderRectForBounds:(CGRect)bounds;
// - (CGRect)editingRectForBounds:(CGRect)bounds;
// - (CGRect)clearButtonRectForBounds:(CGRect)bounds;
// - (CGRect)leftViewRectForBounds:(CGRect)bounds;
// - (CGRect)rightViewRectForBounds:(CGRect)bounds;

// - (void)drawTextInRect:(CGRect)rect;
// - (void)drawPlaceholderInRect:(CGRect)rect;



// @property (nullable, readwrite, strong) UIView *inputView;
// @property (nullable, readwrite, strong) UIView *inputAccessoryView;

// @property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6.0)));

/* @end */




// @interface UITextField () <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
/* @end */




// @interface UIView (UITextField)
// - (BOOL)endEditing:(BOOL)force;
/* @end */


// @protocol UITextFieldDelegate <NSObject>

/* @optional */

// - (BOOL)textFieldShouldBeginEditing:(UITextField *)textField;
// - (void)textFieldDidBeginEditing:(UITextField *)textField;
// - (BOOL)textFieldShouldEndEditing:(UITextField *)textField;
// - (void)textFieldDidEndEditing:(UITextField *)textField;
// - (void)textFieldDidEndEditing:(UITextField *)textField reason:(UITextFieldDidEndEditingReason)reason __attribute__((availability(ios,introduced=10.0)));

// - (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string;

// - (void)textFieldDidChangeSelection:(UITextField *)textField __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

// - (BOOL)textFieldShouldClear:(UITextField *)textField;
// - (BOOL)textFieldShouldReturn:(UITextField *)textField;

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidBeginEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidEndEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidChangeNotification;

extern "C" __attribute__((visibility ("default"))) NSString *const UITextFieldDidEndEditingReasonKey __attribute__((availability(ios,introduced=10.0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIActionSheetDelegate;
// @class UILabel;
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


typedef NSInteger UIActionSheetStyle; enum {
    UIActionSheetStyleAutomatic = -1,
    UIActionSheetStyleDefault = UIBarStyleDefault,
    UIActionSheetStyleBlackTranslucent = UIBarStyleBlackTranslucent,
    UIActionSheetStyleBlackOpaque = UIBarStyleBlackOpaque ,
} __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead.")));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIActionSheet
#define _REWRITER_typedef_UIActionSheet
typedef struct objc_object UIActionSheet;
typedef struct {} _objc_exc_UIActionSheet;
#endif

struct UIActionSheet_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithTitle:(nullable NSString *)title delegate:(nullable id<UIActionSheetDelegate>)delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle destructiveButtonTitle:(nullable NSString *)destructiveButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

// @property(nullable,nonatomic,weak) id<UIActionSheetDelegate> delegate;
// @property(nonatomic,copy) NSString *title;
// @property(nonatomic) UIActionSheetStyle actionSheetStyle;



// - (NSInteger)addButtonWithTitle:(nullable NSString *)title;
// - (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
// @property(nonatomic,readonly) NSInteger numberOfButtons;
// @property(nonatomic) NSInteger cancelButtonIndex;
// @property(nonatomic) NSInteger destructiveButtonIndex;

// @property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
// @property(nonatomic,readonly,getter=isVisible) BOOL visible;




// - (void)showFromToolbar:(UIToolbar *)view;
// - (void)showFromTabBar:(UITabBar *)view;
// - (void)showFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated __attribute__((availability(ios,introduced=3.2)));
// - (void)showFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated __attribute__((availability(ios,introduced=3.2)));
// - (void)showInView:(UIView *)view;



// - (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;

/* @end */



__attribute__((availability(tvos,unavailable)))
// @protocol UIActionSheetDelegate <NSObject>
/* @optional */


// - (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));



// - (void)actionSheetCancel:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));

// - (void)willPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));
// - (void)didPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));

// - (void)actionSheet:(UIActionSheet *)actionSheet willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));
// - (void)actionSheet:(UIActionSheet *)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=8.3,message="Use UIAlertController instead."))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef NSInteger UIAlertViewStyle; enum {
    UIAlertViewStyleDefault = 0,
    UIAlertViewStyleSecureTextInput,
    UIAlertViewStylePlainTextInput,
    UIAlertViewStyleLoginAndPasswordInput
} __attribute__((availability(tvos,unavailable)));

// @protocol UIAlertViewDelegate;
// @class UILabel;
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAlertView
#define _REWRITER_typedef_UIAlertView
typedef struct objc_object UIAlertView;
typedef struct {} _objc_exc_UIAlertView;
#endif

struct UIAlertView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithTitle:(nullable NSString *)title message:(nullable NSString *)message delegate:(nullable id )delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

// - (id)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype) initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nullable,nonatomic,weak) id delegate;
// @property(nonatomic,copy) NSString *title;
// @property(nullable,nonatomic,copy) NSString *message;




// - (NSInteger)addButtonWithTitle:(nullable NSString *)title;
// - (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
// @property(nonatomic,readonly) NSInteger numberOfButtons;
// @property(nonatomic) NSInteger cancelButtonIndex;

// @property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
// @property(nonatomic,readonly,getter=isVisible) BOOL visible;


// - (void)show;



// - (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;


// @property(nonatomic,assign) UIAlertViewStyle alertViewStyle __attribute__((availability(ios,introduced=5.0)));



// - (nullable UITextField *)textFieldAtIndex:(NSInteger)textFieldIndex __attribute__((availability(ios,introduced=5.0)));


/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIAlertViewDelegate <NSObject>
/* @optional */


// - (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));



// - (void)alertViewCancel:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));

// - (void)willPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));
// - (void)didPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));

// - (void)alertView:(UIAlertView *)alertView willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));
// - (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));


// - (BOOL)alertViewShouldEnableFirstOtherButton:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use UIAlertController instead.")));

/* @end */

#pragma clang assume_nonnull end

typedef NSInteger UISceneActivationState; enum {
    UISceneActivationStateUnattached = -1,
    UISceneActivationStateForegroundActive,
    UISceneActivationStateForegroundInactive,
    UISceneActivationStateBackground
} __attribute__((availability(ios,introduced=13.0)));


typedef NSString * UISceneSessionRole __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) NSErrorDomain const UISceneErrorDomain __attribute__((availability(ios,introduced=13.0)));
typedef NSInteger UISceneErrorCode; enum {
    UISceneErrorCodeMultipleScenesNotSupported,
    UISceneErrorCodeRequestDenied
} __attribute__((availability(ios,introduced=13.0)));

#pragma clang assume_nonnull begin

typedef NSInteger UIStatusBarStyle; enum {
    UIStatusBarStyleDefault = 0,
    UIStatusBarStyleLightContent __attribute__((availability(ios,introduced=7.0))) = 1,
    UIStatusBarStyleDarkContent __attribute__((availability(ios,introduced=13.0))) = 3,

    UIStatusBarStyleBlackTranslucent __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 1,
    UIStatusBarStyleBlackOpaque __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 2,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIStatusBarAnimation; enum {
    UIStatusBarAnimationNone,
    UIStatusBarAnimationFade __attribute__((availability(ios,introduced=3.2))),
    UIStatusBarAnimationSlide __attribute__((availability(ios,introduced=3.2))),
} __attribute__((availability(tvos,unavailable)));



typedef NSInteger UIInterfaceOrientation; enum {
    UIInterfaceOrientationUnknown = UIDeviceOrientationUnknown,
    UIInterfaceOrientationPortrait = UIDeviceOrientationPortrait,
    UIInterfaceOrientationPortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown,
    UIInterfaceOrientationLandscapeLeft = UIDeviceOrientationLandscapeRight,
    UIInterfaceOrientationLandscapeRight = UIDeviceOrientationLandscapeLeft
} __attribute__((availability(tvos,unavailable)));




extern "C" __attribute__((visibility ("default"))) NSExceptionName const UIApplicationInvalidInterfaceOrientationException __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIInterfaceOrientationMask; enum {
    UIInterfaceOrientationMaskPortrait = (1 << UIInterfaceOrientationPortrait),
    UIInterfaceOrientationMaskLandscapeLeft = (1 << UIInterfaceOrientationLandscapeLeft),
    UIInterfaceOrientationMaskLandscapeRight = (1 << UIInterfaceOrientationLandscapeRight),
    UIInterfaceOrientationMaskPortraitUpsideDown = (1 << UIInterfaceOrientationPortraitUpsideDown),
    UIInterfaceOrientationMaskLandscape = (UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
    UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight | UIInterfaceOrientationMaskPortraitUpsideDown),
    UIInterfaceOrientationMaskAllButUpsideDown = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
} __attribute__((availability(tvos,unavailable)));

static inline BOOL UIInterfaceOrientationIsPortrait(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationPortrait || (orientation) == UIInterfaceOrientationPortraitUpsideDown);
}

static inline BOOL UIInterfaceOrientationIsLandscape(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationLandscapeLeft || (orientation) == UIInterfaceOrientationLandscapeRight);
}

typedef NSUInteger UIRemoteNotificationType; enum {
    UIRemoteNotificationTypeNone = 0,
    UIRemoteNotificationTypeBadge = 1 << 0,
    UIRemoteNotificationTypeSound = 1 << 1,
    UIRemoteNotificationTypeAlert = 1 << 2,
    UIRemoteNotificationTypeNewsstandContentAvailability = 1 << 3,
} __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions for user notifications and registerForRemoteNotifications for receiving remote notifications instead."))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIBackgroundFetchResult; enum {
    UIBackgroundFetchResultNewData,
    UIBackgroundFetchResultNoData,
    UIBackgroundFetchResultFailed
} __attribute__((availability(ios,introduced=7.0)));

typedef NSInteger UIBackgroundRefreshStatus; enum {
    UIBackgroundRefreshStatusRestricted,
    UIBackgroundRefreshStatusDenied,
    UIBackgroundRefreshStatusAvailable
} __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSInteger UIApplicationState; enum {
    UIApplicationStateActive,
    UIApplicationStateInactive,
    UIApplicationStateBackground
} __attribute__((availability(ios,introduced=4.0)));

typedef NSUInteger UIBackgroundTaskIdentifier __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) const UIBackgroundTaskIdentifier UIBackgroundTaskInvalid __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIMinimumKeepAliveTimeout __attribute__((availability(ios,introduced=4.0,deprecated=13.0,message="Please use PushKit for VoIP applications."))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use PushKit for VoIP applications.")));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalMinimum __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalNever __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSString * UIApplicationOpenExternalURLOptionsKey __attribute__((swift_wrapper(enum)));

// @class CKShareMetadata;
#ifndef _REWRITER_typedef_CKShareMetadata
#define _REWRITER_typedef_CKShareMetadata
typedef struct objc_object CKShareMetadata;
typedef struct {} _objc_exc_CKShareMetadata;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

// @class UILocalNotification;
#ifndef _REWRITER_typedef_UILocalNotification
#define _REWRITER_typedef_UILocalNotification
typedef struct objc_object UILocalNotification;
typedef struct {} _objc_exc_UILocalNotification;
#endif

// @protocol UIApplicationDelegate;
// @class INIntent;
#ifndef _REWRITER_typedef_INIntent
#define _REWRITER_typedef_INIntent
typedef struct objc_object INIntent;
typedef struct {} _objc_exc_INIntent;
#endif

// @class INIntentResponse;
#ifndef _REWRITER_typedef_INIntentResponse
#define _REWRITER_typedef_INIntentResponse
typedef struct objc_object INIntentResponse;
typedef struct {} _objc_exc_INIntentResponse;
#endif

// @class UIScene;
#ifndef _REWRITER_typedef_UIScene
#define _REWRITER_typedef_UIScene
typedef struct objc_object UIScene;
typedef struct {} _objc_exc_UIScene;
#endif

#ifndef _REWRITER_typedef_UIWindowScene
#define _REWRITER_typedef_UIWindowScene
typedef struct objc_object UIWindowScene;
typedef struct {} _objc_exc_UIWindowScene;
#endif

#ifndef _REWRITER_typedef_UISceneSession
#define _REWRITER_typedef_UISceneSession
typedef struct objc_object UISceneSession;
typedef struct {} _objc_exc_UISceneSession;
#endif

#ifndef _REWRITER_typedef_UISceneConfiguration
#define _REWRITER_typedef_UISceneConfiguration
typedef struct objc_object UISceneConfiguration;
typedef struct {} _objc_exc_UISceneConfiguration;
#endif

#ifndef _REWRITER_typedef_UISceneConnectionOptions
#define _REWRITER_typedef_UISceneConnectionOptions
typedef struct objc_object UISceneConnectionOptions;
typedef struct {} _objc_exc_UISceneConnectionOptions;
#endif

#ifndef _REWRITER_typedef_UISceneActivationRequestOptions
#define _REWRITER_typedef_UISceneActivationRequestOptions
typedef struct objc_object UISceneActivationRequestOptions;
typedef struct {} _objc_exc_UISceneActivationRequestOptions;
#endif

#ifndef _REWRITER_typedef_UISceneDestructionRequestOptions
#define _REWRITER_typedef_UISceneDestructionRequestOptions
typedef struct objc_object UISceneDestructionRequestOptions;
typedef struct {} _objc_exc_UISceneDestructionRequestOptions;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIApplication
#define _REWRITER_typedef_UIApplication
typedef struct objc_object UIApplication;
typedef struct {} _objc_exc_UIApplication;
#endif

struct UIApplication_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};


@property(class, nonatomic, readonly) UIApplication *sharedApplication __attribute__((availability(ios_app_extension,unavailable,message="Use view controller based solutions where appropriate instead.")));

// @property(nullable, nonatomic, assign) id<UIApplicationDelegate> delegate;

// - (void)beginIgnoringInteractionEvents __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use UIView's userInteractionEnabled property instead"))) __attribute__((availability(ios_app_extension,unavailable,message="")));
// - (void)endIgnoringInteractionEvents __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use UIView's userInteractionEnabled property instead"))) __attribute__((availability(ios_app_extension,unavailable,message="")));
// @property(nonatomic, readonly, getter=isIgnoringInteractionEvents) BOOL ignoringInteractionEvents __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use UIView's userInteractionEnabled property instead")));

// @property(nonatomic,getter=isIdleTimerDisabled) BOOL idleTimerDisabled;

// - (BOOL)openURL:(NSURL*)url __attribute__((availability(ios,introduced=2.0,deprecated=10.0,replacement="openURL:options:completionHandler:"))) __attribute__((availability(ios_app_extension,unavailable,message="")));
// - (BOOL)canOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=3.0)));





// - (void)openURL:(NSURL*)url options:(NSDictionary<UIApplicationOpenExternalURLOptionsKey, id> *)options completionHandler:(void (^ _Nullable)(BOOL success))completion __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(ios_app_extension,unavailable,message="")));

// - (void)sendEvent:(UIEvent *)event;

// @property(nullable, nonatomic,readonly) UIWindow *keyWindow __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Should not be used for applications that support multiple scenes as it returns a key window across all connected scenes")));
// @property(nonatomic,readonly) NSArray<__kindof UIWindow *> *windows;

// - (BOOL)sendAction:(SEL)action to:(nullable id)target from:(nullable id)sender forEvent:(nullable UIEvent *)event;

// @property(nonatomic,getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Provide a custom network activity UI in your app if desired.")));

// @property(readonly, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the statusBarManager property of the window scene instead.")));

// @property(readonly, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the statusBarManager property of the window scene instead.")));

// @property(readonly, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the interfaceOrientation property of the window scene instead.")));
// - (UIInterfaceOrientationMask)supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) NSTimeInterval statusBarOrientationAnimationDuration __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
// @property(nonatomic,readonly) CGRect statusBarFrame __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use the statusBarManager property of the window scene instead.")));

// @property(nonatomic) NSInteger applicationIconBadgeNumber;

// @property(nonatomic) BOOL applicationSupportsShakeToEdit __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UIApplicationState applicationState __attribute__((availability(ios,introduced=4.0)));
// @property(nonatomic,readonly) NSTimeInterval backgroundTimeRemaining __attribute__((availability(ios,introduced=4.0)));

// - (UIBackgroundTaskIdentifier)beginBackgroundTaskWithExpirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=4.0))) __attribute__((objc_requires_super));
// - (UIBackgroundTaskIdentifier)beginBackgroundTaskWithName:(nullable NSString *)taskName expirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=7.0))) __attribute__((objc_requires_super));
// - (void)endBackgroundTask:(UIBackgroundTaskIdentifier)identifier __attribute__((availability(ios,introduced=4.0))) __attribute__((objc_requires_super));
// - (void)setMinimumBackgroundFetchInterval:(NSTimeInterval)minimumBackgroundFetchInterval __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Use a BGAppRefreshTask in the BackgroundTasks framework instead"))) __attribute__((availability(tvos,introduced=11.0,deprecated=13.0,message="Use a BGAppRefreshTask in the BackgroundTasks framework instead")));
;




// @property (nonatomic, readonly) UIBackgroundRefreshStatus backgroundRefreshStatus __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property(nonatomic,readonly,getter=isProtectedDataAvailable) BOOL protectedDataAvailable __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic,readonly) UIUserInterfaceLayoutDirection userInterfaceLayoutDirection __attribute__((availability(ios,introduced=5.0)));


// @property(nonatomic,readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=7.0)));



// @property(nonatomic, readonly) NSSet<UIScene *> *connectedScenes __attribute__((availability(ios,introduced=13.0)));


// @property(nonatomic, readonly) NSSet<UISceneSession *> *openSessions __attribute__((availability(ios,introduced=13.0)));


// @property(nonatomic, readonly) BOOL supportsMultipleScenes __attribute__((availability(ios,introduced=13.0)));




// - (void)requestSceneSessionActivation:(nullable UISceneSession *)sceneSession userActivity:(nullable NSUserActivity *)userActivity options:(nullable UISceneActivationRequestOptions *)options errorHandler:(nullable void (^)(NSError * error))errorHandler __attribute__((availability(ios,introduced=13.0)));


// - (void)requestSceneSessionDestruction:(UISceneSession *)sceneSession options:(nullable UISceneDestructionRequestOptions *)options errorHandler:(nullable void (^)(NSError * error))errorHandler __attribute__((availability(ios,introduced=13.0)));


// - (void)requestSceneSessionRefresh:(UISceneSession *)sceneSession __attribute__((availability(ios,introduced=13.0)));

/* @end */


// @interface UIApplication (UIRemoteNotifications)


// - (void)registerForRemoteNotifications __attribute__((availability(ios,introduced=8.0)));

// - (void)unregisterForRemoteNotifications __attribute__((availability(ios,introduced=3.0)));


// @property(nonatomic, readonly, getter=isRegisteredForRemoteNotifications) BOOL registeredForRemoteNotifications __attribute__((availability(ios,introduced=8.0)));

// - (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="Use -[UIApplication registerForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]"))) __attribute__((availability(tvos,unavailable)));


// - (UIRemoteNotificationType)enabledRemoteNotificationTypes __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="Use -[UIApplication isRegisteredForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] to retrieve user-enabled remote notification and user notification settings"))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIApplication (UILocalNotifications)

// - (void)presentLocalNotificationNow:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)scheduleLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
// - (void)cancelLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter removePendingNotificationRequestsWithIdentifiers:]"))) __attribute__((availability(tvos,unavailable)));
// - (void)cancelAllLocalNotifications __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter removeAllPendingNotificationRequests]"))) __attribute__((availability(tvos,unavailable)));

// @property(nullable,nonatomic,copy) NSArray<UILocalNotification *> *scheduledLocalNotifications __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter getPendingNotificationRequestsWithCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @class UIUserNotificationSettings;
#ifndef _REWRITER_typedef_UIUserNotificationSettings
#define _REWRITER_typedef_UIUserNotificationSettings
typedef struct objc_object UIUserNotificationSettings;
typedef struct {} _objc_exc_UIUserNotificationSettings;
#endif

// @interface UIApplication (UIUserNotificationSettings)


// - (void)registerUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:] and -[UNUserNotificationCenter setNotificationCategories:]"))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic, readonly, nullable) UIUserNotificationSettings *currentUserNotificationSettings __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] and -[UNUserNotificationCenter getNotificationCategoriesWithCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @interface UIApplication (UIRemoteControlEvents)

// - (void)beginReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4.0)));
// - (void)endReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4.0)));

/* @end */


// @interface UIApplication (UINewsstand)
// - (void)setNewsstandIconImage:(nullable UIImage *)image __attribute__((availability(ios,introduced=5.0,deprecated=9.0,message="Newsstand apps now behave like normal apps on SpringBoard"))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @class UIApplicationShortcutItem;
#ifndef _REWRITER_typedef_UIApplicationShortcutItem
#define _REWRITER_typedef_UIApplicationShortcutItem
typedef struct objc_object UIApplicationShortcutItem;
typedef struct {} _objc_exc_UIApplicationShortcutItem;
#endif

// @interface UIApplication (UIShortcutItems)

// @property (nullable, nonatomic, copy) NSArray<UIApplicationShortcutItem *> *shortcutItems __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @interface UIApplication (UIAlternateApplicationIcons)

// @property (readonly, nonatomic) BOOL supportsAlternateIcons __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));


// - (void)setAlternateIconName:(nullable NSString *)alternateIconName completionHandler:(nullable void (^)(NSError *_Nullable error))completionHandler __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));


// @property (nullable, readonly, nonatomic) NSString *alternateIconName __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));
/* @end */


// @protocol UIStateRestoring;
// @interface UIApplication (UIStateRestoration)



// - (void)extendStateRestoration __attribute__((availability(ios,introduced=6.0)));
// - (void)completeStateRestoration __attribute__((availability(ios,introduced=6.0)));



// - (void)ignoreSnapshotOnNextApplicationLaunch __attribute__((availability(ios,introduced=7.0)));





// + (void)registerObjectForStateRestoration:(id<UIStateRestoring>)object restorationIdentifier:(NSString *)restorationIdentifier __attribute__((availability(ios,introduced=7.0)));
/* @end */



typedef NSString * UIApplicationLaunchOptionsKey __attribute__((swift_wrapper(enum)));

// @protocol UIApplicationDelegate<NSObject>

/* @optional */

// - (void)applicationDidFinishLaunching:(UIApplication *)application;
// - (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(nullable NSDictionary<UIApplicationLaunchOptionsKey, id> *)launchOptions __attribute__((availability(ios,introduced=6.0)));
// - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(nullable NSDictionary<UIApplicationLaunchOptionsKey, id> *)launchOptions __attribute__((availability(ios,introduced=3.0)));

// - (void)applicationDidBecomeActive:(UIApplication *)application;
// - (void)applicationWillResignActive:(UIApplication *)application;
// - (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=2.0,deprecated=9.0,replacement="application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));
// - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(nullable NSString *)sourceApplication annotation:(id)annotation __attribute__((availability(ios,introduced=4.2,deprecated=9.0,replacement="application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));


typedef NSString * UIApplicationOpenURLOptionsKey __attribute__((swift_wrapper(enum)));

// - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> *)options __attribute__((availability(ios,introduced=9.0)));

// - (void)applicationDidReceiveMemoryWarning:(UIApplication *)application;
// - (void)applicationWillTerminate:(UIApplication *)application;
// - (void)applicationSignificantTimeChange:(UIApplication *)application;

// - (void)application:(UIApplication *)application willChangeStatusBarOrientation:(UIInterfaceOrientation)newStatusBarOrientation duration:(NSTimeInterval)duration __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
// - (void)application:(UIApplication *)application didChangeStatusBarOrientation:(UIInterfaceOrientation)oldStatusBarOrientation __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));

// - (void)application:(UIApplication *)application willChangeStatusBarFrame:(CGRect)newStatusBarFrame __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
// - (void)application:(UIApplication *)application didChangeStatusBarFrame:(CGRect)oldStatusBarFrame __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));


 // - (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken __attribute__((availability(ios,introduced=3.0)));

// - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error __attribute__((availability(ios,introduced=3.0)));

// - (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo __attribute__((availability(ios,introduced=3.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:] for user visible notifications and -[UIApplicationDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:] for silent remote notifications")));

// - (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=9.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=9.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7.0)));


// - (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Use a BGAppRefreshTask in the BackgroundTasks framework instead"))) __attribute__((availability(tvos,introduced=11.0,deprecated=13.0,message="Use a BGAppRefreshTask in the BackgroundTasks framework instead")));



// - (void)application:(UIApplication *)application performActionForShortcutItem:(UIApplicationShortcutItem *)shortcutItem completionHandler:(void(^)(BOOL succeeded))completionHandler __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));






// - (void)application:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=7.0)));

// - (void)application:(UIApplication *)application handleWatchKitExtensionRequest:(nullable NSDictionary *)userInfo reply:(void(^)(NSDictionary * _Nullable replyInfo))reply __attribute__((availability(ios,introduced=8.2)));

// - (void)applicationShouldRequestHealthAuthorization:(UIApplication *)application __attribute__((availability(ios,introduced=9.0)));

// - (void)application:(UIApplication *)application handleIntent:(INIntent *)intent completionHandler:(void(^)(INIntentResponse *intentResponse))completionHandler __attribute__((availability(ios,introduced=11.0)));

// - (void)applicationDidEnterBackground:(UIApplication *)application __attribute__((availability(ios,introduced=4.0)));
// - (void)applicationWillEnterForeground:(UIApplication *)application __attribute__((availability(ios,introduced=4.0)));

// - (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application __attribute__((availability(ios,introduced=4.0)));
// - (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)application __attribute__((availability(ios,introduced=4.0)));

// @property (nullable, nonatomic, strong) UIWindow *window __attribute__((availability(ios,introduced=5.0)));

// - (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));

typedef NSString * UIApplicationExtensionPointIdentifier __attribute__((swift_wrapper(enum)));




// - (BOOL)application:(UIApplication *)application shouldAllowExtensionPointIdentifier:(UIApplicationExtensionPointIdentifier)extensionPointIdentifier __attribute__((availability(ios,introduced=8.0)));



// - (nullable UIViewController *) application:(UIApplication *)application viewControllerWithRestorationIdentifierPath:(NSArray<NSString *> *)identifierComponents coder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
// - (BOOL)application:(UIApplication *)application shouldSaveSecureApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=13.2)));
// - (BOOL)application:(UIApplication *)application shouldRestoreSecureApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=13.2)));
// - (void)application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
// - (void)application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));


// - (BOOL)application:(UIApplication *)application shouldSaveApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0,deprecated=13.2,message="Use application:shouldSaveSecureApplicationState: instead")));
// - (BOOL)application:(UIApplication *)application shouldRestoreApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0,deprecated=13.2,message="Use application:shouldRestoreSecureApplicationState: instead")));







// - (BOOL)application:(UIApplication *)application willContinueUserActivityWithType:(NSString *)userActivityType __attribute__((availability(ios,introduced=8.0)));





// - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void(^)(NSArray<id<UIUserActivityRestoring>> * _Nullable restorableObjects))restorationHandler __attribute__((availability(ios,introduced=8.0)));


// - (void)application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error __attribute__((availability(ios,introduced=8.0)));


// - (void)application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8.0)));





// - (void)application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata __attribute__((availability(ios,introduced=10.0)));





// - (UISceneConfiguration *)application:(UIApplication *)application configurationForConnectingSceneSession:(UISceneSession *)connectingSceneSession options:(UISceneConnectionOptions *)options __attribute__((availability(ios,introduced=13.0)));



// - (void)application:(UIApplication *)application didDiscardSceneSessions:(NSSet<UISceneSession *> *)sceneSessions __attribute__((availability(ios,introduced=13.0)));
/* @end */


// @interface UIApplication(UIApplicationDeprecated)

// @property(nonatomic,getter=isProximitySensingEnabled) BOOL proximitySensingEnabled __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=2.0,deprecated=3.2,message="Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarOrientation:(UIInterfaceOrientation)interfaceOrientation animated:(BOOL)animated __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle animated:(BOOL)animated __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarHidden:(BOOL)hidden withAnimation:(UIStatusBarAnimation)animation __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));

// - (BOOL)setKeepAliveTimeout:(NSTimeInterval)timeout handler:(void(^ _Nullable)(void))keepAliveHandler __attribute__((availability(ios,introduced=4.0,deprecated=9.0,message="Please use PushKit for VoIP applications instead of calling this method"))) __attribute__((availability(tvos,unavailable)));
// - (void)clearKeepAliveTimeout __attribute__((availability(ios,introduced=4.0,deprecated=9.0,message="Please use PushKit for VoIP applications instead of calling this method"))) __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) int UIApplicationMain(int argc, char * _Nullable argv[_Nonnull], NSString * _Nullable principalClassName, NSString * _Nullable delegateClassName);

extern "C" __attribute__((visibility ("default"))) NSRunLoopMode const UITrackingRunLoopMode;


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidEnterBackgroundNotification __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillEnterForegroundNotification __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidFinishLaunchingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidBecomeActiveNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillResignActiveNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidReceiveMemoryWarningNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillTerminateNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationSignificantTimeChangeNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarOrientationUserInfoKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarFrameUserInfoKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=2.0,deprecated=13.0,message="Use viewWillTransitionToSize:withTransitionCoordinator: instead.")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationBackgroundRefreshStatusDidChangeNotification __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataWillBecomeUnavailable __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataDidBecomeAvailable __attribute__((availability(ios,introduced=4.0)));

extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsURLKey __attribute__((swift_name("url"))) __attribute__((availability(ios,introduced=3.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsSourceApplicationKey __attribute__((swift_name("sourceApplication"))) __attribute__((availability(ios,introduced=3.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsRemoteNotificationKey __attribute__((swift_name("remoteNotification"))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocalNotificationKey __attribute__((swift_name("localNotification"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsAnnotationKey __attribute__((swift_name("annotation"))) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocationKey __attribute__((swift_name("location"))) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsNewsstandDownloadsKey __attribute__((swift_name("newsstandDownloads"))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothCentralsKey __attribute__((swift_name("bluetoothCentrals"))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothPeripheralsKey __attribute__((swift_name("bluetoothPeripherals"))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsShortcutItemKey __attribute__((swift_name("shortcutItem"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityDictionaryKey __attribute__((swift_name("userActivityDictionary"))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityTypeKey __attribute__((swift_name("userActivityType"))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsCloudKitShareMetadataKey __attribute__((swift_name("cloudKitShareMetadata"))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationOpenSettingsURLString __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsSourceApplicationKey __attribute__((swift_name("sourceApplication"))) __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsAnnotationKey __attribute__((swift_name("annotation"))) __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsOpenInPlaceKey __attribute__((swift_name("openInPlace"))) __attribute__((availability(ios,introduced=9.0)));


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationUserDidTakeScreenshotNotification __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) UIApplicationExtensionPointIdentifier const UIApplicationKeyboardExtensionPointIdentifier __attribute__((swift_name("keyboard"))) __attribute__((availability(ios,introduced=8.0)));





extern "C" __attribute__((visibility ("default"))) UIApplicationOpenExternalURLOptionsKey const UIApplicationOpenURLOptionUniversalLinksOnly __attribute__((availability(ios,introduced=10.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) NSString *const UIStateRestorationViewControllerStoryboardKey __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationBundleVersionKey __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationUserInterfaceIdiomKey __attribute__((availability(ios,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationTimestampKey __attribute__((availability(ios,introduced=7.0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationSystemVersionKey __attribute__((availability(ios,introduced=7.0)));

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif





// @protocol UIViewControllerRestoration
// + (nullable UIViewController *) viewControllerWithRestorationIdentifierPath:(NSArray<NSString *> *)identifierComponents coder:(NSCoder *)coder;
/* @end */


// @protocol UIDataSourceModelAssociation
// - (nullable NSString *) modelIdentifierForElementAtIndexPath:(NSIndexPath *)idx inView:(UIView *)view;
// - (nullable NSIndexPath *) indexPathForElementWithModelIdentifier:(NSString *)identifier inView:(UIView *)view;
/* @end */




// @protocol UIObjectRestoration;




// @protocol UIStateRestoring <NSObject>
/* @optional */



// @property (nonatomic, readonly, nullable) id<UIStateRestoring> restorationParent;



// @property (nonatomic, readonly, nullable) Class<UIObjectRestoration> objectRestorationClass;




// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder;
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder;





// - (void) applicationFinishedRestoringState;
/* @end */




// @protocol UIObjectRestoration
// + (nullable id<UIStateRestoring>) objectWithRestorationIdentifierPath:(NSArray<NSString *> *)identifierComponents coder:(NSCoder *)coder;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @class UINavigationItem;
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @class UISearchDisplayController;
#ifndef _REWRITER_typedef_UISearchDisplayController
#define _REWRITER_typedef_UISearchDisplayController
typedef struct objc_object UISearchDisplayController;
typedef struct {} _objc_exc_UISearchDisplayController;
#endif

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @class UIStoryboard;
#ifndef _REWRITER_typedef_UIStoryboard
#define _REWRITER_typedef_UIStoryboard
typedef struct objc_object UIStoryboard;
typedef struct {} _objc_exc_UIStoryboard;
#endif

#ifndef _REWRITER_typedef_UIStoryboardSegue
#define _REWRITER_typedef_UIStoryboardSegue
typedef struct objc_object UIStoryboardSegue;
typedef struct {} _objc_exc_UIStoryboardSegue;
#endif

#ifndef _REWRITER_typedef_UIStoryboardUnwindSegueSource
#define _REWRITER_typedef_UIStoryboardUnwindSegueSource
typedef struct objc_object UIStoryboardUnwindSegueSource;
typedef struct {} _objc_exc_UIStoryboardUnwindSegueSource;
#endif

// @class UIScrollView;
#ifndef _REWRITER_typedef_UIScrollView
#define _REWRITER_typedef_UIScrollView
typedef struct objc_object UIScrollView;
typedef struct {} _objc_exc_UIScrollView;
#endif

// @protocol UIViewControllerTransitionCoordinator;

typedef NSInteger UIModalTransitionStyle; enum {
    UIModalTransitionStyleCoverVertical = 0,
    UIModalTransitionStyleFlipHorizontal __attribute__((availability(tvos,unavailable))),
    UIModalTransitionStyleCrossDissolve,
    UIModalTransitionStylePartialCurl __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))),
};

typedef NSInteger UIModalPresentationStyle; enum {
    UIModalPresentationFullScreen = 0,
    UIModalPresentationPageSheet __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))),
    UIModalPresentationFormSheet __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))),
    UIModalPresentationCurrentContext __attribute__((availability(ios,introduced=3.2))),
    UIModalPresentationCustom __attribute__((availability(ios,introduced=7.0))),
    UIModalPresentationOverFullScreen __attribute__((availability(ios,introduced=8.0))),
    UIModalPresentationOverCurrentContext __attribute__((availability(ios,introduced=8.0))),
    UIModalPresentationPopover __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))),
    UIModalPresentationBlurOverFullScreen __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIModalPresentationNone __attribute__((availability(ios,introduced=7.0))) = -1,
    UIModalPresentationAutomatic __attribute__((availability(ios,introduced=13.0))) = -2,
};

// @protocol UIContentContainer <NSObject>

// @property (nonatomic, readonly) CGSize preferredContentSize __attribute__((availability(ios,introduced=8.0)));
// - (void)preferredContentSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8.0)));







// - (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8.0)));






// - (CGSize)sizeForChildContentContainer:(id <UIContentContainer>)container withParentContainerSize:(CGSize)parentSize __attribute__((availability(ios,introduced=8.0)));






// - (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8.0)));






// - (void)willTransitionToTraitCollection:(UITraitCollection *)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8.0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIViewControllerShowDetailTargetDidChangeNotification __attribute__((availability(ios,introduced=8.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

struct UIViewController_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(null_resettable, nonatomic,strong) UIView *view;
// - (void)loadView;
// - (void)loadViewIfNeeded __attribute__((availability(ios,introduced=9.0)));
// @property(nullable, nonatomic, readonly, strong) UIView *viewIfLoaded __attribute__((availability(ios,introduced=9.0)));

// - (void)viewWillUnload __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (void)viewDidUnload __attribute__((availability(ios,introduced=3.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));

// - (void)viewDidLoad;
// @property(nonatomic, readonly, getter=isViewLoaded) BOOL viewLoaded __attribute__((availability(ios,introduced=3.0)));

// @property(nullable, nonatomic, readonly, copy) NSString *nibName;
// @property(nullable, nonatomic, readonly, strong) NSBundle *nibBundle;
// @property(nullable, nonatomic, readonly, strong) UIStoryboard *storyboard __attribute__((availability(ios,introduced=5.0)));

// - (void)performSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=5.0)));
// - (BOOL)shouldPerformSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=6.0)));
// - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(nullable id)sender __attribute__((availability(ios,introduced=5.0)));


// - (BOOL)canPerformUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController sender:(nullable id)sender __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));
// - (BOOL)canPerformUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(id)sender __attribute__((availability(ios,introduced=6.0,deprecated=13.0,replacement="canPerformUnwindSegueAction:fromViewController:sender:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="canPerformUnwindSegueAction:fromViewController:sender:")));





// - (NSArray<UIViewController *> *)allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9.0)));




// - (nullable UIViewController *)childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9.0)));



// - (nullable UIViewController *)viewControllerForUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(nullable id)sender __attribute__((availability(ios,introduced=6.0,deprecated=9.0,message="")));


// - (void)unwindForSegue:(UIStoryboardSegue *)unwindSegue towardsViewController:(UIViewController *)subsequentVC __attribute__((availability(ios,introduced=9.0)));




// - (nullable UIStoryboardSegue *)segueForUnwindingToViewController:(UIViewController *)toViewController fromViewController:(UIViewController *)fromViewController identifier:(nullable NSString *)identifier __attribute__((availability(ios,introduced=6.0,deprecated=9.0,message="")));

// - (void)viewWillAppear:(BOOL)animated;
// - (void)viewDidAppear:(BOOL)animated;
// - (void)viewWillDisappear:(BOOL)animated;
// - (void)viewDidDisappear:(BOOL)animated;


// - (void)viewWillLayoutSubviews __attribute__((availability(ios,introduced=5.0)));

// - (void)viewDidLayoutSubviews __attribute__((availability(ios,introduced=5.0)));

// @property(nullable, nonatomic,copy) NSString *title;

// - (void)didReceiveMemoryWarning;






// @property(nullable,nonatomic,weak,readonly) UIViewController *parentViewController;


// @property(nullable, nonatomic,readonly) UIViewController *modalViewController __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));


// @property(nullable, nonatomic,readonly) UIViewController *presentedViewController __attribute__((availability(ios,introduced=5.0)));


// @property(nullable, nonatomic,readonly) UIViewController *presentingViewController __attribute__((availability(ios,introduced=5.0)));






// @property(nonatomic,assign) BOOL definesPresentationContext __attribute__((availability(ios,introduced=5.0)));


// @property(nonatomic,assign) BOOL providesPresentationContextTransitionStyle __attribute__((availability(ios,introduced=5.0)));


// @property (nonatomic) BOOL restoresFocusAfterTransition __attribute__((availability(ios,introduced=10.0)));
// @property(nonatomic, readonly, getter=isBeingPresented) BOOL beingPresented __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic, readonly, getter=isBeingDismissed) BOOL beingDismissed __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic, readonly, getter=isMovingToParentViewController) BOOL movingToParentViewController __attribute__((availability(ios,introduced=5.0)));
// @property(nonatomic, readonly, getter=isMovingFromParentViewController) BOOL movingFromParentViewController __attribute__((availability(ios,introduced=5.0)));






// - (void)presentViewController:(UIViewController *)viewControllerToPresent animated: (BOOL)flag completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5.0)));

// - (void)dismissViewControllerAnimated: (BOOL)flag completion: (void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5.0)));


// - (void)presentModalViewController:(UIViewController *)modalViewController animated:(BOOL)animated __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));


// - (void)dismissModalViewControllerAnimated:(BOOL)animated __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));






// @property(nonatomic,assign) UIModalTransitionStyle modalTransitionStyle __attribute__((availability(ios,introduced=3.0)));






// @property(nonatomic,assign) UIModalPresentationStyle modalPresentationStyle __attribute__((availability(ios,introduced=3.2)));


// @property(nonatomic,assign) BOOL modalPresentationCapturesStatusBarAppearance __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic, readonly) BOOL disablesAutomaticKeyboardDismissal __attribute__((availability(ios,introduced=4.3)));

// @property(nonatomic,assign) BOOL wantsFullScreenLayout __attribute__((availability(ios,introduced=3.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,assign) UIRectEdge edgesForExtendedLayout __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic,assign) BOOL extendedLayoutIncludesOpaqueBars __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic,assign) BOOL automaticallyAdjustsScrollViewInsets __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use UIScrollView's contentInsetAdjustmentBehavior instead"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use UIScrollView's contentInsetAdjustmentBehavior instead")));



// @property (nonatomic) CGSize preferredContentSize __attribute__((availability(ios,introduced=7.0)));


// @property(nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly) BOOL prefersStatusBarHidden __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly) UIStatusBarAnimation preferredStatusBarUpdateAnimation __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));


// - (void)setNeedsStatusBarAppearanceUpdate __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));


// - (nullable UIViewController *)targetViewControllerForAction:(SEL)action sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));



// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));


// - (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));






// @property (nonatomic, readonly) UIUserInterfaceStyle preferredUserInterfaceStyle __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

// - (void)setNeedsUserInterfaceAppearanceUpdate __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface UIViewController (UIViewControllerRotation)



// + (void)attemptRotationToDeviceOrientation __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));


// - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic, readonly) BOOL shouldAutorotate __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));


// - (nullable UIView *)rotatingHeaderView __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Header views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIView *)rotatingFooterView __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Footer views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UIInterfaceOrientation interfaceOrientation __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message=""))) __attribute__((availability(tvos,unavailable)));


// - (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));
// - (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message=""))) __attribute__((availability(tvos,unavailable)));

// - (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));

// - (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface UIViewController (UIViewControllerEditing)

// @property(nonatomic,getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;

// @property(nonatomic, readonly) UIBarButtonItem *editButtonItem;

/* @end */


// @interface UIViewController (UISearchDisplayControllerSupport)

// @property(nullable, nonatomic, readonly, strong) UISearchDisplayController *searchDisplayController __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */








extern "C" __attribute__((visibility ("default"))) NSExceptionName const UIViewControllerHierarchyInconsistencyException __attribute__((availability(ios,introduced=5.0)));






// @interface UIViewController (UIContainerViewControllerProtectedMethods)


// @property(nonatomic,readonly) NSArray<__kindof UIViewController *> *childViewControllers __attribute__((availability(ios,introduced=5.0)));






// - (void)addChildViewController:(UIViewController *)childController __attribute__((availability(ios,introduced=5.0)));





// - (void)removeFromParentViewController __attribute__((availability(ios,introduced=5.0)));
// - (void)transitionFromViewController:(UIViewController *)fromViewController toViewController:(UIViewController *)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=5.0)));






// - (void)beginAppearanceTransition:(BOOL)isAppearing animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));
// - (void)endAppearanceTransition __attribute__((availability(ios,introduced=5.0)));


// @property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarStyle __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarHidden __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));


// - (void)setOverrideTraitCollection:(nullable UITraitCollection *)collection forChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8.0)));
// - (nullable UITraitCollection *)overrideTraitCollectionForChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, readonly, nullable) UIViewController *childViewControllerForUserInterfaceStyle __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


// @interface UIViewController (UIContainerViewControllerCallbacks)
// - (BOOL)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (BOOL)shouldAutomaticallyForwardRotationMethods __attribute__((availability(ios,introduced=6.0,deprecated=8.0,message="Manually forward viewWillTransitionToSize:withTransitionCoordinator: if necessary"))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly) BOOL shouldAutomaticallyForwardAppearanceMethods __attribute__((availability(ios,introduced=6.0)));
// - (void)willMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5.0)));
// - (void)didMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5.0)));

/* @end */


// @interface UIViewController (UIStateRestoration) <UIStateRestoring>
// @property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6.0)));
// @property (nullable, nonatomic, readwrite, assign) Class<UIViewControllerRestoration> restorationClass __attribute__((availability(ios,introduced=6.0)));
// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6.0)));
// - (void) applicationFinishedRestoringState __attribute__((availability(ios,introduced=7.0)));
/* @end */


// @interface UIViewController (UIConstraintBasedLayoutCoreMethods)
// - (void)updateViewConstraints __attribute__((availability(ios,introduced=6.0)));
/* @end */


// @protocol UIViewControllerTransitioningDelegate;

// @interface UIViewController(UIViewControllerTransitioning)

// @property (nullable, nonatomic, weak) id <UIViewControllerTransitioningDelegate> transitioningDelegate __attribute__((availability(ios,introduced=7.0)));

/* @end */


// @interface UIViewController (UILayoutSupport)

// @property(nonatomic,readonly,strong) id<UILayoutSupport> topLayoutGuide __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")));
// @property(nonatomic,readonly,strong) id<UILayoutSupport> bottomLayoutGuide __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")));




// @property(nonatomic) UIEdgeInsets additionalSafeAreaInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));





// @property(nonatomic,readonly) NSDirectionalEdgeInsets systemMinimumLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));





// @property(nonatomic) BOOL viewRespectsSystemMinimumLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// - (void)viewLayoutMarginsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)viewSafeAreaInsetsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface UIViewController (UIKeyCommand)

// - (void)addKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9.0)));
// - (void)removeKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9.0)));

/* @end */


// @interface UIViewController (UIPerformsActions)




// @property (nonatomic, readonly) BOOL performsActionsWhilePresentingModally __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */


// @class NSExtensionContext;
#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif


// @interface UIViewController(NSExtensionAdditions) <NSExtensionRequestHandling>


// @property (nullable, nonatomic,readonly,strong) NSExtensionContext *extensionContext __attribute__((availability(ios,introduced=8.0)));

/* @end */


// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif

#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif


// @interface UIViewController (UIPresentationController)

// @property (nullable, nonatomic,readonly) UIPresentationController *presentationController __attribute__((availability(ios,introduced=8.0)));
// @property (nullable, nonatomic,readonly) UIPopoverPresentationController *popoverPresentationController __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, getter=isModalInPresentation) BOOL modalInPresentation __attribute__((availability(ios,introduced=13.0)));

/* @end */



// @protocol UIViewControllerPreviewingDelegate;

// @protocol UIViewControllerPreviewing <NSObject>


// @property (nonatomic, readonly) UIGestureRecognizer *previewingGestureRecognizerForFailureRelationship __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));

// @property (nonatomic, readonly) id<UIViewControllerPreviewingDelegate> delegate __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));
// @property (nonatomic, readonly) UIView *sourceView __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));




// @property (nonatomic) CGRect sourceRect __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) // @protocol UIViewControllerPreviewingDelegate <NSObject>


// - (nullable UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));
// - (void)previewingContext:(id <UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));

/* @end */


// @interface UIViewController (UIViewControllerPreviewingRegistration)


// - (id <UIViewControllerPreviewing>)registerForPreviewingWithDelegate:(id<UIViewControllerPreviewingDelegate>)delegate sourceView:(UIView *)sourceView __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));
// - (void)unregisterForPreviewingWithContext:(id <UIViewControllerPreviewing>)previewing __attribute__((availability(ios,introduced=9.0,deprecated=13.0,replacement="UIContextMenuInteraction")));

/* @end */


// @interface UIViewController (UIScreenEdgesDeferringSystemGestures)


// @property (nonatomic, readonly, nullable) UIViewController *childViewControllerForScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, readonly) UIRectEdge preferredScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setNeedsUpdateOfScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIViewController (UIHomeIndicatorAutoHidden)


// @property (nonatomic, readonly, nullable) UIViewController *childViewControllerForHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, readonly) BOOL prefersHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setNeedsUpdateOfHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @protocol UIPreviewActionItem;

// @interface UIViewController ()

// @property(nonatomic, readonly) NSArray <id <UIPreviewActionItem>> *previewActionItems __attribute__((availability(ios,introduced=9.0,deprecated=13.0,message="UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")));

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) // @protocol UIPreviewActionItem <NSObject>
// @property(nonatomic, copy, readonly) NSString *title;
/* @end */


typedef NSInteger UIPreviewActionStyle; enum {
    UIPreviewActionStyleDefault=0,
    UIPreviewActionStyleSelected,
    UIPreviewActionStyleDestructive,
} __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0,deprecated=13_0,message="" "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")))
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIPreviewAction
#define _REWRITER_typedef_UIPreviewAction
typedef struct objc_object UIPreviewAction;
typedef struct {} _objc_exc_UIPreviewAction;
#endif

struct UIPreviewAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, copy, readonly) void (^handler)(id<UIPreviewActionItem> action, UIViewController *previewViewController);

// + (instancetype)actionWithTitle:(NSString *)title style:(UIPreviewActionStyle)style handler:(void (^)(UIPreviewAction *action, UIViewController *previewViewController))handler;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0,deprecated=13_0,message="" "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")))
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIPreviewActionGroup
#define _REWRITER_typedef_UIPreviewActionGroup
typedef struct objc_object UIPreviewActionGroup;
typedef struct {} _objc_exc_UIPreviewActionGroup;
#endif

struct UIPreviewActionGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)actionGroupWithTitle:(NSString *)title style:(UIPreviewActionStyle)style actions:(NSArray<UIPreviewAction *> *)actions;
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIAlertActionStyle; enum {
    UIAlertActionStyleDefault = 0,
    UIAlertActionStyleCancel,
    UIAlertActionStyleDestructive
} __attribute__((availability(ios,introduced=8.0)));

typedef NSInteger UIAlertControllerStyle; enum {
    UIAlertControllerStyleActionSheet = 0,
    UIAlertControllerStyleAlert
} __attribute__((availability(ios,introduced=8.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIAlertAction
#define _REWRITER_typedef_UIAlertAction
typedef struct objc_object UIAlertAction;
typedef struct {} _objc_exc_UIAlertAction;
#endif

struct UIAlertAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)actionWithTitle:(nullable NSString *)title style:(UIAlertActionStyle)style handler:(void (^ _Nullable)(UIAlertAction *action))handler;

// @property (nullable, nonatomic, readonly) NSString *title;
// @property (nonatomic, readonly) UIAlertActionStyle style;
// @property (nonatomic, getter=isEnabled) BOOL enabled;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIAlertController
#define _REWRITER_typedef_UIAlertController
typedef struct objc_object UIAlertController;
typedef struct {} _objc_exc_UIAlertController;
#endif

struct UIAlertController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// + (instancetype)alertControllerWithTitle:(nullable NSString *)title message:(nullable NSString *)message preferredStyle:(UIAlertControllerStyle)preferredStyle;

// - (void)addAction:(UIAlertAction *)action;
// @property (nonatomic, readonly) NSArray<UIAlertAction *> *actions;

// @property (nonatomic, strong, nullable) UIAlertAction *preferredAction __attribute__((availability(ios,introduced=9.0)));

// - (void)addTextFieldWithConfigurationHandler:(void (^ _Nullable)(UITextField *textField))configurationHandler;
// @property (nullable, nonatomic, readonly) NSArray<UITextField *> *textFields;

// @property (nullable, nonatomic, copy) NSString *title;
// @property (nullable, nonatomic, copy) NSString *message;

// @property (nonatomic, readonly) UIAlertControllerStyle preferredStyle;

/* @end */



// @interface UIAlertController (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIBarMetrics; enum {
    UIBarMetricsDefault,
    UIBarMetricsCompact,
    UIBarMetricsDefaultPrompt = 101,
    UIBarMetricsCompactPrompt,

    UIBarMetricsLandscapePhone __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use UIBarMetricsCompact instead"))) = UIBarMetricsCompact,
    UIBarMetricsLandscapePhonePrompt __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Use UIBarMetricsCompactPrompt"))) = UIBarMetricsCompactPrompt,
};

typedef NSInteger UIBarPosition; enum {
    UIBarPositionAny = 0,
    UIBarPositionBottom = 1,
    UIBarPositionTop = 2,
    UIBarPositionTopAttached = 3,
} __attribute__((availability(ios,introduced=7.0)));







// @protocol UIBarPositioning <NSObject>
// @property(nonatomic,readonly) UIBarPosition barPosition;
/* @end */


// @protocol UIBarPositioningDelegate <NSObject>
/* @optional */




// - (UIBarPosition)positionForBar:(id <UIBarPositioning>)bar;
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UIBarButtonItemStyle; enum {
    UIBarButtonItemStylePlain,
    UIBarButtonItemStyleBordered __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use UIBarButtonItemStylePlain when minimum deployment target is iOS7 or later"))),
    UIBarButtonItemStyleDone,
};

typedef NSInteger UIBarButtonSystemItem; enum {
    UIBarButtonSystemItemDone,
    UIBarButtonSystemItemCancel,
    UIBarButtonSystemItemEdit,
    UIBarButtonSystemItemSave,
    UIBarButtonSystemItemAdd,
    UIBarButtonSystemItemFlexibleSpace,
    UIBarButtonSystemItemFixedSpace,
    UIBarButtonSystemItemCompose,
    UIBarButtonSystemItemReply,
    UIBarButtonSystemItemAction,
    UIBarButtonSystemItemOrganize,
    UIBarButtonSystemItemBookmarks,
    UIBarButtonSystemItemSearch,
    UIBarButtonSystemItemRefresh,
    UIBarButtonSystemItemStop,
    UIBarButtonSystemItemCamera,
    UIBarButtonSystemItemTrash,
    UIBarButtonSystemItemPlay,
    UIBarButtonSystemItemPause,
    UIBarButtonSystemItemRewind,
    UIBarButtonSystemItemFastForward,
    UIBarButtonSystemItemUndo __attribute__((availability(ios,introduced=3.0))),
    UIBarButtonSystemItemRedo __attribute__((availability(ios,introduced=3.0))),
    UIBarButtonSystemItemPageCurl __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" ))),
    UIBarButtonSystemItemClose __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)))
};

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

struct UIBarButtonItem_IMPL {
	struct UIBarItem_IMPL UIBarItem_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithImage:(nullable UIImage *)image style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithImage:(nullable UIImage *)image landscapeImagePhone:(nullable UIImage *)landscapeImagePhone style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action __attribute__((availability(ios,introduced=5.0)));
// - (instancetype)initWithTitle:(nullable NSString *)title style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithBarButtonSystemItem:(UIBarButtonSystemItem)systemItem target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithCustomView:(UIView *)customView;

// @property(nonatomic) UIBarButtonItemStyle style;
// @property(nonatomic) CGFloat width;
// @property(nullable, nonatomic,copy) NSSet<NSString *> *possibleTitles;
// @property(nullable, nonatomic,strong) __kindof UIView *customView;
// @property(nullable, nonatomic) SEL action;
// @property(nullable, nonatomic,weak) id target;
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nullable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5.0)));



// - (void)setBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (CGFloat)backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)titlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setBackButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)backButtonBackgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// - (void)setBackButtonTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (UIOffset)backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



// - (void)setBackButtonBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (CGFloat)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIBarButtonItem (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIBarButtonItemGroup
#define _REWRITER_typedef_UIBarButtonItemGroup
typedef struct objc_object UIBarButtonItemGroup;
typedef struct {} _objc_exc_UIBarButtonItemGroup;
#endif

struct UIBarButtonItemGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)initWithBarButtonItems:(NSArray<UIBarButtonItem *> *)barButtonItems representativeItem:(nullable UIBarButtonItem *)representativeItem __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItem *> *barButtonItems;





// @property (nonatomic, readwrite, strong, nullable) UIBarButtonItem *representativeItem;


// @property (nonatomic, readonly, assign, getter = isDisplayingRepresentativeItem) BOOL displayingRepresentativeItem;

/* @end */


// @interface UIBarButtonItem (UIBarButtonItemGroup)


// @property (nonatomic, readonly, weak, nullable) UIBarButtonItemGroup *buttonGroup __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin


// @interface NSIndexPath (UIKitAdditions)

// + (instancetype)indexPathForRow:(NSInteger)row inSection:(NSInteger)section;
// + (instancetype)indexPathForItem:(NSInteger)item inSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));


// @property (nonatomic, readonly) NSInteger section;


// @property (nonatomic, readonly) NSInteger row;

// @property (nonatomic, readonly) NSInteger item __attribute__((availability(ios,introduced=6.0)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol UIDataSourceTranslating <NSObject>





// - (NSInteger)presentationSectionIndexForDataSourceSectionIndex:(NSInteger)dataSourceSectionIndex;





// - (NSInteger)dataSourceSectionIndexForPresentationSectionIndex:(NSInteger)presentationSectionIndex;





// - (nullable NSIndexPath *)presentationIndexPathForDataSourceIndexPath:(nullable NSIndexPath *)dataSourceIndexPath;





// - (nullable NSIndexPath *)dataSourceIndexPathForPresentationIndexPath:(nullable NSIndexPath *)presentationIndexPath;




// - (void)performUsingPresentationValues:(void (__attribute__((noescape)) ^)(void))actionsToTranslate __attribute__((swift_name("performUsingPresentationValues(_:)")));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSUInteger UICollectionViewScrollPosition; enum {
    UICollectionViewScrollPositionNone = 0,



    UICollectionViewScrollPositionTop = 1 << 0,
    UICollectionViewScrollPositionCenteredVertically = 1 << 1,
    UICollectionViewScrollPositionBottom = 1 << 2,


    UICollectionViewScrollPositionLeft = 1 << 3,
    UICollectionViewScrollPositionCenteredHorizontally = 1 << 4,
    UICollectionViewScrollPositionRight = 1 << 5
};


typedef NSInteger UICollectionViewReorderingCadence; enum {
    UICollectionViewReorderingCadenceImmediate,
    UICollectionViewReorderingCadenceFast,
    UICollectionViewReorderingCadenceSlow
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

#ifndef _REWRITER_typedef_UICollectionReusableView
#define _REWRITER_typedef_UICollectionReusableView
typedef struct objc_object UICollectionReusableView;
typedef struct {} _objc_exc_UICollectionReusableView;
#endif

#ifndef _REWRITER_typedef_UICollectionViewCell
#define _REWRITER_typedef_UICollectionViewCell
typedef struct objc_object UICollectionViewCell;
typedef struct {} _objc_exc_UICollectionViewCell;
#endif

#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

#ifndef _REWRITER_typedef_UICollectionViewTransitionLayout
#define _REWRITER_typedef_UICollectionViewTransitionLayout
typedef struct objc_object UICollectionViewTransitionLayout;
typedef struct {} _objc_exc_UICollectionViewTransitionLayout;
#endif

#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

// @class UICollectionViewDropProposal;
#ifndef _REWRITER_typedef_UICollectionViewDropProposal
#define _REWRITER_typedef_UICollectionViewDropProposal
typedef struct objc_object UICollectionViewDropProposal;
typedef struct {} _objc_exc_UICollectionViewDropProposal;
#endif

#ifndef _REWRITER_typedef_UICollectionViewPlaceholder
#define _REWRITER_typedef_UICollectionViewPlaceholder
typedef struct objc_object UICollectionViewPlaceholder;
typedef struct {} _objc_exc_UICollectionViewPlaceholder;
#endif

#ifndef _REWRITER_typedef_UICollectionViewDropPlaceholder
#define _REWRITER_typedef_UICollectionViewDropPlaceholder
typedef struct objc_object UICollectionViewDropPlaceholder;
typedef struct {} _objc_exc_UICollectionViewDropPlaceholder;
#endif

// @class UIContextMenuConfiguration;
#ifndef _REWRITER_typedef_UIContextMenuConfiguration
#define _REWRITER_typedef_UIContextMenuConfiguration
typedef struct objc_object UIContextMenuConfiguration;
typedef struct {} _objc_exc_UIContextMenuConfiguration;
#endif

#ifndef _REWRITER_typedef_UITargetedPreview
#define _REWRITER_typedef_UITargetedPreview
typedef struct objc_object UITargetedPreview;
typedef struct {} _objc_exc_UITargetedPreview;
#endif

// @protocol UIContextMenuInteractionCommitAnimating;
// @protocol UIDataSourceTranslating, UISpringLoadedInteractionContext;
// @protocol UIDragSession, UIDropSession;
// @protocol UICollectionViewDragDelegate, UICollectionViewDropDelegate, UICollectionViewDropCoordinator, UICollectionViewDropItem, UICollectionViewDropPlaceholderContext;


typedef void (*UICollectionViewLayoutInteractiveTransitionCompletion)(BOOL completed, BOOL finished);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UICollectionViewFocusUpdateContext
#define _REWRITER_typedef_UICollectionViewFocusUpdateContext
typedef struct objc_object UICollectionViewFocusUpdateContext;
typedef struct {} _objc_exc_UICollectionViewFocusUpdateContext;
#endif

struct UICollectionViewFocusUpdateContext_IMPL {
	struct UIFocusUpdateContext_IMPL UIFocusUpdateContext_IVARS;
};


// @property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
// @property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

/* @end */


// @protocol UICollectionViewDataSource <NSObject>
/* @required */

// - (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section;


// - (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath;

/* @optional */

// - (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView;


// - (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

// - (BOOL)collectionView:(UICollectionView *)collectionView canMoveItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9.0)));
// - (void)collectionView:(UICollectionView *)collectionView moveItemAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath*)destinationIndexPath __attribute__((availability(ios,introduced=9.0)));


// - (nullable NSArray<NSString *> *)indexTitlesForCollectionView:(UICollectionView *)collectionView __attribute__((availability(tvos,introduced=10.2)));



// - (NSIndexPath *)collectionView:(UICollectionView *)collectionView indexPathForIndexTitle:(NSString *)title atIndex:(NSInteger)index __attribute__((availability(tvos,introduced=10.2)));

/* @end */


// @protocol UICollectionViewDataSourcePrefetching <NSObject>
/* @required */

// - (void)collectionView:(UICollectionView *)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10.0)));

/* @optional */

// - (void)collectionView:(UICollectionView *)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10.0)));

/* @end */



// @protocol UICollectionViewDelegate <UIScrollViewDelegate>
/* @optional */
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didUnhighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldDeselectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didDeselectItemAtIndexPath:(NSIndexPath *)indexPath;

// - (void)collectionView:(UICollectionView *)collectionView willDisplayCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8.0)));
// - (void)collectionView:(UICollectionView *)collectionView willDisplaySupplementaryView:(UICollectionReusableView *)view forElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8.0)));
// - (void)collectionView:(UICollectionView *)collectionView didEndDisplayingCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didEndDisplayingSupplementaryView:(UICollectionReusableView *)view forElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;



// - (BOOL)collectionView:(UICollectionView *)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6.0,deprecated=13.0,replacement="collectionView:contextMenuConfigurationForRowAtIndexPath:")));
// - (BOOL)collectionView:(UICollectionView *)collectionView canPerformAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=6.0,deprecated=13.0,replacement="collectionView:contextMenuConfigurationForRowAtIndexPath:")));
// - (void)collectionView:(UICollectionView *)collectionView performAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=6.0,deprecated=13.0,replacement="collectionView:contextMenuConfigurationForRowAtIndexPath:")));


// - (nonnull UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)collectionView transitionLayoutForOldLayout:(UICollectionViewLayout *)fromLayout newLayout:(UICollectionViewLayout *)toLayout;


// - (BOOL)collectionView:(UICollectionView *)collectionView canFocusItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9.0)));
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9.0)));
// - (void)collectionView:(UICollectionView *)collectionView didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9.0)));
// - (nullable NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)collectionView __attribute__((availability(ios,introduced=9.0)));

// - (NSIndexPath *)collectionView:(UICollectionView *)collectionView targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)originalIndexPath toProposedIndexPath:(NSIndexPath *)proposedIndexPath __attribute__((availability(ios,introduced=9.0)));

// - (CGPoint)collectionView:(UICollectionView *)collectionView targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=9.0)));
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldSpringLoadItemAtIndexPath:(NSIndexPath *)indexPath withContext:(id<UISpringLoadedInteractionContext>)context __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







// - (void)collectionView:(UICollectionView *)collectionView didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// - (void)collectionViewDidEndMultipleSelectionInteraction:(UICollectionView *)collectionView __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (nullable UIContextMenuConfiguration *)collectionView:(UICollectionView *)collectionView contextMenuConfigurationForItemAtIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (nullable UITargetedPreview *)collectionView:(UICollectionView *)collectionView previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (nullable UITargetedPreview *)collectionView:(UICollectionView *)collectionView previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)collectionView:(UICollectionView *)collectionView willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)configuration animator:(id<UIContextMenuInteractionCommitAnimating>)animator __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

struct UICollectionView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nonatomic, strong) UICollectionViewLayout *collectionViewLayout;
// @property (nonatomic, weak, nullable) id <UICollectionViewDelegate> delegate;
// @property (nonatomic, weak, nullable) id <UICollectionViewDataSource> dataSource;

// @property (nonatomic, weak, nullable) id<UICollectionViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, getter=isPrefetchingEnabled) BOOL prefetchingEnabled __attribute__((availability(ios,introduced=10.0)));

// @property (nonatomic, weak, nullable) id <UICollectionViewDragDelegate> dragDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, weak, nullable) id <UICollectionViewDropDelegate> dropDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// @property (nonatomic) BOOL dragInteractionEnabled __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property (nonatomic) UICollectionViewReorderingCadence reorderingCadence __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic, strong, nullable) UIView *backgroundView;




// - (void)registerClass:(nullable Class)cellClass forCellWithReuseIdentifier:(NSString *)identifier;
// - (void)registerNib:(nullable UINib *)nib forCellWithReuseIdentifier:(NSString *)identifier;

// - (void)registerClass:(nullable Class)viewClass forSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier;
// - (void)registerNib:(nullable UINib *)nib forSupplementaryViewOfKind:(NSString *)kind withReuseIdentifier:(NSString *)identifier;

// - (__kindof UICollectionViewCell *)dequeueReusableCellWithReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;
// - (__kindof UICollectionReusableView *)dequeueReusableSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;


// @property (nonatomic) BOOL allowsSelection;
// @property (nonatomic) BOOL allowsMultipleSelection;

// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedItems;
// - (void)selectItemAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition;
// - (void)deselectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;


// @property (nonatomic, readonly) BOOL hasUncommittedUpdates __attribute__((availability(ios,introduced=11.0)));


// - (void)reloadData;

// - (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated;
// - (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7.0)));

// - (UICollectionViewTransitionLayout *)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout *)layout completion:(nullable UICollectionViewLayoutInteractiveTransitionCompletion)completion __attribute__((availability(ios,introduced=7.0)));
// - (void)finishInteractiveTransition __attribute__((availability(ios,introduced=7.0)));
// - (void)cancelInteractiveTransition __attribute__((availability(ios,introduced=7.0)));



// @property (nonatomic, readonly) NSInteger numberOfSections;
// - (NSInteger)numberOfItemsInSection:(NSInteger)section;

// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

// - (nullable NSIndexPath *)indexPathForItemAtPoint:(CGPoint)point;
// - (nullable NSIndexPath *)indexPathForCell:(UICollectionViewCell *)cell;

// - (nullable UICollectionViewCell *)cellForItemAtIndexPath:(NSIndexPath *)indexPath;
// @property (nonatomic, readonly) NSArray<__kindof UICollectionViewCell *> *visibleCells;
// @property (nonatomic, readonly) NSArray<NSIndexPath *> *indexPathsForVisibleItems;

// - (nullable UICollectionReusableView *)supplementaryViewForElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9.0)));
// - (NSArray<UICollectionReusableView *> *)visibleSupplementaryViewsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9.0)));
// - (NSArray<NSIndexPath *> *)indexPathsForVisibleSupplementaryElementsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9.0)));



// - (void)scrollToItemAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(BOOL)animated;


// - (void)insertSections:(NSIndexSet *)sections;
// - (void)deleteSections:(NSIndexSet *)sections;
// - (void)reloadSections:(NSIndexSet *)sections;
// - (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection;

// - (void)insertItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)deleteItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)reloadItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)moveItemAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath;

// - (void)performBatchUpdates:(void (__attribute__((noescape)) ^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL finished))completion;


// - (BOOL)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9.0)));
// - (void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition __attribute__((availability(ios,introduced=9.0)));
// - (void)endInteractiveMovement __attribute__((availability(ios,introduced=9.0)));
// - (void)cancelInteractiveMovement __attribute__((availability(ios,introduced=9.0)));


// @property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9.0)));





// @property (nonatomic, readonly) BOOL hasActiveDrag __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, readonly) BOOL hasActiveDrop __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */







// @interface UICollectionView (UIDragAndDrop) <UISpringLoadedInteractionSupporting>
/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDragDelegate <NSObject>

/* @required */




// - (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath;

/* @optional */






// - (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForAddingToDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point;




// - (nullable UIDragPreviewParameters *)collectionView:(UICollectionView *)collectionView dragPreviewParametersForItemAtIndexPath:(NSIndexPath *)indexPath;




// - (void)collectionView:(UICollectionView *)collectionView dragSessionWillBegin:(id<UIDragSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dragSessionDidEnd:(id<UIDragSession>)session;





// - (BOOL)collectionView:(UICollectionView *)collectionView dragSessionAllowsMoveOperation:(id<UIDragSession>)session;





// - (BOOL)collectionView:(UICollectionView *)collectionView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;

/* @end */


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropDelegate <NSObject>

/* @required */







// - (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id<UICollectionViewDropCoordinator>)coordinator;

/* @optional */




// - (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id<UIDropSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidEnter:(id<UIDropSession>)session;
// - (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidExit:(id<UIDropSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidEnd:(id<UIDropSession>)session;







// - (nullable UIDragPreviewParameters *)collectionView:(UICollectionView *)collectionView dropPreviewParametersForItemAtIndexPath:(NSIndexPath *)indexPath;

/* @end */


typedef NSInteger UICollectionViewDropIntent; enum {



    UICollectionViewDropIntentUnspecified,




    UICollectionViewDropIntentInsertAtDestinationIndexPath,




    UICollectionViewDropIntentInsertIntoDestinationIndexPath,

} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewDropProposal
#define _REWRITER_typedef_UICollectionViewDropProposal
typedef struct objc_object UICollectionViewDropProposal;
typedef struct {} _objc_exc_UICollectionViewDropProposal;
#endif

struct UICollectionViewDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation intent:(UICollectionViewDropIntent)intent;



// @property (nonatomic, readonly) UICollectionViewDropIntent intent;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropCoordinator <NSObject>



// @property (nonatomic, readonly) NSArray<id<UICollectionViewDropItem>> *items;




// @property (nonatomic, readonly, nullable) NSIndexPath *destinationIndexPath;



// @property (nonatomic, readonly) UICollectionViewDropProposal *proposal;


// @property (nonatomic, readonly) id<UIDropSession> session;
// - (id<UICollectionViewDropPlaceholderContext>)dropItem:(UIDragItem *)dragItem toPlaceholder:(UICollectionViewDropPlaceholder*)placeholder;






// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toItemAtIndexPath:(NSIndexPath *)indexPath;





// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem intoItemAtIndexPath:(NSIndexPath *)indexPath rect:(CGRect)rect;



// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toTarget:(UIDragPreviewTarget *)target;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewPlaceholder
#define _REWRITER_typedef_UICollectionViewPlaceholder
typedef struct objc_object UICollectionViewPlaceholder;
typedef struct {} _objc_exc_UICollectionViewPlaceholder;
#endif

struct UICollectionViewPlaceholder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithInsertionIndexPath:(NSIndexPath*)insertionIndexPath reuseIdentifier:(NSString *)reuseIdentifier __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property (nonatomic, nullable, copy) void(^cellUpdateHandler)(__kindof UICollectionViewCell *);

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewDropPlaceholder
#define _REWRITER_typedef_UICollectionViewDropPlaceholder
typedef struct objc_object UICollectionViewDropPlaceholder;
typedef struct {} _objc_exc_UICollectionViewDropPlaceholder;
#endif

struct UICollectionViewDropPlaceholder_IMPL {
	struct UICollectionViewPlaceholder_IMPL UICollectionViewPlaceholder_IVARS;
};





// @property (nonatomic, nullable, copy) UIDragPreviewParameters * _Nullable (^previewParametersProvider)(__kindof UICollectionViewCell *);
/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropItem <NSObject>

// @property (nonatomic, readonly) UIDragItem *dragItem;






// @property (nonatomic, readonly, nullable) NSIndexPath *sourceIndexPath;




// @property (nonatomic, readonly) CGSize previewSize;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropPlaceholderContext <UIDragAnimating>



// @property (nonatomic, readonly) UIDragItem *dragItem;







// - (BOOL)commitInsertionWithDataSourceUpdates:(void(__attribute__((noescape)) ^)(NSIndexPath *insertionIndexPath))dataSourceUpdates;





// - (BOOL)deletePlaceholder;





// - (void)setNeedsCellUpdate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollectionViewLayout;
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

// @class UICollectionViewLayoutAttributes;
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

// @class UILongPressGestureRecognizer;
#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif


typedef NSInteger UICollectionViewCellDragState; enum {
    UICollectionViewCellDragStateNone,


    UICollectionViewCellDragStateLifting,





    UICollectionViewCellDragStateDragging
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionReusableView
#define _REWRITER_typedef_UICollectionReusableView
typedef struct objc_object UICollectionReusableView;
typedef struct {} _objc_exc_UICollectionReusableView;
#endif

struct UICollectionReusableView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;




// - (void)prepareForReuse;





// - (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes;


// - (void)willTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;
// - (void)didTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;

// - (UICollectionViewLayoutAttributes *)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes __attribute__((availability(ios,introduced=8.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewCell
#define _REWRITER_typedef_UICollectionViewCell
typedef struct objc_object UICollectionViewCell;
typedef struct {} _objc_exc_UICollectionViewCell;
#endif

struct UICollectionViewCell_IMPL {
	struct UICollectionReusableView_IMPL UICollectionReusableView_IVARS;
};


// @property (nonatomic, readonly) UIView *contentView;





// @property (nonatomic, getter=isSelected) BOOL selected;
// @property (nonatomic, getter=isHighlighted) BOOL highlighted;






// - (void)dragStateDidChange:(UICollectionViewCellDragState)dragState __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, strong, nullable) UIView *backgroundView;
// @property (nonatomic, strong, nullable) UIView *selectedBackgroundView;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollectionViewLayout;
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

// @class UICollectionViewController;
#ifndef _REWRITER_typedef_UICollectionViewController
#define _REWRITER_typedef_UICollectionViewController
typedef struct objc_object UICollectionViewController;
typedef struct {} _objc_exc_UICollectionViewController;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewController
#define _REWRITER_typedef_UICollectionViewController
typedef struct objc_object UICollectionViewController;
typedef struct {} _objc_exc_UICollectionViewController;
#endif

struct UICollectionViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (null_resettable, nonatomic, strong) __kindof UICollectionView *collectionView;



// @property (nonatomic) BOOL clearsSelectionOnViewWillAppear;






// @property (nonatomic, assign) BOOL useLayoutToLayoutNavigationTransitions __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic, readonly) UICollectionViewLayout *collectionViewLayout __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic) BOOL installsStandardGestureForInteractiveMovement __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef NSInteger UICollectionViewScrollDirection; enum {
    UICollectionViewScrollDirectionVertical,
    UICollectionViewScrollDirectionHorizontal
};

typedef NSUInteger UICollectionElementCategory; enum {
    UICollectionElementCategoryCell,
    UICollectionElementCategorySupplementaryView,
    UICollectionElementCategoryDecorationView
};

// @class UICollectionViewLayoutAttributes;
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

// @class UINib;
#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

struct UICollectionViewLayoutAttributes_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic) CGRect frame;
// @property (nonatomic) CGPoint center;
// @property (nonatomic) CGSize size;
// @property (nonatomic) CATransform3D transform3D;
// @property (nonatomic) CGRect bounds __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGAffineTransform transform __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat alpha;
// @property (nonatomic) NSInteger zIndex;
// @property (nonatomic, getter=isHidden) BOOL hidden;
// @property (nonatomic, strong) NSIndexPath *indexPath;

// @property (nonatomic, readonly) UICollectionElementCategory representedElementCategory;
// @property (nonatomic, readonly, nullable) NSString *representedElementKind;

// + (instancetype)layoutAttributesForCellWithIndexPath:(NSIndexPath *)indexPath;
// + (instancetype)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind withIndexPath:(NSIndexPath *)indexPath;
// + (instancetype)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind withIndexPath:(NSIndexPath *)indexPath;

/* @end */


typedef NSInteger UICollectionUpdateAction; enum {
    UICollectionUpdateActionInsert,
    UICollectionUpdateActionDelete,
    UICollectionUpdateActionReload,
    UICollectionUpdateActionMove,
    UICollectionUpdateActionNone
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewUpdateItem
#define _REWRITER_typedef_UICollectionViewUpdateItem
typedef struct objc_object UICollectionViewUpdateItem;
typedef struct {} _objc_exc_UICollectionViewUpdateItem;
#endif

struct UICollectionViewUpdateItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathBeforeUpdate;
// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathAfterUpdate;
// @property (nonatomic, readonly) UICollectionUpdateAction updateAction;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayoutInvalidationContext
#define _REWRITER_typedef_UICollectionViewLayoutInvalidationContext
typedef struct objc_object UICollectionViewLayoutInvalidationContext;
typedef struct {} _objc_exc_UICollectionViewLayoutInvalidationContext;
#endif

struct UICollectionViewLayoutInvalidationContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) BOOL invalidateEverything;
// @property (nonatomic, readonly) BOOL invalidateDataSourceCounts;

// - (void)invalidateItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8.0)));
// - (void)invalidateSupplementaryElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8.0)));
// - (void)invalidateDecorationElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *invalidatedItemIndexPaths __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedSupplementaryIndexPaths __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedDecorationIndexPaths __attribute__((availability(ios,introduced=8.0)));

// @property (nonatomic) CGPoint contentOffsetAdjustment __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic) CGSize contentSizeAdjustment __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *previousIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *targetIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic, readonly) CGPoint interactiveMovementTarget __attribute__((availability(ios,introduced=9.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

struct UICollectionViewLayout_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));




// @property (nullable, nonatomic, readonly) UICollectionView *collectionView;



// - (void)invalidateLayout;
// - (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext *)context __attribute__((availability(ios,introduced=7.0)));

// - (void)registerClass:(nullable Class)viewClass forDecorationViewOfKind:(NSString *)elementKind;
// - (void)registerNib:(nullable UINib *)nib forDecorationViewOfKind:(NSString *)elementKind;

/* @end */


// @interface UICollectionViewLayout (UISubclassingHooks)

@property(class, nonatomic, readonly) Class layoutAttributesClass;
@property(class, nonatomic, readonly) Class invalidationContextClass __attribute__((availability(ios,introduced=7.0)));




// - (void)prepareLayout;





// - (nullable NSArray<__kindof UICollectionViewLayoutAttributes *> *)layoutAttributesForElementsInRect:(CGRect)rect;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString*)elementKind atIndexPath:(NSIndexPath *)indexPath;

// - (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds;
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForBoundsChange:(CGRect)newBounds __attribute__((availability(ios,introduced=7.0)));

// - (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8.0)));
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8.0)));

// - (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity;
// - (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=7.0)));

// @property(nonatomic, readonly) CGSize collectionViewContentSize;

// @property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
// @property(nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;

/* @end */


// @interface UICollectionViewLayout (UIUpdateSupportHooks)




// - (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> *)updateItems;
// - (void)finalizeCollectionViewUpdates;

// - (void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
// - (void)finalizeAnimatedBoundsChange;


// - (void)prepareForTransitionToLayout:(UICollectionViewLayout *)newLayout __attribute__((availability(ios,introduced=7.0)));
// - (void)prepareForTransitionFromLayout:(UICollectionViewLayout *)oldLayout __attribute__((availability(ios,introduced=7.0)));
// - (void)finalizeLayoutTransition __attribute__((availability(ios,introduced=7.0)));





// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;



// - (NSArray<NSIndexPath *> *)indexPathsToDeleteForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7.0)));
// - (NSArray<NSIndexPath *> *)indexPathsToDeleteForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7.0)));
// - (NSArray<NSIndexPath *> *)indexPathsToInsertForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7.0)));
// - (NSArray<NSIndexPath *> *)indexPathsToInsertForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7.0)));

/* @end */


// @interface UICollectionViewLayout (UIReorderingSupportHooks)

// - (NSIndexPath *)targetIndexPathForInteractivelyMovingItem:(NSIndexPath *)previousIndexPath withPosition:(CGPoint)position __attribute__((availability(ios,introduced=9.0)));
// - (UICollectionViewLayoutAttributes *)layoutAttributesForInteractivelyMovingItemAtIndexPath:(NSIndexPath *)indexPath withTargetPosition:(CGPoint)position __attribute__((availability(ios,introduced=9.0)));

// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForInteractivelyMovingItems:(NSArray<NSIndexPath *> *)targetIndexPaths withTargetPosition:(CGPoint)targetPosition previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths previousPosition:(CGPoint)previousPosition __attribute__((availability(ios,introduced=9.0)));
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:(NSArray<NSIndexPath *> *)indexPaths previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths movementCancelled:(BOOL)movementCancelled __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionHeader __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionFooter __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) const CGSize UICollectionViewFlowLayoutAutomaticSize __attribute__((availability(ios,introduced=10.0)));

typedef NSInteger UICollectionViewFlowLayoutSectionInsetReference; enum {
    UICollectionViewFlowLayoutSectionInsetFromContentInset,
    UICollectionViewFlowLayoutSectionInsetFromSafeArea,
    UICollectionViewFlowLayoutSectionInsetFromLayoutMargins
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UICollectionViewFlowLayoutInvalidationContext
#define _REWRITER_typedef_UICollectionViewFlowLayoutInvalidationContext
typedef struct objc_object UICollectionViewFlowLayoutInvalidationContext;
typedef struct {} _objc_exc_UICollectionViewFlowLayoutInvalidationContext;
#endif

struct UICollectionViewFlowLayoutInvalidationContext_IMPL {
	struct UICollectionViewLayoutInvalidationContext_IMPL UICollectionViewLayoutInvalidationContext_IVARS;
};


// @property (nonatomic) BOOL invalidateFlowLayoutDelegateMetrics;
// @property (nonatomic) BOOL invalidateFlowLayoutAttributes;

/* @end */


// @protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>
/* @optional */

// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;
// - (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;
// - (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;
// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;
// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UICollectionViewFlowLayout
#define _REWRITER_typedef_UICollectionViewFlowLayout
typedef struct objc_object UICollectionViewFlowLayout;
typedef struct {} _objc_exc_UICollectionViewFlowLayout;
#endif

struct UICollectionViewFlowLayout_IMPL {
	struct UICollectionViewLayout_IMPL UICollectionViewLayout_IVARS;
};


// @property (nonatomic) CGFloat minimumLineSpacing;
// @property (nonatomic) CGFloat minimumInteritemSpacing;
// @property (nonatomic) CGSize itemSize;
// @property (nonatomic) CGSize estimatedItemSize __attribute__((availability(ios,introduced=8.0)));
// @property (nonatomic) UICollectionViewScrollDirection scrollDirection;
// @property (nonatomic) CGSize headerReferenceSize;
// @property (nonatomic) CGSize footerReferenceSize;
// @property (nonatomic) UIEdgeInsets sectionInset;



// @property (nonatomic) UICollectionViewFlowLayoutSectionInsetReference sectionInsetReference __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic) BOOL sectionHeadersPinToVisibleBounds __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic) BOOL sectionFootersPinToVisibleBounds __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UICollectionViewTransitionLayout
#define _REWRITER_typedef_UICollectionViewTransitionLayout
typedef struct objc_object UICollectionViewTransitionLayout;
typedef struct {} _objc_exc_UICollectionViewTransitionLayout;
#endif

struct UICollectionViewTransitionLayout_IMPL {
	struct UICollectionViewLayout_IMPL UICollectionViewLayout_IVARS;
};


// @property (assign, nonatomic) CGFloat transitionProgress;
// @property (readonly, nonatomic) UICollectionViewLayout *currentLayout;
// @property (readonly, nonatomic) UICollectionViewLayout *nextLayout;

// - (instancetype)initWithCurrentLayout:(UICollectionViewLayout *)currentLayout nextLayout:(UICollectionViewLayout *)newLayout __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));

// - (void)updateValue:(CGFloat)value forAnimatedKey:(NSString *)key;
// - (CGFloat)valueForAnimatedKey:(NSString *)key;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSCollectionLayoutSection;
#ifndef _REWRITER_typedef_NSCollectionLayoutSection
#define _REWRITER_typedef_NSCollectionLayoutSection
typedef struct objc_object NSCollectionLayoutSection;
typedef struct {} _objc_exc_NSCollectionLayoutSection;
#endif

// @class NSCollectionLayoutGroup;
#ifndef _REWRITER_typedef_NSCollectionLayoutGroup
#define _REWRITER_typedef_NSCollectionLayoutGroup
typedef struct objc_object NSCollectionLayoutGroup;
typedef struct {} _objc_exc_NSCollectionLayoutGroup;
#endif

// @class NSCollectionLayoutItem;
#ifndef _REWRITER_typedef_NSCollectionLayoutItem
#define _REWRITER_typedef_NSCollectionLayoutItem
typedef struct objc_object NSCollectionLayoutItem;
typedef struct {} _objc_exc_NSCollectionLayoutItem;
#endif

// @class NSCollectionLayoutSupplementaryItem;
#ifndef _REWRITER_typedef_NSCollectionLayoutSupplementaryItem
#define _REWRITER_typedef_NSCollectionLayoutSupplementaryItem
typedef struct objc_object NSCollectionLayoutSupplementaryItem;
typedef struct {} _objc_exc_NSCollectionLayoutSupplementaryItem;
#endif

// @class NSCollectionLayoutBoundarySupplementaryItem;
#ifndef _REWRITER_typedef_NSCollectionLayoutBoundarySupplementaryItem
#define _REWRITER_typedef_NSCollectionLayoutBoundarySupplementaryItem
typedef struct objc_object NSCollectionLayoutBoundarySupplementaryItem;
typedef struct {} _objc_exc_NSCollectionLayoutBoundarySupplementaryItem;
#endif

// @class NSCollectionLayoutDecorationItem;
#ifndef _REWRITER_typedef_NSCollectionLayoutDecorationItem
#define _REWRITER_typedef_NSCollectionLayoutDecorationItem
typedef struct objc_object NSCollectionLayoutDecorationItem;
typedef struct {} _objc_exc_NSCollectionLayoutDecorationItem;
#endif


// @class NSCollectionLayoutSize;
#ifndef _REWRITER_typedef_NSCollectionLayoutSize
#define _REWRITER_typedef_NSCollectionLayoutSize
typedef struct objc_object NSCollectionLayoutSize;
typedef struct {} _objc_exc_NSCollectionLayoutSize;
#endif

// @class NSCollectionLayoutDimension;
#ifndef _REWRITER_typedef_NSCollectionLayoutDimension
#define _REWRITER_typedef_NSCollectionLayoutDimension
typedef struct objc_object NSCollectionLayoutDimension;
typedef struct {} _objc_exc_NSCollectionLayoutDimension;
#endif

// @class NSCollectionLayoutSpacing;
#ifndef _REWRITER_typedef_NSCollectionLayoutSpacing
#define _REWRITER_typedef_NSCollectionLayoutSpacing
typedef struct objc_object NSCollectionLayoutSpacing;
typedef struct {} _objc_exc_NSCollectionLayoutSpacing;
#endif

// @class NSCollectionLayoutEdgeSpacing;
#ifndef _REWRITER_typedef_NSCollectionLayoutEdgeSpacing
#define _REWRITER_typedef_NSCollectionLayoutEdgeSpacing
typedef struct objc_object NSCollectionLayoutEdgeSpacing;
typedef struct {} _objc_exc_NSCollectionLayoutEdgeSpacing;
#endif

// @class NSCollectionLayoutAnchor;
#ifndef _REWRITER_typedef_NSCollectionLayoutAnchor
#define _REWRITER_typedef_NSCollectionLayoutAnchor
typedef struct objc_object NSCollectionLayoutAnchor;
typedef struct {} _objc_exc_NSCollectionLayoutAnchor;
#endif


// @protocol NSCollectionLayoutEnvironment;
// @protocol NSCollectionLayoutContainer;
// @protocol NSCollectionLayoutVisibleItem;


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UICollectionViewCompositionalLayoutConfiguration
#define _REWRITER_typedef_UICollectionViewCompositionalLayoutConfiguration
typedef struct objc_object UICollectionViewCompositionalLayoutConfiguration;
typedef struct {} _objc_exc_UICollectionViewCompositionalLayoutConfiguration;
#endif

struct UICollectionViewCompositionalLayoutConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property(nonatomic) UICollectionViewScrollDirection scrollDirection;
// @property(nonatomic) CGFloat interSectionSpacing;
// @property(nonatomic,copy) NSArray<NSCollectionLayoutBoundarySupplementaryItem*> *boundarySupplementaryItems;
/* @end */


typedef NSCollectionLayoutSection * _Nullable (*UICollectionViewCompositionalLayoutSectionProvider)(NSInteger section, id/*<NSCollectionLayoutEnvironment>*/);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UICollectionViewCompositionalLayout
#define _REWRITER_typedef_UICollectionViewCompositionalLayout
typedef struct objc_object UICollectionViewCompositionalLayout;
typedef struct {} _objc_exc_UICollectionViewCompositionalLayout;
#endif

struct UICollectionViewCompositionalLayout_IMPL {
	struct UICollectionViewLayout_IMPL UICollectionViewLayout_IVARS;
};

// - (instancetype)initWithSection:(NSCollectionLayoutSection*)section;
// - (instancetype)initWithSection:(NSCollectionLayoutSection*)section configuration:(UICollectionViewCompositionalLayoutConfiguration*)configuration;

// - (instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider)sectionProvider;
// - (instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider)sectionProvider configuration:(UICollectionViewCompositionalLayoutConfiguration*)configuration;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property(nonatomic,copy) UICollectionViewCompositionalLayoutConfiguration *configuration;
/* @end */


typedef NSInteger UICollectionLayoutSectionOrthogonalScrollingBehavior; enum {

    UICollectionLayoutSectionOrthogonalScrollingBehaviorNone,




    UICollectionLayoutSectionOrthogonalScrollingBehaviorContinuous,


    UICollectionLayoutSectionOrthogonalScrollingBehaviorContinuousGroupLeadingBoundary,


    UICollectionLayoutSectionOrthogonalScrollingBehaviorPaging,


    UICollectionLayoutSectionOrthogonalScrollingBehaviorGroupPaging,


    UICollectionLayoutSectionOrthogonalScrollingBehaviorGroupPagingCentered,
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

typedef void (*NSCollectionLayoutSectionVisibleItemsInvalidationHandler)(NSArray/*<id<NSCollectionLayoutVisibleItem>*/> *visibleItems, CGPoint contentOffset, id/*<NSCollectionLayoutEnvironment>*/ layoutEnvironment);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutSection
#define _REWRITER_typedef_NSCollectionLayoutSection
typedef struct objc_object NSCollectionLayoutSection;
typedef struct {} _objc_exc_NSCollectionLayoutSection;
#endif

struct NSCollectionLayoutSection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)sectionWithGroup:(NSCollectionLayoutGroup*)group;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic) NSDirectionalEdgeInsets contentInsets;
// @property(nonatomic) CGFloat interGroupSpacing;


// @property(nonatomic) UICollectionLayoutSectionOrthogonalScrollingBehavior orthogonalScrollingBehavior;


// @property(nonatomic,copy) NSArray<NSCollectionLayoutBoundarySupplementaryItem*> *boundarySupplementaryItems;


// @property(nonatomic) BOOL supplementariesFollowContentInsets;


// @property(nonatomic,copy,nullable) NSCollectionLayoutSectionVisibleItemsInvalidationHandler visibleItemsInvalidationHandler;


// @property(nonatomic,copy) NSArray<NSCollectionLayoutDecorationItem*> *decorationItems;
/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutItem
#define _REWRITER_typedef_NSCollectionLayoutItem
typedef struct objc_object NSCollectionLayoutItem;
typedef struct {} _objc_exc_NSCollectionLayoutItem;
#endif

struct NSCollectionLayoutItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)itemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize;
// + (instancetype)itemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize supplementaryItems:(NSArray<NSCollectionLayoutSupplementaryItem*>*)supplementaryItems;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));
// @property(nonatomic) NSDirectionalEdgeInsets contentInsets;
// @property(nonatomic,copy,nullable) NSCollectionLayoutEdgeSpacing *edgeSpacing;

// @property(nonatomic,readonly) NSCollectionLayoutSize *layoutSize;
// @property(nonatomic,readonly) NSArray<NSCollectionLayoutSupplementaryItem*> *supplementaryItems;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutGroupCustomItem
#define _REWRITER_typedef_NSCollectionLayoutGroupCustomItem
typedef struct objc_object NSCollectionLayoutGroupCustomItem;
typedef struct {} _objc_exc_NSCollectionLayoutGroupCustomItem;
#endif

struct NSCollectionLayoutGroupCustomItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)customItemWithFrame:(CGRect)frame;
// + (instancetype)customItemWithFrame:(CGRect)frame zIndex:(NSInteger)zIndex;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly) CGRect frame;
// @property(nonatomic,readonly) NSInteger zIndex;
/* @end */


typedef NSArray<NSCollectionLayoutGroupCustomItem*> * _Nonnull(*NSCollectionLayoutGroupCustomItemProvider)(id/*<NSCollectionLayoutEnvironment>*/ layoutEnvironment);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutGroup
#define _REWRITER_typedef_NSCollectionLayoutGroup
typedef struct objc_object NSCollectionLayoutGroup;
typedef struct {} _objc_exc_NSCollectionLayoutGroup;
#endif

struct NSCollectionLayoutGroup_IMPL {
	struct NSCollectionLayoutItem_IMPL NSCollectionLayoutItem_IVARS;
};

// + (instancetype)horizontalGroupWithLayoutSize:(NSCollectionLayoutSize*)layoutSize subitem:(NSCollectionLayoutItem*)subitem count:(NSInteger)count;



// + (instancetype)horizontalGroupWithLayoutSize:(NSCollectionLayoutSize*)layoutSize subitems:(NSArray<NSCollectionLayoutItem*>*)subitems;
// + (instancetype)verticalGroupWithLayoutSize:(NSCollectionLayoutSize*)layoutSize subitem:(NSCollectionLayoutItem*)subitem count:(NSInteger)count;



// + (instancetype)verticalGroupWithLayoutSize:(NSCollectionLayoutSize*)layoutSize subitems:(NSArray<NSCollectionLayoutItem*>*)subitems;





// + (instancetype)customGroupWithLayoutSize:(NSCollectionLayoutSize*)layoutSize itemProvider:(NSCollectionLayoutGroupCustomItemProvider)itemProvider;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));


// @property(nonatomic,copy) NSArray<NSCollectionLayoutSupplementaryItem*> *supplementaryItems;


// @property(nonatomic,copy,nullable) NSCollectionLayoutSpacing *interItemSpacing;

// @property(nonatomic,readonly) NSArray<NSCollectionLayoutItem*> *subitems;


// - (NSString*)visualDescription;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutDimension
#define _REWRITER_typedef_NSCollectionLayoutDimension
typedef struct objc_object NSCollectionLayoutDimension;
typedef struct {} _objc_exc_NSCollectionLayoutDimension;
#endif

struct NSCollectionLayoutDimension_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)fractionalWidthDimension:(CGFloat)fractionalWidth;


// + (instancetype)fractionalHeightDimension:(CGFloat)fractionalHeight;


// + (instancetype)absoluteDimension:(CGFloat)absoluteDimension;


// + (instancetype)estimatedDimension:(CGFloat)estimatedDimension;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly) BOOL isFractionalWidth;
// @property(nonatomic,readonly) BOOL isFractionalHeight;
// @property(nonatomic,readonly) BOOL isAbsolute;
// @property(nonatomic,readonly) BOOL isEstimated;
// @property(nonatomic,readonly) CGFloat dimension;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutSize
#define _REWRITER_typedef_NSCollectionLayoutSize
typedef struct objc_object NSCollectionLayoutSize;
typedef struct {} _objc_exc_NSCollectionLayoutSize;
#endif

struct NSCollectionLayoutSize_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)sizeWithWidthDimension:(NSCollectionLayoutDimension*)width heightDimension:(NSCollectionLayoutDimension*)height;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly) NSCollectionLayoutDimension *widthDimension;
// @property(nonatomic,readonly) NSCollectionLayoutDimension *heightDimension;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutSpacing
#define _REWRITER_typedef_NSCollectionLayoutSpacing
typedef struct objc_object NSCollectionLayoutSpacing;
typedef struct {} _objc_exc_NSCollectionLayoutSpacing;
#endif

struct NSCollectionLayoutSpacing_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)flexibleSpacing:(CGFloat)flexibleSpacing;
// + (instancetype)fixedSpacing:(CGFloat)fixedSpacing;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly) CGFloat spacing;
// @property(nonatomic,readonly) BOOL isFlexibleSpacing;
// @property(nonatomic,readonly) BOOL isFixedSpacing;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutEdgeSpacing
#define _REWRITER_typedef_NSCollectionLayoutEdgeSpacing
typedef struct objc_object NSCollectionLayoutEdgeSpacing;
typedef struct {} _objc_exc_NSCollectionLayoutEdgeSpacing;
#endif

struct NSCollectionLayoutEdgeSpacing_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (instancetype)spacingForLeading:(nullable NSCollectionLayoutSpacing *)leading
                              top:(nullable NSCollectionLayoutSpacing *)top
                         trailing:(nullable NSCollectionLayoutSpacing *)trailing
                           bottom:(nullable NSCollectionLayoutSpacing *)bottom;
#endif


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly,nullable) NSCollectionLayoutSpacing *leading;
// @property(nonatomic,readonly,nullable) NSCollectionLayoutSpacing *top;
// @property(nonatomic,readonly,nullable) NSCollectionLayoutSpacing *trailing;
// @property(nonatomic,readonly,nullable) NSCollectionLayoutSpacing *bottom;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutSupplementaryItem
#define _REWRITER_typedef_NSCollectionLayoutSupplementaryItem
typedef struct objc_object NSCollectionLayoutSupplementaryItem;
typedef struct {} _objc_exc_NSCollectionLayoutSupplementaryItem;
#endif

struct NSCollectionLayoutSupplementaryItem_IMPL {
	struct NSCollectionLayoutItem_IMPL NSCollectionLayoutItem_IVARS;
};

// + (instancetype)supplementaryItemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize elementKind:(NSString*)elementKind containerAnchor:(NSCollectionLayoutAnchor*)containerAnchor;
// + (instancetype)supplementaryItemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize elementKind:(NSString*)elementKind containerAnchor:(NSCollectionLayoutAnchor*)containerAnchor itemAnchor:(NSCollectionLayoutAnchor*)itemAnchor;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic) NSInteger zIndex;

// @property(nonatomic,readonly) NSString *elementKind;
// @property(nonatomic,readonly) NSCollectionLayoutAnchor *containerAnchor;
// @property(nonatomic,readonly,nullable) NSCollectionLayoutAnchor *itemAnchor;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutBoundarySupplementaryItem
#define _REWRITER_typedef_NSCollectionLayoutBoundarySupplementaryItem
typedef struct objc_object NSCollectionLayoutBoundarySupplementaryItem;
typedef struct {} _objc_exc_NSCollectionLayoutBoundarySupplementaryItem;
#endif

struct NSCollectionLayoutBoundarySupplementaryItem_IMPL {
	struct NSCollectionLayoutSupplementaryItem_IMPL NSCollectionLayoutSupplementaryItem_IVARS;
};

// + (instancetype)boundarySupplementaryItemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize elementKind:(NSString*)elementKind alignment:(NSRectAlignment)alignment;
// + (instancetype)boundarySupplementaryItemWithLayoutSize:(NSCollectionLayoutSize*)layoutSize elementKind:(NSString*)elementKind alignment:(NSRectAlignment)alignment absoluteOffset:(CGPoint)absoluteOffset;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property(nonatomic) BOOL extendsBoundary;



// @property(nonatomic) BOOL pinToVisibleBounds;

// @property(nonatomic,readonly) NSRectAlignment alignment;
// @property(nonatomic,readonly) CGPoint offset;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutDecorationItem
#define _REWRITER_typedef_NSCollectionLayoutDecorationItem
typedef struct objc_object NSCollectionLayoutDecorationItem;
typedef struct {} _objc_exc_NSCollectionLayoutDecorationItem;
#endif

struct NSCollectionLayoutDecorationItem_IMPL {
	struct NSCollectionLayoutItem_IMPL NSCollectionLayoutItem_IVARS;
};

// + (instancetype)backgroundDecorationItemWithElementKind:(NSString*)elementKind;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic) NSInteger zIndex;

// @property(nonatomic,readonly) NSString *elementKind;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSCollectionLayoutAnchor
#define _REWRITER_typedef_NSCollectionLayoutAnchor
typedef struct objc_object NSCollectionLayoutAnchor;
typedef struct {} _objc_exc_NSCollectionLayoutAnchor;
#endif

struct NSCollectionLayoutAnchor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges;
// + (instancetype)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges absoluteOffset:(CGPoint)absoluteOffset;
// + (instancetype)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges fractionalOffset:(CGPoint)fractionalOffset;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,readonly) NSDirectionalRectEdge edges;
// @property(nonatomic,readonly) CGPoint offset;
// @property(nonatomic,readonly) BOOL isAbsoluteOffset;
// @property(nonatomic,readonly) BOOL isFractionalOffset;
/* @end */


__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))
// @protocol NSCollectionLayoutContainer<NSObject>
// @property(nonatomic,readonly) CGSize contentSize;
// @property(nonatomic,readonly) CGSize effectiveContentSize;
// @property(nonatomic,readonly) NSDirectionalEdgeInsets contentInsets;
// @property(nonatomic,readonly) NSDirectionalEdgeInsets effectiveContentInsets;
/* @end */


__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))
// @protocol NSCollectionLayoutEnvironment<NSObject>
// @property(nonatomic,readonly) id<NSCollectionLayoutContainer> container;
// @property(nonatomic,readonly) UITraitCollection *traitCollection;
/* @end */


__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))
// @protocol NSCollectionLayoutVisibleItem<NSObject,UIDynamicItem>
// @property(nonatomic) CGFloat alpha;
// @property(nonatomic) NSInteger zIndex;
// @property(nonatomic, getter=isHidden) BOOL hidden;
// @property(nonatomic) CGPoint center;
// @property(nonatomic) CGAffineTransform transform;
// @property(nonatomic) CATransform3D transform3D;

// @property(nonatomic,readonly) NSString *name;
// @property(nonatomic,readonly) NSIndexPath *indexPath;
// @property(nonatomic,readonly) CGRect frame;
// @property(nonatomic,readonly) CGRect bounds;
// @property(nonatomic,readonly) UICollectionElementCategory representedElementCategory;
// @property(nonatomic,readonly,nullable) NSString *representedElementKind;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UIGestureRecognizerDelegate;
// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif


typedef NSInteger UIGestureRecognizerState; enum {
    UIGestureRecognizerStatePossible,

    UIGestureRecognizerStateBegan,
    UIGestureRecognizerStateChanged,
    UIGestureRecognizerStateEnded,
    UIGestureRecognizerStateCancelled,

    UIGestureRecognizerStateFailed,


    UIGestureRecognizerStateRecognized = UIGestureRecognizerStateEnded
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

struct UIGestureRecognizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithTarget:(nullable id)target action:(nullable SEL)action __attribute__((objc_designated_initializer));

// - (instancetype)init;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder;

// - (void)addTarget:(id)target action:(SEL)action;
// - (void)removeTarget:(nullable id)target action:(nullable SEL)action;

// @property(nonatomic,readonly) UIGestureRecognizerState state;

// @property(nullable,nonatomic,weak) id <UIGestureRecognizerDelegate> delegate;

// @property(nonatomic, getter=isEnabled) BOOL enabled;


// @property(nullable, nonatomic,readonly) UIView *view;

// @property(nonatomic) BOOL cancelsTouchesInView;
// @property(nonatomic) BOOL delaysTouchesBegan;
// @property(nonatomic) BOOL delaysTouchesEnded;

// @property(nonatomic, copy) NSArray<NSNumber *> *allowedTouchTypes __attribute__((availability(ios,introduced=9.0)));
// @property(nonatomic, copy) NSArray<NSNumber *> *allowedPressTypes __attribute__((availability(ios,introduced=9.0)));




// @property (nonatomic) BOOL requiresExclusiveTouchType __attribute__((availability(ios,introduced=9.2)));




// - (void)requireGestureRecognizerToFail:(UIGestureRecognizer *)otherGestureRecognizer;


// - (CGPoint)locationInView:(nullable UIView*)view;

// @property(nonatomic, readonly) NSUInteger numberOfTouches;
// - (CGPoint)locationOfTouch:(NSUInteger)touchIndex inView:(nullable UIView*)view;

// @property (nullable, nonatomic, copy) NSString *name __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */



// @protocol UIGestureRecognizerDelegate <NSObject>
/* @optional */

// - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer;





// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer;





// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7.0)));
// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7.0)));


// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch;


// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceivePress:(UIPress *)press;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
typedef NSUInteger UISwipeGestureRecognizerDirection; enum {
    UISwipeGestureRecognizerDirectionRight = 1 << 0,
    UISwipeGestureRecognizerDirectionLeft = 1 << 1,
    UISwipeGestureRecognizerDirectionUp = 1 << 2,
    UISwipeGestureRecognizerDirectionDown = 1 << 3
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UISwipeGestureRecognizer
#define _REWRITER_typedef_UISwipeGestureRecognizer
typedef struct objc_object UISwipeGestureRecognizer;
typedef struct {} _objc_exc_UISwipeGestureRecognizer;
#endif

struct UISwipeGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property(nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UISwipeGestureRecognizerDirection direction;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIContextualAction;
#ifndef _REWRITER_typedef_UIContextualAction
#define _REWRITER_typedef_UIContextualAction
typedef struct objc_object UIContextualAction;
typedef struct {} _objc_exc_UIContextualAction;
#endif




typedef void (*UIContextualActionHandler)(UIContextualAction *action, __kindof UIView *sourceView, void(^completionHandler)(BOOL actionPerformed));

typedef NSInteger UIContextualActionStyle; enum {
    UIContextualActionStyleNormal,
    UIContextualActionStyleDestructive
} __attribute__((swift_name("UIContextualAction.Style"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIContextualAction
#define _REWRITER_typedef_UIContextualAction
typedef struct objc_object UIContextualAction;
typedef struct {} _objc_exc_UIContextualAction;
#endif

struct UIContextualAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)contextualActionWithStyle:(UIContextualActionStyle)style title:(nullable NSString *)title handler:(UIContextualActionHandler)handler;

// @property (nonatomic, readonly) UIContextualActionStyle style;
// @property (nonatomic, copy, readonly) UIContextualActionHandler handler;

// @property (nonatomic, copy, nullable) NSString *title;
// @property (nonatomic, copy, null_resettable) UIColor *backgroundColor;
// @property (nonatomic, copy, nullable) UIImage *image;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISwipeActionsConfiguration
#define _REWRITER_typedef_UISwipeActionsConfiguration
typedef struct objc_object UISwipeActionsConfiguration;
typedef struct {} _objc_exc_UISwipeActionsConfiguration;
#endif

struct UISwipeActionsConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)configurationWithActions:(NSArray<UIContextualAction *> *)actions;

// @property (nonatomic, copy, readonly) NSArray<UIContextualAction *> *actions;
// @property (nonatomic) BOOL performsFirstActionWithFullSwipe;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif


typedef NSInteger UITableViewCellStyle; enum {
    UITableViewCellStyleDefault,
    UITableViewCellStyleValue1,
    UITableViewCellStyleValue2,
    UITableViewCellStyleSubtitle
};

typedef NSInteger UITableViewCellSeparatorStyle; enum {
    UITableViewCellSeparatorStyleNone,
    UITableViewCellSeparatorStyleSingleLine,
    UITableViewCellSeparatorStyleSingleLineEtched __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" "Use UITableViewCellSeparatorStyleSingleLine for a single line separator.")))
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UITableViewCellSelectionStyle; enum {
    UITableViewCellSelectionStyleNone,
    UITableViewCellSelectionStyleBlue,
    UITableViewCellSelectionStyleGray,
    UITableViewCellSelectionStyleDefault __attribute__((availability(ios,introduced=7.0)))
};

typedef NSInteger UITableViewCellFocusStyle; enum {
    UITableViewCellFocusStyleDefault,
    UITableViewCellFocusStyleCustom
} __attribute__((availability(ios,introduced=9.0)));

typedef NSInteger UITableViewCellEditingStyle; enum {
    UITableViewCellEditingStyleNone,
    UITableViewCellEditingStyleDelete,
    UITableViewCellEditingStyleInsert
};

typedef NSInteger UITableViewCellAccessoryType; enum {
    UITableViewCellAccessoryNone,
    UITableViewCellAccessoryDisclosureIndicator,
    UITableViewCellAccessoryDetailDisclosureButton __attribute__((availability(tvos,unavailable))),
    UITableViewCellAccessoryCheckmark,
    UITableViewCellAccessoryDetailButton __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)))
};

typedef NSUInteger UITableViewCellStateMask; enum {
    UITableViewCellStateDefaultMask = 0,
    UITableViewCellStateShowingEditControlMask = 1 << 0,
    UITableViewCellStateShowingDeleteConfirmationMask = 1 << 1
};

typedef NSInteger UITableViewCellDragState; enum {
    UITableViewCellDragStateNone,
    UITableViewCellDragStateLifting,
    UITableViewCellDragStateDragging
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITableViewCell
#define _REWRITER_typedef_UITableViewCell
typedef struct objc_object UITableViewCell;
typedef struct {} _objc_exc_UITableViewCell;
#endif

struct UITableViewCell_IMPL {
	struct UIView_IMPL UIView_IVARS;
};



// - (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=3.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (nonatomic, readonly, strong, nullable) UIImageView *imageView __attribute__((availability(ios,introduced=3.0)));

// @property (nonatomic, readonly, strong, nullable) UILabel *textLabel __attribute__((availability(ios,introduced=3.0)));
// @property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel __attribute__((availability(ios,introduced=3.0)));


// @property (nonatomic, readonly, strong) UIView *contentView;


// @property (nonatomic, strong, nullable) UIView *backgroundView;


// @property (nonatomic, strong, nullable) UIView *selectedBackgroundView;


// @property (nonatomic, strong, nullable) UIView *multipleSelectionBackgroundView __attribute__((availability(ios,introduced=5.0)));

// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;
// - (void)prepareForReuse __attribute__((objc_requires_super));

// @property (nonatomic) UITableViewCellSelectionStyle selectionStyle;
// @property (nonatomic, getter=isSelected) BOOL selected;
// @property (nonatomic, getter=isHighlighted) BOOL highlighted;
// - (void)setSelected:(BOOL)selected animated:(BOOL)animated;
// - (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;

// @property (nonatomic, readonly) UITableViewCellEditingStyle editingStyle;
// @property (nonatomic) BOOL showsReorderControl;
// @property (nonatomic) BOOL shouldIndentWhileEditing;

// @property (nonatomic) UITableViewCellAccessoryType accessoryType;
// @property (nonatomic, strong, nullable) UIView *accessoryView;
// @property (nonatomic) UITableViewCellAccessoryType editingAccessoryType;
// @property (nonatomic, strong, nullable) UIView *editingAccessoryView;

// @property (nonatomic) NSInteger indentationLevel;
// @property (nonatomic) CGFloat indentationWidth;
// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;

// @property(nonatomic, readonly) BOOL showingDeleteConfirmation;

// @property (nonatomic) UITableViewCellFocusStyle focusStyle __attribute__((availability(ios,introduced=9.0))) __attribute__((annotate("ui_appearance_selector")));




// - (void)willTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3.0)));
// - (void)didTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3.0)));




// - (void)dragStateDidChange:(UITableViewCellDragState)dragState __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property (nonatomic) BOOL userInteractionEnabledWhileDragging __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


// @interface UITableViewCell (UIDeprecated)


// - (id)initWithFrame:(CGRect)frame reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));



// @property (nonatomic, copy, nullable) NSString *text __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIFont *font __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSTextAlignment textAlignment __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *textColor __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *selectedTextColor __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, strong, nullable) UIImage *image __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIImage *selectedImage __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) BOOL hidesAccessoryWhenEditing __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, nullable) id target __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, nullable) SEL editAction __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, nullable) SEL accessoryAction __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

typedef NSInteger UITableViewStyle; enum {
    UITableViewStylePlain,
    UITableViewStyleGrouped,
    UITableViewStyleInsetGrouped __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)))
};

typedef NSInteger UITableViewScrollPosition; enum {
    UITableViewScrollPositionNone,
    UITableViewScrollPositionTop,
    UITableViewScrollPositionMiddle,
    UITableViewScrollPositionBottom
};

typedef NSInteger UITableViewRowAnimation; enum {
    UITableViewRowAnimationFade,
    UITableViewRowAnimationRight,
    UITableViewRowAnimationLeft,
    UITableViewRowAnimationTop,
    UITableViewRowAnimationBottom,
    UITableViewRowAnimationNone,
    UITableViewRowAnimationMiddle,
    UITableViewRowAnimationAutomatic = 100
};



extern "C" __attribute__((visibility ("default"))) NSString *const UITableViewIndexSearch __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) const CGFloat UITableViewAutomaticDimension __attribute__((availability(ios,introduced=5.0)));

// @class UITableView;
#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

#ifndef _REWRITER_typedef_UITableViewHeaderFooterView
#define _REWRITER_typedef_UITableViewHeaderFooterView
typedef struct objc_object UITableViewHeaderFooterView;
typedef struct {} _objc_exc_UITableViewHeaderFooterView;
#endif

#ifndef _REWRITER_typedef_UIVisualEffect
#define _REWRITER_typedef_UIVisualEffect
typedef struct objc_object UIVisualEffect;
typedef struct {} _objc_exc_UIVisualEffect;
#endif

// @protocol UITableViewDataSource, UITableViewDataSourcePrefetching;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

#ifndef _REWRITER_typedef_UITableViewDropProposal
#define _REWRITER_typedef_UITableViewDropProposal
typedef struct objc_object UITableViewDropProposal;
typedef struct {} _objc_exc_UITableViewDropProposal;
#endif

#ifndef _REWRITER_typedef_UITableViewPlaceholder
#define _REWRITER_typedef_UITableViewPlaceholder
typedef struct objc_object UITableViewPlaceholder;
typedef struct {} _objc_exc_UITableViewPlaceholder;
#endif

#ifndef _REWRITER_typedef_UITableViewDropPlaceholder
#define _REWRITER_typedef_UITableViewDropPlaceholder
typedef struct objc_object UITableViewDropPlaceholder;
typedef struct {} _objc_exc_UITableViewDropPlaceholder;
#endif

// @class UIContextMenuConfiguration;
#ifndef _REWRITER_typedef_UIContextMenuConfiguration
#define _REWRITER_typedef_UIContextMenuConfiguration
typedef struct objc_object UIContextMenuConfiguration;
typedef struct {} _objc_exc_UIContextMenuConfiguration;
#endif

#ifndef _REWRITER_typedef_UITargetedPreview
#define _REWRITER_typedef_UITargetedPreview
typedef struct objc_object UITargetedPreview;
typedef struct {} _objc_exc_UITargetedPreview;
#endif

// @protocol UIContextMenuInteractionCommitAnimating;
// @protocol UISpringLoadedInteractionContext, UIDragSession, UIDropSession;
// @protocol UITableViewDragDelegate, UITableViewDropDelegate, UITableViewDropCoordinator, UITableViewDropItem, UITableViewDropPlaceholderContext;

typedef NSInteger UITableViewRowActionStyle; enum {
    UITableViewRowActionStyleDefault = 0,
    UITableViewRowActionStyleDestructive = UITableViewRowActionStyleDefault,
    UITableViewRowActionStyleNormal
} __attribute__((availability(ios,introduced=8.0,deprecated=13.0,message="Use UIContextualAction and related APIs instead."))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=13.0,message="Use UIContextualAction and related APIs instead."))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewRowAction
#define _REWRITER_typedef_UITableViewRowAction
typedef struct objc_object UITableViewRowAction;
typedef struct {} _objc_exc_UITableViewRowAction;
#endif

struct UITableViewRowAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)rowActionWithStyle:(UITableViewRowActionStyle)style title:(nullable NSString *)title handler:(void (^)(UITableViewRowAction *action, NSIndexPath *indexPath))handler;

// @property (nonatomic, readonly) UITableViewRowActionStyle style;
// @property (nonatomic, copy, nullable) NSString *title;
// @property (nonatomic, copy, nullable) UIColor *backgroundColor;
// @property (nonatomic, copy, nullable) UIVisualEffect* backgroundEffect;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UITableViewFocusUpdateContext
#define _REWRITER_typedef_UITableViewFocusUpdateContext
typedef struct objc_object UITableViewFocusUpdateContext;
typedef struct {} _objc_exc_UITableViewFocusUpdateContext;
#endif

struct UITableViewFocusUpdateContext_IMPL {
	struct UIFocusUpdateContext_IMPL UIFocusUpdateContext_IVARS;
};


// @property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
// @property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

/* @end */





// @protocol UITableViewDelegate<NSObject, UIScrollViewDelegate>

/* @optional */



// - (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath;
// - (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath*)indexPath __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));



// - (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;
// - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section;
// - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section;



// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=7.0)));
// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForHeaderInSection:(NSInteger)section __attribute__((availability(ios,introduced=7.0)));
// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForFooterInSection:(NSInteger)section __attribute__((availability(ios,introduced=7.0)));



// - (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section;
// - (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section;



// - (UITableViewCellAccessoryType)tableView:(UITableView *)tableView accessoryTypeForRowWithIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath;





// - (BOOL)tableView:(UITableView *)tableView shouldHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView didHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6.0)));
// - (void)tableView:(UITableView *)tableView didUnhighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6.0)));


// - (nullable NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable NSIndexPath *)tableView:(UITableView *)tableView willDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3.0)));

// - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath;
// - (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3.0)));




// - (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));


// - (nullable NSArray<UITableViewRowAction *> *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8.0,deprecated=13.0,replacement="tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:"))) __attribute__((availability(tvos,unavailable)));




// - (nullable UISwipeActionsConfiguration *)tableView:(UITableView *)tableView leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));
// - (nullable UISwipeActionsConfiguration *)tableView:(UITableView *)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// - (BOOL)tableView:(UITableView *)tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)indexPath;


// - (void)tableView:(UITableView *)tableView willBeginEditingRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));
// - (void)tableView:(UITableView *)tableView didEndEditingRowAtIndexPath:(nullable NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));




// - (NSIndexPath *)tableView:(UITableView *)tableView targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)sourceIndexPath toProposedIndexPath:(NSIndexPath *)proposedDestinationIndexPath;



// - (NSInteger)tableView:(UITableView *)tableView indentationLevelForRowAtIndexPath:(NSIndexPath *)indexPath;



// - (BOOL)tableView:(UITableView *)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=5.0,deprecated=13.0,replacement="tableView:contextMenuConfigurationForRowAtIndexPath:point:")));
// - (BOOL)tableView:(UITableView *)tableView canPerformAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5.0,deprecated=13.0,replacement="tableView:contextMenuConfigurationForRowAtIndexPath:point:")));
// - (void)tableView:(UITableView *)tableView performAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5.0,deprecated=13.0,replacement="tableView:contextMenuConfigurationForRowAtIndexPath:")));



// - (BOOL)tableView:(UITableView *)tableView canFocusRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9.0)));
// - (BOOL)tableView:(UITableView *)tableView shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9.0)));
// - (void)tableView:(UITableView *)tableView didUpdateFocusInContext:(UITableViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9.0)));
// - (nullable NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=9.0)));






// - (BOOL)tableView:(UITableView *)tableView shouldSpringLoadRowAtIndexPath:(NSIndexPath *)indexPath withContext:(id<UISpringLoadedInteractionContext>)context __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (BOOL)tableView:(UITableView *)tableView shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// - (void)tableView:(UITableView *)tableView didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// - (void)tableViewDidEndMultipleSelectionInteraction:(UITableView *)tableView __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (nullable UIContextMenuConfiguration *)tableView:(UITableView *)tableView contextMenuConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (nullable UITargetedPreview *)tableView:(UITableView *)tableView previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (nullable UITargetedPreview *)tableView:(UITableView *)tableView previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)configuration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)tableView:(UITableView *)tableView willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)configuration animator:(id<UIContextMenuInteractionCommitAnimating>)animator __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITableViewSelectionDidChangeNotification;

typedef NSInteger UITableViewSeparatorInsetReference; enum {

    UITableViewSeparatorInsetFromCellEdges,


    UITableViewSeparatorInsetFromAutomaticInsets
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

struct UITableView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) UITableViewStyle style;

// @property (nonatomic, weak, nullable) id <UITableViewDataSource> dataSource;
// @property (nonatomic, weak, nullable) id <UITableViewDelegate> delegate;
// @property (nonatomic, weak, nullable) id <UITableViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, weak, nullable) id <UITableViewDragDelegate> dragDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, weak, nullable) id <UITableViewDropDelegate> dropDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic) CGFloat rowHeight;
// @property (nonatomic) CGFloat sectionHeaderHeight;
// @property (nonatomic) CGFloat sectionFooterHeight;
// @property (nonatomic) CGFloat estimatedRowHeight __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat estimatedSectionHeaderHeight __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat estimatedSectionFooterHeight __attribute__((availability(ios,introduced=7.0)));

// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic) UITableViewSeparatorInsetReference separatorInsetReference __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic, strong, nullable) UIView *backgroundView __attribute__((availability(ios,introduced=3.2)));



// @property (nonatomic, readonly) NSInteger numberOfSections;
// - (NSInteger)numberOfRowsInSection:(NSInteger)section;

// - (CGRect)rectForSection:(NSInteger)section;
// - (CGRect)rectForHeaderInSection:(NSInteger)section;
// - (CGRect)rectForFooterInSection:(NSInteger)section;
// - (CGRect)rectForRowAtIndexPath:(NSIndexPath *)indexPath;

// - (nullable NSIndexPath *)indexPathForRowAtPoint:(CGPoint)point;
// - (nullable NSIndexPath *)indexPathForCell:(UITableViewCell *)cell;
// - (nullable NSArray<NSIndexPath *> *)indexPathsForRowsInRect:(CGRect)rect;

// - (nullable __kindof UITableViewCell *)cellForRowAtIndexPath:(NSIndexPath *)indexPath;
// @property (nonatomic, readonly) NSArray<__kindof UITableViewCell *> *visibleCells;
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForVisibleRows;

// - (nullable UITableViewHeaderFooterView *)headerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));
// - (nullable UITableViewHeaderFooterView *)footerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6.0)));

// - (void)scrollToRowAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;
// - (void)scrollToNearestSelectedRowAtScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;




// - (void)performBatchUpdates:(void (__attribute__((noescape)) ^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)beginUpdates;
// - (void)endUpdates;

// - (void)insertSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)deleteSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)reloadSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3.0)));
// - (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection __attribute__((availability(ios,introduced=5.0)));

// - (void)insertRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)deleteRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)reloadRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3.0)));
// - (void)moveRowAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath __attribute__((availability(ios,introduced=5.0)));


// @property (nonatomic, readonly) BOOL hasUncommittedUpdates __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)reloadData;


// - (void)reloadSectionIndexTitles __attribute__((availability(ios,introduced=3.0)));



// @property (nonatomic, getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;

// @property (nonatomic) BOOL allowsSelection __attribute__((availability(ios,introduced=3.0)));
// @property (nonatomic) BOOL allowsSelectionDuringEditing;
// @property (nonatomic) BOOL allowsMultipleSelection __attribute__((availability(ios,introduced=5.0)));
// @property (nonatomic) BOOL allowsMultipleSelectionDuringEditing __attribute__((availability(ios,introduced=5.0)));



// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathForSelectedRow;
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedRows __attribute__((availability(ios,introduced=5.0)));


// - (void)selectRowAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UITableViewScrollPosition)scrollPosition;
// - (void)deselectRowAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;



// @property (nonatomic) NSInteger sectionIndexMinimumDisplayRowCount;
// @property (nonatomic, strong, nullable) UIColor *sectionIndexColor __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic, strong, nullable) UIColor *sectionIndexBackgroundColor __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic, strong, nullable) UIColor *sectionIndexTrackingBackgroundColor __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic) UITableViewCellSeparatorStyle separatorStyle __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *separatorColor __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, copy, nullable) UIVisualEffect *separatorEffect __attribute__((availability(ios,introduced=8.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) BOOL cellLayoutMarginsFollowReadableWidth __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic) BOOL insetsContentViewsToSafeArea __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic, strong, nullable) UIView *tableHeaderView;
// @property (nonatomic, strong, nullable) UIView *tableFooterView;

// - (nullable __kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier;
// - (__kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6.0)));
// - (nullable __kindof UITableViewHeaderFooterView *)dequeueReusableHeaderFooterViewWithIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6.0)));




// - (void)registerNib:(nullable UINib *)nib forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=5.0)));
// - (void)registerClass:(nullable Class)cellClass forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6.0)));

// - (void)registerNib:(nullable UINib *)nib forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6.0)));
// - (void)registerClass:(nullable Class)aClass forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6.0)));



// @property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9.0)));






// @property (nonatomic) BOOL dragInteractionEnabled __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic, readonly) BOOL hasActiveDrag __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic, readonly) BOOL hasActiveDrop __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface UITableView (UIDragAndDrop) <UISpringLoadedInteractionSupporting>
/* @end */






// @protocol UITableViewDataSource<NSObject>

/* @required */

// - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;




// - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;

/* @optional */

// - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;

// - (nullable NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section;
// - (nullable NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section;




// - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath;




// - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath;



// - (nullable NSArray<NSString *> *)sectionIndexTitlesForTableView:(UITableView *)tableView;
// - (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index;





// - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath;



// - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath;

/* @end */






// @protocol UITableViewDataSourcePrefetching <NSObject>

/* @required */


// - (void)tableView:(UITableView *)tableView prefetchRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

/* @optional */


// - (void)tableView:(UITableView *)tableView cancelPrefetchingForRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDragDelegate <NSObject>

/* @required */




// - (NSArray<UIDragItem *> *)tableView:(UITableView *)tableView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath;

/* @optional */





// - (NSArray<UIDragItem *> *)tableView:(UITableView *)tableView itemsForAddingToDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point;



// - (nullable UIDragPreviewParameters *)tableView:(UITableView *)tableView dragPreviewParametersForRowAtIndexPath:(NSIndexPath *)indexPath;



// - (void)tableView:(UITableView *)tableView dragSessionWillBegin:(id<UIDragSession>)session;


// - (void)tableView:(UITableView *)tableView dragSessionDidEnd:(id<UIDragSession>)session;



// - (BOOL)tableView:(UITableView *)tableView dragSessionAllowsMoveOperation:(id<UIDragSession>)session;



// - (BOOL)tableView:(UITableView *)tableView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropDelegate <NSObject>

/* @required */






// - (void)tableView:(UITableView *)tableView performDropWithCoordinator:(id<UITableViewDropCoordinator>)coordinator;

/* @optional */



// - (BOOL)tableView:(UITableView *)tableView canHandleDropSession:(id<UIDropSession>)session;


// - (void)tableView:(UITableView *)tableView dropSessionDidEnter:(id<UIDropSession>)session;







// - (UITableViewDropProposal *)tableView:(UITableView *)tableView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath;


// - (void)tableView:(UITableView *)tableView dropSessionDidExit:(id<UIDropSession>)session;


// - (void)tableView:(UITableView *)tableView dropSessionDidEnd:(id<UIDropSession>)session;



// - (nullable UIDragPreviewParameters *)tableView:(UITableView *)tableView dropPreviewParametersForRowAtIndexPath:(NSIndexPath *)indexPath;

/* @end */



typedef NSInteger UITableViewDropIntent; enum {


    UITableViewDropIntentUnspecified,



    UITableViewDropIntentInsertAtDestinationIndexPath,



    UITableViewDropIntentInsertIntoDestinationIndexPath,





    UITableViewDropIntentAutomatic
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewDropProposal
#define _REWRITER_typedef_UITableViewDropProposal
typedef struct objc_object UITableViewDropProposal;
typedef struct {} _objc_exc_UITableViewDropProposal;
#endif

struct UITableViewDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation intent:(UITableViewDropIntent)intent;


// @property (nonatomic, readonly) UITableViewDropIntent intent;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropCoordinator <NSObject>


// @property (nonatomic, readonly) NSArray<id<UITableViewDropItem>> *items;






// @property (nonatomic, readonly, nullable) NSIndexPath *destinationIndexPath;


// @property (nonatomic, readonly) UITableViewDropProposal *proposal;


// @property (nonatomic, readonly) id<UIDropSession> session;




// - (id<UITableViewDropPlaceholderContext>)dropItem:(UIDragItem *)dragItem toPlaceholder:(UITableViewDropPlaceholder *)placeholder;




// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toRowAtIndexPath:(NSIndexPath *)indexPath;




// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem intoRowAtIndexPath:(NSIndexPath *)indexPath rect:(CGRect)rect;



// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toTarget:(UIDragPreviewTarget *)target;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewPlaceholder
#define _REWRITER_typedef_UITableViewPlaceholder
typedef struct objc_object UITableViewPlaceholder;
typedef struct {} _objc_exc_UITableViewPlaceholder;
#endif

struct UITableViewPlaceholder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithInsertionIndexPath:(NSIndexPath *)insertionIndexPath reuseIdentifier:(NSString *)reuseIdentifier rowHeight:(CGFloat)rowHeight __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, nullable, copy) void(^cellUpdateHandler)(__kindof UITableViewCell *);

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewDropPlaceholder
#define _REWRITER_typedef_UITableViewDropPlaceholder
typedef struct objc_object UITableViewDropPlaceholder;
typedef struct {} _objc_exc_UITableViewDropPlaceholder;
#endif

struct UITableViewDropPlaceholder_IMPL {
	struct UITableViewPlaceholder_IMPL UITableViewPlaceholder_IVARS;
};




// @property (nonatomic, nullable, copy) UIDragPreviewParameters * _Nullable (^previewParametersProvider)(__kindof UITableViewCell *);

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropItem <NSObject>


// @property (nonatomic, readonly) UIDragItem *dragItem;






// @property (nonatomic, readonly, nullable) NSIndexPath *sourceIndexPath;



// @property (nonatomic, readonly) CGSize previewSize;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropPlaceholderContext <UIDragAnimating>


// @property (nonatomic, readonly) UIDragItem *dragItem;





// - (BOOL)commitInsertionWithDataSourceUpdates:(void(__attribute__((noescape)) ^)(NSIndexPath *insertionIndexPath))dataSourceUpdates;




// - (BOOL)deletePlaceholder;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_NSDiffableDataSourceSnapshot
#define _REWRITER_typedef_NSDiffableDataSourceSnapshot
typedef struct objc_object NSDiffableDataSourceSnapshot;
typedef struct {} _objc_exc_NSDiffableDataSourceSnapshot;
#endif

struct NSDiffableDataSourceSnapshot_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// @property(nonatomic,readonly) NSInteger numberOfItems;
// @property(nonatomic,readonly) NSInteger numberOfSections;
// @property(nonatomic,readonly) NSArray<SectionIdentifierType> *sectionIdentifiers;
// @property(nonatomic,readonly) NSArray<ItemIdentifierType> *itemIdentifiers;

// - (NSInteger)numberOfItemsInSection:(SectionIdentifierType)sectionIdentifier;
// - (NSArray<ItemIdentifierType>*)itemIdentifiersInSectionWithIdentifier:(SectionIdentifierType)sectionIdentifier;
// - (nullable SectionIdentifierType)sectionIdentifierForSectionContainingItemIdentifier:(ItemIdentifierType)itemIdentifier;

// - (NSInteger)indexOfItemIdentifier:(ItemIdentifierType)itemIdentifier;
// - (NSInteger)indexOfSectionIdentifier:(SectionIdentifierType)sectionIdentifier;



// - (void)appendItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers;
// - (void)appendItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers intoSectionWithIdentifier:(SectionIdentifierType)sectionIdentifier;

// - (void)insertItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers beforeItemWithIdentifier:(ItemIdentifierType)itemIdentifier;
// - (void)insertItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers afterItemWithIdentifier:(ItemIdentifierType)itemIdentifier;

// - (void)deleteItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers;
// - (void)deleteAllItems;

// - (void)moveItemWithIdentifier:(ItemIdentifierType)fromIdentifier beforeItemWithIdentifier:(ItemIdentifierType)toIdentifier;
// - (void)moveItemWithIdentifier:(ItemIdentifierType)fromIdentifier afterItemWithIdentifier:(ItemIdentifierType)toIdentifier;

// - (void)reloadItemsWithIdentifiers:(NSArray<ItemIdentifierType>*)identifiers;



// - (void)appendSectionsWithIdentifiers:(NSArray*)sectionIdentifiers;

// - (void)insertSectionsWithIdentifiers:(NSArray<SectionIdentifierType>*)sectionIdentifiers beforeSectionWithIdentifier:(SectionIdentifierType)toSectionIdentifier;
// - (void)insertSectionsWithIdentifiers:(NSArray<SectionIdentifierType>*)sectionIdentifiers afterSectionWithIdentifier:(SectionIdentifierType)toSectionIdentifier;

// - (void)deleteSectionsWithIdentifiers:(NSArray<SectionIdentifierType>*)sectionIdentifiers;

// - (void)moveSectionWithIdentifier:(SectionIdentifierType)fromSectionIdentifier beforeSectionWithIdentifier:(SectionIdentifierType)toSectionIdentifier;
// - (void)moveSectionWithIdentifier:(SectionIdentifierType)fromSectionIdentifier afterSectionWithIdentifier:(SectionIdentifierType)toSectionIdentifier;

// - (void)reloadSectionsWithIdentifiers:(NSArray<SectionIdentifierType>*)sectionIdentifiers;

/* @end */


typedef UICollectionViewCell * _Nullable (*UICollectionViewDiffableDataSourceCellProvider)(UICollectionView * _Nonnull,NSIndexPath * _Nonnull, id _Nonnull);
typedef UICollectionReusableView * _Nullable (*UICollectionViewDiffableDataSourceSupplementaryViewProvider)(UICollectionView* _Nonnull, NSString * _Nonnull, NSIndexPath * _Nonnull);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UICollectionViewDiffableDataSource
#define _REWRITER_typedef_UICollectionViewDiffableDataSource
typedef struct objc_object UICollectionViewDiffableDataSource;
typedef struct {} _objc_exc_UICollectionViewDiffableDataSource;
#endif

struct UICollectionViewDiffableDataSource_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithCollectionView:(UICollectionView*)collectionView cellProvider:(UICollectionViewDiffableDataSourceCellProvider)cellProvider;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property(nonatomic,copy,nullable) UICollectionViewDiffableDataSourceSupplementaryViewProvider supplementaryViewProvider;




// - (NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot;
// - (void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot animatingDifferences:(BOOL)animatingDifferences;
// - (void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot animatingDifferences:(BOOL)animatingDifferences completion:(void(^ _Nullable)(void))completion;



// - (nullable ItemIdentifierType)itemIdentifierForIndexPath:(NSIndexPath*)indexPath;
// - (nullable NSIndexPath*)indexPathForItemIdentifier:(ItemIdentifierType)identifier;

/* @end */


typedef UITableViewCell * _Nullable (*UITableViewDiffableDataSourceCellProvider)(UITableView * _Nonnull, NSIndexPath * _Nonnull, id _Nonnull);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UITableViewDiffableDataSource
#define _REWRITER_typedef_UITableViewDiffableDataSource
typedef struct objc_object UITableViewDiffableDataSource;
typedef struct {} _objc_exc_UITableViewDiffableDataSource;
#endif

struct UITableViewDiffableDataSource_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTableView:(UITableView*)tableView cellProvider:(UITableViewDiffableDataSourceCellProvider)cellProvider;
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));




// - (NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot;
// - (void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot animatingDifferences:(BOOL)animatingDifferences;
// - (void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType>*)snapshot animatingDifferences:(BOOL)animatingDifferences completion:(void(^ _Nullable)(void))completion;



// - (nullable ItemIdentifierType)itemIdentifierForIndexPath:(NSIndexPath*)indexPath;
// - (nullable NSIndexPath*)indexPathForItemIdentifier:(ItemIdentifierType)identifier;



// @property(nonatomic) UITableViewRowAnimation defaultRowAnimation;

/* @end */

#pragma clang assume_nonnull end
typedef NSUInteger UIDataDetectorTypes; enum {
    UIDataDetectorTypePhoneNumber = 1 << 0,
    UIDataDetectorTypeLink = 1 << 1,
    UIDataDetectorTypeAddress __attribute__((availability(ios,introduced=4.0))) = 1 << 2,
    UIDataDetectorTypeCalendarEvent __attribute__((availability(ios,introduced=4.0))) = 1 << 3,
    UIDataDetectorTypeShipmentTrackingNumber __attribute__((availability(ios,introduced=10.0))) = 1 << 4,
    UIDataDetectorTypeFlightNumber __attribute__((availability(ios,introduced=10.0))) = 1 << 5,
    UIDataDetectorTypeLookupSuggestion __attribute__((availability(ios,introduced=10.0))) = 1 << 6,

    UIDataDetectorTypeNone = 0,
    UIDataDetectorTypeAll = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull begin

typedef NSInteger UIDatePickerMode; enum {
    UIDatePickerModeTime,
    UIDatePickerModeDate,
    UIDatePickerModeDateAndTime,
    UIDatePickerModeCountDownTimer,
} __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDatePicker
#define _REWRITER_typedef_UIDatePicker
typedef struct objc_object UIDatePicker;
typedef struct {} _objc_exc_UIDatePicker;
#endif

struct UIDatePicker_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};

// @property (nonatomic) UIDatePickerMode datePickerMode;

// @property (nullable, nonatomic, strong) NSLocale *locale;
// @property (null_resettable, nonatomic, copy) NSCalendar *calendar;
// @property (nullable, nonatomic, strong) NSTimeZone *timeZone;

// @property (nonatomic, strong) NSDate *date;
// @property (nullable, nonatomic, strong) NSDate *minimumDate;
// @property (nullable, nonatomic, strong) NSDate *maximumDate;

// @property (nonatomic) NSTimeInterval countDownDuration;
// @property (nonatomic) NSInteger minuteInterval;

// - (void)setDate:(NSDate *)date animated:(BOOL)animated;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIDocumentChangeKind; enum {
    UIDocumentChangeDone,
    UIDocumentChangeUndone,
    UIDocumentChangeRedone,
    UIDocumentChangeCleared
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIDocumentSaveOperation; enum {
    UIDocumentSaveForCreating,
    UIDocumentSaveForOverwriting
} __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIDocumentState; enum {
    UIDocumentStateNormal = 0,
    UIDocumentStateClosed = 1 << 0,
    UIDocumentStateInConflict = 1 << 1,
    UIDocumentStateSavingError = 1 << 2,
    UIDocumentStateEditingDisabled = 1 << 3,
    UIDocumentStateProgressAvailable = 1 << 4
} __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDocumentStateChangedNotification __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocument
#define _REWRITER_typedef_UIDocument
typedef struct objc_object UIDocument;
typedef struct {} _objc_exc_UIDocument;
#endif

struct UIDocument_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithFileURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));






// @property (readonly) NSURL *fileURL __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSString *localizedName __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy, nullable) NSString *fileType __attribute__((availability(tvos,unavailable)));
// @property (copy, nullable) NSDate *fileModificationDate __attribute__((availability(tvos,unavailable)));

// @property (readonly) UIDocumentState documentState __attribute__((availability(tvos,unavailable)));

// @property (readonly, nullable) NSProgress *progress __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));





// - (void)openWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));


// - (void)closeWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));







// - (BOOL)loadFromContents:(id)contents ofType:(nullable NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



// - (nullable id)contentsForType:(NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));






// - (void)disableEditing __attribute__((availability(tvos,unavailable)));
// - (void)enableEditing __attribute__((availability(tvos,unavailable)));






// @property (strong, null_resettable) NSUndoManager *undoManager __attribute__((availability(tvos,unavailable)));



// @property(nonatomic, readonly) BOOL hasUnsavedChanges __attribute__((availability(tvos,unavailable)));


// - (void)updateChangeCount:(UIDocumentChangeKind)change __attribute__((availability(tvos,unavailable)));





// - (id)changeCountTokenForSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));
// - (void)updateChangeCountWithToken:(id)changeCountToken forSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));






// - (void)saveToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));



// - (void)autosaveWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly, nullable) NSString *savingFileType __attribute__((availability(tvos,unavailable)));
// - (NSString *)fileNameExtensionForType:(nullable NSString *)typeName saveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));



// - (BOOL)writeContents:(id)contents andAttributes:(nullable NSDictionary *)additionalFileAttributes safelyToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));


// - (BOOL)writeContents:(id)contents toURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



// - (nullable NSDictionary *)fileAttributesToWriteToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




// - (BOOL)readFromURL:(NSURL *)url error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




// - (void)performAsynchronousFileAccessUsingBlock:(void (^)(void))block __attribute__((availability(tvos,unavailable)));
// - (void)handleError:(NSError *)error userInteractionPermitted:(BOOL)userInteractionPermitted __attribute__((availability(tvos,unavailable)));




// - (void)finishedHandlingError:(NSError *)error recovered:(BOOL)recovered __attribute__((availability(tvos,unavailable)));




// - (void)userInteractionNoLongerPermittedForError:(NSError *)error __attribute__((availability(tvos,unavailable)));







// - (void)revertToContentsOfURL:(NSURL *)url completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSString* const NSUserActivityDocumentURLKey __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @interface UIDocument (ActivityContinuation) <UIUserActivityRestoring>
// @property (nonatomic, strong, nullable) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));
// - (void)updateUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));
// - (void)restoreUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDocumentPickerViewController;
#ifndef _REWRITER_typedef_UIDocumentPickerViewController
#define _REWRITER_typedef_UIDocumentPickerViewController
typedef struct objc_object UIDocumentPickerViewController;
typedef struct {} _objc_exc_UIDocumentPickerViewController;
#endif

#ifndef _REWRITER_typedef_UIDocumentMenuViewController
#define _REWRITER_typedef_UIDocumentMenuViewController
typedef struct objc_object UIDocumentMenuViewController;
typedef struct {} _objc_exc_UIDocumentMenuViewController;
#endif


__attribute__((availability(tvos,unavailable))) // @protocol UIDocumentPickerDelegate <NSObject>

/* @optional */

// - (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentsAtURLs:(NSArray <NSURL *>*)urls __attribute__((availability(ios,introduced=11.0)));


// - (void)documentPickerWasCancelled:(UIDocumentPickerViewController *)controller;

// - (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentAtURL:(NSURL *)url __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="documentPicker:didPickDocumentsAtURLs:")));
/* @end */


typedef NSUInteger UIDocumentPickerMode; enum {
    UIDocumentPickerModeImport,
    UIDocumentPickerModeOpen,
    UIDocumentPickerModeExportToService,
    UIDocumentPickerModeMoveToService
} __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentPickerViewController
#define _REWRITER_typedef_UIDocumentPickerViewController
typedef struct objc_object UIDocumentPickerViewController;
typedef struct {} _objc_exc_UIDocumentPickerViewController;
#endif

struct UIDocumentPickerViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initWithDocumentTypes:(NSArray <NSString *>*)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// - (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));


// - (instancetype)initWithURLs:(NSArray <NSURL *> *)urls inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=11.0)));

// @property (nullable, nonatomic, weak) id<UIDocumentPickerDelegate> delegate;
// @property (nonatomic, assign, readonly) UIDocumentPickerMode documentPickerMode;
// @property (nonatomic, assign) BOOL allowsMultipleSelection __attribute__((availability(ios,introduced=11.0)));


// @property (assign, nonatomic) BOOL shouldShowFileExtensions __attribute__((availability(ios,introduced=13.0)));


// @property (nullable, nonatomic, copy) NSURL *directoryURL __attribute__((availability(ios,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSUInteger UIDocumentMenuOrder; enum {
    UIDocumentMenuOrderFirst,
    UIDocumentMenuOrderLast
} __attribute__((availability(ios,introduced=8_0,deprecated=11_0,message="" ))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(ios,introduced=8.0,deprecated=13.0,message="UIDocumentMenuDelegate is deprecated. Use UIDocumentPickerViewController directly.")))
__attribute__((availability(tvos,unavailable))) // @protocol UIDocumentMenuDelegate <NSObject>

// - (void)documentMenu:(UIDocumentMenuViewController *)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController *)documentPicker;
/* @optional */
// - (void)documentMenuWasCancelled:(UIDocumentMenuViewController *)documentMenu;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=11.0,message="UIDocumentMenuViewController is deprecated. Use UIDocumentPickerViewController directly.")))
__attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentMenuViewController
#define _REWRITER_typedef_UIDocumentMenuViewController
typedef struct objc_object UIDocumentMenuViewController;
typedef struct {} _objc_exc_UIDocumentMenuViewController;
#endif

struct UIDocumentMenuViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithDocumentTypes:(NSArray <NSString *> *)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (void)addOptionWithTitle:(NSString *)title image:(nullable UIImage *)image order:(UIDocumentMenuOrder)order handler:(void (^)(void))handler;

// @property (nullable, nonatomic, weak) id<UIDocumentMenuDelegate> delegate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentPickerExtensionViewController
#define _REWRITER_typedef_UIDocumentPickerExtensionViewController
typedef struct objc_object UIDocumentPickerExtensionViewController;
typedef struct {} _objc_exc_UIDocumentPickerExtensionViewController;
#endif

struct UIDocumentPickerExtensionViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};






// - (void)dismissGrantingAccessToURL:(nullable NSURL *)url;

// - (void)prepareForPresentationInMode:(UIDocumentPickerMode)mode;


// @property (nonatomic, readonly, assign) UIDocumentPickerMode documentPickerMode;


// @property (nullable, nonatomic, readonly, copy) NSURL *originalURL;


// @property (nullable, nonatomic, readonly, copy) NSArray<NSString *> *validTypes;



// @property (nonatomic, readonly, copy) NSString *providerIdentifier;
// @property (nullable, nonatomic, readonly, copy) NSURL *documentStorageURL;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICloudSharingController;
#ifndef _REWRITER_typedef_UICloudSharingController
#define _REWRITER_typedef_UICloudSharingController
typedef struct objc_object UICloudSharingController;
typedef struct {} _objc_exc_UICloudSharingController;
#endif

#ifndef _REWRITER_typedef_CKShare
#define _REWRITER_typedef_CKShare
typedef struct objc_object CKShare;
typedef struct {} _objc_exc_CKShare;
#endif

#ifndef _REWRITER_typedef_CKContainer
#define _REWRITER_typedef_CKContainer
typedef struct objc_object CKContainer;
typedef struct {} _objc_exc_CKContainer;
#endif


// @protocol UIActivityItemSource;

typedef NSUInteger UICloudSharingPermissionOptions; enum {
    UICloudSharingPermissionStandard = 0,

    UICloudSharingPermissionAllowPublic = 1 << 0,
    UICloudSharingPermissionAllowPrivate = 1 << 1,

    UICloudSharingPermissionAllowReadOnly = 1 << 2,
    UICloudSharingPermissionAllowReadWrite = 1 << 3,
} __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICloudSharingControllerDelegate <NSObject>

// - (void)cloudSharingController:(UICloudSharingController *)csc failedToSaveShareWithError:(NSError *)error;


// - (nullable NSString *)itemTitleForCloudSharingController:(UICloudSharingController *)csc;

/* @optional */

// - (nullable NSData *)itemThumbnailDataForCloudSharingController:(UICloudSharingController *)csc;

// - (nullable NSString *)itemTypeForCloudSharingController:(UICloudSharingController *)csc;

// - (void)cloudSharingControllerDidSaveShare:(UICloudSharingController *)csc;
// - (void)cloudSharingControllerDidStopSharing:(UICloudSharingController *)csc;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UICloudSharingController
#define _REWRITER_typedef_UICloudSharingController
typedef struct objc_object UICloudSharingController;
typedef struct {} _objc_exc_UICloudSharingController;
#endif

struct UICloudSharingController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((unavailable));






// - (instancetype)initWithPreparationHandler:(void (^)(UICloudSharingController *controller, void (^preparationCompletionHandler)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)))preparationHandler;



// - (instancetype)initWithShare:(CKShare *)share container:(CKContainer *)container;

// @property (nonatomic, weak) id<UICloudSharingControllerDelegate> delegate;
// @property (nonatomic, readonly, strong, nullable) CKShare *share;



// @property (nonatomic) UICloudSharingPermissionOptions availablePermissions;





// - (id <UIActivityItemSource>)activityItemSource;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSString *NSFileProviderItemIdentifier __attribute__((swift_wrapper(struct)));





extern "C" NSFileProviderItemIdentifier const NSFileProviderRootContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.rootContainer"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSFileProviderItemIdentifier const NSFileProviderWorkingSetContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.workingSet"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







typedef NSData *NSFileProviderVersionData __attribute__((swift_wrapper(struct)));

__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)))

#ifndef _REWRITER_typedef_NSFileProviderItemVersion
#define _REWRITER_typedef_NSFileProviderItemVersion
typedef struct objc_object NSFileProviderItemVersion;
typedef struct {} _objc_exc_NSFileProviderItemVersion;
#endif

struct NSFileProviderItemVersion_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};







#if 0
- (instancetype)initWithContentVersion:(NSFileProviderVersionData)contentVersion
                       metadataVersion:(NSFileProviderVersionData)metadataVersion;
#endif

// @property (nonatomic, readonly) NSFileProviderVersionData contentVersion;






// @property (nonatomic, readonly) NSFileProviderVersionData metadataVersion;

/* @end */







extern "C" unsigned long long const NSFileProviderFavoriteRankUnranked __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger NSFileProviderItemCapabilities; enum {




    NSFileProviderItemCapabilitiesAllowsReading = 1 << 0,





    NSFileProviderItemCapabilitiesAllowsWriting = 1 << 1,


    NSFileProviderItemCapabilitiesAllowsReparenting = 1 << 2,


    NSFileProviderItemCapabilitiesAllowsRenaming = 1 << 3,


    NSFileProviderItemCapabilitiesAllowsTrashing = 1 << 4,


    NSFileProviderItemCapabilitiesAllowsDeleting = 1 << 5,





    NSFileProviderItemCapabilitiesAllowsAddingSubItems = NSFileProviderItemCapabilitiesAllowsWriting,





    NSFileProviderItemCapabilitiesAllowsContentEnumerating = NSFileProviderItemCapabilitiesAllowsReading,

    NSFileProviderItemCapabilitiesAllowsAll =
          NSFileProviderItemCapabilitiesAllowsReading
        | NSFileProviderItemCapabilitiesAllowsWriting
        | NSFileProviderItemCapabilitiesAllowsReparenting
        | NSFileProviderItemCapabilitiesAllowsRenaming
        | NSFileProviderItemCapabilitiesAllowsTrashing
        | NSFileProviderItemCapabilitiesAllowsDeleting
};

// @protocol NSFileProviderItemFlags <NSObject>

// @property (nonatomic, readonly, getter=isUserExecutable) BOOL userExecutable;
// @property (nonatomic, readonly, getter=isUserReadable) BOOL userReadable;
// @property (nonatomic, readonly, getter=isUserWritable) BOOL userWritable;

// @property (nonatomic, readonly, getter=isHidden) BOOL hidden;
// @property (nonatomic, readonly, getter=isPathExtensionHidden) BOOL pathExtensionHidden;
/* @end */


// @protocol NSFileProviderItem <NSObject>

// @property (nonatomic, readonly, copy) NSFileProviderItemIdentifier itemIdentifier;
// @property (nonatomic, readonly, copy) NSFileProviderItemIdentifier parentItemIdentifier;




// @property (nonatomic, readonly, copy) NSString *filename;




// @property (nonatomic, readonly, copy) NSString *typeIdentifier;

/* @optional */





// @property (nonatomic, readonly) NSFileProviderItemCapabilities capabilities;





// @property (nonatomic, readonly, strong, nullable) id <NSFileProviderItemFlags> flags __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

// @property (nonatomic, readonly, copy, nullable) NSNumber *documentSize;
// @property (nonatomic, readonly, copy, nullable) NSNumber *childItemCount;
// @property (nonatomic, readonly, copy, nullable) NSDate *creationDate;
// @property (nonatomic, readonly, copy, nullable) NSDate *contentModificationDate;
// @property (nonatomic, readonly, strong, nullable) NSDictionary <NSString *, NSData *> *extendedAttributes __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
// @property (nonatomic, readonly, copy, nullable) NSDate *lastUsedDate;
// @property (nonatomic, readonly, copy, nullable) NSData *tagData;
// @property (nonatomic, readonly, copy, nullable) NSNumber *favoriteRank;
// @property (nonatomic, readonly, getter=isTrashed) BOOL trashed;





// @property (nonatomic, readonly, getter=isUploaded) BOOL uploaded;
// @property (nonatomic, readonly, getter=isUploading) BOOL uploading;
// @property (nonatomic, readonly, copy, nullable) NSError *uploadingError;

// @property (nonatomic, readonly, getter=isDownloaded) BOOL downloaded;
// @property (nonatomic, readonly, getter=isDownloading) BOOL downloading;
// @property (nonatomic, readonly, copy, nullable) NSError *downloadingError;
// @property (nonatomic, readonly, getter=isExcludedFromSync) BOOL excludedFromSync
    __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

// @property (nonatomic, readonly, getter=isMostRecentVersionDownloaded) BOOL mostRecentVersionDownloaded;

// @property (nonatomic, readonly, getter=isShared) BOOL shared;
// @property (nonatomic, readonly, getter=isSharedByCurrentUser) BOOL sharedByCurrentUser;





// @property (nonatomic, strong, readonly, nullable) NSPersonNameComponents *ownerNameComponents;
// @property (nonatomic, strong, readonly, nullable) NSPersonNameComponents *mostRecentEditorNameComponents;
// @property (nonatomic, strong, readonly, nullable) NSData *versionIdentifier __attribute__((availability(ios,introduced=11.0,deprecated=13.0,message="itemVersion"))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable)));




// @property (nonatomic, strong, readonly, nullable) NSFileProviderItemVersion *itemVersion __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
// @property (nonatomic, strong, readonly, nullable) NSDictionary *userInfo;


/* @end */



typedef id/*<NSFileProviderItem>*/ NSFileProviderItem;
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class NSFileProviderDomain;
#ifndef _REWRITER_typedef_NSFileProviderDomain
#define _REWRITER_typedef_NSFileProviderDomain
typedef struct objc_object NSFileProviderDomain;
typedef struct {} _objc_exc_NSFileProviderDomain;
#endif








typedef NSUInteger NSFileProviderItemField; enum {
    NSFileProviderItemFieldContents = 1 << 0,
    NSFileProviderItemFieldFilename = 1 << 1,
    NSFileProviderItemFieldParentItemIdentifier = 1 << 2,
    NSFileProviderItemFieldLastUsedDate = 1 << 3,
    NSFileProviderItemFieldTagData = 1 << 4,
    NSFileProviderItemFieldFavoriteRank = 1 << 5,
    NSFileProviderItemFieldCreationDate = 1 << 6,
    NSFileProviderItemFieldContentModificationDate = 1 << 7,
    NSFileProviderItemFieldFlags = 1 << 8,
    NSFileProviderItemFieldTrashed = 1 << 9,
    NSFileProviderItemFieldExtendedAttributes = 1 << 10
} __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

__attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_NSFileProviderExtension
#define _REWRITER_typedef_NSFileProviderExtension
typedef struct objc_object NSFileProviderExtension;
typedef struct {} _objc_exc_NSFileProviderExtension;
#endif

struct NSFileProviderExtension_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable NSFileProviderItem)itemForIdentifier:(NSFileProviderItemIdentifier)identifier error:(NSError * _Nullable *)error __attribute__((swift_name("item(for:)"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#if 0
- (NSProgress *)fetchContentsForItemWithIdentifier:(NSFileProviderItemIdentifier)itemIdentifier
                                           version:(nullable NSFileProviderItemVersion *)requestedVersion
                                 completionHandler:(void(^)(NSURL * _Nullable fileContents, NSFileProviderItem _Nullable item, NSError * _Nullable error))completionHandler __attribute__((swift_name("fetchContents(for:version:completionHandler:)"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif

#if 0
- (NSProgress *)fetchContentsForItemWithIdentifier:(NSFileProviderItemIdentifier)itemIdentifier
                                           version:(nullable NSFileProviderItemVersion *)requestedVersion
                        usingExistingContentsAtURL:(NSURL *)existingContents
                                   existingVersion:(NSFileProviderItemVersion *)existingVersion
                                 completionHandler:(void(^)(NSURL * _Nullable fileContents, NSFileProviderItem _Nullable item, NSError * _Nullable error))completionHandler
__attribute__((swift_name("fetchContents(for:version:usingExistingContentsAt:existingVersion:completionHandler:)")))
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif

#if 0
- (void)itemChanged:(NSFileProviderItem)item
        baseVersion:(NSFileProviderItemVersion *)version
      changedFields:(NSFileProviderItemField)changedFields
           contents:(nullable NSURL *)newContents
  completionHandler:(void(^)(NSFileProviderItem _Nullable item, NSError * _Nullable error))completionHandler __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif


/* @end */





typedef NSUInteger NSFileProviderCreateItemOptions; enum {
    NSFileProviderCreateItemOptionsItemMayAlreadyExist = 1 << 0,
} __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

// @interface NSFileProviderExtension (CreateItem)
#if 0
- (void)createItemBasedOnTemplate:(NSFileProviderItem)itemTemplate
                           fields:(NSFileProviderItemField)fields
                         contents:(nullable NSURL *)url
                          options:(NSFileProviderCreateItemOptions)options
                completionHandler:(void (^)(NSFileProviderItem _Nullable createdItem, NSError * _Nullable error))completionHandler
    __attribute__((swift_name("createItem(basedOn:fields:contents:options:completionHandler:)")))
    __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif


/* @end */





typedef NSUInteger NSFileProviderDeleteItemOptions; enum {
    NSFileProviderDeleteItemOptionsRecursive = 1 << 0
} __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

// @interface NSFileProviderExtension (DeleteItem)
#if 0
- (void)deleteItemWithIdentifier:(NSFileProviderItemIdentifier)itemIdentifier
                     baseVersion:(NSFileProviderItemVersion *)version
                         options:(NSFileProviderDeleteItemOptions)options
               completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif


/* @end */


// @interface NSFileProviderExtension (Import)
#if 0
- (void)importDidFinishWithCompletionHandler:(void (^)(void))completionHandler
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
#endif


/* @end */


// @interface NSFileProviderExtension (Deprecated)
// + (BOOL)writePlaceholderAtURL:(NSURL *)placeholderURL withMetadata:(NSDictionary <NSURLResourceKey, id> *)metadata error:(NSError **)error __attribute__((availability(ios,introduced=8.0,deprecated=11.0,message="Use the corresponding method on NSFileProviderManager instead"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







// + (NSURL *)placeholderURLForURL:(NSURL *)url __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager +placeholderURLForURL:"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nonatomic, readonly) NSString *providerIdentifier __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager -providerIdentifier"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));







// @property(nonatomic, readonly) NSURL *documentStorageURL __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager -documentStorageURL"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (nullable NSURL *)URLForItemWithPersistentIdentifier:(NSFileProviderItemIdentifier)identifier __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
// - (nullable NSFileProviderItemIdentifier)persistentIdentifierForItemAtURL:(NSURL *)url __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
// - (void)providePlaceholderAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





// - (void)startProvidingItemAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler __attribute__((swift_name("startProvidingItem(at:completionHandler:)"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));
// - (void)stopProvidingItemAtURL:(NSURL *)url __attribute__((swift_name("stopProvidingItem(at:)"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));





// - (void)itemChangedAtURL:(NSURL *)url __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(macos,unavailable))) __attribute__((availability(macCatalyst,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIVisualEffect
#define _REWRITER_typedef_UIVisualEffect
typedef struct objc_object UIVisualEffect;
typedef struct {} _objc_exc_UIVisualEffect;
#endif

struct UIVisualEffect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIBlurEffectStyle; enum {


    UIBlurEffectStyleExtraLight,
    UIBlurEffectStyleLight,
    UIBlurEffectStyleDark,
    UIBlurEffectStyleExtraDark __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),






    UIBlurEffectStyleRegular __attribute__((availability(ios,introduced=10.0))),


    UIBlurEffectStyleProminent __attribute__((availability(ios,introduced=10.0))),






    UIBlurEffectStyleSystemUltraThinMaterial __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThinMaterial __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemMaterial __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThickMaterial __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemChromeMaterial __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),



    UIBlurEffectStyleSystemUltraThinMaterialLight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThinMaterialLight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemMaterialLight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThickMaterialLight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemChromeMaterialLight __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),

    UIBlurEffectStyleSystemUltraThinMaterialDark __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThinMaterialDark __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemMaterialDark __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemThickMaterialDark __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleSystemChromeMaterialDark __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))),

} __attribute__((availability(ios,introduced=8.0)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIBlurEffect
#define _REWRITER_typedef_UIBlurEffect
typedef struct objc_object UIBlurEffect;
typedef struct {} _objc_exc_UIBlurEffect;
#endif

struct UIBlurEffect_IMPL {
	struct UIVisualEffect_IMPL UIVisualEffect_IVARS;
};


// + (UIBlurEffect *)effectWithStyle:(UIBlurEffectStyle)style;

/* @end */

#pragma clang assume_nonnull end
// @class UIBlurEffect;
#ifndef _REWRITER_typedef_UIBlurEffect
#define _REWRITER_typedef_UIBlurEffect
typedef struct objc_object UIBlurEffect;
typedef struct {} _objc_exc_UIBlurEffect;
#endif


#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIVibrancyEffect
#define _REWRITER_typedef_UIVibrancyEffect
typedef struct objc_object UIVibrancyEffect;
typedef struct {} _objc_exc_UIVibrancyEffect;
#endif

struct UIVibrancyEffect_IMPL {
	struct UIVisualEffect_IMPL UIVisualEffect_IVARS;
};


// + (UIVibrancyEffect *)effectForBlurEffect:(UIBlurEffect *)blurEffect;

/* @end */








typedef NSInteger UIVibrancyEffectStyle; enum {


    UIVibrancyEffectStyleLabel,
    UIVibrancyEffectStyleSecondaryLabel,
    UIVibrancyEffectStyleTertiaryLabel,
    UIVibrancyEffectStyleQuaternaryLabel,



    UIVibrancyEffectStyleFill,
    UIVibrancyEffectStyleSecondaryFill,
    UIVibrancyEffectStyleTertiaryFill,



    UIVibrancyEffectStyleSeparator,

} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @interface UIVibrancyEffect (AdditionalStyles)

// + (UIVibrancyEffect *)effectForBlurEffect:(UIBlurEffect *)blurEffect style:(UIVibrancyEffectStyle)style __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIVisualEffectView
#define _REWRITER_typedef_UIVisualEffectView
typedef struct objc_object UIVisualEffectView;
typedef struct {} _objc_exc_UIVisualEffectView;
#endif

struct UIVisualEffectView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, strong, readonly) UIView *contentView;

// @property (nonatomic, copy, nullable) UIVisualEffect *effect;

// - (instancetype)initWithEffect:(nullable UIVisualEffect *)effect __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))

#ifndef _REWRITER_typedef_UIFontMetrics
#define _REWRITER_typedef_UIFontMetrics
typedef struct objc_object UIFontMetrics;
typedef struct {} _objc_exc_UIFontMetrics;
#endif

struct UIFontMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, strong) UIFontMetrics *defaultMetrics;

// + (instancetype)metricsForTextStyle:(UIFontTextStyle)textStyle;

// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initForTextStyle:(UIFontTextStyle)textStyle __attribute__((objc_designated_initializer));

// - (UIFont *)scaledFontForFont:(UIFont *)font;
// - (UIFont *)scaledFontForFont:(UIFont *)font maximumPointSize:(CGFloat)maximumPointSize;
// - (UIFont *)scaledFontForFont:(UIFont *)font compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));
// - (UIFont *)scaledFontForFont:(UIFont *)font maximumPointSize:(CGFloat)maximumPointSize compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));

// - (CGFloat)scaledValueForValue:(CGFloat)value;
// - (CGFloat)scaledValueForValue:(CGFloat)value compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UIFontPickerViewControllerConfiguration
#define _REWRITER_typedef_UIFontPickerViewControllerConfiguration
typedef struct objc_object UIFontPickerViewControllerConfiguration;
typedef struct {} _objc_exc_UIFontPickerViewControllerConfiguration;
#endif

struct UIFontPickerViewControllerConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic) BOOL includeFaces;

// @property (nonatomic) BOOL displayUsingSystemFont;


// @property (nonatomic) UIFontDescriptorSymbolicTraits filteredTraits;


// @property (nullable, copy, nonatomic) NSPredicate *filteredLanguagesPredicate;


// + (nullable NSPredicate *)filterPredicateForFilteredLanguages:(NSArray<NSString *> *)filteredLanguages;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIFontPickerViewController;
#ifndef _REWRITER_typedef_UIFontPickerViewController
#define _REWRITER_typedef_UIFontPickerViewController
typedef struct objc_object UIFontPickerViewController;
typedef struct {} _objc_exc_UIFontPickerViewController;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) // @protocol UIFontPickerViewControllerDelegate <NSObject>

/* @optional */

// - (void)fontPickerViewControllerDidCancel:(UIFontPickerViewController *)viewController;

// - (void)fontPickerViewControllerDidPickFont:(UIFontPickerViewController *)viewController;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UIFontPickerViewController
#define _REWRITER_typedef_UIFontPickerViewController
typedef struct objc_object UIFontPickerViewController;
typedef struct {} _objc_exc_UIFontPickerViewController;
#endif

struct UIFontPickerViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};





// - (instancetype)initWithConfiguration:(UIFontPickerViewControllerConfiguration *)configuration __attribute__((objc_designated_initializer));

// @property (readonly, copy, nonatomic) UIFontPickerViewControllerConfiguration *configuration;

// @property (nullable, weak, nonatomic) id<UIFontPickerViewControllerDelegate> delegate;

// @property (nullable, strong, nonatomic) UIFontDescriptor *selectedFontDescriptor;

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern "C" __attribute__((visibility ("default"))) CGContextRef _Nullable UIGraphicsGetCurrentContext(void) __attribute__((cf_returns_not_retained));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsPushContext(CGContextRef context);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsPopContext(void);

extern "C" __attribute__((visibility ("default"))) void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern "C" __attribute__((visibility ("default"))) void UIRectFill(CGRect rect);

extern "C" __attribute__((visibility ("default"))) void UIRectFrameUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern "C" __attribute__((visibility ("default"))) void UIRectFrame(CGRect rect);

extern "C" __attribute__((visibility ("default"))) void UIRectClip(CGRect rect);





extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginImageContext(CGSize size);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale) __attribute__((availability(ios,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) UIImage* _Nullable UIGraphicsGetImageFromCurrentImageContext(void);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsEndImageContext(void);



extern "C" __attribute__((visibility ("default"))) BOOL UIGraphicsBeginPDFContextToFile(NSString *path, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFContextToData(NSMutableData *data, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsEndPDFContext(void) __attribute__((availability(ios,introduced=3.2)));

extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPage(void) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPageWithInfo(CGRect bounds, NSDictionary * _Nullable pageInfo) __attribute__((availability(ios,introduced=3.2)));

extern "C" __attribute__((visibility ("default"))) CGRect UIGraphicsGetPDFContextBounds(void) __attribute__((availability(ios,introduced=3.2)));

extern "C" __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextURLForRect(NSURL *url, CGRect rect) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsAddPDFContextDestinationAtPoint(NSString *name, CGPoint point) __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextDestinationForRect(NSString *name, CGRect rect) __attribute__((availability(ios,introduced=3.2)));
#pragma clang assume_nonnull end

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UIImageConfiguration
#define _REWRITER_typedef_UIImageConfiguration
typedef struct objc_object UIImageConfiguration;
typedef struct {} _objc_exc_UIImageConfiguration;
#endif

struct UIImageConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// @property (nonatomic, nullable, readonly) UITraitCollection *traitCollection;


// - (instancetype)configurationWithTraitCollection:(nullable UITraitCollection *)traitCollection;






// - (instancetype)configurationByApplyingConfiguration:(nullable UIImageConfiguration *)otherConfiguration;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


typedef NSInteger UIImageSymbolScale; enum {
    UIImageSymbolScaleDefault = -1,
    UIImageSymbolScaleUnspecified = 0,
    UIImageSymbolScaleSmall = 1,
    UIImageSymbolScaleMedium,
    UIImageSymbolScaleLarge,
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));




typedef NSInteger UIImageSymbolWeight; enum {
    UIImageSymbolWeightUnspecified = 0,
    UIImageSymbolWeightUltraLight = 1,
    UIImageSymbolWeightThin,
    UIImageSymbolWeightLight,
    UIImageSymbolWeightRegular,
    UIImageSymbolWeightMedium,
    UIImageSymbolWeightSemibold,
    UIImageSymbolWeightBold,
    UIImageSymbolWeightHeavy,
    UIImageSymbolWeightBlack
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

extern "C" __attribute__((visibility ("default"))) UIFontWeight UIFontWeightForImageSymbolWeight(UIImageSymbolWeight symbolWeight) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) UIImageSymbolWeight UIImageSymbolWeightForFontWeight(UIFontWeight fontWeight) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))

#ifndef _REWRITER_typedef_UIImageSymbolConfiguration
#define _REWRITER_typedef_UIImageSymbolConfiguration
typedef struct objc_object UIImageSymbolConfiguration;
typedef struct {} _objc_exc_UIImageSymbolConfiguration;
#endif

struct UIImageSymbolConfiguration_IMPL {
	struct UIImageConfiguration_IMPL UIImageConfiguration_IVARS;
};



@property (class, nonatomic, readonly) UIImageSymbolConfiguration *unspecifiedConfiguration;


// + (instancetype)configurationWithScale:(UIImageSymbolScale)scale;


// + (instancetype)configurationWithPointSize:(CGFloat)pointSize;
// + (instancetype)configurationWithWeight:(UIImageSymbolWeight)weight;
// + (instancetype)configurationWithPointSize:(CGFloat)pointSize weight:(UIImageSymbolWeight)weight;
// + (instancetype)configurationWithPointSize:(CGFloat)pointSize weight:(UIImageSymbolWeight)weight scale:(UIImageSymbolScale)scale;


// + (instancetype)configurationWithTextStyle:(UIFontTextStyle)textStyle;
// + (instancetype)configurationWithTextStyle:(UIFontTextStyle)textStyle scale:(UIImageSymbolScale)scale;


// + (instancetype)configurationWithFont:(UIFont *)font;
// + (instancetype)configurationWithFont:(UIFont *)font scale:(UIImageSymbolScale)scale;


// - (instancetype)configurationWithoutTextStyle;
// - (instancetype)configurationWithoutScale;
// - (instancetype)configurationWithoutWeight;
// - (instancetype)configurationWithoutPointSizeAndWeight;




// - (BOOL)isEqualToConfiguration:(nullable UIImageSymbolConfiguration *)otherConfiguration;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsRendererFormat
#define _REWRITER_typedef_UIGraphicsRendererFormat
typedef struct objc_object UIGraphicsRendererFormat;
typedef struct {} _objc_exc_UIGraphicsRendererFormat;
#endif

struct UIGraphicsRendererFormat_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)defaultFormat __attribute__((availability(tvos,introduced=10.0,deprecated=11.0,replacement="preferredFormat"))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));


// + (instancetype)preferredFormat __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));


// @property (nonatomic, readonly) CGRect bounds;
/* @end */







extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsRendererContext
#define _REWRITER_typedef_UIGraphicsRendererContext
typedef struct objc_object UIGraphicsRendererContext;
typedef struct {} _objc_exc_UIGraphicsRendererContext;
#endif

struct UIGraphicsRendererContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly) CGContextRef CGContext;
// @property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;

// - (void)fillRect:(CGRect)rect;
// - (void)fillRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

// - (void)strokeRect:(CGRect)rect;
// - (void)strokeRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

// - (void)clipToRect:(CGRect)rect;
/* @end */





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsRenderer
#define _REWRITER_typedef_UIGraphicsRenderer
typedef struct objc_object UIGraphicsRenderer;
typedef struct {} _objc_exc_UIGraphicsRenderer;
#endif

struct UIGraphicsRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithBounds:(CGRect)bounds;
// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsRendererFormat *)format __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;
// @property (nonatomic, readonly) BOOL allowsImageOutput;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIGraphicsImageRendererContext;
#ifndef _REWRITER_typedef_UIGraphicsImageRendererContext
#define _REWRITER_typedef_UIGraphicsImageRendererContext
typedef struct objc_object UIGraphicsImageRendererContext;
typedef struct {} _objc_exc_UIGraphicsImageRendererContext;
#endif


typedef void (*UIGraphicsImageDrawingActions)(UIGraphicsImageRendererContext *rendererContext) __attribute__((availability(ios,introduced=10.0)));

typedef NSInteger UIGraphicsImageRendererFormatRange; enum {
    UIGraphicsImageRendererFormatRangeUnspecified = -1,
    UIGraphicsImageRendererFormatRangeAutomatic = 0,
    UIGraphicsImageRendererFormatRangeExtended,
    UIGraphicsImageRendererFormatRangeStandard
} __attribute__((availability(ios,introduced=12.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRendererFormat
#define _REWRITER_typedef_UIGraphicsImageRendererFormat
typedef struct objc_object UIGraphicsImageRendererFormat;
typedef struct {} _objc_exc_UIGraphicsImageRendererFormat;
#endif

struct UIGraphicsImageRendererFormat_IMPL {
	struct UIGraphicsRendererFormat_IMPL UIGraphicsRendererFormat_IVARS;
};


// @property (nonatomic) CGFloat scale;
// @property (nonatomic) BOOL opaque;
// @property (nonatomic) BOOL prefersExtendedRange __attribute__((availability(ios,introduced=10.0,deprecated=12.0,message="Use the preferredRange property instead")));

// @property (nonatomic) UIGraphicsImageRendererFormatRange preferredRange __attribute__((availability(ios,introduced=12.0)));



// + (instancetype)formatForTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=11.0)));
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRendererContext
#define _REWRITER_typedef_UIGraphicsImageRendererContext
typedef struct objc_object UIGraphicsImageRendererContext;
typedef struct {} _objc_exc_UIGraphicsImageRendererContext;
#endif

struct UIGraphicsImageRendererContext_IMPL {
	struct UIGraphicsRendererContext_IMPL UIGraphicsRendererContext_IVARS;
};

// @property (nonatomic, readonly) UIImage *currentImage;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRenderer
#define _REWRITER_typedef_UIGraphicsImageRenderer
typedef struct objc_object UIGraphicsImageRenderer;
typedef struct {} _objc_exc_UIGraphicsImageRenderer;
#endif

struct UIGraphicsImageRenderer_IMPL {
	struct UIGraphicsRenderer_IMPL UIGraphicsRenderer_IVARS;
};

// - (instancetype)initWithSize:(CGSize)size;
// - (instancetype)initWithSize:(CGSize)size format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));
// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));



// - (UIImage *)imageWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;


// - (NSData *)PNGDataWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
// - (NSData *)JPEGDataWithCompressionQuality:(CGFloat)compressionQuality actions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIGraphicsPDFRendererContext;
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererContext
#define _REWRITER_typedef_UIGraphicsPDFRendererContext
typedef struct objc_object UIGraphicsPDFRendererContext;
typedef struct {} _objc_exc_UIGraphicsPDFRendererContext;
#endif


typedef void (*UIGraphicsPDFDrawingActions)(UIGraphicsPDFRendererContext *rendererContext) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererFormat
#define _REWRITER_typedef_UIGraphicsPDFRendererFormat
typedef struct objc_object UIGraphicsPDFRendererFormat;
typedef struct {} _objc_exc_UIGraphicsPDFRendererFormat;
#endif

struct UIGraphicsPDFRendererFormat_IMPL {
	struct UIGraphicsRendererFormat_IMPL UIGraphicsRendererFormat_IVARS;
};

// @property (nonatomic, copy) NSDictionary<NSString *, id> *documentInfo;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererContext
#define _REWRITER_typedef_UIGraphicsPDFRendererContext
typedef struct objc_object UIGraphicsPDFRendererContext;
typedef struct {} _objc_exc_UIGraphicsPDFRendererContext;
#endif

struct UIGraphicsPDFRendererContext_IMPL {
	struct UIGraphicsRendererContext_IMPL UIGraphicsRendererContext_IVARS;
};

// @property (nonatomic, readonly) CGRect pdfContextBounds;

// - (void)beginPage;
// - (void)beginPageWithBounds:(CGRect)bounds pageInfo:(NSDictionary<NSString *, id> *)pageInfo;

// - (void)setURL:(NSURL *)url forRect:(CGRect)rect;
// - (void)addDestinationWithName:(NSString *)name atPoint:(CGPoint)point;
// - (void)setDestinationWithName:(NSString *)name forRect:(CGRect)rect;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRenderer
#define _REWRITER_typedef_UIGraphicsPDFRenderer
typedef struct objc_object UIGraphicsPDFRenderer;
typedef struct {} _objc_exc_UIGraphicsPDFRenderer;
#endif

struct UIGraphicsPDFRenderer_IMPL {
	struct UIGraphicsRenderer_IMPL UIGraphicsRenderer_IVARS;
};

// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsPDFRendererFormat *)format __attribute__((objc_designated_initializer));

// - (BOOL)writePDFToURL:(NSURL *)url withActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions error:(NSError **)error;
// - (NSData *)PDFDataWithActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions;
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin




typedef NSString * NSDataAssetName __attribute__((swift_bridged_typedef)) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) 
#ifndef _REWRITER_typedef_NSDataAsset
#define _REWRITER_typedef_NSDataAsset
typedef struct objc_object NSDataAsset;
typedef struct {} _objc_exc_NSDataAsset;
#endif

struct NSDataAsset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));


// - (nullable instancetype)initWithName:(NSDataAssetName)name;

// - (nullable instancetype)initWithName:(NSDataAssetName)name bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));


// @property (nonatomic, readonly, copy) NSDataAssetName name;

// @property (nonatomic, readonly, copy) NSData *data;

// @property (nonatomic, readonly, copy) NSString *typeIdentifier;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

// @protocol UIImageConfiguration;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIImageAsset
#define _REWRITER_typedef_UIImageAsset
typedef struct objc_object UIImageAsset;
typedef struct {} _objc_exc_UIImageAsset;
#endif

struct UIImageAsset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (UIImage *)imageWithConfiguration:(UIImageConfiguration *)configuration;
// - (void)registerImage:(UIImage *)image withConfiguration:(UIImageConfiguration *)configuration;
// - (void)unregisterImageWithConfiguration:(UIImageConfiguration *)configuration;

// - (UIImage *)imageWithTraitCollection:(UITraitCollection *)traitCollection;
// - (void)registerImage:(UIImage *)image withTraitCollection:(UITraitCollection *)traitCollection;
// - (void)unregisterImageWithTraitCollection:(UITraitCollection *)traitCollection;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UIPanGestureRecognizer
#define _REWRITER_typedef_UIPanGestureRecognizer
typedef struct objc_object UIPanGestureRecognizer;
typedef struct {} _objc_exc_UIPanGestureRecognizer;
#endif

struct UIPanGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger minimumNumberOfTouches __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSUInteger maximumNumberOfTouches __attribute__((availability(tvos,unavailable)));

// - (CGPoint)translationInView:(nullable UIView *)view;
// - (void)setTranslation:(CGPoint)translation inView:(nullable UIView *)view;

// - (CGPoint)velocityInView:(nullable UIView *)view;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UITapGestureRecognizer
#define _REWRITER_typedef_UITapGestureRecognizer
typedef struct objc_object UITapGestureRecognizer;
typedef struct {} _objc_exc_UITapGestureRecognizer;
#endif

struct UITapGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger numberOfTapsRequired;
// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UINavigationControllerOperation; enum {
    UINavigationControllerOperationNone,
    UINavigationControllerOperationPush,
    UINavigationControllerOperationPop,
};

extern "C" __attribute__((visibility ("default"))) const CGFloat UINavigationControllerHideShowBarDuration;

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UINavigationBar
#define _REWRITER_typedef_UINavigationBar
typedef struct objc_object UINavigationBar;
typedef struct {} _objc_exc_UINavigationBar;
#endif

#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

// @protocol UINavigationControllerDelegate;


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UINavigationController
#define _REWRITER_typedef_UINavigationController
typedef struct objc_object UINavigationController;
typedef struct {} _objc_exc_UINavigationController;
#endif

struct UINavigationController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};







// - (instancetype)initWithNavigationBarClass:(nullable Class)navigationBarClass toolbarClass:(nullable Class)toolbarClass __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=5.0)));

// - (instancetype)initWithRootViewController:(UIViewController *)rootViewController __attribute__((objc_designated_initializer));

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated;

// - (nullable UIViewController *)popViewControllerAnimated:(BOOL)animated;
// - (nullable NSArray<__kindof UIViewController *> *)popToViewController:(UIViewController *)viewController animated:(BOOL)animated;
// - (nullable NSArray<__kindof UIViewController *> *)popToRootViewControllerAnimated:(BOOL)animated;

// @property(nullable, nonatomic,readonly,strong) UIViewController *topViewController;
// @property(nullable, nonatomic,readonly,strong) UIViewController *visibleViewController;

// @property(nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;

// - (void)setViewControllers:(NSArray<UIViewController *> *)viewControllers animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0)));

// @property(nonatomic,getter=isNavigationBarHidden) BOOL navigationBarHidden;
// - (void)setNavigationBarHidden:(BOOL)hidden animated:(BOOL)animated;
// @property(nonatomic,readonly) UINavigationBar *navigationBar;

// @property(nonatomic,getter=isToolbarHidden) BOOL toolbarHidden __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// - (void)setToolbarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// @property(null_resettable,nonatomic,readonly) UIToolbar *toolbar __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic, weak) id<UINavigationControllerDelegate> delegate;
// @property(nullable, nonatomic, readonly) UIGestureRecognizer *interactivePopGestureRecognizer __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));

// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, readwrite, assign) BOOL hidesBarsWhenKeyboardAppears __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsOnSwipe __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readonly, strong) UIPanGestureRecognizer *barHideOnSwipeGestureRecognizer __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsWhenVerticallyCompact __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsOnTap __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readonly, assign) UITapGestureRecognizer *barHideOnTapGestureRecognizer __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIViewControllerInteractiveTransitioning;
// @protocol UIViewControllerAnimatedTransitioning;

// @protocol UINavigationControllerDelegate <NSObject>

/* @optional */


// - (void)navigationController:(UINavigationController *)navigationController willShowViewController:(UIViewController *)viewController animated:(BOOL)animated;
// - (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated;

// - (UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));

#if 0
- (nullable id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)navigationController
                          interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>) animationController __attribute__((availability(ios,introduced=7.0)));
#endif


#if 0
- (nullable id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)navigationController
                                   animationControllerForOperation:(UINavigationControllerOperation)operation
                                                fromViewController:(UIViewController *)fromVC
                                                  toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7.0)));
#endif


/* @end */


// @interface UIViewController (UINavigationControllerItem)

// @property(nonatomic,readonly,strong) UINavigationItem *navigationItem;
// @property(nonatomic) BOOL hidesBottomBarWhenPushed __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic,readonly,strong) UINavigationController *navigationController;

/* @end */


// @interface UIViewController (UINavigationControllerContextualToolbarItems)

// @property (nullable, nonatomic, strong) NSArray<__kindof UIBarButtonItem *> *toolbarItems __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// - (void)setToolbarItems:(nullable NSArray<UIBarButtonItem *> *)toolbarItems animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

// @protocol UIImagePickerControllerDelegate;

typedef NSInteger UIImagePickerControllerSourceType; enum {
    UIImagePickerControllerSourceTypePhotoLibrary,
    UIImagePickerControllerSourceTypeCamera,
    UIImagePickerControllerSourceTypeSavedPhotosAlbum
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerQualityType; enum {
    UIImagePickerControllerQualityTypeHigh = 0,
    UIImagePickerControllerQualityTypeMedium = 1,
    UIImagePickerControllerQualityTypeLow = 2,
    UIImagePickerControllerQualityType640x480 __attribute__((availability(ios,introduced=4.0))) = 3,
    UIImagePickerControllerQualityTypeIFrame1280x720 __attribute__((availability(ios,introduced=5.0))) = 4,
    UIImagePickerControllerQualityTypeIFrame960x540 __attribute__((availability(ios,introduced=5.0))) = 5,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraCaptureMode; enum {
    UIImagePickerControllerCameraCaptureModePhoto,
    UIImagePickerControllerCameraCaptureModeVideo
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraDevice; enum {
    UIImagePickerControllerCameraDeviceRear,
    UIImagePickerControllerCameraDeviceFront
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraFlashMode; enum {
    UIImagePickerControllerCameraFlashModeOff = -1,
    UIImagePickerControllerCameraFlashModeAuto = 0,
    UIImagePickerControllerCameraFlashModeOn = 1
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerImageURLExportPreset; enum {
    UIImagePickerControllerImageURLExportPresetCompatible = 0,
    UIImagePickerControllerImageURLExportPresetCurrent
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

typedef NSString * UIImagePickerControllerInfoKey __attribute__((swift_wrapper(enum)));


extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerMediaType __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerOriginalImage __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerEditedImage __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerCropRect __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerMediaURL __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerReferenceURL __attribute__((availability(ios,introduced=4.1,deprecated=11.0,replacement="UIImagePickerControllerPHAsset"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerMediaMetadata __attribute__((availability(ios,introduced=4.1))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerLivePhoto __attribute__((availability(ios,introduced=9.1))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerPHAsset __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIImagePickerControllerInfoKey const UIImagePickerControllerImageURL __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIImagePickerController
#define _REWRITER_typedef_UIImagePickerController
typedef struct objc_object UIImagePickerController;
typedef struct {} _objc_exc_UIImagePickerController;
#endif

struct UIImagePickerController_IMPL {
	struct UINavigationController_IMPL UINavigationController_IVARS;
};


// + (BOOL)isSourceTypeAvailable:(UIImagePickerControllerSourceType)sourceType;
// + (nullable NSArray<NSString *> *)availableMediaTypesForSourceType:(UIImagePickerControllerSourceType)sourceType;

// + (BOOL)isCameraDeviceAvailable:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4.0)));
// + (BOOL)isFlashAvailableForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4.0)));
// + (nullable NSArray<NSNumber *> *)availableCaptureModesForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4.0)));

// @property(nullable,nonatomic,weak) id <UINavigationControllerDelegate, UIImagePickerControllerDelegate> delegate;

// @property(nonatomic) UIImagePickerControllerSourceType sourceType;
// @property(nonatomic,copy) NSArray<NSString *> *mediaTypes;

// @property(nonatomic) BOOL allowsEditing __attribute__((availability(ios,introduced=3.1)));
// @property(nonatomic) BOOL allowsImageEditing __attribute__((availability(ios,introduced=2.0,deprecated=3.1,message="")));
// @property(nonatomic) UIImagePickerControllerImageURLExportPreset imageExportPreset __attribute__((availability(ios,introduced=11.0)));


// @property(nonatomic) NSTimeInterval videoMaximumDuration __attribute__((availability(ios,introduced=3.1)));
// @property(nonatomic) UIImagePickerControllerQualityType videoQuality __attribute__((availability(ios,introduced=3.1)));
// @property(nonatomic, copy) NSString *videoExportPreset __attribute__((availability(ios,introduced=11.0)));



// @property(nonatomic) BOOL showsCameraControls __attribute__((availability(ios,introduced=3.1)));
// @property(nullable, nonatomic,strong) __kindof UIView *cameraOverlayView __attribute__((availability(ios,introduced=3.1)));
// @property(nonatomic) CGAffineTransform cameraViewTransform __attribute__((availability(ios,introduced=3.1)));

// - (void)takePicture __attribute__((availability(ios,introduced=3.1)));



// - (BOOL)startVideoCapture __attribute__((availability(ios,introduced=4.0)));
// - (void)stopVideoCapture __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic) UIImagePickerControllerCameraCaptureMode cameraCaptureMode __attribute__((availability(ios,introduced=4.0)));
// @property(nonatomic) UIImagePickerControllerCameraDevice cameraDevice __attribute__((availability(ios,introduced=4.0)));
// @property(nonatomic) UIImagePickerControllerCameraFlashMode cameraFlashMode __attribute__((availability(ios,introduced=4.0)));


/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIImagePickerControllerDelegate<NSObject>
/* @optional */



// - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(nullable NSDictionary<UIImagePickerControllerInfoKey, id> *)editingInfo __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message="")));
// - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> *)info;
// - (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker;

/* @end */





extern "C" __attribute__((visibility ("default"))) void UIImageWriteToSavedPhotosAlbum(UIImage *image, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) BOOL UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(NSString *videoPath) __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) void UISaveVideoAtPathToSavedPhotosAlbum(NSString *videoPath, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIInputViewStyle; enum {
    UIInputViewStyleDefault,
    UIInputViewStyleKeyboard,
} __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIInputView
#define _REWRITER_typedef_UIInputView
typedef struct objc_object UIInputView;
typedef struct {} _objc_exc_UIInputView;
#endif

struct UIInputView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, readonly) UIInputViewStyle inputViewStyle;

// @property (nonatomic, assign) BOOL allowsSelfSizing __attribute__((availability(ios,introduced=9.0)));

// - (instancetype)initWithFrame:(CGRect)frame inputViewStyle:(UIInputViewStyle)inputViewStyle __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UILexicon;
#ifndef _REWRITER_typedef_UILexicon
#define _REWRITER_typedef_UILexicon
typedef struct objc_object UILexicon;
typedef struct {} _objc_exc_UILexicon;
#endif


// @protocol UITextDocumentProxy <UIKeyInput>

// @property (nullable, nonatomic, readonly) NSString *documentContextBeforeInput;
// @property (nullable, nonatomic, readonly) NSString *documentContextAfterInput;
// @property (nullable, nonatomic, readonly) NSString *selectedText __attribute__((availability(ios,introduced=11.0)));



// @property (nullable, nonatomic, readonly) UITextInputMode *documentInputMode __attribute__((availability(ios,introduced=10.0)));

// @property (nonatomic, readonly, copy) NSUUID *documentIdentifier __attribute__((availability(ios,introduced=11.0)));

// - (void)adjustTextPositionByCharacterOffset:(NSInteger)offset;


// - (void)setMarkedText:(NSString *)markedText selectedRange:(NSRange)selectedRange __attribute__((availability(ios,introduced=13.0)));


// - (void)unmarkText __attribute__((availability(ios,introduced=13.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIInputViewController
#define _REWRITER_typedef_UIInputViewController
typedef struct objc_object UIInputViewController;
typedef struct {} _objc_exc_UIInputViewController;
#endif

struct UIInputViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property (nullable, nonatomic, strong) UIInputView *inputView;

// @property (nonatomic, readonly) id <UITextDocumentProxy> textDocumentProxy;



// @property (nullable, nonatomic, copy) NSString *primaryLanguage;


// @property (nonatomic) BOOL hasDictationKey;

// @property (nonatomic, readonly) BOOL hasFullAccess __attribute__((availability(ios,introduced=11.0)));
// @property (nonatomic, readonly) BOOL needsInputModeSwitchKey __attribute__((availability(ios,introduced=11.0)));

// - (void)dismissKeyboard;
// - (void)advanceToNextInputMode;




// - (void)handleInputModeListFromView:(nonnull UIView *)view withEvent:(nonnull UIEvent *)event __attribute__((availability(ios,introduced=10.0)));



// - (void)requestSupplementaryLexiconWithCompletion:(void (^)(UILexicon *))completionHandler;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

struct UILabel_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable, nonatomic,copy) NSString *text;
// @property(null_resettable, nonatomic,strong) UIFont *font __attribute__((annotate("ui_appearance_selector")));
// @property(null_resettable, nonatomic,strong) UIColor *textColor __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *shadowColor __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) CGSize shadowOffset __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) NSLineBreakMode lineBreakMode;


// @property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6.0)));



// @property(nullable, nonatomic,strong) UIColor *highlightedTextColor __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic,getter=isHighlighted) BOOL highlighted;

// @property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
// @property(nonatomic,getter=isEnabled) BOOL enabled;





// @property(nonatomic) NSInteger numberOfLines;




// @property(nonatomic) BOOL adjustsFontSizeToFitWidth;
// @property(nonatomic) UIBaselineAdjustment baselineAdjustment;
// @property(nonatomic) CGFloat minimumScaleFactor __attribute__((availability(ios,introduced=6.0)));




// @property(nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9.0)));




// - (CGRect)textRectForBounds:(CGRect)bounds limitedToNumberOfLines:(NSInteger)numberOfLines;
// - (void)drawTextInRect:(CGRect)rect;




// @property(nonatomic) CGFloat preferredMaxLayoutWidth __attribute__((availability(ios,introduced=6.0)));



// @property (nonatomic) BOOL enablesMarqueeWhenAncestorFocused __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property(nonatomic) CGFloat minimumFontSize __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message=""))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic) BOOL adjustsLetterSpacingToFitWidth __attribute__((availability(ios,introduced=6.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UILexiconEntry
#define _REWRITER_typedef_UILexiconEntry
typedef struct objc_object UILexiconEntry;
typedef struct {} _objc_exc_UILexiconEntry;
#endif

struct UILexiconEntry_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (nonatomic, readonly) NSString *documentText;
// @property (nonatomic, readonly) NSString *userInput;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UILexicon
#define _REWRITER_typedef_UILexicon
typedef struct objc_object UILexicon;
typedef struct {} _objc_exc_UILexicon;
#endif

struct UILexicon_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly) NSArray<UILexiconEntry *> *entries;
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @protocol UILargeContentViewerInteractionDelegate;







__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UILargeContentViewerItem <NSObject>




// @property (nonatomic, assign, readonly) BOOL showsLargeContentViewer;


// @property (nullable, nonatomic, copy, readonly) NSString *largeContentTitle;


// @property (nullable, nonatomic, strong, readonly) UIImage *largeContentImage;




// @property (nonatomic, assign, readonly) BOOL scalesLargeContentImage;


// @property (nonatomic, assign, readonly) UIEdgeInsets largeContentImageInsets;

/* @end */


// @interface UIView (UILargeContentViewer) <UILargeContentViewerItem>


// @property (nonatomic, assign, readwrite) BOOL showsLargeContentViewer __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readwrite) NSString *largeContentTitle __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, strong, readwrite) UIImage *largeContentImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readwrite) BOOL scalesLargeContentImage __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readwrite) UIEdgeInsets largeContentImageInsets __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UILargeContentViewerInteraction
#define _REWRITER_typedef_UILargeContentViewerInteraction
typedef struct objc_object UILargeContentViewerInteraction;
typedef struct {} _objc_exc_UILargeContentViewerInteraction;
#endif

struct UILargeContentViewerInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDelegate:(nullable id<UILargeContentViewerInteractionDelegate>)delegate __attribute__((objc_designated_initializer));

// @property (nonatomic, nullable, weak, readonly) id<UILargeContentViewerInteractionDelegate> delegate;


// @property (nonatomic, strong, readonly) UIGestureRecognizer *gestureRecognizerForExclusionRelationship;






@property (class, nonatomic, readonly, getter=isEnabled) BOOL enabled;

/* @end */


__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UILargeContentViewerInteractionDelegate <NSObject>

/* @optional */






// - (void)largeContentViewerInteraction:(UILargeContentViewerInteraction *)interaction didEndOnItem:(nullable id<UILargeContentViewerItem>)item atPoint:(CGPoint)point;



// - (nullable id<UILargeContentViewerItem>)largeContentViewerInteraction:(UILargeContentViewerInteraction *)interaction itemAtPoint:(CGPoint)point;



// - (UIViewController *)viewControllerForLargeContentViewerInteraction:(UILargeContentViewerInteraction *)interaction;

/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UILargeContentViewerInteractionEnabledStatusDidChangeNotification __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class CLRegion;
#ifndef _REWRITER_typedef_CLRegion
#define _REWRITER_typedef_CLRegion
typedef struct objc_object CLRegion;
typedef struct {} _objc_exc_CLRegion;
#endif



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationRequest"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UILocalNotification
#define _REWRITER_typedef_UILocalNotification
typedef struct objc_object UILocalNotification;
typedef struct {} _objc_exc_UILocalNotification;
#endif

struct UILocalNotification_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property(nullable, nonatomic,copy) NSDate *fireDate;


// @property(nullable, nonatomic,copy) NSTimeZone *timeZone;

// @property(nonatomic) NSCalendarUnit repeatInterval;
// @property(nullable, nonatomic,copy) NSCalendar *repeatCalendar;




// @property(nullable, nonatomic,copy) CLRegion *region __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic,assign) BOOL regionTriggersOnce __attribute__((availability(ios,introduced=8.0)));


// @property(nullable, nonatomic,copy) NSString *alertBody;
// @property(nonatomic) BOOL hasAction;
// @property(nullable, nonatomic,copy) NSString *alertAction;
// @property(nullable, nonatomic,copy) NSString *alertLaunchImage;
// @property(nullable, nonatomic,copy) NSString *alertTitle __attribute__((availability(ios,introduced=8.2)));


// @property(nullable, nonatomic,copy) NSString *soundName;


// @property(nonatomic) NSInteger applicationIconBadgeNumber;


// @property(nullable, nonatomic,copy) NSDictionary *userInfo;


// @property (nullable, nonatomic, copy) NSString *category __attribute__((availability(ios,introduced=8.0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSString *const UILocalNotificationDefaultSoundName __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use UserNotifications Framework's +[UNNotificationSound defaultSound]"))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


typedef NSInteger UIApplicationShortcutIconType; enum {
    UIApplicationShortcutIconTypeCompose,
    UIApplicationShortcutIconTypePlay,
    UIApplicationShortcutIconTypePause,
    UIApplicationShortcutIconTypeAdd,
    UIApplicationShortcutIconTypeLocation,
    UIApplicationShortcutIconTypeSearch,
    UIApplicationShortcutIconTypeShare,
    UIApplicationShortcutIconTypeProhibit __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeContact __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeHome __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeMarkLocation __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeFavorite __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeLove __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeCloud __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeInvitation __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeConfirmation __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeMail __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeMessage __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeDate __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeTime __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeCapturePhoto __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeCaptureVideo __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeTask __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeTaskCompleted __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeAlarm __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeBookmark __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeShuffle __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeAudio __attribute__((availability(ios,introduced=9.1))),
    UIApplicationShortcutIconTypeUpdate __attribute__((availability(ios,introduced=9.1)))
} __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIApplicationShortcutIcon
#define _REWRITER_typedef_UIApplicationShortcutIcon
typedef struct objc_object UIApplicationShortcutIcon;
typedef struct {} _objc_exc_UIApplicationShortcutIcon;
#endif

struct UIApplicationShortcutIcon_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)iconWithType:(UIApplicationShortcutIconType)type;




// + (instancetype)iconWithTemplateImageName:(NSString *)templateImageName;



// + (instancetype)iconWithSystemImageName:(NSString *)systemImageName;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIApplicationShortcutItem
#define _REWRITER_typedef_UIApplicationShortcutItem
typedef struct objc_object UIApplicationShortcutItem;
typedef struct {} _objc_exc_UIApplicationShortcutItem;
#endif

struct UIApplicationShortcutItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle localizedSubtitle:(nullable NSString *)localizedSubtitle icon:(nullable UIApplicationShortcutIcon *)icon userInfo:(nullable NSDictionary<NSString *, id <NSSecureCoding>> *)userInfo __attribute__((objc_designated_initializer));
// - (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle;


// @property (nonatomic, copy, readonly) NSString *type;


// @property (nonatomic, copy, readonly) NSString *localizedTitle;
// @property (nullable, nonatomic, copy, readonly) NSString *localizedSubtitle;
// @property (nullable, nonatomic, copy, readonly) UIApplicationShortcutIcon *icon;



// @property (nullable, nonatomic, copy, readonly) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;


// @property (nullable, nonatomic, copy, readonly) id targetContentIdentifier;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableApplicationShortcutItem
#define _REWRITER_typedef_UIMutableApplicationShortcutItem
typedef struct objc_object UIMutableApplicationShortcutItem;
typedef struct {} _objc_exc_UIMutableApplicationShortcutItem;
#endif

struct UIMutableApplicationShortcutItem_IMPL {
	struct UIApplicationShortcutItem_IMPL UIApplicationShortcutItem_IVARS;
};



// @property (nonatomic, copy) NSString *type;


// @property (nonatomic, copy) NSString *localizedTitle;
// @property (nullable, nonatomic, copy) NSString *localizedSubtitle;
// @property (nullable, nonatomic, copy) UIApplicationShortcutIcon *icon;



// @property (nullable, nonatomic, copy) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;


// @property (nullable, nonatomic, copy) id targetContentIdentifier;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIUserNotificationCategory;
#ifndef _REWRITER_typedef_UIUserNotificationCategory
#define _REWRITER_typedef_UIUserNotificationCategory
typedef struct objc_object UIUserNotificationCategory;
typedef struct {} _objc_exc_UIUserNotificationCategory;
#endif

// @class UIUserNotificationAction;
#ifndef _REWRITER_typedef_UIUserNotificationAction
#define _REWRITER_typedef_UIUserNotificationAction
typedef struct objc_object UIUserNotificationAction;
typedef struct {} _objc_exc_UIUserNotificationAction;
#endif


typedef NSUInteger UIUserNotificationType; enum {
    UIUserNotificationTypeNone = 0,
    UIUserNotificationTypeBadge = 1 << 0,
    UIUserNotificationTypeSound = 1 << 1,
    UIUserNotificationTypeAlert = 1 << 2,
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActionBehavior; enum {
    UIUserNotificationActionBehaviorDefault,
    UIUserNotificationActionBehaviorTextInput
} __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction or UNTextInputNotificationAction"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActivationMode; enum {
    UIUserNotificationActivationModeForeground,
    UIUserNotificationActivationModeBackground
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationActionOptions"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActionContext; enum {
    UIUserNotificationActionContextDefault,
    UIUserNotificationActionContextMinimal
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNNotificationCategory actions] or -[UNNotificationCategory minimalActions]"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIUserNotificationTextInputActionButtonTitleKey __attribute__((availability(ios,introduced=9.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNTextInputNotificationAction textInputButtonTitle]"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIUserNotificationActionResponseTypedTextKey __attribute__((availability(ios,introduced=9.0,deprecated=10.0,message="Use UserNotifications Framework's -[UNTextInputNotificationResponse userText]"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationSettings"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationSettings
#define _REWRITER_typedef_UIUserNotificationSettings
typedef struct objc_object UIUserNotificationSettings;
typedef struct {} _objc_exc_UIUserNotificationSettings;
#endif

struct UIUserNotificationSettings_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



#if 0
+ (instancetype)settingsForTypes:(UIUserNotificationType)types
                      categories:(nullable NSSet<UIUserNotificationCategory *> *)categories;
#endif


// @property (nonatomic, readonly) UIUserNotificationType types;


// @property (nullable, nonatomic, copy, readonly) NSSet<UIUserNotificationCategory *> *categories;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationCategory
#define _REWRITER_typedef_UIUserNotificationCategory
typedef struct objc_object UIUserNotificationCategory;
typedef struct {} _objc_exc_UIUserNotificationCategory;
#endif

struct UIUserNotificationCategory_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


// - (nullable NSArray<UIUserNotificationAction *> *)actionsForContext:(UIUserNotificationActionContext)context __attribute__((availability(tvos,unavailable)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableUserNotificationCategory
#define _REWRITER_typedef_UIMutableUserNotificationCategory
typedef struct objc_object UIMutableUserNotificationCategory;
typedef struct {} _objc_exc_UIMutableUserNotificationCategory;
#endif

struct UIMutableUserNotificationCategory_IMPL {
	struct UIUserNotificationCategory_IMPL UIUserNotificationCategory_IVARS;
};



// @property (nullable, nonatomic, copy) NSString *identifier;


// - (void)setActions:(nullable NSArray<UIUserNotificationAction *> *)actions forContext:(UIUserNotificationActionContext)context;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationAction
#define _REWRITER_typedef_UIUserNotificationAction
typedef struct objc_object UIUserNotificationAction;
typedef struct {} _objc_exc_UIUserNotificationAction;
#endif

struct UIUserNotificationAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *title __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, copy, readonly) NSDictionary *parameters __attribute__((availability(ios,introduced=9.0)))__attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly) UIUserNotificationActivationMode activationMode __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly, getter=isAuthenticationRequired) BOOL authenticationRequired __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly, getter=isDestructive) BOOL destructive __attribute__((availability(tvos,unavailable)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableUserNotificationAction
#define _REWRITER_typedef_UIMutableUserNotificationAction
typedef struct objc_object UIMutableUserNotificationAction;
typedef struct {} _objc_exc_UIMutableUserNotificationAction;
#endif

struct UIMutableUserNotificationAction_IMPL {
	struct UIUserNotificationAction_IMPL UIUserNotificationAction_IVARS;
};



// @property (nullable, nonatomic, copy) NSString *identifier;


// @property (nullable, nonatomic, copy) NSString *title;


// @property (nonatomic, assign) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9.0)));


// @property (nonatomic, copy) NSDictionary *parameters __attribute__((availability(ios,introduced=9.0)));


// @property (nonatomic, assign) UIUserNotificationActivationMode activationMode;


// @property (nonatomic, assign, getter=isAuthenticationRequired) BOOL authenticationRequired;


// @property (nonatomic, assign, getter=isDestructive) BOOL destructive;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) 
#ifndef _REWRITER_typedef_UIFocusSystem
#define _REWRITER_typedef_UIFocusSystem
typedef struct objc_object UIFocusSystem;
typedef struct {} _objc_exc_UIFocusSystem;
#endif

struct UIFocusSystem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, weak, readonly, nullable) id<UIFocusItem> focusedItem __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));



// + (nullable UIFocusSystem *)focusSystemForEnvironment:(id<UIFocusEnvironment>)environment __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));



// - (void)requestFocusUpdateToEnvironment:(id<UIFocusEnvironment>)environment __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));


// - (void)updateFocusIfNeeded __attribute__((availability(tvos,introduced=12.0))) __attribute__((availability(ios,introduced=12.0)));


// + (BOOL)environment:(id<UIFocusEnvironment>)environment containsEnvironment:(id<UIFocusEnvironment>)otherEnvironment;


// + (void)registerURL:(NSURL *)soundFileURL forSoundIdentifier:(UIFocusSoundIdentifier)identifier __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end


// @protocol UIFocusDebuggerOutput, UIFocusEnvironment, UIFocusItem;

#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) 
#ifndef _REWRITER_typedef_UIFocusDebugger
#define _REWRITER_typedef_UIFocusDebugger
typedef struct objc_object UIFocusDebugger;
typedef struct {} _objc_exc_UIFocusDebugger;
#endif

struct UIFocusDebugger_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// + (id<UIFocusDebuggerOutput>)help;




// + (id<UIFocusDebuggerOutput>)status;




// + (id<UIFocusDebuggerOutput>)checkFocusabilityForItem:(id<UIFocusItem>)item;




// + (id<UIFocusDebuggerOutput>)simulateFocusUpdateRequestFromEnvironment:(id<UIFocusEnvironment>)environment;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) // @protocol UIFocusDebuggerOutput <NSObject>
/* @end */

#pragma clang assume_nonnull end
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=12.0))) 
#ifndef _REWRITER_typedef_UIFocusMovementHint
#define _REWRITER_typedef_UIFocusMovementHint
typedef struct objc_object UIFocusMovementHint;
typedef struct {} _objc_exc_UIFocusMovementHint;
#endif

struct UIFocusMovementHint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readonly) CGVector movementDirection;


// @property (nonatomic, readonly) CATransform3D perspectiveTransform;


// @property (nonatomic, readonly) CGVector rotation;


// @property (nonatomic, readonly) CGVector translation;


// @property (nonatomic, readonly) CATransform3D interactionTransform;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIHoverGestureRecognizer
#define _REWRITER_typedef_UIHoverGestureRecognizer
typedef struct objc_object UIHoverGestureRecognizer;
typedef struct {} _objc_exc_UIHoverGestureRecognizer;
#endif

struct UIHoverGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};

/* @end */

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.0))) 
#ifndef _REWRITER_typedef_UILocalizedIndexedCollation
#define _REWRITER_typedef_UILocalizedIndexedCollation
typedef struct objc_object UILocalizedIndexedCollation;
typedef struct {} _objc_exc_UILocalizedIndexedCollation;
#endif

struct UILocalizedIndexedCollation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)currentCollation;


// @property(nonatomic, readonly) NSArray<NSString *> * sectionTitles;


// @property(nonatomic, readonly) NSArray<NSString *> *sectionIndexTitles;




// - (NSInteger)sectionForSectionIndexTitleAtIndex:(NSInteger)indexTitleIndex;



// - (NSInteger)sectionForObject:(id)object collationStringSelector:(SEL)selector;





// - (NSArray *)sortedArrayFromArray:(NSArray *)array collationStringSelector:(SEL)selector;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif

struct UILongPressGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger numberOfTapsRequired;
// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) NSTimeInterval minimumPressDuration;
// @property (nonatomic) CGFloat allowableMovement;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSManagedObjectModel;
#ifndef _REWRITER_typedef_NSManagedObjectModel
#define _REWRITER_typedef_NSManagedObjectModel
typedef struct objc_object NSManagedObjectModel;
typedef struct {} _objc_exc_NSManagedObjectModel;
#endif

// @class NSManagedObjectContext;
#ifndef _REWRITER_typedef_NSManagedObjectContext
#define _REWRITER_typedef_NSManagedObjectContext
typedef struct objc_object NSManagedObjectContext;
typedef struct {} _objc_exc_NSManagedObjectContext;
#endif

// @class NSPersistentStoreCoordinator;
#ifndef _REWRITER_typedef_NSPersistentStoreCoordinator
#define _REWRITER_typedef_NSPersistentStoreCoordinator
typedef struct objc_object NSPersistentStoreCoordinator;
typedef struct {} _objc_exc_NSPersistentStoreCoordinator;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIManagedDocument
#define _REWRITER_typedef_UIManagedDocument
typedef struct objc_object UIManagedDocument;
typedef struct {} _objc_exc_UIManagedDocument;
#endif

struct UIManagedDocument_IMPL {
	struct UIDocument_IMPL UIDocument_IVARS;
};




@property(class, nonatomic, readonly) NSString *persistentStoreName;



// @property (nonatomic, strong, readonly) NSManagedObjectContext *managedObjectContext;



// @property (nonatomic, strong, readonly) NSManagedObjectModel* managedObjectModel;



// @property (nullable, nonatomic, copy) NSDictionary *persistentStoreOptions;



// @property (nullable, nonatomic, copy) NSString *modelConfiguration;



// - (BOOL)configurePersistentStoreCoordinatorForURL:(NSURL *)storeURL ofType:(NSString *)fileType modelConfiguration:(nullable NSString *)configuration storeOptions:(nullable NSDictionary *)storeOptions error:(NSError **)error;



// - (NSString *)persistentStoreTypeForFileType:(NSString *)fileType;



// - (BOOL)readAdditionalContentFromURL:(NSURL *)absoluteURL error:(NSError **)error;



// - (nullable id)additionalContentForURL:(NSURL *)absoluteURL error:(NSError **)error;



// - (BOOL)writeAdditionalContent:(id)content toURL:(NSURL *)absoluteURL originalContentsURL:(nullable NSURL *)absoluteOriginalContentsURL error:(NSError **)error;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIMenuControllerArrowDirection; enum {
    UIMenuControllerArrowDefault,
    UIMenuControllerArrowUp __attribute__((availability(ios,introduced=3.2))),
    UIMenuControllerArrowDown __attribute__((availability(ios,introduced=3.2))),
    UIMenuControllerArrowLeft __attribute__((availability(ios,introduced=3.2))),
    UIMenuControllerArrowRight __attribute__((availability(ios,introduced=3.2))),
} __attribute__((availability(tvos,unavailable)));

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIMenuItem
#define _REWRITER_typedef_UIMenuItem
typedef struct objc_object UIMenuItem;
typedef struct {} _objc_exc_UIMenuItem;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMenuController
#define _REWRITER_typedef_UIMenuController
typedef struct objc_object UIMenuController;
typedef struct {} _objc_exc_UIMenuController;
#endif

struct UIMenuController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property(class, nonatomic, readonly) UIMenuController *sharedMenuController;

// @property(nonatomic,getter=isMenuVisible) BOOL menuVisible;

// - (void)setMenuVisible:(BOOL)menuVisible __attribute__((availability(ios,introduced=3.0,deprecated=13.0,message="Use showMenuFromView:rect: or hideMenuFromView: instead.")));
// - (void)setMenuVisible:(BOOL)menuVisible animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0,deprecated=13.0,message="Use showMenuFromView:rect: or hideMenuFromView: instead.")));

// - (void)setTargetRect:(CGRect)targetRect inView:(UIView *)targetView __attribute__((availability(ios,introduced=3.0,deprecated=13.0,message="Use showMenuFromView:rect: instead.")));

// - (void)showMenuFromView:(UIView *)targetView rect:(CGRect)targetRect __attribute__((availability(ios,introduced=13.0)));
// - (void)hideMenuFromView:(UIView *)targetView __attribute__((availability(ios,introduced=13.0)));
// - (void)hideMenu __attribute__((availability(ios,introduced=13.0)));

// @property(nonatomic) UIMenuControllerArrowDirection arrowDirection __attribute__((availability(ios,introduced=3.2)));

// @property(nullable, nonatomic,copy) NSArray<UIMenuItem *> *menuItems __attribute__((availability(ios,introduced=3.2)));

// - (void)update;

// @property(nonatomic,readonly) CGRect menuFrame;

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerMenuFrameDidChangeNotification __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMenuItem
#define _REWRITER_typedef_UIMenuItem
typedef struct objc_object UIMenuItem;
typedef struct {} _objc_exc_UIMenuItem;
#endif

struct UIMenuItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTitle:(NSString *)title action:(SEL)action __attribute__((objc_designated_initializer));

// @property(nonatomic,copy) NSString *title;
// @property(nonatomic) SEL action;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIMotionEffect
#define _REWRITER_typedef_UIMotionEffect
typedef struct objc_object UIMotionEffect;
typedef struct {} _objc_exc_UIMotionEffect;
#endif

struct UIMotionEffect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (nullable NSDictionary<NSString *, id> *)keyPathsAndRelativeValuesForViewerOffset:(UIOffset)viewerOffset;

/* @end */




typedef NSInteger UIInterpolatingMotionEffectType; enum {



    UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis,




    UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis
};






extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIInterpolatingMotionEffect
#define _REWRITER_typedef_UIInterpolatingMotionEffect
typedef struct objc_object UIInterpolatingMotionEffect;
typedef struct {} _objc_exc_UIInterpolatingMotionEffect;
#endif

struct UIInterpolatingMotionEffect_IMPL {
	struct UIMotionEffect_IMPL UIMotionEffect_IVARS;
};


// - (instancetype)initWithKeyPath:(NSString *)keyPath type:(UIInterpolatingMotionEffectType)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// @property (readonly, nonatomic) NSString *keyPath;
// @property (readonly, nonatomic) UIInterpolatingMotionEffectType type;

// @property (nullable, strong, nonatomic) id minimumRelativeValue;
// @property (nullable, strong, nonatomic) id maximumRelativeValue;

/* @end */






extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIMotionEffectGroup
#define _REWRITER_typedef_UIMotionEffectGroup
typedef struct objc_object UIMotionEffectGroup;
typedef struct {} _objc_exc_UIMotionEffectGroup;
#endif

struct UIMotionEffectGroup_IMPL {
	struct UIMotionEffect_IMPL UIMotionEffect_IVARS;
};

// @property (nullable, copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects;
/* @end */

#pragma clang assume_nonnull end
// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif

#ifndef _REWRITER_typedef_UINavigationBarAppearance
#define _REWRITER_typedef_UINavigationBarAppearance
typedef struct objc_object UINavigationBarAppearance;
typedef struct {} _objc_exc_UINavigationBarAppearance;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger UINavigationItemLargeTitleDisplayMode; enum {

    UINavigationItemLargeTitleDisplayModeAutomatic,

    UINavigationItemLargeTitleDisplayModeAlways,

    UINavigationItemLargeTitleDisplayModeNever,
} __attribute__((swift_name("UINavigationItem.LargeTitleDisplayMode")));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

struct UINavigationItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTitle:(NSString *)title __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nullable, nonatomic,copy) NSString *title;
// @property(nullable, nonatomic,strong) UIView *titleView;

// @property(nullable,nonatomic,copy) NSString *prompt __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,strong) UIBarButtonItem *backBarButtonItem __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,assign) BOOL hidesBackButton __attribute__((availability(tvos,unavailable)));
// - (void)setHidesBackButton:(BOOL)hidesBackButton animated:(BOOL)animated __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *leftBarButtonItems __attribute__((availability(ios,introduced=5.0)));
// @property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *rightBarButtonItems __attribute__((availability(ios,introduced=5.0)));
// - (void)setLeftBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));
// - (void)setRightBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));






// @property(nonatomic) BOOL leftItemsSupplementBackButton __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));



// @property(nullable, nonatomic,strong) UIBarButtonItem *leftBarButtonItem;
// @property(nullable, nonatomic,strong) UIBarButtonItem *rightBarButtonItem;
// - (void)setLeftBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;
// - (void)setRightBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;


// @property (nonatomic, readwrite, assign) UINavigationItemLargeTitleDisplayMode largeTitleDisplayMode __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, retain, nullable) UISearchController *searchController __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) BOOL hidesSearchBarWhenScrolling __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, readwrite, copy, nullable) UINavigationBarAppearance *standardAppearance __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

// @property (nonatomic, readwrite, copy, nullable) UINavigationBarAppearance *compactAppearance __attribute__((availability(ios,introduced=13.0)));

// @property (nonatomic, readwrite, copy, nullable) UINavigationBarAppearance *scrollEdgeAppearance __attribute__((availability(ios,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UINavigationItem;
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UINavigationBarAppearance
#define _REWRITER_typedef_UINavigationBarAppearance
typedef struct objc_object UINavigationBarAppearance;
typedef struct {} _objc_exc_UINavigationBarAppearance;
#endif

// @protocol UINavigationBarDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UINavigationBar
#define _REWRITER_typedef_UINavigationBar
typedef struct objc_object UINavigationBar;
typedef struct {} _objc_exc_UINavigationBar;
#endif

struct UINavigationBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic,assign) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,weak) id<UINavigationBarDelegate> delegate;
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)pushNavigationItem:(UINavigationItem *)item animated:(BOOL)animated;
// - (nullable UINavigationItem *)popNavigationItemAnimated:(BOOL)animated;

// @property(nullable, nonatomic,readonly,strong) UINavigationItem *topItem;
// @property(nullable, nonatomic,readonly,strong) UINavigationItem *backItem;

// @property(nullable,nonatomic,copy) NSArray<UINavigationItem *> *items;
// - (void)setItems:(nullable NSArray<UINavigationItem *> *)items animated:(BOOL)animated;


// @property (nonatomic, readwrite, assign) BOOL prefersLargeTitles __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));






// @property(null_resettable, nonatomic,strong) UIColor *tintColor;
// @property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));





// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic,strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable,nonatomic,copy) NSDictionary<NSAttributedStringKey, id> *titleTextAttributes __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, copy) NSDictionary<NSAttributedStringKey, id> *largeTitleTextAttributes __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

// - (void)setTitleVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (CGFloat)titleVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));






// @property(nullable,nonatomic,strong) UIImage *backIndicatorImage __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,strong) UIImage *backIndicatorTransitionMaskImage __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, readwrite, copy) UINavigationBarAppearance *standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

// @property (nonatomic, readwrite, copy, nullable) UINavigationBarAppearance *compactAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0)));

// @property (nonatomic, readwrite, copy, nullable) UINavigationBarAppearance *scrollEdgeAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0)));

/* @end */


// @protocol UINavigationBarDelegate <UIBarPositioningDelegate>

/* @optional */

// - (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPushItem:(UINavigationItem *)item;
// - (void)navigationBar:(UINavigationBar *)navigationBar didPushItem:(UINavigationItem *)item;
// - (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPopItem:(UINavigationItem *)item;
// - (void)navigationBar:(UINavigationBar *)navigationBar didPopItem:(UINavigationItem *)item;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSString * UINibOptionsKey __attribute__((swift_wrapper(enum)));

extern "C" __attribute__((visibility ("default"))) UINibOptionsKey const UINibExternalObjects __attribute__((availability(ios,introduced=3.0)));

// @interface NSBundle(UINibLoadingAdditions)
// - (nullable NSArray *)loadNibNamed:(NSString *)name owner:(nullable id)owner options:(nullable NSDictionary<UINibOptionsKey, id> *)options;
/* @end */


// @interface NSObject(UINibLoadingAdditions)
// - (void)awakeFromNib __attribute__((objc_requires_super));
// - (void)prepareForInterfaceBuilder __attribute__((availability(ios,introduced=8.0)));
/* @end */


extern "C" __attribute__((visibility ("default"))) NSString * const UINibProxiedObjectsKey __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message=""))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.0))) 
#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

struct UINib_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (UINib *)nibWithNibName:(NSString *)name bundle:(nullable NSBundle *)bundleOrNil;


// + (UINib *)nibWithData:(NSData *)data bundle:(nullable NSBundle *)bundleOrNil;





// - (NSArray *)instantiateWithOwner:(nullable id)ownerOrNil options:(nullable NSDictionary<UINibOptionsKey, id> *)optionsOrNil;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIPageControl
#define _REWRITER_typedef_UIPageControl
typedef struct objc_object UIPageControl;
typedef struct {} _objc_exc_UIPageControl;
#endif

struct UIPageControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic) NSInteger numberOfPages;
// @property(nonatomic) NSInteger currentPage;

// @property(nonatomic) BOOL hidesForSinglePage;

// @property(nonatomic) BOOL defersCurrentPageDisplay;
// - (void)updateCurrentPageDisplay;

// - (CGSize)sizeForNumberOfPages:(NSInteger)pageCount;

// @property(nullable, nonatomic,strong) UIColor *pageIndicatorTintColor __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *currentPageIndicatorTintColor __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIPageViewControllerNavigationOrientation; enum {
    UIPageViewControllerNavigationOrientationHorizontal = 0,
    UIPageViewControllerNavigationOrientationVertical = 1
};

typedef NSInteger UIPageViewControllerSpineLocation; enum {
    UIPageViewControllerSpineLocationNone = 0,
    UIPageViewControllerSpineLocationMin = 1,
    UIPageViewControllerSpineLocationMid = 2,
    UIPageViewControllerSpineLocationMax = 3
};

typedef NSInteger UIPageViewControllerNavigationDirection; enum {
    UIPageViewControllerNavigationDirectionForward,
    UIPageViewControllerNavigationDirectionReverse
};

typedef NSInteger UIPageViewControllerTransitionStyle; enum {
    UIPageViewControllerTransitionStylePageCurl = 0,
    UIPageViewControllerTransitionStyleScroll = 1
};

typedef NSString * UIPageViewControllerOptionsKey __attribute__((swift_wrapper(enum)));




extern "C" __attribute__((visibility ("default"))) UIPageViewControllerOptionsKey const UIPageViewControllerOptionSpineLocationKey;




extern "C" __attribute__((visibility ("default"))) UIPageViewControllerOptionsKey const UIPageViewControllerOptionInterPageSpacingKey __attribute__((availability(ios,introduced=6.0)));

// @protocol UIPageViewControllerDelegate, UIPageViewControllerDataSource;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) 
#ifndef _REWRITER_typedef_UIPageViewController
#define _REWRITER_typedef_UIPageViewController
typedef struct objc_object UIPageViewController;
typedef struct {} _objc_exc_UIPageViewController;
#endif

struct UIPageViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithTransitionStyle:(UIPageViewControllerTransitionStyle)style navigationOrientation:(UIPageViewControllerNavigationOrientation)navigationOrientation options:(nullable NSDictionary<UIPageViewControllerOptionsKey, id> *)options __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nullable, nonatomic, weak) id <UIPageViewControllerDelegate> delegate;
// @property (nullable, nonatomic, weak) id <UIPageViewControllerDataSource> dataSource;
// @property (nonatomic, readonly) UIPageViewControllerTransitionStyle transitionStyle;
// @property (nonatomic, readonly) UIPageViewControllerNavigationOrientation navigationOrientation;
// @property (nonatomic, readonly) UIPageViewControllerSpineLocation spineLocation;



// @property (nonatomic, getter=isDoubleSided) BOOL doubleSided;




// @property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;
// @property (nullable, nonatomic, readonly) NSArray<__kindof UIViewController *> *viewControllers;



// - (void)setViewControllers:(nullable NSArray<UIViewController *> *)viewControllers direction:(UIPageViewControllerNavigationDirection)direction animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion;

/* @end */


// @protocol UIPageViewControllerDelegate <NSObject>

/* @optional */


// - (void)pageViewController:(UIPageViewController *)pageViewController willTransitionToViewControllers:(NSArray<UIViewController *> *)pendingViewControllers __attribute__((availability(ios,introduced=6.0)));


// - (void)pageViewController:(UIPageViewController *)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> *)previousViewControllers transitionCompleted:(BOOL)completed;



// - (UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController *)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(tvos,unavailable)));

// - (UIInterfaceOrientationMask)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIPageViewControllerDataSource <NSObject>

/* @required */




// - (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerBeforeViewController:(UIViewController *)viewController;
// - (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerAfterViewController:(UIViewController *)viewController;

/* @optional */



// - (NSInteger)presentationCountForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6.0)));
// - (NSInteger)presentationIndexForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSString * UIPasteboardName __attribute__((swift_wrapper(struct)));

extern "C" __attribute__((visibility ("default"))) UIPasteboardName const UIPasteboardNameGeneral __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardNameFind __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=3.0,deprecated=10.0,message="The Find pasteboard is no longer available.")));

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UIPasteboard
#define _REWRITER_typedef_UIPasteboard
typedef struct objc_object UIPasteboard;
typedef struct {} _objc_exc_UIPasteboard;
#endif

struct UIPasteboard_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property(class, nonatomic, readonly) UIPasteboard *generalPasteboard;

// + (nullable UIPasteboard *)pasteboardWithName:(UIPasteboardName)pasteboardName create:(BOOL)create;
// + (UIPasteboard *)pasteboardWithUniqueName;

// @property(readonly,nonatomic) UIPasteboardName name;

// + (void)removePasteboardWithName:(UIPasteboardName)pasteboardName;

// @property(readonly,getter=isPersistent,nonatomic) BOOL persistent;
// - (void)setPersistent:(BOOL)persistent __attribute__((availability(ios,introduced=3.0,deprecated=10.0,message="Do not set persistence on pasteboards. This property is set automatically.")));
// @property(readonly,nonatomic) NSInteger changeCount;



// @property (nonatomic, copy) NSArray<__kindof NSItemProvider *> *itemProviders __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (void)setItemProviders:(NSArray<NSItemProvider *> *)itemProviders localOnly:(BOOL)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setObjects:(NSArray<id<NSItemProviderWriting>> *)objects __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)setObjects:(NSArray<id<NSItemProviderWriting>> *)objects localOnly:(BOOL)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property(nonatomic, readonly) NSArray<NSString *> * pasteboardTypes;
// - (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
// - (nullable NSData *)dataForPasteboardType:(NSString *)pasteboardType;

// - (nullable id)valueForPasteboardType:(NSString *)pasteboardType;

// - (void)setValue:(id)value forPasteboardType:(NSString *)pasteboardType;
// - (void)setData:(NSData *)data forPasteboardType:(NSString *)pasteboardType;



// @property(readonly,nonatomic) NSInteger numberOfItems;
// - (nullable NSArray<NSArray<NSString *> *> *)pasteboardTypesForItemSet:(nullable NSIndexSet*)itemSet;

// - (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes inItemSet:(nullable NSIndexSet *)itemSet;
// - (nullable NSIndexSet *)itemSetWithPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
// - (nullable NSArray *)valuesForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;
// - (nullable NSArray<NSData *> *)dataForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;



// @property(nonatomic,copy) NSArray<NSDictionary<NSString *, id> *> *items;
// - (void)addItems:(NSArray<NSDictionary<NSString *, id> *> *)items;

typedef NSString * UIPasteboardOption __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=10.0)));

extern "C" __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionExpirationDate __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0))) __attribute__((swift_name("UIPasteboardOption.expirationDate")));
extern "C" __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionLocalOnly __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0))) __attribute__((swift_name("UIPasteboardOption.localOnly")));

// - (void)setItems:(NSArray<NSDictionary<NSString *, id> *> *)items options:(NSDictionary<UIPasteboardOption, id> *)options __attribute__((availability(ios,introduced=10.0)));

// @property(nullable,nonatomic,copy) NSString *string __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<NSString *> *strings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) NSURL *URL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<NSURL *> *URLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) UIImage *image __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIImage *> *images __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) UIColor *color __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIColor *> *colors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, readonly) BOOL hasStrings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, readonly) BOOL hasURLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, readonly) BOOL hasImages __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0)));
// @property (nonatomic, readonly) BOOL hasColors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardChangedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesAddedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesRemovedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardRemovedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListString __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListURL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListImage __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListColor __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSString * const UIPasteboardTypeAutomatic __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPinchGestureRecognizer
#define _REWRITER_typedef_UIPinchGestureRecognizer
typedef struct objc_object UIPinchGestureRecognizer;
typedef struct {} _objc_exc_UIPinchGestureRecognizer;
#endif

struct UIPinchGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) CGFloat scale;
// @property (nonatomic,readonly) CGFloat velocity;

/* @end */

#pragma clang assume_nonnull end
typedef NSUInteger UIPopoverArrowDirection; enum {
    UIPopoverArrowDirectionUp = 1UL << 0,
    UIPopoverArrowDirectionDown = 1UL << 1,
    UIPopoverArrowDirectionLeft = 1UL << 2,
    UIPopoverArrowDirectionRight = 1UL << 3,
    UIPopoverArrowDirectionAny = UIPopoverArrowDirectionUp | UIPopoverArrowDirectionDown | UIPopoverArrowDirectionLeft | UIPopoverArrowDirectionRight,
    UIPopoverArrowDirectionUnknown = (9223372036854775807L *2UL+1UL)
};

// @interface UIViewController (UIPopoverController)



// @property (nonatomic,readwrite,getter=isModalInPopover) BOOL modalInPopover __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="modalInPresentation")));



// @property (nonatomic,readwrite) CGSize contentSizeForViewInPopover __attribute__((availability(ios,introduced=3.2,deprecated=7.0,replacement="preferredContentSize."))) __attribute__((availability(tvos,unavailable)));

/* @end */


#pragma clang assume_nonnull begin

// @class UIBarButtonItem;
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @protocol UIPopoverControllerDelegate;


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="UIPopoverController is deprecated. Popovers are now implemented as UIViewController presentations. Use a modal presentation style of UIModalPresentationPopover and UIPopoverPresentationController.")))

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

struct UIPopoverController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithContentViewController:(UIViewController *)viewController;

// @property (nullable, nonatomic, weak) id <UIPopoverControllerDelegate> delegate;



// @property (nonatomic, strong) UIViewController *contentViewController;
// - (void)setContentViewController:(UIViewController *)viewController animated:(BOOL)animated;



// @property (nonatomic) CGSize popoverContentSize;
// - (void)setPopoverContentSize:(CGSize)size animated:(BOOL)animated;



// @property (nonatomic, readonly, getter=isPopoverVisible) BOOL popoverVisible;



// @property (nonatomic, readonly) UIPopoverArrowDirection popoverArrowDirection;



// @property (nullable, nonatomic, copy) NSArray<__kindof UIView *> *passthroughViews;



// - (void)presentPopoverFromRect:(CGRect)rect inView:(UIView *)view permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



// - (void)presentPopoverFromBarButtonItem:(UIBarButtonItem *)item permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



// - (void)dismissPopoverAnimated:(BOOL)animated;



// @property (nullable, nonatomic, copy) UIColor *backgroundColor __attribute__((availability(ios,introduced=7.0)));



// @property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins __attribute__((availability(ios,introduced=5.0)));



// @property (nullable, nonatomic, readwrite, strong) Class popoverBackgroundViewClass __attribute__((availability(ios,introduced=5.0)));

/* @end */


// @protocol UIPopoverControllerDelegate <NSObject>
/* @optional */



// - (BOOL)popoverControllerShouldDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="")));



// - (void)popoverControllerDidDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="")));



// - (void)popoverController:(UIPopoverController *)popoverController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view __attribute__((availability(ios,introduced=7.0,deprecated=9.0,message="")));

/* @end */

#pragma clang assume_nonnull end
// @protocol UIPopoverBackgroundViewMethods


// + (CGFloat)arrowBase;



// + (UIEdgeInsets)contentViewInsets;

// + (CGFloat)arrowHeight;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0)))

#ifndef _REWRITER_typedef_UIPopoverBackgroundView
#define _REWRITER_typedef_UIPopoverBackgroundView
typedef struct objc_object UIPopoverBackgroundView;
typedef struct {} _objc_exc_UIPopoverBackgroundView;
#endif

struct UIPopoverBackgroundView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};






// @property (nonatomic, readwrite) CGFloat arrowOffset;



// @property (nonatomic, readwrite) UIPopoverArrowDirection arrowDirection;



@property(class, nonatomic, readonly) BOOL wantsDefaultContentAppearance __attribute__((availability(ios,introduced=6.0,deprecated=13.0,message="No longer supported")));

/* @end */

// @class UIGestureRecognizer;
#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

// @class UIResponder;
#ifndef _REWRITER_typedef_UIResponder
#define _REWRITER_typedef_UIResponder
typedef struct objc_object UIResponder;
typedef struct {} _objc_exc_UIResponder;
#endif

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif


__attribute__((availability(ios,introduced=9.0))) typedef NSInteger UIPressPhase; enum {
    UIPressPhaseBegan,
    UIPressPhaseChanged,
    UIPressPhaseStationary,
    UIPressPhaseEnded,
    UIPressPhaseCancelled,
};

__attribute__((availability(ios,introduced=9.0))) typedef NSInteger UIPressType; enum {
    UIPressTypeUpArrow,
    UIPressTypeDownArrow,
    UIPressTypeLeftArrow,
    UIPressTypeRightArrow,

    UIPressTypeSelect,
    UIPressTypeMenu,
    UIPressTypePlayPause,
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif

struct UIPress_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UIPressPhase phase;
// @property(nonatomic,readonly) UIPressType type;

// @property(nullable,nonatomic,readonly,strong) UIWindow *window;
// @property(nullable,nonatomic,readonly,strong) UIResponder *responder;
// @property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers;


// @property(nonatomic, readonly) CGFloat force;
/* @end */

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIPressesEvent
#define _REWRITER_typedef_UIPressesEvent
typedef struct objc_object UIPressesEvent;
typedef struct {} _objc_exc_UIPressesEvent;
#endif

struct UIPressesEvent_IMPL {
	struct UIEvent_IMPL UIEvent_IVARS;
};


// @property(nonatomic, readonly) NSSet <UIPress *> *allPresses;
// - (NSSet <UIPress *> *)pressesForGestureRecognizer:(UIGestureRecognizer *)gesture;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

struct UIPrinter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

typedef NSInteger UIPrinterJobTypes; enum {
    UIPrinterJobTypeUnknown = 0,
    UIPrinterJobTypeDocument = 1 << 0,
    UIPrinterJobTypeEnvelope = 1 << 1,
    UIPrinterJobTypeLabel = 1 << 2,
    UIPrinterJobTypePhoto = 1 << 3,
    UIPrinterJobTypeReceipt = 1 << 4,
    UIPrinterJobTypeRoll = 1 << 5,
    UIPrinterJobTypeLargeFormat = 1 << 6,
    UIPrinterJobTypePostcard = 1 << 7
} __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable)));
// + (UIPrinter *)printerWithURL:(NSURL *)url;







// @property (readonly,copy) NSURL *URL;





// @property (readonly,copy) NSString *displayName;
// @property (nullable,readonly,copy) NSString *displayLocation;
// @property (readonly) UIPrinterJobTypes supportedJobTypes;
// @property (nullable, readonly,copy) NSString *makeAndModel;
// @property (readonly) BOOL supportsColor;
// @property (readonly) BOOL supportsDuplex;
// - (void)contactPrinter:(void(^ _Nullable)(BOOL available))completionHandler;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrinterPickerController;
#ifndef _REWRITER_typedef_UIPrinterPickerController
#define _REWRITER_typedef_UIPrinterPickerController
typedef struct objc_object UIPrinterPickerController;
typedef struct {} _objc_exc_UIPrinterPickerController;
#endif

#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif


typedef void (*UIPrinterPickerCompletionHandler)(UIPrinterPickerController *printerPickerController, BOOL userDidSelect, NSError * _Nullable error);

__attribute__((availability(tvos,unavailable)))
// @protocol UIPrinterPickerControllerDelegate <NSObject>
/* @optional */

// - (nullable UIViewController *)printerPickerControllerParentViewController:(UIPrinterPickerController *)printerPickerController;
// - (BOOL)printerPickerController:(UIPrinterPickerController *)printerPickerController shouldShowPrinter:(UIPrinter *)printer;

// - (void)printerPickerControllerWillPresent:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerDidPresent:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerWillDismiss:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerDidDismiss:(UIPrinterPickerController *)printerPickerController;

// - (void)printerPickerControllerDidSelectPrinter:(UIPrinterPickerController *)printerPickerController;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrinterPickerController
#define _REWRITER_typedef_UIPrinterPickerController
typedef struct objc_object UIPrinterPickerController;
typedef struct {} _objc_exc_UIPrinterPickerController;
#endif

struct UIPrinterPickerController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (UIPrinterPickerController *)printerPickerControllerWithInitiallySelectedPrinter:(nullable UIPrinter *)printer;





// @property(nullable,nonatomic,readonly) UIPrinter *selectedPrinter;

// @property(nullable,nonatomic,weak) id<UIPrinterPickerControllerDelegate> delegate;

// - (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (void)dismissAnimated:(BOOL)animated;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSErrorDomain const UIPrintErrorDomain __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIPrintErrorCode; enum {
    UIPrintingNotAvailableError = 1,
    UIPrintNoContentError,
    UIPrintUnknownImageFormatError,
    UIPrintJobFailedError,
} __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintPageRenderer;
#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif

struct UIPrintFormatter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nullable,nonatomic,readonly,weak) UIPrintPageRenderer *printPageRenderer __attribute__((availability(tvos,unavailable)));
// - (void)removeFromPrintPageRenderer __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) CGFloat maximumContentHeight __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) CGFloat maximumContentWidth __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UIEdgeInsets contentInsets __attribute__((availability(ios,introduced=4.2,deprecated=10.0,replacement="perPageContentInsets"))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic) UIEdgeInsets perPageContentInsets __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) NSInteger startPage __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger pageCount __attribute__((availability(tvos,unavailable)));

// - (CGRect)rectForPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));
// - (void)drawInRect:(CGRect)rect forPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISimpleTextPrintFormatter
#define _REWRITER_typedef_UISimpleTextPrintFormatter
typedef struct objc_object UISimpleTextPrintFormatter;
typedef struct {} _objc_exc_UISimpleTextPrintFormatter;
#endif

struct UISimpleTextPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// - (instancetype)initWithText:(NSString *)text;
// - (instancetype)initWithAttributedText:(NSAttributedString *)attributedText __attribute__((availability(ios,introduced=7.0)));

// @property(nullable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=7.0)));
// @property(nullable,nonatomic,strong) UIFont *font;
// @property(nullable,nonatomic,strong) UIColor *color;
// @property(nonatomic) NSTextAlignment textAlignment;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMarkupTextPrintFormatter
#define _REWRITER_typedef_UIMarkupTextPrintFormatter
typedef struct objc_object UIMarkupTextPrintFormatter;
typedef struct {} _objc_exc_UIMarkupTextPrintFormatter;
#endif

struct UIMarkupTextPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// - (instancetype)initWithMarkupText:(NSString *)markupText;
// @property(nullable,nonatomic,copy) NSString *markupText;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIViewPrintFormatter
#define _REWRITER_typedef_UIViewPrintFormatter
typedef struct objc_object UIViewPrintFormatter;
typedef struct {} _objc_exc_UIViewPrintFormatter;
#endif

struct UIViewPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// @property(nonatomic,readonly) UIView *view;

/* @end */




// @interface UIView(UIPrintFormatter)

// - (UIViewPrintFormatter *)viewPrintFormatter __attribute__((availability(tvos,unavailable)));
// - (void)drawRect:(CGRect)rect forViewPrintFormatter:(UIViewPrintFormatter *)formatter __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIPrintInfoOutputType; enum {
    UIPrintInfoOutputGeneral,
    UIPrintInfoOutputPhoto,
    UIPrintInfoOutputGrayscale,
    UIPrintInfoOutputPhotoGrayscale __attribute__((availability(ios,introduced=7.0))),
 } __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIPrintInfoOrientation; enum {
    UIPrintInfoOrientationPortrait,
    UIPrintInfoOrientationLandscape,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIPrintInfoDuplex; enum {
    UIPrintInfoDuplexNone,
    UIPrintInfoDuplexLongEdge,
    UIPrintInfoDuplexShortEdge,
} __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintInfo
#define _REWRITER_typedef_UIPrintInfo
typedef struct objc_object UIPrintInfo;
typedef struct {} _objc_exc_UIPrintInfo;
#endif

struct UIPrintInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// + (UIPrintInfo *)printInfo;
// + (UIPrintInfo *)printInfoWithDictionary:(nullable NSDictionary *)dictionary;

// @property(nullable,nonatomic,copy) NSString *printerID;
// @property(nonatomic,copy) NSString *jobName;
// @property(nonatomic) UIPrintInfoOutputType outputType;
// @property(nonatomic) UIPrintInfoOrientation orientation;
// @property(nonatomic) UIPrintInfoDuplex duplex;
// @property(nonatomic,readonly) NSDictionary *dictionaryRepresentation;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintInteractionController;
#ifndef _REWRITER_typedef_UIPrintInteractionController
#define _REWRITER_typedef_UIPrintInteractionController
typedef struct objc_object UIPrintInteractionController;
typedef struct {} _objc_exc_UIPrintInteractionController;
#endif

#ifndef _REWRITER_typedef_UIPrintInfo
#define _REWRITER_typedef_UIPrintInfo
typedef struct objc_object UIPrintInfo;
typedef struct {} _objc_exc_UIPrintInfo;
#endif

#ifndef _REWRITER_typedef_UIPrintPaper
#define _REWRITER_typedef_UIPrintPaper
typedef struct objc_object UIPrintPaper;
typedef struct {} _objc_exc_UIPrintPaper;
#endif

#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif

#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif


typedef void (*UIPrintInteractionCompletionHandler)(UIPrintInteractionController *printInteractionController, BOOL completed, NSError * _Nullable error) __attribute__((availability(tvos,unavailable)));


__attribute__((availability(ios,introduced=9.0))) typedef NSInteger UIPrinterCutterBehavior; enum {
    UIPrinterCutterBehaviorNoCut,
    UIPrinterCutterBehaviorPrinterDefault,
    UIPrinterCutterBehaviorCutAfterEachPage,
    UIPrinterCutterBehaviorCutAfterEachCopy,
    UIPrinterCutterBehaviorCutAfterEachJob,
} __attribute__((availability(tvos,unavailable)));

// @protocol UIPrintInteractionControllerDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintInteractionController
#define _REWRITER_typedef_UIPrintInteractionController
typedef struct objc_object UIPrintInteractionController;
typedef struct {} _objc_exc_UIPrintInteractionController;
#endif

struct UIPrintInteractionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property(class, nonatomic, readonly, getter=isPrintingAvailable) BOOL printingAvailable;

@property(class, nonatomic, readonly) NSSet<NSString *> *printableUTIs;
// + (BOOL)canPrintURL:(NSURL *)url;
// + (BOOL)canPrintData:(NSData *)data;

@property(class, nonatomic, readonly) UIPrintInteractionController *sharedPrintController;

// @property(nullable,nonatomic,strong) UIPrintInfo *printInfo;
// @property(nullable,nonatomic,weak) id<UIPrintInteractionControllerDelegate> delegate;
// @property(nonatomic) BOOL showsPageRange __attribute__((availability(ios,introduced=4.2,deprecated=10.0,message="Pages can be removed from the print preview, so page range is always shown.")));
// @property(nonatomic) BOOL showsNumberOfCopies __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic) BOOL showsPaperSelectionForLoadedPapers __attribute__((availability(ios,introduced=8.0)));

// @property(nullable, nonatomic,readonly) UIPrintPaper *printPaper;

// @property(nullable,nonatomic,strong) UIPrintPageRenderer *printPageRenderer;
// @property(nullable,nonatomic,strong) UIPrintFormatter *printFormatter;
// @property(nullable,nonatomic,copy) id printingItem;
// @property(nullable,nonatomic,copy) NSArray *printingItems;

// - (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
// - (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
// - (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;






// - (BOOL)printToPrinter:(UIPrinter *)printer completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;

// - (void)dismissAnimated:(BOOL)animated;

/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIPrintInteractionControllerDelegate <NSObject>
/* @optional */

// - ( UIViewController * _Nullable )printInteractionControllerParentViewController:(UIPrintInteractionController *)printInteractionController;

// - (UIPrintPaper *)printInteractionController:(UIPrintInteractionController *)printInteractionController choosePaper:(NSArray<UIPrintPaper *> *)paperList;

// - (void)printInteractionControllerWillPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerWillDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;

// - (void)printInteractionControllerWillStartJob:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidFinishJob:(UIPrintInteractionController *)printInteractionController;

// - (CGFloat)printInteractionController:(UIPrintInteractionController *)printInteractionController cutLengthForPaper:(UIPrintPaper *)paper __attribute__((availability(ios,introduced=7.0)));
// - (UIPrinterCutterBehavior) printInteractionController:(UIPrintInteractionController *)printInteractionController chooseCutterBehavior:(NSArray *)availableBehaviors __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintFormatter;
#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

struct UIPrintPageRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic) CGFloat headerHeight;
// @property(nonatomic) CGFloat footerHeight;

// @property(nonatomic,readonly) CGRect paperRect;
// @property(nonatomic,readonly) CGRect printableRect;

// @property(nonatomic,readonly) NSInteger numberOfPages;

// @property(nullable,atomic,copy) NSArray<UIPrintFormatter *> *printFormatters;
// - (nullable NSArray<UIPrintFormatter *> *)printFormattersForPageAtIndex:(NSInteger)pageIndex;
// - (void)addPrintFormatter:(UIPrintFormatter *)formatter startingAtPageAtIndex:(NSInteger)pageIndex;

// - (void)prepareForDrawingPages:(NSRange)range;

// - (void)drawPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)printableRect;
// - (void)drawPrintFormatter:(UIPrintFormatter *)printFormatter forPageAtIndex:(NSInteger)pageIndex;
// - (void)drawHeaderForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)headerRect;
// - (void)drawContentForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)contentRect;
// - (void)drawFooterForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)footerRect;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=4.2)))__attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintPaper
#define _REWRITER_typedef_UIPrintPaper
typedef struct objc_object UIPrintPaper;
typedef struct {} _objc_exc_UIPrintPaper;
#endif

struct UIPrintPaper_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIPrintPaper *)bestPaperForPageSize:(CGSize)contentSize withPapersFromArray:(NSArray<UIPrintPaper *> *)paperList;

// @property(readonly) CGSize paperSize;
// @property(readonly) CGRect printableRect;

/* @end */




// @interface UIPrintPaper(Deprecated_Nonfunctional)
// - (CGRect)printRect __attribute__((availability(tvos,unavailable))) ;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_CAGradientLayer
#define _REWRITER_typedef_CAGradientLayer
typedef struct objc_object CAGradientLayer;
typedef struct {} _objc_exc_CAGradientLayer;
#endif


typedef NSInteger UIProgressViewStyle; enum {
    UIProgressViewStyleDefault,
    UIProgressViewStyleBar __attribute__((availability(tvos,unavailable))),
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIProgressView
#define _REWRITER_typedef_UIProgressView
typedef struct objc_object UIProgressView;
typedef struct {} _objc_exc_UIProgressView;
#endif

struct UIProgressView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithProgressViewStyle:(UIProgressViewStyle)style;

// @property(nonatomic) UIProgressViewStyle progressViewStyle;
// @property(nonatomic) float progress;
// @property(nonatomic, strong, nullable) UIColor* progressTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIColor* trackTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIImage* progressImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIImage* trackImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setProgress:(float)progress animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic, strong, nullable) NSProgress *observedProgress __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIReferenceLibraryViewController
#define _REWRITER_typedef_UIReferenceLibraryViewController
typedef struct objc_object UIReferenceLibraryViewController;
typedef struct {} _objc_exc_UIReferenceLibraryViewController;
#endif

struct UIReferenceLibraryViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};




// + (BOOL)dictionaryHasDefinitionForTerm:(NSString *)term;



// - (instancetype)initWithTerm:(NSString *)term __attribute__((objc_designated_initializer));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIRotationGestureRecognizer
#define _REWRITER_typedef_UIRotationGestureRecognizer
typedef struct objc_object UIRotationGestureRecognizer;
typedef struct {} _objc_exc_UIRotationGestureRecognizer;
#endif

struct UIRotationGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) CGFloat rotation;
// @property (nonatomic,readonly) CGFloat velocity;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIScreenMode;
#ifndef _REWRITER_typedef_UIScreenMode
#define _REWRITER_typedef_UIScreenMode
typedef struct objc_object UIScreenMode;
typedef struct {} _objc_exc_UIScreenMode;
#endif

#ifndef _REWRITER_typedef_CADisplayLink
#define _REWRITER_typedef_CADisplayLink
typedef struct objc_object CADisplayLink;
typedef struct {} _objc_exc_CADisplayLink;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidConnectNotification __attribute__((availability(ios,introduced=3.2)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidDisconnectNotification __attribute__((availability(ios,introduced=3.2)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenModeDidChangeNotification __attribute__((availability(ios,introduced=3.2)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenBrightnessDidChangeNotification __attribute__((availability(ios,introduced=5.0)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenCapturedDidChangeNotification __attribute__((availability(ios,introduced=11.0)));


typedef NSInteger UIScreenOverscanCompensation; enum {
    UIScreenOverscanCompensationScale,
    UIScreenOverscanCompensationInsetBounds,
    UIScreenOverscanCompensationNone __attribute__((availability(ios,introduced=9.0))),

    UIScreenOverscanCompensationInsetApplicationFrame __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use UIScreenOverscanCompensationNone"))) = 2,
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIScreen
#define _REWRITER_typedef_UIScreen
typedef struct objc_object UIScreen;
typedef struct {} _objc_exc_UIScreen;
#endif

struct UIScreen_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property(class, nonatomic, readonly) NSArray<UIScreen *> *screens __attribute__((availability(ios,introduced=3.2)));
@property(class, nonatomic, readonly) UIScreen *mainScreen;

// @property(nonatomic,readonly) CGRect bounds;
// @property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4.0)));

// @property(nonatomic,readonly,copy) NSArray<UIScreenMode *> *availableModes __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic,readonly,strong) UIScreenMode *preferredMode __attribute__((availability(ios,introduced=4.3))) __attribute__((availability(tvos,unavailable)));



// @property(nullable,nonatomic,strong) UIScreenMode *currentMode __attribute__((availability(ios,introduced=3.2)));

// @property(nonatomic) UIScreenOverscanCompensation overscanCompensation __attribute__((availability(ios,introduced=5.0)));

// @property(nonatomic,readonly) UIEdgeInsets overscanCompensationInsets __attribute__((availability(ios,introduced=9.0)));

// @property(nullable, nonatomic,readonly,strong) UIScreen *mirroredScreen __attribute__((availability(ios,introduced=4.3)));
// @property(nonatomic,readonly,getter=isCaptured) BOOL captured __attribute__((availability(ios,introduced=11.0)));

// @property(nonatomic) CGFloat brightness __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) BOOL wantsSoftwareDimming __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));

// @property (readonly) id <UICoordinateSpace> coordinateSpace __attribute__((availability(ios,introduced=8.0)));
// @property (readonly) id <UICoordinateSpace> fixedCoordinateSpace __attribute__((availability(ios,introduced=8.0)));

// @property(nonatomic,readonly) CGRect nativeBounds __attribute__((availability(ios,introduced=8.0)));
// @property(nonatomic,readonly) CGFloat nativeScale __attribute__((availability(ios,introduced=8.0)));

// - (nullable CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel __attribute__((availability(ios,introduced=4.0)));

// @property (readonly) NSInteger maximumFramesPerSecond __attribute__((availability(ios,introduced=10.3)));





// @property(nonatomic, readonly) CFTimeInterval calibratedLatency __attribute__((availability(ios,introduced=13.0)));

// @property (nullable, nonatomic, weak, readonly) id<UIFocusItem> focusedItem __attribute__((availability(ios,introduced=10.0)));
// @property (nullable, nonatomic, weak, readonly) UIView *focusedView __attribute__((availability(ios,introduced=9.0)));
// @property (readonly, nonatomic) BOOL supportsFocus __attribute__((availability(ios,introduced=9.0)));

// @property(nonatomic,readonly) CGRect applicationFrame __attribute__((availability(ios,introduced=2.0,deprecated=9.0,replacement="bounds"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @interface UIScreen (UISnapshotting)

// - (UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7.0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIScreenEdgePanGestureRecognizer
#define _REWRITER_typedef_UIScreenEdgePanGestureRecognizer
typedef struct objc_object UIScreenEdgePanGestureRecognizer;
typedef struct {} _objc_exc_UIScreenEdgePanGestureRecognizer;
#endif

struct UIScreenEdgePanGestureRecognizer_IMPL {
	struct UIPanGestureRecognizer_IMPL UIPanGestureRecognizer_IVARS;
};

// @property (readwrite, nonatomic, assign) UIRectEdge edges;
/* @end */

#pragma clang assume_nonnull end
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UIScreenMode
#define _REWRITER_typedef_UIScreenMode
typedef struct objc_object UIScreenMode;
typedef struct {} _objc_exc_UIScreenMode;
#endif

struct UIScreenMode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(readonly,nonatomic) CGSize size;
// @property(readonly,nonatomic) CGFloat pixelAspectRatio;

/* @end */


#pragma clang assume_nonnull begin

typedef NSInteger UISearchBarIcon; enum {
    UISearchBarIconSearch,
    UISearchBarIconClear __attribute__((availability(tvos,unavailable))),
    UISearchBarIconBookmark __attribute__((availability(tvos,unavailable))),
    UISearchBarIconResultsList __attribute__((availability(tvos,unavailable))),
};

typedef NSUInteger UISearchBarStyle; enum {
    UISearchBarStyleDefault,
    UISearchBarStyleProminent,
    UISearchBarStyleMinimal
} __attribute__((availability(ios,introduced=7.0)));


// @protocol UISearchBarDelegate;
// @class UITextField;
#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif






extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UISearchBar
#define _REWRITER_typedef_UISearchBar
typedef struct objc_object UISearchBar;
typedef struct {} _objc_exc_UISearchBar;
#endif

struct UISearchBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)init __attribute__((availability(tvos,unavailable)));
// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) UIBarStyle barStyle __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,weak) id<UISearchBarDelegate> delegate;
// @property(nullable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,copy) NSString *prompt;
// @property(nullable,nonatomic,copy) NSString *placeholder;
// @property(nonatomic) BOOL showsBookmarkButton __attribute__((availability(tvos,unavailable)));






// @property(nonatomic) BOOL showsCancelButton __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) BOOL showsSearchResultsButton __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, getter=isSearchResultsButtonSelected) BOOL searchResultsButtonSelected __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));
// - (void)setShowsCancelButton:(BOOL)showsCancelButton animated:(BOOL)animated __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));




// @property (nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// @property(null_resettable, nonatomic,strong) UIColor *tintColor;
// @property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic) UISearchBarStyle searchBarStyle __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3.0)));

// @property(nullable, nonatomic,copy) NSArray<NSString *> *scopeButtonTitles __attribute__((availability(ios,introduced=3.0)));
// @property(nonatomic) NSInteger selectedScopeButtonIndex __attribute__((availability(ios,introduced=3.0)));






// @property(nonatomic) BOOL showsScopeBar __attribute__((availability(ios,introduced=3.0)));
// - (void)setShowsScopeBar:(BOOL)show animated:(BOOL)animate __attribute__((availability(ios,introduced=13.0)));



// @property (nullable, nonatomic, readwrite, strong) UIView *inputAccessoryView;


// @property(nullable, nonatomic,strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIImage *scopeBarBackgroundImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setSearchFieldBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)searchFieldBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setImage:(nullable UIImage *)iconImage forSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)imageForSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));







// - (void)setScopeBarButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)scopeBarButtonBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setScopeBarButtonDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)scopeBarButtonDividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setScopeBarButtonTitleTextAttributes:(nullable NSDictionary<NSAttributedStringKey,id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary<NSAttributedStringKey, id> *)scopeBarButtonTitleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nonatomic) UIOffset searchFieldBackgroundPositionAdjustment __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nonatomic) UIOffset searchTextPositionAdjustment __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setPositionAdjustment:(UIOffset)adjustment forSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)positionAdjustmentForSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
/* @end */


// @protocol UISearchBarDelegate <UIBarPositioningDelegate>

/* @optional */

// - (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar;
// - (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar;
// - (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar;
// - (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar;
// - (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText;
// - (BOOL)searchBar:(UISearchBar *)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=3.0)));

// - (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar;
// - (void)searchBarBookmarkButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
// - (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
// - (void)searchBarResultsListButtonClicked:(UISearchBar *)searchBar __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));

// - (void)searchBar:(UISearchBar *)searchBar selectedScopeButtonIndexDidChange:(NSInteger)selectedScope __attribute__((availability(ios,introduced=3.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9_1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0))) 
#ifndef _REWRITER_typedef_UISearchContainerViewController
#define _REWRITER_typedef_UISearchContainerViewController
typedef struct objc_object UISearchContainerViewController;
typedef struct {} _objc_exc_UISearchContainerViewController;
#endif

struct UISearchContainerViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};

// @property (nonatomic, strong, readonly) UISearchController *searchController;

// - (instancetype)initWithSearchController:(UISearchController *)searchController;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef NSString * UITransitionContextViewControllerKey __attribute__((swift_wrapper(enum)));
typedef NSString * UITransitionContextViewKey __attribute__((swift_wrapper(enum)));

// @protocol UIViewControllerTransitionCoordinatorContext <NSObject>





// @property(nonatomic, readonly, getter=isAnimated) BOOL animated;



// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;





// @property(nonatomic, readonly) BOOL initiallyInteractive;
// @property(nonatomic,readonly) BOOL isInterruptible __attribute__((availability(ios,introduced=10.0)));



// @property(nonatomic, readonly, getter=isInteractive) BOOL interactive;


// @property(nonatomic, readonly, getter=isCancelled) BOOL cancelled;


// @property(nonatomic, readonly) NSTimeInterval transitionDuration;




// @property(nonatomic, readonly) CGFloat percentComplete;
// @property(nonatomic, readonly) CGFloat completionVelocity;
// @property(nonatomic, readonly) UIViewAnimationCurve completionCurve;




// - (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;




// - (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic, readonly) UIView *containerView;


// @property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8.0)));

/* @end */








// @protocol UIViewControllerTransitionCoordinator <UIViewControllerTransitionCoordinatorContext>
#if 0
- (BOOL)animateAlongsideTransition:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                        completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;
#endif




#if 0
- (BOOL)animateAlongsideTransitionInView:(nullable UIView *)view
                               animation:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                              completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;
#endif

// - (void)notifyWhenInteractionEndsUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=7.0,deprecated=10.0,replacement="notifyWhenInteractionChangesUsingBlock")));





// - (void)notifyWhenInteractionChangesUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=10.0)));

/* @end */


// @interface UIViewController(UIViewControllerTransitionCoordinator)







// @property(nonatomic, readonly, nullable) id <UIViewControllerTransitionCoordinator> transitionCoordinator __attribute__((availability(ios,introduced=7.0)));
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif


// @protocol UIAdaptivePresentationControllerDelegate <NSObject>

/* @optional */


// - (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller;


// - (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller traitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8.3)));


// - (nullable UIViewController *)presentationController:(UIPresentationController *)controller viewControllerForAdaptivePresentationStyle:(UIModalPresentationStyle)style;


// - (void)presentationController:(UIPresentationController *)presentationController willPresentWithAdaptiveStyle:(UIModalPresentationStyle)style transitionCoordinator:(nullable id <UIViewControllerTransitionCoordinator>)transitionCoordinator __attribute__((availability(ios,introduced=8.3)));




// - (BOOL)presentationControllerShouldDismiss:(UIPresentationController *)presentationController __attribute__((availability(ios,introduced=13.0)));




// - (void)presentationControllerWillDismiss:(UIPresentationController *)presentationController __attribute__((availability(ios,introduced=13.0)));



// - (void)presentationControllerDidDismiss:(UIPresentationController *)presentationController __attribute__((availability(ios,introduced=13.0)));



// - (void)presentationControllerDidAttemptToDismiss:(UIPresentationController *)presentationController __attribute__((availability(ios,introduced=13.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif

struct UIPresentationController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, strong, readonly) UIViewController *presentingViewController;
// @property(nonatomic, strong, readonly) UIViewController *presentedViewController;

// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;



// @property(nullable, nonatomic, readonly, strong) UIView *containerView;

// @property(nullable, nonatomic, weak) id <UIAdaptivePresentationControllerDelegate> delegate;

// - (instancetype)initWithPresentedViewController:(UIViewController *)presentedViewController presentingViewController:(nullable UIViewController *)presentingViewController __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));




// @property(nonatomic, readonly) UIModalPresentationStyle adaptivePresentationStyle;
// - (UIModalPresentationStyle)adaptivePresentationStyleForTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8.3)));

// - (void)containerViewWillLayoutSubviews;
// - (void)containerViewDidLayoutSubviews;




// @property(nonatomic, readonly, nullable) UIView *presentedView;



// @property(nonatomic, readonly) CGRect frameOfPresentedViewInContainerView;




// @property(nonatomic, readonly) BOOL shouldPresentInFullscreen;




// @property(nonatomic, readonly) BOOL shouldRemovePresentersView;

// - (void)presentationTransitionWillBegin;
// - (void)presentationTransitionDidEnd:(BOOL)completed;
// - (void)dismissalTransitionWillBegin;
// - (void)dismissalTransitionDidEnd:(BOOL)completed;


// @property(nullable, nonatomic, copy) UITraitCollection *overrideTraitCollection;

/* @end */

#pragma clang assume_nonnull end

typedef NSInteger UITimingCurveType; enum {
    UITimingCurveTypeBuiltin,
    UITimingCurveTypeCubic,
    UITimingCurveTypeSpring,
    UITimingCurveTypeComposed,
} __attribute__((availability(ios,introduced=10.0)));

// @class UICubicTimingParameters;
#ifndef _REWRITER_typedef_UICubicTimingParameters
#define _REWRITER_typedef_UICubicTimingParameters
typedef struct objc_object UICubicTimingParameters;
typedef struct {} _objc_exc_UICubicTimingParameters;
#endif

#ifndef _REWRITER_typedef_UISpringTimingParameters
#define _REWRITER_typedef_UISpringTimingParameters
typedef struct objc_object UISpringTimingParameters;
typedef struct {} _objc_exc_UISpringTimingParameters;
#endif


#pragma clang assume_nonnull begin

// @protocol UITimingCurveProvider <NSCoding, NSCopying>

// @property(nonatomic, readonly) UITimingCurveType timingCurveType;
// @property(nullable, nonatomic, readonly) UICubicTimingParameters *cubicTimingParameters;
// @property(nullable, nonatomic, readonly) UISpringTimingParameters *springTimingParameters;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UICubicTimingParameters
#define _REWRITER_typedef_UICubicTimingParameters
typedef struct objc_object UICubicTimingParameters;
typedef struct {} _objc_exc_UICubicTimingParameters;
#endif

struct UICubicTimingParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, readonly) UIViewAnimationCurve animationCurve;
// @property(nonatomic, readonly) CGPoint controlPoint1;
// @property(nonatomic, readonly) CGPoint controlPoint2;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithAnimationCurve:(UIViewAnimationCurve)curve __attribute__((objc_designated_initializer));
// - (instancetype)initWithControlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 __attribute__((objc_designated_initializer));

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UISpringTimingParameters
#define _REWRITER_typedef_UISpringTimingParameters
typedef struct objc_object UISpringTimingParameters;
typedef struct {} _objc_exc_UISpringTimingParameters;
#endif

struct UISpringTimingParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, readonly) CGVector initialVelocity;

// - (instancetype)init __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithDampingRatio:(CGFloat)ratio initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));



// - (instancetype)initWithMass:(CGFloat)mass stiffness:(CGFloat)stiffness damping:(CGFloat)damping initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));


// - (instancetype)initWithDampingRatio:(CGFloat)ratio;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif





extern "C" __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextFromViewControllerKey __attribute__((swift_name("from"))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextToViewControllerKey __attribute__((swift_name("to"))) __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextFromViewKey __attribute__((swift_name("from"))) __attribute__((availability(ios,introduced=8.0)));
extern "C" __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextToViewKey __attribute__((swift_name("to"))) __attribute__((availability(ios,introduced=8.0)));
// @protocol UIViewControllerContextTransitioning <NSObject>


// @property(nonatomic, readonly) UIView *containerView;




// @property(nonatomic, readonly, getter=isAnimated) BOOL animated;


// @property(nonatomic, readonly, getter=isInteractive) BOOL interactive;
// @property(nonatomic, readonly) BOOL transitionWasCancelled;

// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;
// - (void)updateInteractiveTransition:(CGFloat)percentComplete;
// - (void)finishInteractiveTransition;
// - (void)cancelInteractiveTransition;



// - (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10.0)));







// - (void)completeTransition:(BOOL)didComplete;







// - (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;





// - (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8.0)));

// @property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8.0)));







// - (CGRect)initialFrameForViewController:(UIViewController *)vc;
// - (CGRect)finalFrameForViewController:(UIViewController *)vc;
/* @end */


// @protocol UIViewControllerAnimatedTransitioning <NSObject>




// - (NSTimeInterval)transitionDuration:(nullable id <UIViewControllerContextTransitioning>)transitionContext;

// - (void)animateTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

/* @optional */





// - (id <UIViewImplicitlyAnimating>) interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning>)transitionContext __attribute__((availability(ios,introduced=10.0)));


// - (void)animationEnded:(BOOL) transitionCompleted;

/* @end */



// @protocol UIViewControllerInteractiveTransitioning <NSObject>
// - (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

/* @optional */
// @property(nonatomic, readonly) CGFloat completionSpeed;
// @property(nonatomic, readonly) UIViewAnimationCurve completionCurve;






// @property (nonatomic, readonly) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10.0)));

/* @end */


// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif


// @protocol UIViewControllerTransitioningDelegate <NSObject>

/* @optional */
// - (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source;

// - (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)dismissed;

// - (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)animator;

// - (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)animator;

// - (nullable UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)presented presentingViewController:(nullable UIViewController *)presenting sourceViewController:(UIViewController *)source __attribute__((availability(ios,introduced=8.0)));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIPercentDrivenInteractiveTransition
#define _REWRITER_typedef_UIPercentDrivenInteractiveTransition
typedef struct objc_object UIPercentDrivenInteractiveTransition;
typedef struct {} _objc_exc_UIPercentDrivenInteractiveTransition;
#endif

struct UIPercentDrivenInteractiveTransition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// @property (readonly) CGFloat duration;


// @property (readonly) CGFloat percentComplete;







// @property (nonatomic,assign) CGFloat completionSpeed;




// @property (nonatomic,assign) UIViewAnimationCurve completionCurve;




// @property (nullable, nonatomic, strong)id <UITimingCurveProvider> timingCurve __attribute__((availability(ios,introduced=10.0)));




// @property (nonatomic) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10.0)));




// - (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10.0)));
// - (void)updateInteractiveTransition:(CGFloat)percentComplete;
// - (void)cancelInteractiveTransition;
// - (void)finishInteractiveTransition;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif


// @protocol UISearchControllerDelegate <NSObject>
/* @optional */

// - (void)willPresentSearchController:(UISearchController *)searchController;
// - (void)didPresentSearchController:(UISearchController *)searchController;
// - (void)willDismissSearchController:(UISearchController *)searchController;
// - (void)didDismissSearchController:(UISearchController *)searchController;


// - (void)presentSearchController:(UISearchController *)searchController;
/* @end */


// @protocol UISearchResultsUpdating <NSObject>
/* @required */

// - (void)updateSearchResultsForSearchController:(UISearchController *)searchController;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif

struct UISearchController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initWithSearchResultsController:(nullable UIViewController *)searchResultsController __attribute__((objc_designated_initializer));


// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (nullable, nonatomic, weak) id <UISearchResultsUpdating> searchResultsUpdater;


// @property (nonatomic, assign, getter = isActive) BOOL active;

// @property (nullable, nonatomic, weak) id <UISearchControllerDelegate> delegate;
// @property (nonatomic, assign) BOOL dimsBackgroundDuringPresentation __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=8.0,deprecated=12.0,replacement="obscuresBackgroundDuringPresentation")));
// @property (nonatomic, assign) BOOL obscuresBackgroundDuringPresentation __attribute__((availability(ios,introduced=9.1)));
// @property (nonatomic, assign) BOOL hidesNavigationBarDuringPresentation;

// @property (nullable, nonatomic, strong, readonly) UIViewController *searchResultsController;


// @property (nonatomic, strong, readonly) UISearchBar *searchBar;

// @property (nonatomic) BOOL automaticallyShowsSearchResultsController __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) BOOL showsSearchResultsController __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) BOOL automaticallyShowsCancelButton __attribute__((availability(ios,introduced=13.0)));
// @property (nonatomic) BOOL automaticallyShowsScopeBar __attribute__((availability(ios,introduced=13.0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UISearchBar;
#ifndef _REWRITER_typedef_UISearchBar
#define _REWRITER_typedef_UISearchBar
typedef struct objc_object UISearchBar;
typedef struct {} _objc_exc_UISearchBar;
#endif

#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @protocol UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="UISearchDisplayController has been replaced with UISearchController"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISearchDisplayController
#define _REWRITER_typedef_UISearchDisplayController
typedef struct objc_object UISearchDisplayController;
typedef struct {} _objc_exc_UISearchDisplayController;
#endif

struct UISearchDisplayController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithSearchBar:(UISearchBar *)searchBar contentsController:(UIViewController *)viewController;

// @property(nullable,nonatomic,assign) id<UISearchDisplayDelegate> delegate;

// @property(nonatomic,getter=isActive) BOOL active;
// - (void)setActive:(BOOL)visible animated:(BOOL)animated;

// @property(nonatomic,readonly) UISearchBar *searchBar;
// @property(nonatomic,readonly) UIViewController *searchContentsController;
// @property(nonatomic,readonly) UITableView *searchResultsTableView;
// @property(nullable,nonatomic,weak) id<UITableViewDataSource> searchResultsDataSource;
// @property(nullable,nonatomic,weak) id<UITableViewDelegate> searchResultsDelegate;
// @property(nullable,nonatomic,copy) NSString *searchResultsTitle __attribute__((availability(ios,introduced=5.0)));


// @property (nonatomic, assign) BOOL displaysSearchBarInNavigationBar __attribute__((availability(ios,introduced=7.0)));
// @property (nullable, nonatomic, readonly) UINavigationItem *navigationItem __attribute__((availability(ios,introduced=7.0)));

/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UISearchDisplayDelegate <NSObject>

/* @optional */


// - (void) searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void) searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void) searchDisplayControllerWillEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void) searchDisplayControllerDidEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));


// - (void)searchDisplayController:(UISearchDisplayController *)controller didLoadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void)searchDisplayController:(UISearchDisplayController *)controller willUnloadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));


// - (void)searchDisplayController:(UISearchDisplayController *)controller willShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void)searchDisplayController:(UISearchDisplayController *)controller didShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void)searchDisplayController:(UISearchDisplayController *)controller willHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (void)searchDisplayController:(UISearchDisplayController *)controller didHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));


// - (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchString:(nullable NSString *)searchString __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));
// - (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchScope:(NSInteger)searchOption __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UISearchToken;
#ifndef _REWRITER_typedef_UISearchToken
#define _REWRITER_typedef_UISearchToken
typedef struct objc_object UISearchToken;
typedef struct {} _objc_exc_UISearchToken;
#endif

// @protocol UISearchTextFieldDelegate;
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISearchTextField
#define _REWRITER_typedef_UISearchTextField
typedef struct objc_object UISearchTextField;
typedef struct {} _objc_exc_UISearchTextField;
#endif

struct UISearchTextField_IMPL {
	struct UITextField_IMPL UITextField_IVARS;
};





// @property (nonatomic, copy) NSArray<UISearchToken *> *tokens;
// - (void)insertToken:(UISearchToken *)token atIndex:(NSInteger)tokenIndex;
// - (void)removeTokenAtIndex:(NSInteger)tokenIndex;


// - (UITextPosition *)positionOfTokenAtIndex:(NSInteger)tokenIndex;




// - (NSArray<UISearchToken *> *)tokensInRange:(UITextRange *)textRange;




// @property (readonly, nonatomic) UITextRange *textualRange;







// - (void)replaceTextualPortionOfRange:(UITextRange *)textRange withToken:(UISearchToken *)token atIndex:(NSUInteger)tokenIndex;


// @property (nonatomic, strong, null_resettable) UIColor *tokenBackgroundColor;




// @property (nonatomic) BOOL allowsDeletingTokens;




// @property (nonatomic) BOOL allowsCopyingTokens;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISearchToken
#define _REWRITER_typedef_UISearchToken
typedef struct objc_object UISearchToken;
typedef struct {} _objc_exc_UISearchToken;
#endif

struct UISearchToken_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// + (UISearchToken *)tokenWithIcon:(nullable UIImage *)icon text:(NSString *)text;







// @property (strong, nullable, nonatomic) id representedObject;
/* @end */


// @protocol UISearchTextFieldDelegate <UITextFieldDelegate>
/* @optional */






// - (NSItemProvider *)searchTextField:(UISearchTextField *)searchTextField itemProviderForCopyingToken:(UISearchToken *)token;

/* @end */





// @protocol UISearchTextFieldPasteItem <UITextPasteItem>


// - (void)setSearchTokenResult:(UISearchToken *)token;

/* @end */


// @interface UISearchBar (UITokenSearch)

// @property (nonatomic, readonly) UISearchTextField *searchTextField;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UISegmentedControlStyle; enum {
    UISegmentedControlStylePlain,
    UISegmentedControlStyleBordered,
    UISegmentedControlStyleBar,
    UISegmentedControlStyleBezeled,
} __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));

enum {
    UISegmentedControlNoSegment = -1
};

typedef NSInteger UISegmentedControlSegment; enum {
    UISegmentedControlSegmentAny = 0,
    UISegmentedControlSegmentLeft = 1,
    UISegmentedControlSegmentCenter = 2,
    UISegmentedControlSegmentRight = 3,
    UISegmentedControlSegmentAlone = 4,
};

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UISegmentedControl
#define _REWRITER_typedef_UISegmentedControl
typedef struct objc_object UISegmentedControl;
typedef struct {} _objc_exc_UISegmentedControl;
#endif

struct UISegmentedControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// - (instancetype)initWithItems:(nullable NSArray *)items;

// @property(nonatomic) UISegmentedControlStyle segmentedControlStyle __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isMomentary) BOOL momentary;
// @property(nonatomic,readonly) NSUInteger numberOfSegments;


// @property(nonatomic) BOOL apportionsSegmentWidthsByContent __attribute__((availability(ios,introduced=5.0)));

// - (void)insertSegmentWithTitle:(nullable NSString *)title atIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)insertSegmentWithImage:(nullable UIImage *)image atIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)removeSegmentAtIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)removeAllSegments;

// - (void)setTitle:(nullable NSString *)title forSegmentAtIndex:(NSUInteger)segment;
// - (nullable NSString *)titleForSegmentAtIndex:(NSUInteger)segment;

// - (void)setImage:(nullable UIImage *)image forSegmentAtIndex:(NSUInteger)segment;
// - (nullable UIImage *)imageForSegmentAtIndex:(NSUInteger)segment;

// - (void)setWidth:(CGFloat)width forSegmentAtIndex:(NSUInteger)segment;
// - (CGFloat)widthForSegmentAtIndex:(NSUInteger)segment;

// - (void)setContentOffset:(CGSize)offset forSegmentAtIndex:(NSUInteger)segment;
// - (CGSize)contentOffsetForSegmentAtIndex:(NSUInteger)segment;

// - (void)setEnabled:(BOOL)enabled forSegmentAtIndex:(NSUInteger)segment;
// - (BOOL)isEnabledForSegmentAtIndex:(NSUInteger)segment;



// @property(nonatomic) NSInteger selectedSegmentIndex;


// @property(nullable, nonatomic, strong) UIColor *selectedSegmentTintColor __attribute__((availability(ios,introduced=13.0))) __attribute__((annotate("ui_appearance_selector")));
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)dividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setTitleTextAttributes:(nullable NSDictionary<NSAttributedStringKey,id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary<NSAttributedStringKey,id> *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setContentPositionAdjustment:(UIOffset)adjustment forSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)contentPositionAdjustmentForSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */



// @interface UISegmentedControl (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISlider
#define _REWRITER_typedef_UISlider
typedef struct objc_object UISlider;
typedef struct {} _objc_exc_UISlider;
#endif

struct UISlider_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic) float value;
// @property(nonatomic) float minimumValue;
// @property(nonatomic) float maximumValue;

// @property(nullable, nonatomic,strong) UIImage *minimumValueImage;
// @property(nullable, nonatomic,strong) UIImage *maximumValueImage;

// @property(nonatomic,getter=isContinuous) BOOL continuous;

// @property(nullable, nonatomic,strong) UIColor *minimumTrackTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *maximumTrackTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setValue:(float)value animated:(BOOL)animated;




// - (void)setThumbImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setMinimumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setMaximumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;

// - (nullable UIImage *)thumbImageForState:(UIControlState)state;
// - (nullable UIImage *)minimumTrackImageForState:(UIControlState)state;
// - (nullable UIImage *)maximumTrackImageForState:(UIControlState)state;

// @property(nullable,nonatomic,readonly) UIImage *currentThumbImage;
// @property(nullable,nonatomic,readonly) UIImage *currentMinimumTrackImage;
// @property(nullable,nonatomic,readonly) UIImage *currentMaximumTrackImage;


// - (CGRect)minimumValueImageRectForBounds:(CGRect)bounds;
// - (CGRect)maximumValueImageRectForBounds:(CGRect)bounds;
// - (CGRect)trackRectForBounds:(CGRect)bounds;
// - (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UISplitViewControllerDelegate;

typedef NSInteger UISplitViewControllerDisplayMode; enum {
    UISplitViewControllerDisplayModeAutomatic,
    UISplitViewControllerDisplayModePrimaryHidden,
    UISplitViewControllerDisplayModeAllVisible,
    UISplitViewControllerDisplayModePrimaryOverlay,
} __attribute__((availability(ios,introduced=8.0)));

typedef NSInteger UISplitViewControllerPrimaryEdge; enum {
    UISplitViewControllerPrimaryEdgeLeading,
    UISplitViewControllerPrimaryEdgeTrailing,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSInteger UISplitViewControllerBackgroundStyle; enum {
    UISplitViewControllerBackgroundStyleNone,
    UISplitViewControllerBackgroundStyleSidebar,
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) CGFloat const UISplitViewControllerAutomaticDimension __attribute__((availability(ios,introduced=8.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UISplitViewController
#define _REWRITER_typedef_UISplitViewController
typedef struct objc_object UISplitViewController;
typedef struct {} _objc_exc_UISplitViewController;
#endif

struct UISplitViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property (nonatomic, copy) NSArray<__kindof UIViewController *> *viewControllers;
// @property (nullable, nonatomic, weak) id <UISplitViewControllerDelegate> delegate;


// @property (nonatomic) BOOL presentsWithGesture __attribute__((availability(ios,introduced=5.1)));


// @property(nonatomic, readonly, getter=isCollapsed) BOOL collapsed __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic) UISplitViewControllerDisplayMode preferredDisplayMode __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, readonly) UISplitViewControllerDisplayMode displayMode __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic, readonly) UIBarButtonItem *displayModeButtonItem __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic, assign) CGFloat preferredPrimaryColumnWidthFraction __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic, assign) CGFloat minimumPrimaryColumnWidth __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic, assign) CGFloat maximumPrimaryColumnWidth __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic,readonly) CGFloat primaryColumnWidth __attribute__((availability(ios,introduced=8.0)));


// @property(nonatomic) UISplitViewControllerPrimaryEdge primaryEdge __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));


// - (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));


// @property (nonatomic) UISplitViewControllerBackgroundStyle primaryBackgroundStyle __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UISplitViewControllerDelegate

/* @optional */


// - (void)splitViewController:(UISplitViewController *)svc willChangeToDisplayMode:(UISplitViewControllerDisplayMode)displayMode __attribute__((availability(ios,introduced=8.0)));


// - (UISplitViewControllerDisplayMode)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)svc __attribute__((availability(ios,introduced=8.0)));



// - (BOOL)splitViewController:(UISplitViewController *)splitViewController showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));



// - (BOOL)splitViewController:(UISplitViewController *)splitViewController showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8.0)));




// - (nullable UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8.0)));




// - (nullable UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8.0)));






// - (BOOL)splitViewController:(UISplitViewController *)splitViewController collapseSecondaryViewController:(UIViewController *)secondaryViewController ontoPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8.0)));






// - (nullable UIViewController *)splitViewController:(UISplitViewController *)splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8.0)));

// - (UIInterfaceOrientationMask)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));



// - (void)splitViewController:(UISplitViewController *)svc willHideViewController:(UIViewController *)aViewController withBarButtonItem:(UIBarButtonItem *)barButtonItem forPopoverController:(UIPopoverController *)pc __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


// - (void)splitViewController:(UISplitViewController *)svc willShowViewController:(UIViewController *)aViewController invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


// - (void)splitViewController:(UISplitViewController *)svc popoverController:(UIPopoverController *)pc willPresentViewController:(UIViewController *)aViewController __attribute__((availability(ios,introduced=2.0,deprecated=8.0,replacement="splitViewController:willChangeToDisplayMode:"))) __attribute__((availability(tvos,unavailable)));



// - (BOOL)splitViewController:(UISplitViewController *)svc shouldHideViewController:(UIViewController *)vc inOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(ios,introduced=5.0,deprecated=8.0,replacement="preferredDisplayMode"))) __attribute__((availability(tvos,unavailable)));


/* @end */


// @interface UIViewController (UISplitViewController)

// @property (nullable, nonatomic, readonly, strong) UISplitViewController *splitViewController;



// - (void)collapseSecondaryViewController:(UIViewController *)secondaryViewController forSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8.0)));


// - (nullable UIViewController *)separateSecondaryViewControllerForSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIButton;
#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIStepper
#define _REWRITER_typedef_UIStepper
typedef struct objc_object UIStepper;
typedef struct {} _objc_exc_UIStepper;
#endif

struct UIStepper_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic,getter=isContinuous) BOOL continuous;
// @property(nonatomic) BOOL autorepeat;
// @property(nonatomic) BOOL wraps;

// @property(nonatomic) double value;
// @property(nonatomic) double minimumValue;
// @property(nonatomic) double maximumValue;
// @property(nonatomic) double stepValue;


// - (void)setBackgroundImage:(nullable UIImage*)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage*)backgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setDividerImage:(nullable UIImage*)image forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage*)dividerImageForLeftSegmentState:(UIControlState)state rightSegmentState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setIncrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)incrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setDecrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)decrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end
// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


#pragma clang assume_nonnull begin

typedef __kindof UIViewController *_Nullable (*UIStoryboardViewControllerCreator)(NSCoder *coder);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) 
#ifndef _REWRITER_typedef_UIStoryboard
#define _REWRITER_typedef_UIStoryboard
typedef struct objc_object UIStoryboard;
typedef struct {} _objc_exc_UIStoryboard;
#endif

struct UIStoryboard_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIStoryboard *)storyboardWithName:(NSString *)name bundle:(nullable NSBundle *)storyboardBundleOrNil;

// - (nullable __kindof UIViewController *)instantiateInitialViewController;
// - (nullable __kindof UIViewController *)instantiateInitialViewControllerWithCreator:(nullable __attribute__((noescape)) UIStoryboardViewControllerCreator)block __attribute__((availability(ios,introduced=13.0)));
// - (__kindof UIViewController *)instantiateViewControllerWithIdentifier:(NSString *)identifier;
// - (__kindof UIViewController *)instantiateViewControllerWithIdentifier:(NSString *)identifier creator:(nullable __attribute__((noescape)) UIStoryboardViewControllerCreator)block __attribute__((availability(ios,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0))) 
#ifndef _REWRITER_typedef_UIStoryboardSegue
#define _REWRITER_typedef_UIStoryboardSegue
typedef struct objc_object UIStoryboardSegue;
typedef struct {} _objc_exc_UIStoryboardSegue;
#endif

struct UIStoryboardSegue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)segueWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination performHandler:(void (^)(void))performHandler __attribute__((availability(ios,introduced=6.0)));

// - (instancetype)initWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));

// @property (nullable, nonatomic, copy, readonly) NSString *identifier;
// @property (nonatomic, readonly) __kindof UIViewController *sourceViewController;
// @property (nonatomic, readonly) __kindof UIViewController *destinationViewController;



// - (void)perform;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIStoryboardUnwindSegueSource
#define _REWRITER_typedef_UIStoryboardUnwindSegueSource
typedef struct objc_object UIStoryboardUnwindSegueSource;
typedef struct {} _objc_exc_UIStoryboardUnwindSegueSource;
#endif

struct UIStoryboardUnwindSegueSource_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));

// @property (readonly) UIViewController *sourceViewController;
// @property (readonly) SEL unwindAction;
// @property (readonly, nullable) id sender;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=5.0,deprecated=9.0,message="Access destinationViewController.popoverPresentationController from your segue's performHandler or override of -perform"))) 
#ifndef _REWRITER_typedef_UIStoryboardPopoverSegue
#define _REWRITER_typedef_UIStoryboardPopoverSegue
typedef struct objc_object UIStoryboardPopoverSegue;
typedef struct {} _objc_exc_UIStoryboardPopoverSegue;
#endif

struct UIStoryboardPopoverSegue_IMPL {
	struct UIStoryboardSegue_IMPL UIStoryboardSegue_IVARS;
};


// @property (nonatomic, strong, readonly) UIPopoverController *popoverController;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISwitch
#define _REWRITER_typedef_UISwitch
typedef struct objc_object UISwitch;
typedef struct {} _objc_exc_UISwitch;
#endif

struct UISwitch_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nullable, nonatomic, strong) UIColor *onTintColor __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic, strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nullable, nonatomic, strong) UIImage *onImage __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic, strong) UIImage *offImage __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nonatomic,getter=isOn) BOOL on;

// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (void)setOn:(BOOL)on animated:(BOOL)animated;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UITabBarItemPositioning; enum {
    UITabBarItemPositioningAutomatic,
    UITabBarItemPositioningFill,
    UITabBarItemPositioningCentered,
} __attribute__((availability(ios,introduced=7.0)));

// @class UITabBarItem;
#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

// @class UITabBarAppearance;
#ifndef _REWRITER_typedef_UITabBarAppearance
#define _REWRITER_typedef_UITabBarAppearance
typedef struct objc_object UITabBarAppearance;
typedef struct {} _objc_exc_UITabBarAppearance;
#endif

// @protocol UITabBarDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

struct UITabBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable, nonatomic, weak) id<UITabBarDelegate> delegate;
// @property(nullable, nonatomic, copy) NSArray<UITabBarItem *> *items;
// @property(nullable, nonatomic, weak) UITabBarItem *selectedItem;

// - (void)setItems:(nullable NSArray<UITabBarItem *> *)items animated:(BOOL)animated;



// - (void)beginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (BOOL)endCustomizingAnimated:(BOOL)animated __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly, getter=isCustomizing) BOOL customizing __attribute__((availability(tvos,unavailable)));






// @property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=5.0)));
// @property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic, readwrite, copy, nullable) UIColor *unselectedItemTintColor __attribute__((availability(ios,introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic, strong) UIColor *selectedImageTintColor __attribute__((availability(ios,introduced=5.0,deprecated=8.0,replacement="tintColor"))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



// @property(nullable, nonatomic, strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, strong) UIImage *selectionIndicatorImage __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) UITabBarItemPositioning itemPositioning __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));






// @property(nonatomic) CGFloat itemWidth __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));






// @property(nonatomic) CGFloat itemSpacing __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));




// @property(nonatomic) UIBarStyle barStyle __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic, readwrite, copy) UITabBarAppearance *standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));




// @property(nonatomic, readonly, strong) UIView *leadingAccessoryView __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property(nonatomic, readonly, strong) UIView *trailingAccessoryView __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */




// @protocol UITabBarDelegate<NSObject>
/* @optional */

// - (void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item;






// - (void)tabBar:(UITabBar *)tabBar willBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar didBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar willEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar didEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UITabBar (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UINavigationController
#define _REWRITER_typedef_UINavigationController
typedef struct objc_object UINavigationController;
typedef struct {} _objc_exc_UINavigationController;
#endif

#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @protocol UITabBarControllerDelegate;
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITabBarController
#define _REWRITER_typedef_UITabBarController
typedef struct objc_object UITabBarController;
typedef struct {} _objc_exc_UITabBarController;
#endif

struct UITabBarController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property(nullable, nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;


// - (void)setViewControllers:(NSArray<__kindof UIViewController *> * _Nullable)viewControllers animated:(BOOL)animated;

// @property(nullable, nonatomic, assign) __kindof UIViewController *selectedViewController;
// @property(nonatomic) NSUInteger selectedIndex;

// @property(nonatomic, readonly) UINavigationController *moreNavigationController __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic, copy) NSArray<__kindof UIViewController *> *customizableViewControllers __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UITabBar *tabBar __attribute__((availability(ios,introduced=3.0)));

// @property(nullable, nonatomic,weak) id<UITabBarControllerDelegate> delegate;

/* @end */


// @protocol UITabBarControllerDelegate <NSObject>
/* @optional */
// - (BOOL)tabBarController:(UITabBarController *)tabBarController shouldSelectViewController:(UIViewController *)viewController __attribute__((availability(ios,introduced=3.0)));
// - (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController;

// - (void)tabBarController:(UITabBarController *)tabBarController willBeginCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// - (void)tabBarController:(UITabBarController *)tabBarController willEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
// - (void)tabBarController:(UITabBarController *)tabBarController didEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

// - (UIInterfaceOrientationMask)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));

#if 0
- (nullable id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)tabBarController
                      interactionControllerForAnimationController: (id <UIViewControllerAnimatedTransitioning>)animationController __attribute__((availability(ios,introduced=7.0)));
#endif


#if 0
- (nullable id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)tabBarController
            animationControllerForTransitionFromViewController:(UIViewController *)fromVC
                                              toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7.0)));
#endif


/* @end */


// @interface UIViewController (UITabBarControllerItem)

// @property(null_resettable, nonatomic, strong) UITabBarItem *tabBarItem;

// @property(nullable, nonatomic, readonly, strong) UITabBarController *tabBarController;

// @property(nullable, nonatomic, strong) UIScrollView *tabBarObservedScrollView __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UITabBarSystemItem; enum {
    UITabBarSystemItemMore,
    UITabBarSystemItemFavorites,
    UITabBarSystemItemFeatured,
    UITabBarSystemItemTopRated,
    UITabBarSystemItemRecents,
    UITabBarSystemItemContacts,
    UITabBarSystemItemHistory,
    UITabBarSystemItemBookmarks,
    UITabBarSystemItemSearch,
    UITabBarSystemItemDownloads,
    UITabBarSystemItemMostRecent,
    UITabBarSystemItemMostViewed,
};

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UITabBarAppearance
#define _REWRITER_typedef_UITabBarAppearance
typedef struct objc_object UITabBarAppearance;
typedef struct {} _objc_exc_UITabBarAppearance;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

struct UITabBarItem_IMPL {
	struct UIBarItem_IMPL UIBarItem_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));




// - (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image tag:(NSInteger)tag;
// - (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image selectedImage:(nullable UIImage *)selectedImage __attribute__((availability(ios,introduced=7.0)));
// - (instancetype)initWithTabBarSystemItem:(UITabBarSystemItem)systemItem tag:(NSInteger)tag;

// @property(nullable, nonatomic,strong) UIImage *selectedImage __attribute__((availability(ios,introduced=7.0)));

// @property(nullable, nonatomic, copy) NSString *badgeValue;



// - (void)setFinishedSelectedImage:(nullable UIImage *)selectedImage withFinishedUnselectedImage:(nullable UIImage *)unselectedImage __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use initWithTitle:image:selectedImage: or the image and selectedImage properties along with UIImageRenderingModeAlwaysOriginal"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)finishedSelectedImage __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)finishedUnselectedImage __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));





// @property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));


// @property (nonatomic, readwrite, copy, nullable) UIColor *badgeColor __attribute__((availability(ios,introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setBadgeTextAttributes:(nullable NSDictionary<NSAttributedStringKey,id> *)textAttributes forState:(UIControlState)state __attribute__((availability(ios,introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));


// - (nullable NSDictionary<NSAttributedStringKey,id> *)badgeTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));


// @property (nonatomic, readwrite, copy, nullable) UITabBarAppearance *standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0)));

/* @end */



// @interface UITabBarItem (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_UITableViewHeaderFooterView
#define _REWRITER_typedef_UITableViewHeaderFooterView
typedef struct objc_object UITableViewHeaderFooterView;
typedef struct {} _objc_exc_UITableViewHeaderFooterView;
#endif

struct UITableViewHeaderFooterView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithReuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly, strong, nullable) UILabel *textLabel;
// @property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel;

// @property (nonatomic, readonly, strong) UIView *contentView;
// @property (nonatomic, strong, nullable) UIView *backgroundView;

// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;

// - (void)prepareForReuse __attribute__((objc_requires_super));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITableViewController
#define _REWRITER_typedef_UITableViewController
typedef struct objc_object UITableViewController;
typedef struct {} _objc_exc_UITableViewController;
#endif

struct UITableViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithStyle:(UITableViewStyle)style __attribute__((objc_designated_initializer));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nonatomic, strong, null_resettable) UITableView *tableView;
// @property (nonatomic) BOOL clearsSelectionOnViewWillAppear __attribute__((availability(ios,introduced=3.2)));

// @property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.2))) 
#ifndef _REWRITER_typedef_UITextChecker
#define _REWRITER_typedef_UITextChecker
typedef struct objc_object UITextChecker;
typedef struct {} _objc_exc_UITextChecker;
#endif

struct UITextChecker_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (NSRange)rangeOfMisspelledWordInString:(NSString *)stringToCheck range:(NSRange)range startingAt:(NSInteger)startingOffset wrap:(BOOL)wrapFlag language:(NSString *)language;


// - (nullable NSArray<NSString *> *)guessesForWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


// - (nullable NSArray<NSString *> *)completionsForPartialWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


// - (void)ignoreWord:(NSString *)wordToIgnore;
// @property(nonatomic, strong, nullable) NSArray<NSString *> *ignoredWords;


// + (void)learnWord:(NSString *)word;
// + (BOOL)hasLearnedWord:(NSString *)word;
// + (void)unlearnWord:(NSString *)word;


@property(class, nonatomic, readonly) NSArray<NSString *> *availableLanguages;

/* @end */

#pragma clang assume_nonnull end











typedef NSInteger UITextItemInteraction; enum {
    UITextItemInteractionInvokeDefaultAction,
    UITextItemInteractionPresentActions,
    UITextItemInteractionPreview,
} __attribute__((availability(ios,introduced=10.0)));



#pragma clang assume_nonnull begin

// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UITextView
#define _REWRITER_typedef_UITextView
typedef struct objc_object UITextView;
typedef struct {} _objc_exc_UITextView;
#endif

#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

#ifndef _REWRITER_typedef_NSTextStorage
#define _REWRITER_typedef_NSTextStorage
typedef struct objc_object NSTextStorage;
typedef struct {} _objc_exc_NSTextStorage;
#endif

#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif


// @protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

/* @optional */

// - (BOOL)textViewShouldBeginEditing:(UITextView *)textView;
// - (BOOL)textViewShouldEndEditing:(UITextView *)textView;

// - (void)textViewDidBeginEditing:(UITextView *)textView;
// - (void)textViewDidEndEditing:(UITextView *)textView;

// - (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text;
// - (void)textViewDidChange:(UITextView *)textView;

// - (void)textViewDidChangeSelection:(UITextView *)textView;

// - (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10.0)));
// - (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10.0)));

// - (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7.0,deprecated=10.0,replacement="textView:shouldInteractWithURL:inRange:forInteractionType:")));
// - (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7.0,deprecated=10.0,replacement="textView:shouldInteractWithTextAttachment:inRange:forInteractionType:")));

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UITextView
#define _REWRITER_typedef_UITextView
typedef struct objc_object UITextView;
typedef struct {} _objc_exc_UITextView;
#endif

struct UITextView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// @property(nullable,nonatomic,weak) id<UITextViewDelegate> delegate;

// @property(null_resettable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,strong) UIFont *font;
// @property(nullable,nonatomic,strong) UIColor *textColor;
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) NSRange selectedRange;
// @property(nonatomic,getter=isEditable) BOOL editable __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isSelectable) BOOL selectable __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6.0)));
// @property(null_resettable,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6.0)));
// @property(nonatomic,copy) NSDictionary<NSAttributedStringKey, id> *typingAttributes __attribute__((availability(ios,introduced=6.0)));

// - (void)scrollRangeToVisible:(NSRange)range;




// @property (nullable, readwrite, strong) UIView *inputView;
// @property (nullable, readwrite, strong) UIView *inputAccessoryView;

// @property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6.0)));


// - (instancetype)initWithFrame:(CGRect)frame textContainer:(nullable NSTextContainer *)textContainer __attribute__((availability(ios,introduced=7.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property(nonatomic,readonly) NSTextContainer *textContainer __attribute__((availability(ios,introduced=7.0)));

// @property(nonatomic, assign) UIEdgeInsets textContainerInset __attribute__((availability(ios,introduced=7.0)));


// @property(nonatomic,readonly) NSLayoutManager *layoutManager __attribute__((availability(ios,introduced=7.0)));
// @property(nonatomic,readonly,strong) NSTextStorage *textStorage __attribute__((availability(ios,introduced=7.0)));


// @property(null_resettable, nonatomic, copy) NSDictionary<NSAttributedStringKey,id> *linkTextAttributes __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic) BOOL usesStandardTextScaling __attribute__((availability(ios,introduced=13.0)));

/* @end */




// @interface UITextView () <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidBeginEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidChangeNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidEndEditingNotification;
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIBarButtonItem;
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIToolbarAppearance
#define _REWRITER_typedef_UIToolbarAppearance
typedef struct objc_object UIToolbarAppearance;
typedef struct {} _objc_exc_UIToolbarAppearance;
#endif

// @protocol UIToolbarDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

struct UIToolbar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic, copy) NSArray<UIBarButtonItem *> *items;
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3.0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated;






// @property(null_resettable, nonatomic, strong) UIColor *tintColor;
// @property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setShadowImage:(nullable UIImage *)shadowImage forToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)shadowImageForToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));


// @property (nonatomic, readwrite, copy) UIToolbarAppearance *standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0)));

// @property (nonatomic, readwrite, copy, nullable) UIToolbarAppearance *compactAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=13.0)));

// @property(nullable, nonatomic, weak) id<UIToolbarDelegate> delegate __attribute__((availability(ios,introduced=7.0)));

/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIToolbarDelegate <UIBarPositioningDelegate>
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @protocol UIVideoEditorControllerDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIVideoEditorController
#define _REWRITER_typedef_UIVideoEditorController
typedef struct objc_object UIVideoEditorController;
typedef struct {} _objc_exc_UIVideoEditorController;
#endif

struct UIVideoEditorController_IMPL {
	struct UINavigationController_IMPL UINavigationController_IVARS;
};


// + (BOOL)canEditVideoAtPath:(NSString *)videoPath __attribute__((availability(ios,introduced=3.1)));

// @property(nullable, nonatomic,assign) id <UINavigationControllerDelegate, UIVideoEditorControllerDelegate> delegate;

// @property(nonatomic, copy) NSString *videoPath;
// @property(nonatomic) NSTimeInterval videoMaximumDuration;
// @property(nonatomic) UIImagePickerControllerQualityType videoQuality;

/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIVideoEditorControllerDelegate<NSObject>
/* @optional */



// - (void)videoEditorController:(UIVideoEditorController *)editor didSaveEditedVideoToPath:(NSString *)editedVideoPath;
// - (void)videoEditorController:(UIVideoEditorController *)editor didFailWithError:(NSError *)error;
// - (void)videoEditorControllerDidCancel:(UIVideoEditorController *)editor;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UIWebViewNavigationType; enum {
    UIWebViewNavigationTypeLinkClicked,
    UIWebViewNavigationTypeFormSubmitted,
    UIWebViewNavigationTypeBackForward,
    UIWebViewNavigationTypeReload,
    UIWebViewNavigationTypeFormResubmitted,
    UIWebViewNavigationTypeOther
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIWebPaginationMode; enum {
    UIWebPaginationModeUnpaginated,
    UIWebPaginationModeLeftToRight,
    UIWebPaginationModeTopToBottom,
    UIWebPaginationModeBottomToTop,
    UIWebPaginationModeRightToLeft
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIWebPaginationBreakingMode; enum {
    UIWebPaginationBreakingModePage,
    UIWebPaginationBreakingModeColumn
} __attribute__((availability(tvos,unavailable)));

// @class UIWebViewInternal;
#ifndef _REWRITER_typedef_UIWebViewInternal
#define _REWRITER_typedef_UIWebViewInternal
typedef struct objc_object UIWebViewInternal;
typedef struct {} _objc_exc_UIWebViewInternal;
#endif

// @protocol UIWebViewDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="No longer supported; please adopt WKWebView."))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(macos,unavailable))) 
#ifndef _REWRITER_typedef_UIWebView
#define _REWRITER_typedef_UIWebView
typedef struct objc_object UIWebView;
typedef struct {} _objc_exc_UIWebView;
#endif

struct UIWebView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nullable, nonatomic, assign) id <UIWebViewDelegate> delegate;

// @property (nonatomic, readonly, strong) UIScrollView *scrollView __attribute__((availability(ios,introduced=5.0)));

// - (void)loadRequest:(NSURLRequest *)request;
// - (void)loadHTMLString:(NSString *)string baseURL:(nullable NSURL *)baseURL;
// - (void)loadData:(NSData *)data MIMEType:(NSString *)MIMEType textEncodingName:(NSString *)textEncodingName baseURL:(NSURL *)baseURL;

// @property (nullable, nonatomic, readonly, strong) NSURLRequest *request;

// - (void)reload;
// - (void)stopLoading;

// - (void)goBack;
// - (void)goForward;

// @property (nonatomic, readonly, getter=canGoBack) BOOL canGoBack;
// @property (nonatomic, readonly, getter=canGoForward) BOOL canGoForward;
// @property (nonatomic, readonly, getter=isLoading) BOOL loading;

// - (nullable NSString *)stringByEvaluatingJavaScriptFromString:(NSString *)script;

// @property (nonatomic) BOOL scalesPageToFit;

// @property (nonatomic) BOOL detectsPhoneNumbers __attribute__((availability(ios,introduced=2.0,deprecated=3.0,message="")));
// @property (nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3.0)));

// @property (nonatomic) BOOL allowsInlineMediaPlayback __attribute__((availability(ios,introduced=4.0)));
// @property (nonatomic) BOOL mediaPlaybackRequiresUserAction __attribute__((availability(ios,introduced=4.0)));

// @property (nonatomic) BOOL mediaPlaybackAllowsAirPlay __attribute__((availability(ios,introduced=5.0)));

// @property (nonatomic) BOOL suppressesIncrementalRendering __attribute__((availability(ios,introduced=6.0)));

// @property (nonatomic) BOOL keyboardDisplayRequiresUserAction __attribute__((availability(ios,introduced=6.0)));

// @property (nonatomic) UIWebPaginationMode paginationMode __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) UIWebPaginationBreakingMode paginationBreakingMode __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat pageLength __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic) CGFloat gapBetweenPages __attribute__((availability(ios,introduced=7.0)));
// @property (nonatomic, readonly) NSUInteger pageCount __attribute__((availability(ios,introduced=7.0)));

// @property (nonatomic) BOOL allowsPictureInPictureMediaPlayback __attribute__((availability(ios,introduced=9.0)));

// @property (nonatomic) BOOL allowsLinkPreview __attribute__((availability(ios,introduced=9.0)));
/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIWebViewDelegate <NSObject>

/* @optional */
// - (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="No longer supported.")));
// - (void)webViewDidStartLoad:(UIWebView *)webView __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="No longer supported.")));
// - (void)webViewDidFinishLoad:(UIWebView *)webView __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="No longer supported.")));
// - (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error __attribute__((availability(ios,introduced=2.0,deprecated=12.0,message="No longer supported.")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef CGFloat UIWindowLevel __attribute__((swift_wrapper(struct)));

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIScreen
#define _REWRITER_typedef_UIScreen
typedef struct objc_object UIScreen;
typedef struct {} _objc_exc_UIScreen;
#endif

#ifndef _REWRITER_typedef_NSUndoManager
#define _REWRITER_typedef_NSUndoManager
typedef struct objc_object NSUndoManager;
typedef struct {} _objc_exc_NSUndoManager;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIWindowScene
#define _REWRITER_typedef_UIWindowScene
typedef struct objc_object UIWindowScene;
typedef struct {} _objc_exc_UIWindowScene;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=2.0))) 
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

struct UIWindow_IMPL {
	struct UIView_IMPL UIView_IVARS;
};



// - (instancetype)initWithWindowScene:(UIWindowScene *)windowScene __attribute__((availability(ios,introduced=13.0)));



// @property(nullable, nonatomic, weak) UIWindowScene *windowScene __attribute__((availability(ios,introduced=13.0)));


// @property(nonatomic, setter=setCanResizeToFitContent:) BOOL canResizeToFitContent __attribute__((availability(macCatalyst,introduced=13.0)));

// @property(nonatomic,strong) UIScreen *screen __attribute__((availability(ios,introduced=3.2)));
// - (void)setScreen:(UIScreen *)screen __attribute__((availability(ios,introduced=3.2,deprecated=13.0,replacement="setWindowScene:")));

// @property(nonatomic) UIWindowLevel windowLevel;
// @property(nonatomic,readonly,getter=isKeyWindow) BOOL keyWindow;
// - (void)becomeKeyWindow;
// - (void)resignKeyWindow;

// - (void)makeKeyWindow;
// - (void)makeKeyAndVisible;

// @property(nullable, nonatomic,strong) UIViewController *rootViewController __attribute__((availability(ios,introduced=4.0)));

// - (void)sendEvent:(UIEvent *)event;

// - (CGPoint)convertPoint:(CGPoint)point toWindow:(nullable UIWindow *)window;
// - (CGPoint)convertPoint:(CGPoint)point fromWindow:(nullable UIWindow *)window;
// - (CGRect)convertRect:(CGRect)rect toWindow:(nullable UIWindow *)window;
// - (CGRect)convertRect:(CGRect)rect fromWindow:(nullable UIWindow *)window;

/* @end */


extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelNormal;
extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelAlert;
extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelStatusBar __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeVisibleNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeHiddenNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeKeyNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidResignKeyNotification;





extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillShowNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidShowNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillHideNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidHideNotification __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameBeginUserInfoKey __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameEndUserInfoKey __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationDurationUserInfoKey __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationCurveUserInfoKey __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardIsLocalUserInfoKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillChangeFrameNotification __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidChangeFrameNotification __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterBeginUserInfoKey __attribute__((availability(ios,introduced=2.0,deprecated=3.2,message=""))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterEndUserInfoKey __attribute__((availability(ios,introduced=2.0,deprecated=3.2,message=""))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardBoundsUserInfoKey __attribute__((availability(ios,introduced=2.0,deprecated=3.2,message=""))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIDragPreview;
#ifndef _REWRITER_typedef_UIDragPreview
#define _REWRITER_typedef_UIDragPreview
typedef struct objc_object UIDragPreview;
typedef struct {} _objc_exc_UIDragPreview;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

struct UIDragItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithItemProvider:(NSItemProvider *)itemProvider __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) __kindof NSItemProvider *itemProvider;




// @property (nonatomic, strong, nullable) id localObject;
// @property (nonatomic, copy, nullable) UIDragPreview * _Nullable (^previewProvider)(void);

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDragPreviewParameters;
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreview
#define _REWRITER_typedef_UIDragPreview
typedef struct objc_object UIDragPreview;
typedef struct {} _objc_exc_UIDragPreview;
#endif

struct UIDragPreview_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithView:(UIView *)view parameters:(UIDragPreviewParameters *)parameters __attribute__((objc_designated_initializer));



// - (instancetype)initWithView:(UIView *)view;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIView *view;

// @property (nonatomic, readonly, copy) UIDragPreviewParameters *parameters;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPreviewParameters
#define _REWRITER_typedef_UIPreviewParameters
typedef struct objc_object UIPreviewParameters;
typedef struct {} _objc_exc_UIPreviewParameters;
#endif

struct UIPreviewParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithTextLineRects:(NSArray<NSValue *> *)textLineRects;





// @property (nonatomic, copy, nullable) UIBezierPath *visiblePath;




// @property (nonatomic, copy, null_resettable) UIColor *backgroundColor;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

struct UIDragPreviewParameters_IMPL {
	struct UIPreviewParameters_IMPL UIPreviewParameters_IVARS;
};


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragDropSession <NSObject>
// @property (nonatomic, readonly) NSArray<UIDragItem *> *items;



// - (CGPoint)locationInView:(UIView *)view;
// @property (nonatomic, readonly) BOOL allowsMoveOperation;






// @property (nonatomic, readonly, getter=isRestrictedToDraggingApplication) BOOL restrictedToDraggingApplication;





// - (BOOL)hasItemsConformingToTypeIdentifiers:(NSArray<NSString *> *)typeIdentifiers;



// - (BOOL)canLoadObjectsOfClass:(Class<NSItemProviderReading>)aClass;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragSession <UIDragDropSession>




// @property (nonatomic, strong, nullable) id localContext;

/* @end */



typedef NSUInteger UIDropSessionProgressIndicatorStyle; enum {
    UIDropSessionProgressIndicatorStyleNone,
    UIDropSessionProgressIndicatorStyleDefault,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDropSession <UIDragDropSession, NSProgressReporting>




// @property (nonatomic, readonly, nullable) id<UIDragSession> localDragSession;
// @property (nonatomic) UIDropSessionProgressIndicatorStyle progressIndicatorStyle;
// - (NSProgress *)loadObjectsOfClass:(Class<NSItemProviderReading>)aClass completion:(void(^)(NSArray<__kindof id<NSItemProviderReading>> *objects))completion;

/* @end */

#pragma clang assume_nonnull end










#pragma clang assume_nonnull begin

// @class UIPreviewParameters;
#ifndef _REWRITER_typedef_UIPreviewParameters
#define _REWRITER_typedef_UIPreviewParameters
typedef struct objc_object UIPreviewParameters;
typedef struct {} _objc_exc_UIPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPreviewTarget
#define _REWRITER_typedef_UIPreviewTarget
typedef struct objc_object UIPreviewTarget;
typedef struct {} _objc_exc_UIPreviewTarget;
#endif

struct UIPreviewTarget_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithContainer:(UIView *)container center:(CGPoint)center transform:(CGAffineTransform)transform __attribute__((objc_designated_initializer));



// - (instancetype)initWithContainer:(UIView *)container center:(CGPoint)center;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIView *container;
// @property (nonatomic, readonly) CGPoint center;
// @property (nonatomic, readonly) CGAffineTransform transform;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UITargetedPreview
#define _REWRITER_typedef_UITargetedPreview
typedef struct objc_object UITargetedPreview;
typedef struct {} _objc_exc_UITargetedPreview;
#endif

struct UITargetedPreview_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithView:(UIView *)view parameters:(__kindof UIPreviewParameters *)parameters target:(__kindof UIPreviewTarget *)target __attribute__((objc_designated_initializer));




// - (instancetype)initWithView:(UIView *)view parameters:(__kindof UIPreviewParameters *)parameters;





// - (instancetype)initWithView:(UIView *)view;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) __kindof UIPreviewTarget *target;

// @property (nonatomic, readonly) UIView *view;

// @property (nonatomic, readonly, copy) __kindof UIPreviewParameters *parameters;





// @property (nonatomic, readonly) CGSize size;
// - (__kindof UITargetedPreview *)retargetedPreviewWithTarget:(__kindof UIPreviewTarget *)newTarget;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIDragPreviewParameters;
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

struct UIDragPreviewTarget_IMPL {
	struct UIPreviewTarget_IMPL UIPreviewTarget_IVARS;
};

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif

struct UITargetedDragPreview_IMPL {
	struct UITargetedPreview_IMPL UITargetedPreview_IVARS;
};

// - (UITargetedDragPreview *)retargetedPreviewWithTarget:(UIDragPreviewTarget *)newTarget;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSInteger UISpringLoadedInteractionEffectState; enum {
    UISpringLoadedInteractionEffectStateInactive,
    UISpringLoadedInteractionEffectStatePossible,
    UISpringLoadedInteractionEffectStateActivating,
    UISpringLoadedInteractionEffectStateActivated,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @protocol UISpringLoadedInteractionBehavior, UISpringLoadedInteractionEffect, UISpringLoadedInteractionContext;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UISpringLoadedInteraction
#define _REWRITER_typedef_UISpringLoadedInteraction
typedef struct objc_object UISpringLoadedInteraction;
typedef struct {} _objc_exc_UISpringLoadedInteraction;
#endif

struct UISpringLoadedInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithInteractionBehavior:(nullable id<UISpringLoadedInteractionBehavior>)interactionBehavior interactionEffect:(nullable id<UISpringLoadedInteractionEffect>)interactionEffect activationHandler:(void(^)(UISpringLoadedInteraction *interaction, id<UISpringLoadedInteractionContext> context))handler __attribute__((objc_designated_initializer));
// - (instancetype)initWithActivationHandler:(void(^)(UISpringLoadedInteraction *interaction, id<UISpringLoadedInteractionContext> context))handler;

// @property (nonatomic, strong, readonly) id<UISpringLoadedInteractionBehavior> interactionBehavior;
// @property (nonatomic, strong, readonly) id<UISpringLoadedInteractionEffect> interactionEffect;

/* @end */





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionBehavior <NSObject>

/* @required */
// - (BOOL)shouldAllowInteraction:(UISpringLoadedInteraction *)interaction withContext:(id<UISpringLoadedInteractionContext>)context;

/* @optional */





// - (void)interactionDidFinish:(UISpringLoadedInteraction *)interaction;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionEffect <NSObject>

/* @required */







// - (void)interaction:(UISpringLoadedInteraction *)interaction didChangeWithContext:(id<UISpringLoadedInteractionContext>)context;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionContext <NSObject>




// @property (nonatomic, readonly) UISpringLoadedInteractionEffectState state;




// @property (nonatomic, strong, nullable) UIView *targetView;





// @property (nonatomic, strong, nullable) id targetItem;







// - (CGPoint)locationInView:(nullable UIView *)view;

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

// @class UIBlurEffect;
#ifndef _REWRITER_typedef_UIBlurEffect
#define _REWRITER_typedef_UIBlurEffect
typedef struct objc_object UIBlurEffect;
typedef struct {} _objc_exc_UIBlurEffect;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIBarAppearance
#define _REWRITER_typedef_UIBarAppearance
typedef struct objc_object UIBarAppearance;
typedef struct {} _objc_exc_UIBarAppearance;
#endif

struct UIBarAppearance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init;


// - (instancetype)initWithIdiom:(UIUserInterfaceIdiom)idiom __attribute__((objc_designated_initializer));


// @property (nonatomic, readonly, assign) UIUserInterfaceIdiom idiom;


// - (instancetype)initWithBarAppearance:(UIBarAppearance *)barAppearance __attribute__((objc_designated_initializer));

// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)copy;


// - (void)configureWithDefaultBackground;


// - (void)configureWithOpaqueBackground;


// - (void)configureWithTransparentBackground;


// @property (nonatomic, readwrite, copy, nullable) UIBlurEffect *backgroundEffect;

// @property (nonatomic, readwrite, copy, nullable) UIColor *backgroundColor;

// @property (nonatomic, readwrite, strong, nullable) UIImage *backgroundImage;

// @property (nonatomic, readwrite, assign) UIViewContentMode backgroundImageContentMode;


// @property (nonatomic, readwrite, copy, nullable) UIColor *shadowColor;

// @property (nonatomic, readwrite, strong, nullable) UIImage *shadowImage;

/* @end */

#pragma clang assume_nonnull end
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIBarButtonItemStateAppearance
#define _REWRITER_typedef_UIBarButtonItemStateAppearance
typedef struct objc_object UIBarButtonItemStateAppearance;
typedef struct {} _objc_exc_UIBarButtonItemStateAppearance;
#endif

struct UIBarButtonItemStateAppearance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, readwrite, copy) NSDictionary<NSAttributedStringKey, id> *titleTextAttributes;


// @property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment;


// @property (nonatomic, readwrite, strong, nullable) UIImage *backgroundImage;


// @property (nonatomic, readwrite, assign) UIOffset backgroundImagePositionAdjustment;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIBarButtonItemAppearance
#define _REWRITER_typedef_UIBarButtonItemAppearance
typedef struct objc_object UIBarButtonItemAppearance;
typedef struct {} _objc_exc_UIBarButtonItemAppearance;
#endif

struct UIBarButtonItemAppearance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init;


// - (instancetype)initWithStyle:(UIBarButtonItemStyle)style __attribute__((objc_designated_initializer));

// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)copy;


// - (void)configureWithDefaultForStyle:(UIBarButtonItemStyle)style;


// @property (nonatomic, readonly, strong) UIBarButtonItemStateAppearance *normal;


// @property (nonatomic, readonly, strong) UIBarButtonItemStateAppearance *highlighted;


// @property (nonatomic, readonly, strong) UIBarButtonItemStateAppearance *disabled;


// @property (nonatomic, readonly, strong) UIBarButtonItemStateAppearance *focused;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UINavigationBarAppearance
#define _REWRITER_typedef_UINavigationBarAppearance
typedef struct objc_object UINavigationBarAppearance;
typedef struct {} _objc_exc_UINavigationBarAppearance;
#endif

struct UINavigationBarAppearance_IMPL {
	struct UIBarAppearance_IMPL UIBarAppearance_IVARS;
};



// @property (nonatomic, readwrite, copy) NSDictionary<NSAttributedStringKey, id> *titleTextAttributes;

// @property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment;


// @property (nonatomic, readwrite, copy) NSDictionary<NSAttributedStringKey, id> *largeTitleTextAttributes;


// @property (nonatomic, readwrite, copy) UIBarButtonItemAppearance *buttonAppearance;


// @property (nonatomic, readwrite, copy) UIBarButtonItemAppearance *doneButtonAppearance;


// @property (nonatomic, readwrite, copy) UIBarButtonItemAppearance *backButtonAppearance;


// @property (nonatomic, readonly, strong) UIImage *backIndicatorImage;

// @property (nonatomic, readonly, strong) UIImage *backIndicatorTransitionMaskImage;

// - (void)setBackIndicatorImage:(nullable UIImage *)backIndicatorImage transitionMaskImage:(nullable UIImage *)backIndicatorTransitionMaskImage;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIToolbarAppearance
#define _REWRITER_typedef_UIToolbarAppearance
typedef struct objc_object UIToolbarAppearance;
typedef struct {} _objc_exc_UIToolbarAppearance;
#endif

struct UIToolbarAppearance_IMPL {
	struct UIBarAppearance_IMPL UIBarAppearance_IVARS;
};



// @property (nonatomic, readwrite, copy) UIBarButtonItemAppearance *buttonAppearance;


// @property (nonatomic, readwrite, copy) UIBarButtonItemAppearance *doneButtonAppearance;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UITabBarItemStateAppearance
#define _REWRITER_typedef_UITabBarItemStateAppearance
typedef struct objc_object UITabBarItemStateAppearance;
typedef struct {} _objc_exc_UITabBarItemStateAppearance;
#endif

struct UITabBarItemStateAppearance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, readwrite, copy) NSDictionary<NSAttributedStringKey, id> *titleTextAttributes;


// @property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment;


// @property (nonatomic, readwrite, copy, nullable) UIColor *iconColor;


// @property (nonatomic, readwrite, assign) UIOffset badgePositionAdjustment;


// @property (nonatomic, readwrite, copy, nullable) UIColor *badgeBackgroundColor;


// @property (nonatomic, readwrite, copy) NSDictionary<NSAttributedStringKey, id> *badgeTextAttributes;


// @property (nonatomic, readwrite, assign) UIOffset badgeTitlePositionAdjustment;

/* @end */


typedef NSInteger UITabBarItemAppearanceStyle; enum {
    UITabBarItemAppearanceStyleStacked,
    UITabBarItemAppearanceStyleInline,
    UITabBarItemAppearanceStyleCompactInline,
};

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UITabBarItemAppearance
#define _REWRITER_typedef_UITabBarItemAppearance
typedef struct objc_object UITabBarItemAppearance;
typedef struct {} _objc_exc_UITabBarItemAppearance;
#endif

struct UITabBarItemAppearance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init;


// - (instancetype)initWithStyle:(UITabBarItemAppearanceStyle)style __attribute__((objc_designated_initializer));

// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// - (instancetype)copy;


// - (void)configureWithDefaultForStyle:(UITabBarItemAppearanceStyle)style;


// @property (nonatomic, readonly, strong) UITabBarItemStateAppearance *normal;


// @property (nonatomic, readonly, strong) UITabBarItemStateAppearance *selected;


// @property (nonatomic, readonly, strong) UITabBarItemStateAppearance *disabled;


// @property (nonatomic, readonly, strong) UITabBarItemStateAppearance *focused;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) 
#ifndef _REWRITER_typedef_UITabBarAppearance
#define _REWRITER_typedef_UITabBarAppearance
typedef struct objc_object UITabBarAppearance;
typedef struct {} _objc_exc_UITabBarAppearance;
#endif

struct UITabBarAppearance_IMPL {
	struct UIBarAppearance_IMPL UIBarAppearance_IVARS;
};



// @property (nonatomic, readwrite, copy) UITabBarItemAppearance *stackedLayoutAppearance;


// @property (nonatomic, readwrite, copy) UITabBarItemAppearance *inlineLayoutAppearance;


// @property (nonatomic, readwrite, copy) UITabBarItemAppearance *compactInlineLayoutAppearance;


// @property (nonatomic, readwrite, copy, nullable) UIColor *selectionIndicatorTintColor;

// @property (nonatomic, readwrite, strong, nullable) UIImage *selectionIndicatorImage;


// @property (nonatomic, readwrite, assign) UITabBarItemPositioning stackedItemPositioning;
// @property (nonatomic, readwrite, assign) CGFloat stackedItemWidth;
// @property (nonatomic, readwrite, assign) CGFloat stackedItemSpacing;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIActivity;
#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif


typedef NSString * UIActivityItemsConfigurationMetadataKey __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) UIActivityItemsConfigurationMetadataKey const UIActivityItemsConfigurationMetadataKeyTitle __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityItemsConfigurationMetadataKey const UIActivityItemsConfigurationMetadataKeyMessageBody __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


typedef NSString * UIActivityItemsConfigurationPreviewIntent __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) UIActivityItemsConfigurationPreviewIntent const UIActivityItemsConfigurationPreviewIntentFullSize __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityItemsConfigurationPreviewIntent const UIActivityItemsConfigurationPreviewIntentThumbnail __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


typedef NSString * UIActivityItemsConfigurationInteraction __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) UIActivityItemsConfigurationInteraction const UIActivityItemsConfigurationInteractionShare __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UIActivityItemsConfigurationReading <NSObject>

// @property (nonatomic, readonly, copy) NSArray<NSItemProvider *> *itemProvidersForActivityItemsConfiguration;

/* @optional */

// - (BOOL)activityItemsConfigurationSupportsInteraction:(UIActivityItemsConfigurationInteraction)interaction __attribute__((swift_name("activityItemsConfigurationSupports(interaction:)")));

// - (nullable id)activityItemsConfigurationMetadataForKey:(UIActivityItemsConfigurationMetadataKey)key __attribute__((swift_name("activityItemsConfigurationMetadata(key:)")));

// - (nullable id)activityItemsConfigurationMetadataForItemAtIndex:(NSInteger)index key:(UIActivityItemsConfigurationMetadataKey)key;

// - (nullable NSItemProvider *)activityItemsConfigurationPreviewForItemAtIndex:(NSInteger)index intent:(UIActivityItemsConfigurationPreviewIntent)intent suggestedSize:(CGSize)suggestedSize;

// @property (nonatomic, readonly, nullable, copy) NSArray <UIActivity *> *applicationActivitiesForActivityItemsConfiguration;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIActivity;
#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UIActivityItemsConfiguration
#define _REWRITER_typedef_UIActivityItemsConfiguration
typedef struct objc_object UIActivityItemsConfiguration;
typedef struct {} _objc_exc_UIActivityItemsConfiguration;
#endif

struct UIActivityItemsConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, strong, nullable) id localObject;
// @property (nonatomic, copy) NSArray<UIActivityItemsConfigurationInteraction> *supportedInteractions;
// @property (nonatomic, strong, nullable) id _Nullable (^metadataProvider)(UIActivityItemsConfigurationMetadataKey key);
// @property (nonatomic, strong, nullable) id _Nullable (^perItemMetadataProvider)(NSInteger index, UIActivityItemsConfigurationMetadataKey key);
// @property (nonatomic, strong, nullable) NSItemProvider *_Nullable (^previewProvider)(NSInteger index, UIActivityItemsConfigurationPreviewIntent intent, CGSize suggestedSize);
// @property (nonatomic, strong, nullable) NSArray<UIActivity *> *(^applicationActivitiesProvider)(void);

// + (instancetype)activityItemsConfigurationWithObjects:(NSArray<id<NSItemProviderWriting> > *)objects;
// + (instancetype)activityItemsConfigurationWithItemProviders:(NSArray<NSItemProvider *> *)itemProviders;

// - (instancetype)initWithObjects:(NSArray<id<NSItemProviderWriting> > *)objects __attribute__((objc_designated_initializer));
// - (instancetype)initWithItemProviders:(NSArray<NSItemProvider *> *)itemProviders __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UIActivityItemsConfigurationReading;

__attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @interface UIResponder (UIActivityItemsConfiguration)

// @property (nonatomic, strong, nullable) id<UIActivityItemsConfigurationReading> activityItemsConfiguration __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end



// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSFileWrapper;
#ifndef _REWRITER_typedef_NSFileWrapper
#define _REWRITER_typedef_NSFileWrapper
typedef struct objc_object NSFileWrapper;
typedef struct {} _objc_exc_NSFileWrapper;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSFontAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSParagraphStyleAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSForegroundColorAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSBackgroundColorAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSLigatureAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSKernAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrikethroughStyleAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSUnderlineStyleAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrokeColorAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrokeWidthAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSShadowAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSTextEffectAttributeName __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSAttachmentAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSLinkAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSBaselineOffsetAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSUnderlineColorAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrikethroughColorAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSObliquenessAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSExpansionAttributeName __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSWritingDirectionAttributeName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSVerticalGlyphFormAttributeName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=6.0)));






typedef NSInteger NSUnderlineStyle; enum {
    NSUnderlineStyleNone = 0x00,
    NSUnderlineStyleSingle = 0x01,
    NSUnderlineStyleThick __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x02,
    NSUnderlineStyleDouble __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x09,

    NSUnderlineStylePatternSolid __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x0000,
    NSUnderlineStylePatternDot __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x0100,
    NSUnderlineStylePatternDash __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x0200,
    NSUnderlineStylePatternDashDot __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x0300,
    NSUnderlineStylePatternDashDotDot __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x0400,

    NSUnderlineStyleByWord __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) = 0x8000
} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));


typedef NSInteger NSWritingDirectionFormatType; enum {
    NSWritingDirectionEmbedding = (0 << 1),
    NSWritingDirectionOverride = (1 << 1)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));


typedef NSString * NSTextEffectStyle __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) NSTextEffectStyle const NSTextEffectLetterpressStyle __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0)));




// @interface NSMutableAttributedString (NSAttributedStringAttributeFixing)

// - (void)fixAttributesInRange:(NSRange)range __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

/* @end */





typedef NSString * NSAttributedStringDocumentType __attribute__((swift_wrapper(struct)));


extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSPlainTextDocumentType __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSRTFTextDocumentType __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSRTFDTextDocumentType __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSHTMLTextDocumentType __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

typedef NSString * NSTextLayoutSectionKey __attribute__((swift_wrapper(enum)));


extern "C" __attribute__((visibility ("default"))) NSTextLayoutSectionKey const NSTextLayoutSectionOrientation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSTextLayoutSectionKey const NSTextLayoutSectionRange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0)));


typedef NSInteger NSTextScalingType; enum {
    NSTextScalingStandard = 0,
    NSTextScalingiOS
} __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));

typedef NSString * NSAttributedStringDocumentAttributeKey __attribute__((swift_wrapper(struct)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDocumentTypeDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSCharacterEncodingDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDefaultAttributesDocumentAttribute __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));





extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSPaperSizeDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSPaperMarginDocumentAttribute __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewSizeDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewZoomDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewModeDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSReadOnlyDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSBackgroundColorDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSHyphenationFactorDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDefaultTabIntervalDocumentAttribute __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSTextLayoutSectionsAttribute __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSTextScalingDocumentAttribute __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSSourceTextScalingDocumentAttribute __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSCocoaVersionDocumentAttribute __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=13.0)));

typedef NSString * NSAttributedStringDocumentReadingOptionKey __attribute__((swift_wrapper(struct)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSDocumentTypeDocumentOption;
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSDefaultAttributesDocumentOption;
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSCharacterEncodingDocumentOption;

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSTargetTextScalingDocumentOption __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSSourceTextScalingDocumentOption __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0)));


// @interface NSAttributedString (NSAttributedStringDocumentFormats)

// - (nullable instancetype)initWithURL:(NSURL *)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=9.0)));
// - (nullable instancetype)initWithData:(NSData *)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));


// - (nullable NSData *)dataFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> *)dict error:(NSError **)error __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));


// - (nullable NSFileWrapper *)fileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> *)dict error:(NSError **)error __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));

/* @end */


// @interface NSMutableAttributedString (NSMutableAttributedStringDocumentFormats)

// - (BOOL)readFromURL:(NSURL *)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)readFromData:(NSData *)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
/* @end */




// @interface NSAttributedString (NSAttributedStringKitAdditions)

// - (BOOL)containsAttachmentsInRange:(NSRange)range __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
/* @end */


// @interface NSAttributedString (NSAttributedString_ItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */






static const NSUnderlineStyle NSUnderlinePatternSolid = NSUnderlineStylePatternSolid;
static const NSUnderlineStyle NSUnderlinePatternDot = NSUnderlineStylePatternDot;
static const NSUnderlineStyle NSUnderlinePatternDash = NSUnderlineStylePatternDash;
static const NSUnderlineStyle NSUnderlinePatternDashDot = NSUnderlineStylePatternDashDot;
static const NSUnderlineStyle NSUnderlinePatternDashDotDot = NSUnderlineStylePatternDashDotDot;
static const NSUnderlineStyle NSUnderlineByWord = NSUnderlineStyleByWord;


typedef NSInteger NSTextWritingDirection; enum {
    NSTextWritingDirectionEmbedding = (0 << 1),
    NSTextWritingDirectionOverride = (1 << 1)
} __attribute__((availability(ios,introduced=7.0,deprecated=9.0,replacement="NSWritingDirectionFormatType"))) __attribute__((availability(tvos,unavailable)));

// @interface NSAttributedString(NSDeprecatedKitAdditions)
// - (nullable instancetype)initWithFileURL:(NSURL *)url options:(NSDictionary *)options documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7.0,deprecated=9.0,replacement="initWithURL:options:documentAttributes:error:"))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @interface NSMutableAttributedString (NSDeprecatedKitAdditions)
// - (BOOL)readFromFileURL:(NSURL *)url options:(NSDictionary *)opts documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7.0,deprecated=9.0,replacement="readFromURL:options:documentAttributes:error:"))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin
// @class NSLayoutConstraint;
#ifndef _REWRITER_typedef_NSLayoutConstraint
#define _REWRITER_typedef_NSLayoutConstraint
typedef struct objc_object NSLayoutConstraint;
typedef struct {} _objc_exc_NSLayoutConstraint;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

extern "C" __attribute((visibility("default"))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLayoutAnchor
#define _REWRITER_typedef_NSLayoutAnchor
typedef struct objc_object NSLayoutAnchor;
typedef struct {} _objc_exc_NSLayoutAnchor;
#endif

struct NSLayoutAnchor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor __attribute__((warn_unused_result));


// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c __attribute__((warn_unused_result));


// @property (readonly, copy) NSString *name __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly, nullable, weak) id item __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly) BOOL hasAmbiguousLayout __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly) NSArray<NSLayoutConstraint *> *constraintsAffectingLayout __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif


extern "C" __attribute((visibility("default"))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

struct NSLayoutXAxisAnchor_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};



// - (NSLayoutDimension *)anchorWithOffsetToAnchor:(NSLayoutXAxisAnchor *)otherAnchor __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */


extern "C" __attribute((visibility("default"))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

struct NSLayoutYAxisAnchor_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};



// - (NSLayoutDimension *)anchorWithOffsetToAnchor:(NSLayoutYAxisAnchor *)otherAnchor __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */



extern "C" __attribute((visibility("default"))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

struct NSLayoutDimension_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};



// - (NSLayoutConstraint *)constraintEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));


// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));


// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));

/* @end */




// @interface NSLayoutXAxisAnchor (UIViewDynamicSystemSpacingSupport)





// - (NSLayoutConstraint *)constraintEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */



// @interface NSLayoutYAxisAnchor (UIViewDynamicSystemSpacingSupport)







// - (NSLayoutConstraint *)constraintEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
/* @end */

#pragma clang assume_nonnull end

typedef NSInteger UIStackViewDistribution; enum {






    UIStackViewDistributionFill = 0,






    UIStackViewDistributionFillEqually,




    UIStackViewDistributionFillProportionally,





    UIStackViewDistributionEqualSpacing,
    UIStackViewDistributionEqualCentering,
} __attribute__((availability(ios,introduced=9.0)));



typedef NSInteger UIStackViewAlignment; enum {



    UIStackViewAlignmentFill,





    UIStackViewAlignmentLeading,
    UIStackViewAlignmentTop = UIStackViewAlignmentLeading,
    UIStackViewAlignmentFirstBaseline,




    UIStackViewAlignmentCenter,





    UIStackViewAlignmentTrailing,
    UIStackViewAlignmentBottom = UIStackViewAlignmentTrailing,
    UIStackViewAlignmentLastBaseline,
} __attribute__((availability(ios,introduced=9.0)));






static const CGFloat UIStackViewSpacingUseDefault __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 3.40282347e+38F;
static const CGFloat UIStackViewSpacingUseSystem __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 1.17549435e-38F;
#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0)))

#ifndef _REWRITER_typedef_UIStackView
#define _REWRITER_typedef_UIStackView
typedef struct objc_object UIStackView;
typedef struct {} _objc_exc_UIStackView;
#endif

struct UIStackView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithArrangedSubviews:(NSArray<__kindof UIView *> *)views;
// @property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *arrangedSubviews;
// - (void)addArrangedSubview:(UIView *)view;







// - (void)removeArrangedSubview:(UIView *)view;





// - (void)insertArrangedSubview:(UIView *)view atIndex:(NSUInteger)stackIndex;




// @property(nonatomic) UILayoutConstraintAxis axis;



// @property(nonatomic) UIStackViewDistribution distribution;




// @property(nonatomic) UIStackViewAlignment alignment;
// @property(nonatomic) CGFloat spacing;
// - (void)setCustomSpacing:(CGFloat)spacing afterView:(UIView *)arrangedSubview __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (CGFloat)customSpacingAfterView:(UIView *)arrangedSubview __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property(nonatomic,getter=isBaselineRelativeArrangement) BOOL baselineRelativeArrangement;




// @property(nonatomic,getter=isLayoutMarginsRelativeArrangement) BOOL layoutMarginsRelativeArrangement;

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif


// @protocol NSTextStorageDelegate;

#pragma clang assume_nonnull begin

typedef NSUInteger NSTextStorageEditActions; enum {
    NSTextStorageEditedAttributes = (1 << 0),
    NSTextStorageEditedCharacters = (1 << 1)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_NSTextStorage
#define _REWRITER_typedef_NSTextStorage
typedef struct objc_object NSTextStorage;
typedef struct {} _objc_exc_NSTextStorage;
#endif

struct NSTextStorage_IMPL {
	struct NSMutableAttributedString_IMPL NSMutableAttributedString_IVARS;
};





// @property (readonly, copy, nonatomic) NSArray<NSLayoutManager *> *layoutManagers;


// - (void)addLayoutManager:(NSLayoutManager *)aLayoutManager;


// - (void)removeLayoutManager:(NSLayoutManager *)aLayoutManager;






// @property (readonly, nonatomic) NSTextStorageEditActions editedMask;


// @property (readonly, nonatomic) NSRange editedRange;


// @property (readonly, nonatomic) NSInteger changeInLength;




// @property (nullable, weak, nonatomic) id <NSTextStorageDelegate> delegate;





// - (void)edited:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta;


// - (void)processEditing;





// @property (readonly, nonatomic) BOOL fixesAttributesLazily;


// - (void)invalidateAttributesInRange:(NSRange)range;


// - (void)ensureAttributesAreFixedInRange:(NSRange)range;

/* @end */





// @protocol NSTextStorageDelegate <NSObject>
/* @optional */


// - (void)textStorage:(NSTextStorage *)textStorage willProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (void)textStorage:(NSTextStorage *)textStorage didProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageWillProcessEditingNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageDidProcessEditingNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end




// @class NSTextContainer;
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


#pragma clang assume_nonnull begin

// @protocol NSLayoutManagerDelegate;



typedef NSInteger NSTextLayoutOrientation; enum {
    NSTextLayoutOrientationHorizontal = 0,
    NSTextLayoutOrientationVertical = 1,
} __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSGlyphProperty; enum {
    NSGlyphPropertyNull = (1 << 0),
    NSGlyphPropertyControlCharacter = (1 << 1),
    NSGlyphPropertyElastic = (1 << 2),
    NSGlyphPropertyNonBaseCharacter = (1 << 3)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));

typedef NSInteger NSControlCharacterAction; enum {
    NSControlCharacterActionZeroAdvancement = (1 << 0),
    NSControlCharacterActionWhitespace = (1 << 1),
    NSControlCharacterActionHorizontalTab = (1 << 2),
    NSControlCharacterActionLineBreak = (1 << 3),
    NSControlCharacterActionParagraphBreak = (1 << 4),
    NSControlCharacterActionContainerBreak = (1 << 5)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));

// @protocol NSTextLayoutOrientationProvider

// @property (readonly, nonatomic) NSTextLayoutOrientation layoutOrientation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0)));
/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

struct NSLayoutManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)init __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






// @property (nullable, assign, nonatomic) NSTextStorage *textStorage;






// @property (readonly, nonatomic) NSArray<NSTextContainer *> *textContainers;


// - (void)addTextContainer:(NSTextContainer *)container;


// - (void)insertTextContainer:(NSTextContainer *)container atIndex:(NSUInteger)index;


// - (void)removeTextContainerAtIndex:(NSUInteger)index;


// - (void)textContainerChangedGeometry:(NSTextContainer *)container;





// @property (nullable, weak, nonatomic) id <NSLayoutManagerDelegate> delegate;





// @property (nonatomic) BOOL showsInvisibleCharacters;


// @property (nonatomic) BOOL showsControlCharacters;


// @property (nonatomic) BOOL usesFontLeading;


// @property (nonatomic) BOOL allowsNonContiguousLayout __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=7.0)));


// @property (readonly, nonatomic) BOOL hasNonContiguousLayout __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=7.0)));


// @property BOOL limitsLayoutForSuspiciousContents __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=12.0))) __attribute__((availability(watchos,introduced=5.0))) __attribute__((availability(tvos,introduced=12.0)));


// @property BOOL usesDefaultHyphenation __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));




// - (void)invalidateGlyphsForCharacterRange:(NSRange)charRange changeInLength:(NSInteger)delta actualCharacterRange:(nullable NSRangePointer)actualCharRange;


// - (void)invalidateLayoutForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=7.0)));


// - (void)invalidateDisplayForCharacterRange:(NSRange)charRange;
// - (void)invalidateDisplayForGlyphRange:(NSRange)glyphRange;


// - (void)processEditingForTextStorage:(NSTextStorage *)textStorage edited:(NSTextStorageEditActions)editMask range:(NSRange)newCharRange changeInLength:(NSInteger)delta invalidatedRange:(NSRange)invalidatedCharRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));





// - (void)ensureGlyphsForCharacterRange:(NSRange)charRange;
// - (void)ensureGlyphsForGlyphRange:(NSRange)glyphRange;
// - (void)ensureLayoutForCharacterRange:(NSRange)charRange;
// - (void)ensureLayoutForGlyphRange:(NSRange)glyphRange;
// - (void)ensureLayoutForTextContainer:(NSTextContainer *)container;
// - (void)ensureLayoutForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;





// - (void)setGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));





// @property (readonly, nonatomic) NSUInteger numberOfGlyphs;


// - (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
// - (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
// - (BOOL)isValidGlyphIndex:(NSUInteger)glyphIndex __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (NSGlyphProperty)propertyForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=7.0)));


// - (NSUInteger)characterIndexForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (NSUInteger)glyphIndexForCharacterAtIndex:(NSUInteger)charIndex;


// - (NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(nullable CGGlyph *)glyphBuffer properties:(nullable NSGlyphProperty *)props characterIndexes:(nullable NSUInteger *)charIndexBuffer bidiLevels:(nullable unsigned char *)bidiLevelBuffer __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=7.0)));





// - (void)setTextContainer:(NSTextContainer *)container forGlyphRange:(NSRange)glyphRange;


// - (void)setLineFragmentRect:(CGRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(CGRect)usedRect;


// - (void)setExtraLineFragmentRect:(CGRect)fragmentRect usedRect:(CGRect)usedRect textContainer:(NSTextContainer *)container;


// - (void)setLocation:(CGPoint)location forStartOfGlyphRange:(NSRange)glyphRange;


// - (void)setNotShownAttribute:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


// - (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


// - (void)setAttachmentSize:(CGSize)attachmentSize forGlyphRange:(NSRange)glyphRange;





// - (void)getFirstUnlaidCharacterIndex:(nullable NSUInteger *)charIndex glyphIndex:(nullable NSUInteger *)glyphIndex;
// - (NSUInteger)firstUnlaidCharacterIndex;
// - (NSUInteger)firstUnlaidGlyphIndex;


// - (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));



// - (CGRect)usedRectForTextContainer:(NSTextContainer *)container;


// - (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));


// - (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));


// @property (readonly, nonatomic) CGRect extraLineFragmentRect;
// @property (readonly, nonatomic) CGRect extraLineFragmentUsedRect;
// @property (nullable, readonly, nonatomic) NSTextContainer *extraLineFragmentTextContainer;



// - (CGPoint)locationForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (BOOL)notShownAttributeForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (CGSize)attachmentSizeForGlyphAtIndex:(NSUInteger)glyphIndex;



// - (NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));





// - (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange;


// - (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(nullable NSRangePointer)actualGlyphRange;


// - (NSRange)glyphRangeForTextContainer:(NSTextContainer *)container;


// - (NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger)glyphIndex;


// - (CGRect)boundingRectForGlyphRange:(NSRange)glyphRange inTextContainer:(NSTextContainer *)container;


// - (NSRange)glyphRangeForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;
// - (NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(CGRect)bounds inTextContainer:(NSTextContainer *)container;


// - (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceThroughGlyph:(nullable CGFloat *)partialFraction;
// - (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;
// - (CGFloat)fractionOfDistanceThroughGlyphForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;


// - (NSUInteger)characterIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceBetweenInsertionPoints:(nullable CGFloat *)partialFraction;


// - (NSUInteger)getLineFragmentInsertionPointsForCharacterAtIndex:(NSUInteger)charIndex alternatePositions:(BOOL)aFlag inDisplayOrder:(BOOL)dFlag positions:(nullable CGFloat *)positions characterIndexes:(nullable NSUInteger *)charIndexes;


// - (void)enumerateLineFragmentsForGlyphRange:(NSRange)glyphRange usingBlock:(void (^)(CGRect rect, CGRect usedRect, NSTextContainer *textContainer, NSRange glyphRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (void)enumerateEnclosingRectsForGlyphRange:(NSRange)glyphRange withinSelectedGlyphRange:(NSRange)selectedRange inTextContainer:(NSTextContainer *)textContainer usingBlock:(void (^)(CGRect rect, BOOL *stop))block __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));




// - (void)drawBackgroundForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;
// - (void)drawGlyphsForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;


// - (void)showCGGlyphs:(const CGGlyph *)glyphs positions:(const CGPoint *)positions count:(NSInteger)glyphCount font:(UIFont *)font textMatrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSAttributedStringKey, id> *)attributes inContext:(CGContextRef)CGContext __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0))) __attribute__((availability(tvos,introduced=13.0)));


// - (void)fillBackgroundRectArray:(const CGRect *)rectArray count:(NSUInteger)rectCount forCharacterRange:(NSRange)charRange color:(UIColor *)color __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=7.0)));


// - (void)drawUnderlineForGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
// - (void)underlineGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;


// - (void)drawStrikethroughForGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
// - (void)strikethroughGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;

/* @end */



// @protocol NSLayoutManagerDelegate <NSObject>
/* @optional */



// - (NSUInteger)layoutManager:(NSLayoutManager *)layoutManager shouldGenerateGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));






// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (NSControlCharacterAction)layoutManager:(NSLayoutManager *)layoutManager shouldUseAction:(NSControlCharacterAction)action forControlCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (CGRect)layoutManager:(NSLayoutManager *)layoutManager boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer *)textContainer proposedLineFragment:(CGRect)proposedRect glyphPosition:(CGPoint)glyphPosition characterIndex:(NSUInteger)charIndex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldSetLineFragmentRect:(inout CGRect *)lineFragmentRect lineFragmentUsedRect:(inout CGRect *)lineFragmentUsedRect baselineOffset:(inout CGFloat *)baselineOffset inTextContainer:(NSTextContainer *)textContainer forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));




// - (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)sender __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));


// - (void)layoutManager:(NSLayoutManager *)layoutManager didCompleteLayoutForTextContainer:(nullable NSTextContainer *)textContainer atEnd:(BOOL)layoutFinishedFlag __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));


// - (void)layoutManager:(NSLayoutManager *)layoutManager textContainer:(NSTextContainer *)textContainer didChangeGeometryFromSize:(CGSize)oldSize __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));

/* @end */




enum {
    NSControlCharacterZeroAdvancementAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionZeroAdvancement instead"))) = NSControlCharacterActionZeroAdvancement,
    NSControlCharacterWhitespaceAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionWhitespace instead"))) = NSControlCharacterActionWhitespace,
    NSControlCharacterHorizontalTabAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionHorizontalTab instead"))) = NSControlCharacterActionHorizontalTab,
    NSControlCharacterLineBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionLineBreak instead"))) = NSControlCharacterActionLineBreak,
    NSControlCharacterParagraphBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionParagraphBreak instead"))) = NSControlCharacterActionParagraphBreak,
    NSControlCharacterContainerBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionContainerBreak instead"))) = NSControlCharacterActionContainerBreak
};

// @interface NSLayoutManager (NSLayoutManagerDeprecated)

// - (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex;
// - (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex;


// @property CGFloat hyphenationFactor __attribute__((availability(macos,introduced=10.0,deprecated=10.15,message="Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead."))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,message="Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,message="Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,message="Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead."))) __attribute__((availability(macCatalyst,unavailable)));


// - (void)showCGGlyphs:(const CGGlyph *)glyphs positions:(const CGPoint *)positions count:(NSUInteger)glyphCount font:(UIFont *)font matrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSAttributedStringKey, id> *)attributes inContext:(CGContextRef)graphicsContext __attribute__((availability(macos,introduced=10.7,deprecated=10.15,replacement="showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:"))) __attribute__((availability(ios,introduced=7.0,deprecated=13.0,replacement="showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=6.0,replacement="showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=13.0,replacement="showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:"))) __attribute__((availability(macCatalyst,unavailable)));

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin






extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_NSShadow
#define _REWRITER_typedef_NSShadow
typedef struct objc_object NSShadow;
typedef struct {} _objc_exc_NSShadow;
#endif

struct NSShadow_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nonatomic, assign) CGSize shadowOffset;
// @property (nonatomic, assign) CGFloat shadowBlurRadius;
// @property (nullable, nonatomic, strong) id shadowColor;

/* @end */

#pragma clang assume_nonnull end


// @class NSStringDrawingContext;
#ifndef _REWRITER_typedef_NSStringDrawingContext
#define _REWRITER_typedef_NSStringDrawingContext
typedef struct objc_object NSStringDrawingContext;
typedef struct {} _objc_exc_NSStringDrawingContext;
#endif


#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=6.0))) 
#ifndef _REWRITER_typedef_NSStringDrawingContext
#define _REWRITER_typedef_NSStringDrawingContext
typedef struct objc_object NSStringDrawingContext;
typedef struct {} _objc_exc_NSStringDrawingContext;
#endif

struct NSStringDrawingContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic) CGFloat minimumScaleFactor;


// @property (readonly, nonatomic) CGFloat actualScaleFactor;


// @property (readonly, nonatomic) CGRect totalBounds;

/* @end */


// @interface NSString(NSStringDrawing)
// - (CGSize)sizeWithAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
// - (void)drawAtPoint:(CGPoint)point withAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
// - (void)drawInRect:(CGRect)rect withAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0)));
/* @end */


// @interface NSAttributedString(NSStringDrawing)
// - (CGSize)size __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
// - (void)drawAtPoint:(CGPoint)point __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
// - (void)drawInRect:(CGRect)rect __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));
/* @end */


typedef NSInteger NSStringDrawingOptions; enum {
    NSStringDrawingUsesLineFragmentOrigin = 1 << 0,
    NSStringDrawingUsesFontLeading = 1 << 1,
    NSStringDrawingUsesDeviceMetrics = 1 << 3,
    NSStringDrawingTruncatesLastVisibleLine __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) = 1 << 5,

} __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=6.0)));




// @interface NSString (NSExtendedStringDrawing)
// - (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
// - (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
/* @end */


// @interface NSAttributedString (NSExtendedStringDrawing)
// - (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=6.0)));
// - (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=6.0)));
/* @end */



// @interface NSStringDrawingContext (NSStringDrawingContextDeprecated)
// @property (nonatomic) CGFloat minimumTrackingAdjustment __attribute__((availability(ios,introduced=6.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, readonly) CGFloat actualTrackingAdjustment __attribute__((availability(ios,introduced=6.0,deprecated=7.0,message=""))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end




// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

struct NSTextContainer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithSize:(CGSize)size __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






// @property (nullable, assign, nonatomic) NSLayoutManager *layoutManager;


// - (void)replaceLayoutManager:(NSLayoutManager *)newLayoutManager __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));





// @property (nonatomic) CGSize size __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// @property (copy, nonatomic) NSArray<UIBezierPath *> *exclusionPaths __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));




// @property (nonatomic) CGFloat lineFragmentPadding;


// @property (nonatomic) NSUInteger maximumNumberOfLines __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));




// - (CGRect)lineFragmentRectForProposedRect:(CGRect)proposedRect atIndex:(NSUInteger)characterIndex writingDirection:(NSWritingDirection)baseWritingDirection remainingRect:(nullable CGRect *)remainingRect __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=7.0)));


// @property (getter=isSimpleRectangularTextContainer, readonly, nonatomic) BOOL simpleRectangularTextContainer __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=9.0)));





// @property (nonatomic) BOOL widthTracksTextView;
// @property (nonatomic) BOOL heightTracksTextView;

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

// @protocol UIPreviewInteractionDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPreviewInteraction
#define _REWRITER_typedef_UIPreviewInteraction
typedef struct objc_object UIPreviewInteraction;
typedef struct {} _objc_exc_UIPreviewInteraction;
#endif

struct UIPreviewInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithView:(UIView *)view __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly, weak) UIView *view;

// - (instancetype)init __attribute__((unavailable));

// @property (nonatomic, nullable, weak) id <UIPreviewInteractionDelegate> delegate;

// - (CGPoint)locationInCoordinateSpace:(nullable id <UICoordinateSpace>)coordinateSpace;
// - (void)cancelInteraction;

/* @end */


// @protocol UIPreviewInteractionDelegate <NSObject>

// - (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdatePreviewTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)previewInteractionDidCancel:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @optional */

// - (BOOL)previewInteractionShouldBegin:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdateCommitTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPopoverPresentationController;
#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif


__attribute__((availability(tvos,unavailable)))
// @protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>
/* @optional */

// - (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)popoverPresentationController;



// - (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)popoverPresentationController __attribute__((availability(ios,introduced=8.0,deprecated=13.0,replacement="presentationControllerShouldDismiss:")));;


// - (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)popoverPresentationController __attribute__((availability(ios,introduced=8.0,deprecated=13.0,replacement="presentationControllerDidDismiss:")));



// - (void)popoverPresentationController:(UIPopoverPresentationController *)popoverPresentationController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif

struct UIPopoverPresentationController_IMPL {
	struct UIPresentationController_IMPL UIPresentationController_IVARS;
};


// @property (nullable, nonatomic, weak) id <UIPopoverPresentationControllerDelegate> delegate;

// @property (nonatomic, assign) UIPopoverArrowDirection permittedArrowDirections;

// @property (nullable, nonatomic, strong) UIView *sourceView;




// @property (nonatomic, assign) CGRect sourceRect;



// @property (nonatomic, assign) BOOL canOverlapSourceViewRect __attribute__((availability(ios,introduced=9.0)));

// @property (nullable, nonatomic, strong) UIBarButtonItem *barButtonItem;


// @property (nonatomic, readonly) UIPopoverArrowDirection arrowDirection;




// @property (nullable, nonatomic, copy) NSArray<UIView *> *passthroughViews;


// @property (nullable, nonatomic, copy) UIColor *backgroundColor;





// @property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins;



// @property (nullable, nonatomic, readwrite, strong) Class <UIPopoverBackgroundViewMethods> popoverBackgroundViewClass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDynamicBehavior;
#ifndef _REWRITER_typedef_UIDynamicBehavior
#define _REWRITER_typedef_UIDynamicBehavior
typedef struct objc_object UIDynamicBehavior;
typedef struct {} _objc_exc_UIDynamicBehavior;
#endif

// @class UIDynamicAnimator;
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif


// @protocol UIDynamicAnimatorDelegate <NSObject>

/* @optional */
// - (void)dynamicAnimatorWillResume:(UIDynamicAnimator *)animator;
// - (void)dynamicAnimatorDidPause:(UIDynamicAnimator *)animator;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif

struct UIDynamicAnimator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithReferenceView:(UIView *)view __attribute__((objc_designated_initializer));

// - (void)addBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeAllBehaviors;

// @property (nullable, nonatomic, readonly) UIView *referenceView;
// @property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior*> *behaviors;


// - (NSArray<id<UIDynamicItem>> *)itemsInRect:(CGRect)rect;

// - (void)updateItemUsingCurrentState:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, getter = isRunning) BOOL running;
// @property (nonatomic, readonly) NSTimeInterval elapsedTime;

// @property (nullable, nonatomic, weak) id <UIDynamicAnimatorDelegate> delegate;

/* @end */


// @interface UIDynamicAnimator (UICollectionViewAdditions)



// - (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout;


// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForCellAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind atIndexPath:(NSIndexPath *)indexPath;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIPushBehaviorMode; enum {
    UIPushBehaviorModeContinuous,
    UIPushBehaviorModeInstantaneous
} __attribute__((availability(ios,introduced=7.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIPushBehavior
#define _REWRITER_typedef_UIPushBehavior
typedef struct objc_object UIPushBehavior;
typedef struct {} _objc_exc_UIPushBehavior;
#endif

struct UIPushBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items mode:(UIPushBehaviorMode)mode __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// - (UIOffset)targetOffsetFromCenterForItem:(id <UIDynamicItem>)item;
// - (void)setTargetOffsetFromCenter:(UIOffset)o forItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly) UIPushBehaviorMode mode;
// @property (nonatomic, readwrite) BOOL active;

// @property (readwrite, nonatomic) CGFloat angle;

// @property (readwrite, nonatomic) CGFloat magnitude;
// @property (readwrite, nonatomic) CGVector pushDirection;

// - (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UISnapBehavior
#define _REWRITER_typedef_UISnapBehavior
typedef struct objc_object UISnapBehavior;
typedef struct {} _objc_exc_UISnapBehavior;
#endif

struct UISnapBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};



// - (instancetype)initWithItem:(id <UIDynamicItem>)item snapToPoint:(CGPoint)point __attribute__((objc_designated_initializer));

// @property (nonatomic, assign) CGPoint snapPoint __attribute__((availability(ios,introduced=9.0)));
// @property (nonatomic, assign) CGFloat damping;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIDynamicItemBehavior
#define _REWRITER_typedef_UIDynamicItemBehavior
typedef struct objc_object UIDynamicItemBehavior;
typedef struct {} _objc_exc_UIDynamicItemBehavior;
#endif

struct UIDynamicItemBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (readwrite, nonatomic) CGFloat elasticity;
// @property (readwrite, nonatomic) CGFloat friction;
// @property (readwrite, nonatomic) CGFloat density;
// @property (readwrite, nonatomic) CGFloat resistance;
// @property (readwrite, nonatomic) CGFloat angularResistance;






// @property (readwrite, nonatomic) CGFloat charge __attribute__((availability(ios,introduced=9.0)));






// @property (nonatomic, getter = isAnchored) BOOL anchored __attribute__((availability(ios,introduced=9.0)));

// @property (readwrite, nonatomic) BOOL allowsRotation;



// - (void)addLinearVelocity:(CGPoint)velocity forItem:(id <UIDynamicItem>)item;
// - (CGPoint)linearVelocityForItem:(id <UIDynamicItem>)item;



// - (void)addAngularVelocity:(CGFloat)velocity forItem:(id <UIDynamicItem>)item;
// - (CGFloat)angularVelocityForItem:(id <UIDynamicItem>)item;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIRegion;
#ifndef _REWRITER_typedef_UIRegion
#define _REWRITER_typedef_UIRegion
typedef struct objc_object UIRegion;
typedef struct {} _objc_exc_UIRegion;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIFieldBehavior
#define _REWRITER_typedef_UIFieldBehavior
typedef struct objc_object UIFieldBehavior;
typedef struct {} _objc_exc_UIFieldBehavior;
#endif

struct UIFieldBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)init __attribute__((unavailable));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;




// @property (nonatomic, assign) CGPoint position;





// @property (nonatomic, strong) UIRegion *region;


// @property (nonatomic, assign) CGFloat strength;






// @property (nonatomic, assign) CGFloat falloff;


// @property (nonatomic, assign) CGFloat minimumRadius;






// @property (nonatomic, assign) CGVector direction;





// @property (nonatomic, assign) CGFloat smoothness;





// @property (nonatomic, assign) CGFloat animationSpeed;





// + (instancetype)dragField;






// + (instancetype)vortexField;







// + (instancetype)radialGravityFieldWithPosition:(CGPoint)position;
// + (instancetype)linearGravityFieldWithVector:(CGVector)direction;







// + (instancetype)velocityFieldWithVector:(CGVector)direction;
// + (instancetype)noiseFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;
// + (instancetype)turbulenceFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;






// + (instancetype)springField;







// + (instancetype)electricField;
// + (instancetype)magneticField;
// + (instancetype)fieldWithEvaluationBlock:(CGVector(^)(UIFieldBehavior *field, CGPoint position, CGVector velocity, CGFloat mass, CGFloat charge, NSTimeInterval deltaTime))block;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIGravityBehavior
#define _REWRITER_typedef_UIGravityBehavior
typedef struct objc_object UIGravityBehavior;
typedef struct {} _objc_exc_UIGravityBehavior;
#endif

struct UIGravityBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;



// @property (readwrite, nonatomic) CGVector gravityDirection;

// @property (readwrite, nonatomic) CGFloat angle;
// @property (readwrite, nonatomic) CGFloat magnitude;
// - (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIAttachmentBehaviorType; enum {
    UIAttachmentBehaviorTypeItems,
    UIAttachmentBehaviorTypeAnchor
} __attribute__((availability(ios,introduced=7.0)));

typedef struct {
    CGFloat minimum;
    CGFloat maximum;
} UIFloatRange;

extern "C" __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeZero __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeInfinite __attribute__((availability(ios,introduced=9.0)));
extern "C" __attribute__((visibility ("default"))) BOOL UIFloatRangeIsInfinite(UIFloatRange range) __attribute__((availability(ios,introduced=9.0)));

static inline UIFloatRange UIFloatRangeMake(CGFloat minimum, CGFloat maximum) {
    return (UIFloatRange){minimum, maximum};
}

static inline BOOL UIFloatRangeIsEqualToRange(UIFloatRange range, UIFloatRange otherRange) {
    return range.minimum == otherRange.minimum && range.maximum == otherRange.maximum;
}

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UIAttachmentBehavior
#define _REWRITER_typedef_UIAttachmentBehavior
typedef struct objc_object UIAttachmentBehavior;
typedef struct {} _objc_exc_UIAttachmentBehavior;
#endif

struct UIAttachmentBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItem:(id <UIDynamicItem>)item attachedToAnchor:(CGPoint)point;
// - (instancetype)initWithItem:(id <UIDynamicItem>)item offsetFromCenter:(UIOffset)offset attachedToAnchor:(CGPoint)point __attribute__((objc_designated_initializer));

// - (instancetype)initWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2;
// - (instancetype)initWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((objc_designated_initializer));
// + (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9.0)));
// + (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9.0)));
// + (instancetype)limitAttachmentWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((availability(ios,introduced=9.0)));
// + (instancetype)fixedAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9.0)));
// + (instancetype)pinAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9.0)));

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (readonly, nonatomic) UIAttachmentBehaviorType attachedBehaviorType;

// @property (readwrite, nonatomic) CGPoint anchorPoint;

// @property (readwrite, nonatomic) CGFloat length;
// @property (readwrite, nonatomic) CGFloat damping;
// @property (readwrite, nonatomic) CGFloat frequency;
// @property (readwrite, nonatomic) CGFloat frictionTorque __attribute__((availability(ios,introduced=9.0)));
// @property (readwrite, nonatomic) UIFloatRange attachmentRange __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollisionBehavior;
#ifndef _REWRITER_typedef_UICollisionBehavior
#define _REWRITER_typedef_UICollisionBehavior
typedef struct objc_object UICollisionBehavior;
typedef struct {} _objc_exc_UICollisionBehavior;
#endif


typedef NSUInteger UICollisionBehaviorMode; enum {
    UICollisionBehaviorModeItems = 1 << 0,
    UICollisionBehaviorModeBoundaries = 1 << 1,
    UICollisionBehaviorModeEverything = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(ios,introduced=7.0)));

// @protocol UICollisionBehaviorDelegate <NSObject>
/* @optional */

// - (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2 atPoint:(CGPoint)p;
// - (void)collisionBehavior:(UICollisionBehavior *)behavior endedContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2;


// - (void)collisionBehavior:(UICollisionBehavior*)behavior beganContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier atPoint:(CGPoint)p;
// - (void)collisionBehavior:(UICollisionBehavior*)behavior endedContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=7.0))) 
#ifndef _REWRITER_typedef_UICollisionBehavior
#define _REWRITER_typedef_UICollisionBehavior
typedef struct objc_object UICollisionBehavior;
typedef struct {} _objc_exc_UICollisionBehavior;
#endif

struct UICollisionBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (nonatomic, readwrite) UICollisionBehaviorMode collisionMode;

// @property (nonatomic, readwrite) BOOL translatesReferenceBoundsIntoBoundary;
// - (void)setTranslatesReferenceBoundsIntoBoundaryWithInsets:(UIEdgeInsets)insets;

// - (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier forPath:(UIBezierPath *)bezierPath;
// - (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier fromPoint:(CGPoint)p1 toPoint:(CGPoint)p2;
// - (nullable UIBezierPath *)boundaryWithIdentifier:(id <NSCopying>)identifier;
// - (void)removeBoundaryWithIdentifier:(id <NSCopying>)identifier;
// @property (nullable, nonatomic, readonly, copy) NSArray<id <NSCopying>> *boundaryIdentifiers;
// - (void)removeAllBoundaries;

// @property (nullable, nonatomic, weak, readwrite) id <UICollisionBehaviorDelegate> collisionDelegate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9.0))) 
#ifndef _REWRITER_typedef_UIRegion
#define _REWRITER_typedef_UIRegion
typedef struct objc_object UIRegion;
typedef struct {} _objc_exc_UIRegion;
#endif

struct UIRegion_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




@property(class, nonatomic, readonly) UIRegion *infiniteRegion;



// - (instancetype)initWithRadius:(CGFloat)radius;



// - (instancetype)initWithSize:(CGSize)size;





// - (instancetype)inverseRegion;



// - (instancetype)regionByUnionWithRegion:(UIRegion *)region;



// - (instancetype)regionByDifferenceFromRegion:(UIRegion *)region;



// - (instancetype)regionByIntersectionWithRegion:(UIRegion *)region;



// - (BOOL)containsPoint:(CGPoint)point;

/* @end */

#pragma clang assume_nonnull end






// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITextDragPreviewRenderer
#define _REWRITER_typedef_UITextDragPreviewRenderer
typedef struct objc_object UITextDragPreviewRenderer;
typedef struct {} _objc_exc_UITextDragPreviewRenderer;
#endif

struct UITextDragPreviewRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithLayoutManager:(NSLayoutManager*)layoutManager range:(NSRange)range;
// - (instancetype)initWithLayoutManager:(NSLayoutManager*)layoutManager range:(NSRange)range unifyRects:(BOOL)unifyRects __attribute__((objc_designated_initializer));

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

// @property (nonatomic, readonly) NSLayoutManager *layoutManager;
// @property (nonatomic, readonly) UIImage *image;
// @property (nonatomic, readonly) CGRect firstLineRect;
// @property (nonatomic, readonly) CGRect bodyRect;
// @property (nonatomic, readonly) CGRect lastLineRect;

// - (void)adjustFirstLineRect:(inout CGRect*)firstLineRect bodyRect:(inout CGRect*)bodyRect lastLineRect:(inout CGRect*)lastLineRect textOrigin:(CGPoint)origin;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







// @interface UIDragPreview (URLPreviews)

// + (instancetype)previewForURL:(NSURL *)url __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (instancetype)previewForURL:(NSURL *)url title:(NSString * _Nullable)title __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UITargetedDragPreview (URLPreviews)

// + (instancetype)previewForURL:(NSURL *)url target:(UIDragPreviewTarget*)target __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (instancetype)previewForURL:(NSURL *)url title:(NSString * _Nullable)title target:(UIDragPreviewTarget*)target __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10.0))) 
#ifndef _REWRITER_typedef_UIViewPropertyAnimator
#define _REWRITER_typedef_UIViewPropertyAnimator
typedef struct objc_object UIViewPropertyAnimator;
typedef struct {} _objc_exc_UIViewPropertyAnimator;
#endif

struct UIViewPropertyAnimator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nullable, nonatomic, copy, readonly) id <UITimingCurveProvider> timingParameters;

// @property(nonatomic, readonly) NSTimeInterval duration;


// @property(nonatomic, readonly) NSTimeInterval delay;


// @property(nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;


// @property(nonatomic, getter=isManualHitTestingEnabled) BOOL manualHitTestingEnabled;


// @property(nonatomic, getter=isInterruptible) BOOL interruptible;


// @property(nonatomic) BOOL scrubsLinearly __attribute__((availability(ios,introduced=11.0)));


// @property(nonatomic) BOOL pausesOnCompletion __attribute__((availability(ios,introduced=11.0)));

// - (instancetype)initWithDuration:(NSTimeInterval)duration timingParameters:(id <UITimingCurveProvider>)parameters __attribute__((objc_designated_initializer));


// - (instancetype)initWithDuration:(NSTimeInterval)duration curve:(UIViewAnimationCurve)curve animations:(void (^ _Nullable)(void))animations;
// - (instancetype)initWithDuration:(NSTimeInterval)duration controlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 animations:(void (^ _Nullable)(void))animations;
// - (instancetype)initWithDuration:(NSTimeInterval)duration dampingRatio:(CGFloat)ratio animations:(void (^ _Nullable)(void))animations;
#if 0
+ (instancetype)runningPropertyAnimatorWithDuration:(NSTimeInterval)duration
                                              delay:(NSTimeInterval)delay
                                            options:(UIViewAnimationOptions)options
                                         animations:(void (^)(void))animations
                                         completion:(void (^ _Nullable)(UIViewAnimatingPosition finalPosition))completion;
#endif






// - (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;
// - (void)addAnimations:(void (^)(void))animation;

// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;







// - (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;


/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIFeedbackGenerator
#define _REWRITER_typedef_UIFeedbackGenerator
typedef struct objc_object UIFeedbackGenerator;
typedef struct {} _objc_exc_UIFeedbackGenerator;
#endif

struct UIFeedbackGenerator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (void)prepare;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISelectionFeedbackGenerator
#define _REWRITER_typedef_UISelectionFeedbackGenerator
typedef struct objc_object UISelectionFeedbackGenerator;
typedef struct {} _objc_exc_UISelectionFeedbackGenerator;
#endif

struct UISelectionFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};



// - (void)selectionChanged;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIImpactFeedbackStyle; enum {
    UIImpactFeedbackStyleLight,
    UIImpactFeedbackStyleMedium,
    UIImpactFeedbackStyleHeavy,
    UIImpactFeedbackStyleSoft __attribute__((availability(ios,introduced=13.0))),
    UIImpactFeedbackStyleRigid __attribute__((availability(ios,introduced=13.0)))
};


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIImpactFeedbackGenerator
#define _REWRITER_typedef_UIImpactFeedbackGenerator
typedef struct objc_object UIImpactFeedbackGenerator;
typedef struct {} _objc_exc_UIImpactFeedbackGenerator;
#endif

struct UIImpactFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};


// - (instancetype)initWithStyle:(UIImpactFeedbackStyle)style;


// - (void)impactOccurred;


// - (void)impactOccurredWithIntensity:(CGFloat)intensity __attribute__((availability(ios,introduced=13.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UINotificationFeedbackType; enum {
    UINotificationFeedbackTypeSuccess,
    UINotificationFeedbackTypeWarning,
    UINotificationFeedbackTypeError
};


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UINotificationFeedbackGenerator
#define _REWRITER_typedef_UINotificationFeedbackGenerator
typedef struct objc_object UINotificationFeedbackGenerator;
typedef struct {} _objc_exc_UINotificationFeedbackGenerator;
#endif

struct UINotificationFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};



// - (void)notificationOccurred:(UINotificationFeedbackType)notificationType;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UITextInteraction;
#ifndef _REWRITER_typedef_UITextInteraction
#define _REWRITER_typedef_UITextInteraction
typedef struct objc_object UITextInteraction;
typedef struct {} _objc_exc_UITextInteraction;
#endif


typedef NSInteger UITextInteractionMode; enum {
    UITextInteractionModeEditable,
    UITextInteractionModeNonEditable,
};

// @protocol UITextInteractionDelegate <NSObject>
/* @optional */
// - (BOOL)interactionShouldBegin:(UITextInteraction *)interaction atPoint:(CGPoint)point;
// - (void)interactionWillBegin:(UITextInteraction *)interaction;
// - (void)interactionDidEnd:(UITextInteraction *)interaction;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UITextInteraction
#define _REWRITER_typedef_UITextInteraction
typedef struct objc_object UITextInteraction;
typedef struct {} _objc_exc_UITextInteraction;
#endif

struct UITextInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, weak) id <UITextInteractionDelegate> delegate;
// @property (nonatomic, weak) UIResponder <UITextInput> *textInput;

// @property (nonatomic, readonly) UITextInteractionMode textInteractionMode;
// @property (nonatomic, readonly) NSArray <UIGestureRecognizer *> *gesturesForFailureRequirements;

// + (instancetype)textInteractionForMode:(UITextInteractionMode)mode;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPressesEvent;
#ifndef _REWRITER_typedef_UIPressesEvent
#define _REWRITER_typedef_UIPressesEvent
typedef struct objc_object UIPressesEvent;
typedef struct {} _objc_exc_UIPressesEvent;
#endif

// @class UIPress;
#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif





// @interface UIGestureRecognizer (UIGestureRecognizerProtected)


// @property(nonatomic,readwrite) UIGestureRecognizerState state;

// - (void)ignoreTouch:(UITouch*)touch forEvent:(UIEvent*)event;

// - (void)ignorePress:(UIPress *)button forEvent:(UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));







// - (void)reset;



// - (BOOL)canPreventGestureRecognizer:(UIGestureRecognizer *)preventedGestureRecognizer;
// - (BOOL)canBePreventedByGestureRecognizer:(UIGestureRecognizer *)preventingGestureRecognizer;


// - (BOOL)shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7.0)));
// - (BOOL)shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7.0)));




// - (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event;
// - (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event;
// - (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event;
// - (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event;
// - (void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> *)touches __attribute__((availability(ios,introduced=9.1)));

// - (void)pressesBegan:(NSSet<UIPress *> *)presses withEvent:(UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesChanged:(NSSet<UIPress *> *)presses withEvent:(UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesEnded:(NSSet<UIPress *> *)presses withEvent:(UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));
// - (void)pressesCancelled:(NSSet<UIPress *> *)presses withEvent:(UIPressesEvent *)event __attribute__((availability(ios,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef void (*UIGraphicsDrawingActions)(__kindof UIGraphicsRendererContext *rendererContext) __attribute__((availability(ios,introduced=10.0)));






// @interface UIGraphicsRenderer (UIGraphicsRendererProtected)

// + (Class)rendererContextClass __attribute__((availability(ios,introduced=10.0)));


// + (nullable CGContextRef)contextWithFormat:(UIGraphicsRendererFormat *)format __attribute__((cf_returns_retained)) __attribute__((availability(ios,introduced=10.0)));


// + (void)prepareCGContext:(CGContextRef)context withRendererContext:(UIGraphicsRendererContext *)rendererContext __attribute__((availability(ios,introduced=10.0)));



// - (BOOL)runDrawingActions:(__attribute__((noescape)) UIGraphicsDrawingActions)drawingActions completionActions:(nullable __attribute__((noescape)) UIGraphicsDrawingActions)completionActions error:(NSError **)error __attribute__((availability(ios,introduced=10.0)));
/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin



typedef NSInteger UIPencilPreferredAction; enum {

    UIPencilPreferredActionIgnore = 0,


    UIPencilPreferredActionSwitchEraser,


    UIPencilPreferredActionSwitchPrevious,


    UIPencilPreferredActionShowColorPalette,

} __attribute__((availability(ios,introduced=12.1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @protocol UIPencilInteractionDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=12.1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPencilInteraction
#define _REWRITER_typedef_UIPencilInteraction
typedef struct objc_object UIPencilInteraction;
typedef struct {} _objc_exc_UIPencilInteraction;
#endif

struct UIPencilInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, nonatomic, readonly) UIPencilPreferredAction preferredTapAction;

// @property (nonatomic, weak, nullable) id <UIPencilInteractionDelegate> delegate;

// @property (nonatomic, getter=isEnabled) BOOL enabled;

/* @end */



__attribute__((availability(ios,introduced=12.1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIPencilInteractionDelegate <NSObject>

/* @optional */






// - (void)pencilInteractionDidTap:(UIPencilInteraction *)interaction;

/* @end */

#pragma clang assume_nonnull end




// @class UIScene;
#ifndef _REWRITER_typedef_UIScene
#define _REWRITER_typedef_UIScene
typedef struct objc_object UIScene;
typedef struct {} _objc_exc_UIScene;
#endif

#ifndef _REWRITER_typedef_UIOpenURLContext
#define _REWRITER_typedef_UIOpenURLContext
typedef struct objc_object UIOpenURLContext;
typedef struct {} _objc_exc_UIOpenURLContext;
#endif

#ifndef _REWRITER_typedef_UNNotificationResponse
#define _REWRITER_typedef_UNNotificationResponse
typedef struct objc_object UNNotificationResponse;
typedef struct {} _objc_exc_UNNotificationResponse;
#endif

#ifndef _REWRITER_typedef_UIApplicationShortcutItem
#define _REWRITER_typedef_UIApplicationShortcutItem
typedef struct objc_object UIApplicationShortcutItem;
typedef struct {} _objc_exc_UIApplicationShortcutItem;
#endif

#ifndef _REWRITER_typedef_CKShareMetadata
#define _REWRITER_typedef_CKShareMetadata
typedef struct objc_object CKShareMetadata;
typedef struct {} _objc_exc_CKShareMetadata;
#endif


#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneConnectionOptions
#define _REWRITER_typedef_UISceneConnectionOptions
typedef struct objc_object UISceneConnectionOptions;
typedef struct {} _objc_exc_UISceneConnectionOptions;
#endif

struct UISceneConnectionOptions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// @property (nonatomic, readonly, copy) NSSet<UIOpenURLContext *> *URLContexts;



// @property (nullable, nonatomic, readonly) NSString *sourceApplication;



// @property (nullable, nonatomic, readonly) NSString *handoffUserActivityType;





// @property (nonatomic, readonly, copy) NSSet<NSUserActivity *> *userActivities;


// @property (nullable, nonatomic, readonly) UNNotificationResponse *notificationResponse __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, readonly) UIApplicationShortcutItem *shortcutItem __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, readonly) CKShareMetadata *cloudKitShareMetadata;
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneOpenURLOptions
#define _REWRITER_typedef_UISceneOpenURLOptions
typedef struct objc_object UISceneOpenURLOptions;
typedef struct {} _objc_exc_UISceneOpenURLOptions;
#endif

struct UISceneOpenURLOptions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));



// @property (nullable, nonatomic, readonly) NSString *sourceApplication;


// @property (nullable, nonatomic, readonly) id annotation;


// @property (nonatomic, readonly) BOOL openInPlace;
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneOpenExternalURLOptions
#define _REWRITER_typedef_UISceneOpenExternalURLOptions
typedef struct objc_object UISceneOpenExternalURLOptions;
typedef struct {} _objc_exc_UISceneOpenExternalURLOptions;
#endif

struct UISceneOpenExternalURLOptions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readwrite) BOOL universalLinksOnly;
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneActivationRequestOptions
#define _REWRITER_typedef_UISceneActivationRequestOptions
typedef struct objc_object UISceneActivationRequestOptions;
typedef struct {} _objc_exc_UISceneActivationRequestOptions;
#endif

struct UISceneActivationRequestOptions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nullable, nonatomic, readwrite, strong) UIScene *requestingScene;
/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneDestructionRequestOptions
#define _REWRITER_typedef_UISceneDestructionRequestOptions
typedef struct objc_object UISceneDestructionRequestOptions;
typedef struct {} _objc_exc_UISceneDestructionRequestOptions;
#endif

struct UISceneDestructionRequestOptions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UISceneSession;
#ifndef _REWRITER_typedef_UISceneSession
#define _REWRITER_typedef_UISceneSession
typedef struct objc_object UISceneSession;
typedef struct {} _objc_exc_UISceneSession;
#endif

#ifndef _REWRITER_typedef_UISceneConnectionOptions
#define _REWRITER_typedef_UISceneConnectionOptions
typedef struct objc_object UISceneConnectionOptions;
typedef struct {} _objc_exc_UISceneConnectionOptions;
#endif

#ifndef _REWRITER_typedef_UIOpenURLContext
#define _REWRITER_typedef_UIOpenURLContext
typedef struct objc_object UIOpenURLContext;
typedef struct {} _objc_exc_UIOpenURLContext;
#endif

#ifndef _REWRITER_typedef_UISceneOpenExternalURLOptions
#define _REWRITER_typedef_UISceneOpenExternalURLOptions
typedef struct objc_object UISceneOpenExternalURLOptions;
typedef struct {} _objc_exc_UISceneOpenExternalURLOptions;
#endif

#ifndef _REWRITER_typedef_UISceneActivationConditions
#define _REWRITER_typedef_UISceneActivationConditions
typedef struct objc_object UISceneActivationConditions;
typedef struct {} _objc_exc_UISceneActivationConditions;
#endif

// @protocol UISceneDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIScene
#define _REWRITER_typedef_UIScene
typedef struct objc_object UIScene;
typedef struct {} _objc_exc_UIScene;
#endif

struct UIScene_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// - (instancetype)initWithSession:(UISceneSession *)session connectionOptions:(UISceneConnectionOptions *)connectionOptions __attribute__((objc_designated_initializer));



// @property (nonatomic, readonly) UISceneSession *session;




// @property (nullable, nonatomic, strong) id<UISceneDelegate> delegate;



// @property (nonatomic, readonly) UISceneActivationState activationState;






// - (void)openURL:(NSURL*)url options:(nullable UISceneOpenExternalURLOptions *)options completionHandler:(void (^ _Nullable)(BOOL success))completion;



// @property (null_resettable, nonatomic, copy) NSString *title;


// @property (nonatomic, strong) UISceneActivationConditions *activationConditions;

/* @end */


__attribute__((availability(ios,introduced=13.0))) // @protocol UISceneDelegate <NSObject>
/* @optional */

// - (void)scene:(UIScene *)scene willConnectToSession:(UISceneSession *)session options:(UISceneConnectionOptions *)connectionOptions;
// - (void)sceneDidDisconnect:(UIScene *)scene;

// - (void)sceneDidBecomeActive:(UIScene *)scene;
// - (void)sceneWillResignActive:(UIScene *)scene;

// - (void)sceneWillEnterForeground:(UIScene *)scene;
// - (void)sceneDidEnterBackground:(UIScene *)scene;


// - (void)scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts;
// - (nullable NSUserActivity *)stateRestorationActivityForScene:(UIScene *)scene;


// - (void)scene:(UIScene *)scene willContinueUserActivityWithType:(NSString *)userActivityType;
// - (void)scene:(UIScene *)scene continueUserActivity:(NSUserActivity *)userActivity;
// - (void)scene:(UIScene *)scene didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error;
// - (void)scene:(UIScene *)scene didUpdateUserActivity:(NSUserActivity *)userActivity;
/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneWillConnectNotification __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneDidDisconnectNotification __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneDidActivateNotification __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneWillDeactivateNotification __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneWillEnterForegroundNotification __attribute__((availability(ios,introduced=13.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UISceneDidEnterBackgroundNotification __attribute__((availability(ios,introduced=13.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIScreen;
#ifndef _REWRITER_typedef_UIScreen
#define _REWRITER_typedef_UIScreen
typedef struct objc_object UIScreen;
typedef struct {} _objc_exc_UIScreen;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIWindowSceneDelegate
#define _REWRITER_typedef_UIWindowSceneDelegate
typedef struct objc_object UIWindowSceneDelegate;
typedef struct {} _objc_exc_UIWindowSceneDelegate;
#endif

#ifndef _REWRITER_typedef_UISceneDestructionRequestOptions
#define _REWRITER_typedef_UISceneDestructionRequestOptions
typedef struct objc_object UISceneDestructionRequestOptions;
typedef struct {} _objc_exc_UISceneDestructionRequestOptions;
#endif

#ifndef _REWRITER_typedef_CKShareMetadata
#define _REWRITER_typedef_CKShareMetadata
typedef struct objc_object CKShareMetadata;
typedef struct {} _objc_exc_CKShareMetadata;
#endif

#ifndef _REWRITER_typedef_UISceneSizeRestrictions
#define _REWRITER_typedef_UISceneSizeRestrictions
typedef struct objc_object UISceneSizeRestrictions;
typedef struct {} _objc_exc_UISceneSizeRestrictions;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIWindowScene
#define _REWRITER_typedef_UIWindowScene
typedef struct objc_object UIWindowScene;
typedef struct {} _objc_exc_UIWindowScene;
#endif

struct UIWindowScene_IMPL {
	struct UIScene_IMPL UIScene_IVARS;
};



// @property (nonatomic, readonly) UIScreen *screen;
// @property (nonatomic, readonly) UIInterfaceOrientation interfaceOrientation __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, readonly) id<UICoordinateSpace> coordinateSpace;
// @property (nonatomic, readonly) UITraitCollection *traitCollection;


// @property (nonatomic, readonly, nullable) UISceneSizeRestrictions *sizeRestrictions __attribute__((availability(ios,introduced=13.0)));



// @property (nonatomic, readonly) NSArray<UIWindow *> *windows;

/* @end */



__attribute__((availability(ios,introduced=13.0))) // @protocol UIWindowSceneDelegate <UISceneDelegate>
/* @optional */
// @property (nullable, nonatomic, strong) UIWindow *window;

// - (void)windowScene:(UIWindowScene *)windowScene didUpdateCoordinateSpace:(id<UICoordinateSpace>)previousCoordinateSpace interfaceOrientation:(UIInterfaceOrientation)previousInterfaceOrientation traitCollection:(UITraitCollection *)previousTraitCollection __attribute__((availability(tvos,unavailable)));




// - (void)windowScene:(UIWindowScene *)windowScene performActionForShortcutItem:(UIApplicationShortcutItem *)shortcutItem completionHandler:(void(^)(BOOL succeeded))completionHandler __attribute__((availability(tvos,unavailable)));





// - (void)windowScene:(UIWindowScene *)windowScene userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata;
/* @end */




extern "C" __attribute__((visibility ("default"))) UISceneSessionRole const UIWindowSceneSessionRoleApplication __attribute__((availability(ios,introduced=13.0)));


extern "C" __attribute__((visibility ("default"))) UISceneSessionRole const UIWindowSceneSessionRoleExternalDisplay __attribute__((availability(ios,introduced=13.0)));


typedef NSInteger UIWindowSceneDismissalAnimation; enum {
    UIWindowSceneDismissalAnimationStandard = 1,
    UIWindowSceneDismissalAnimationCommit = 2,
    UIWindowSceneDismissalAnimationDecline = 3
} __attribute__((availability(ios,introduced=13.0)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIWindowSceneDestructionRequestOptions
#define _REWRITER_typedef_UIWindowSceneDestructionRequestOptions
typedef struct objc_object UIWindowSceneDestructionRequestOptions;
typedef struct {} _objc_exc_UIWindowSceneDestructionRequestOptions;
#endif

struct UIWindowSceneDestructionRequestOptions_IMPL {
	struct UISceneDestructionRequestOptions_IMPL UISceneDestructionRequestOptions_IVARS;
};

// @property (nonatomic, readwrite) UIWindowSceneDismissalAnimation windowDismissalAnimation;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneSizeRestrictions
#define _REWRITER_typedef_UISceneSizeRestrictions
typedef struct objc_object UISceneSizeRestrictions;
typedef struct {} _objc_exc_UISceneSizeRestrictions;
#endif

struct UISceneSizeRestrictions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, assign) CGSize minimumSize;
// @property (nonatomic, assign) CGSize maximumSize;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIScene;
#ifndef _REWRITER_typedef_UIScene
#define _REWRITER_typedef_UIScene
typedef struct objc_object UIScene;
typedef struct {} _objc_exc_UIScene;
#endif

#ifndef _REWRITER_typedef_UIStoryboard
#define _REWRITER_typedef_UIStoryboard
typedef struct objc_object UIStoryboard;
typedef struct {} _objc_exc_UIStoryboard;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneConfiguration
#define _REWRITER_typedef_UISceneConfiguration
typedef struct objc_object UISceneConfiguration;
typedef struct {} _objc_exc_UISceneConfiguration;
#endif

struct UISceneConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};







// + (instancetype)configurationWithName:(nullable NSString *)name sessionRole:(UISceneSessionRole)sessionRole;
// - (instancetype)initWithName:(nullable NSString *)name sessionRole:(UISceneSessionRole)sessionRole __attribute__((objc_designated_initializer));

// @property (nonatomic, nullable, readonly) NSString *name;
// @property (nonatomic, readonly) UISceneSessionRole role;

// @property (nonatomic, nullable) Class sceneClass;
// @property (nonatomic, nullable) Class delegateClass;
// @property (nonatomic, nullable, strong) UIStoryboard *storyboard;
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneSession
#define _REWRITER_typedef_UISceneSession
typedef struct objc_object UISceneSession;
typedef struct {} _objc_exc_UISceneSession;
#endif

struct UISceneSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// @property (nonatomic, readonly, nullable) UIScene *scene;

// @property (nonatomic, readonly) UISceneSessionRole role;
// @property (nonatomic, readonly, copy) UISceneConfiguration *configuration;

// @property (nonatomic, readonly) NSString *persistentIdentifier;



// @property (nonatomic, nullable, strong) NSUserActivity *stateRestorationActivity;


// @property (nonatomic, nullable, copy) NSDictionary<NSString *, id> *userInfo;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UISceneActivationConditions
#define _REWRITER_typedef_UISceneActivationConditions
typedef struct objc_object UISceneActivationConditions;
typedef struct {} _objc_exc_UISceneActivationConditions;
#endif

struct UISceneActivationConditions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));







// @property(nonatomic, copy) NSPredicate *canActivateForTargetContentIdentifierPredicate;
// @property(nonatomic, copy) NSPredicate *prefersToActivateForTargetContentIdentifierPredicate;

/* @end */



extern "C" __attribute__((visibility ("default"))) // @interface NSUserActivity (UISceneActivationConditions)

// @property (nullable, nonatomic, copy) NSString *targetContentIdentifier __attribute__((availability(ios,introduced=13.0)));
/* @end */

#pragma clang assume_nonnull end
// @class UISceneOpenURLOptions;
#ifndef _REWRITER_typedef_UISceneOpenURLOptions
#define _REWRITER_typedef_UISceneOpenURLOptions
typedef struct objc_object UISceneOpenURLOptions;
typedef struct {} _objc_exc_UISceneOpenURLOptions;
#endif


#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIOpenURLContext
#define _REWRITER_typedef_UIOpenURLContext
typedef struct objc_object UIOpenURLContext;
typedef struct {} _objc_exc_UIOpenURLContext;
#endif

struct UIOpenURLContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

// @property (nonatomic, readonly, copy) NSURL *URL;
// @property (nonatomic, readonly, strong) UISceneOpenURLOptions *options;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIStatusBarManager
#define _REWRITER_typedef_UIStatusBarManager
typedef struct objc_object UIStatusBarManager;
typedef struct {} _objc_exc_UIStatusBarManager;
#endif

struct UIStatusBarManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIStatusBarStyle statusBarStyle;
// @property (nonatomic, readonly, getter=isStatusBarHidden) BOOL statusBarHidden;
// @property (nonatomic, readonly) CGRect statusBarFrame;

/* @end */



// @interface UIWindowScene (StatusBarManager)

// @property (nonatomic, readonly, nullable) UIStatusBarManager *statusBarManager __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UIScreenshotServiceDelegate;




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIScreenshotService
#define _REWRITER_typedef_UIScreenshotService
typedef struct objc_object UIScreenshotService;
typedef struct {} _objc_exc_UIScreenshotService;
#endif

struct UIScreenshotService_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));




// @property (nonatomic, weak, nullable) id<UIScreenshotServiceDelegate> delegate;




// @property (nonatomic, weak, readonly, nullable) UIWindowScene *windowScene;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) // @interface UIWindowScene (UIScreenshotService)




// @property (nonatomic, readonly, nullable) UIScreenshotService *screenshotService;

/* @end */



// @protocol UIScreenshotServiceDelegate <NSObject>

/* @optional */







// - (void)screenshotService:(UIScreenshotService *)screenshotService generatePDFRepresentationWithCompletion:(void (^)(NSData *_Nullable PDFData, NSInteger indexOfCurrentPage, CGRect rectInCurrentPage))completionHandler;

/* @end */

#pragma clang assume_nonnull end



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @interface NSUserActivity (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */




// @class UNNotification;
#ifndef _REWRITER_typedef_UNNotification
#define _REWRITER_typedef_UNNotification
typedef struct objc_object UNNotification;
typedef struct {} _objc_exc_UNNotification;
#endif


#pragma clang assume_nonnull begin

extern NSString *const UNNotificationDefaultActionIdentifier __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,unavailable)));
extern NSString *const UNNotificationDismissActionIdentifier __attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UNNotificationResponse
#define _REWRITER_typedef_UNNotificationResponse
typedef struct objc_object UNNotificationResponse;
typedef struct {} _objc_exc_UNNotificationResponse;
#endif

struct UNNotificationResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readonly, copy) UNNotification *notification;





// @property (nonatomic, readonly, copy) NSString *actionIdentifier;

// - (instancetype)init __attribute__((unavailable));

/* @end */


__attribute__((availability(macos,introduced=10.14))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UNTextInputNotificationResponse
#define _REWRITER_typedef_UNTextInputNotificationResponse
typedef struct objc_object UNTextInputNotificationResponse;
typedef struct {} _objc_exc_UNTextInputNotificationResponse;
#endif

struct UNTextInputNotificationResponse_IMPL {
	struct UNNotificationResponse_IMPL UNNotificationResponse_IVARS;
};



// @property (nonatomic, readonly, copy) NSString *userText;

/* @end */

#pragma clang assume_nonnull end

// @class UIScene;
#ifndef _REWRITER_typedef_UIScene
#define _REWRITER_typedef_UIScene
typedef struct objc_object UIScene;
typedef struct {} _objc_exc_UIScene;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) // @interface UNNotificationResponse (UIKitAdditions)

// @property (nullable, nonatomic, readonly) UIScene *targetScene __attribute__((availability(ios,introduced=13_0)));
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSString *UIActionIdentifier __attribute__((swift_name("UIAction.Identifier"))) __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=13.0)));

// @class UIAction;
#ifndef _REWRITER_typedef_UIAction
#define _REWRITER_typedef_UIAction
typedef struct objc_object UIAction;
typedef struct {} _objc_exc_UIAction;
#endif


typedef void (*UIActionHandler)(__kindof UIAction *action);

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIAction
#define _REWRITER_typedef_UIAction
typedef struct objc_object UIAction;
typedef struct {} _objc_exc_UIAction;
#endif

struct UIAction_IMPL {
	struct UIMenuElement_IMPL UIMenuElement_IVARS;
};



// @property (nonatomic, copy) NSString *title;


// @property (nullable, nonatomic, copy) UIImage *image;


// @property (nullable, nonatomic, copy) NSString *discoverabilityTitle;


// @property (nonatomic, readonly) UIActionIdentifier identifier;


// @property (nonatomic) UIMenuElementAttributes attributes;


// @property (nonatomic) UIMenuElementState state;
#if 0
+ (instancetype)actionWithTitle:(NSString *)title
                          image:(nullable UIImage *)image
                     identifier:(nullable UIActionIdentifier)identifier
                        handler:(UIActionHandler)handler
    __attribute__((availability(swift, unavailable, message="Use init(title:image:identifier:discoverabilityTitle:attributes:state:handler:) instead.")));
#endif


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end




// @class UICommand;
#ifndef _REWRITER_typedef_UICommand
#define _REWRITER_typedef_UICommand
typedef struct objc_object UICommand;
typedef struct {} _objc_exc_UICommand;
#endif

// @class UIMenuSystem;
#ifndef _REWRITER_typedef_UIMenuSystem
#define _REWRITER_typedef_UIMenuSystem
typedef struct objc_object UIMenuSystem;
typedef struct {} _objc_exc_UIMenuSystem;
#endif


#pragma clang assume_nonnull begin


__attribute__((availability(ios,introduced=13.0))) // @protocol UIMenuBuilder


// @property (nonatomic, readonly) UIMenuSystem *system;





// - (nullable UIMenu *)menuForIdentifier:(UIMenuIdentifier)identifier __attribute__((swift_name("menu(for:)")));





// - (nullable UIAction *)actionForIdentifier:(UIActionIdentifier)identifier __attribute__((swift_name("action(for:)")));






// - (nullable UICommand *)commandForAction:(SEL)action propertyList:(nullable id)propertyList __attribute__((swift_private));





// - (void)replaceMenuForIdentifier:(UIMenuIdentifier)replacedIdentifier withMenu:(UIMenu *)replacementMenu __attribute__((swift_name("replace(menu:with:)")));





#if 0
- (void)replaceChildrenOfMenuForIdentifier:(UIMenuIdentifier)parentIdentifier
                         fromChildrenBlock:(NSArray<UIMenuElement *> *(__attribute__((noescape)) ^)(NSArray<UIMenuElement *> *))childrenBlock __attribute__((swift_name("replaceChildren(ofMenu:from:)")));
#endif






// - (void)insertSiblingMenu:(UIMenu *)siblingMenu beforeMenuForIdentifier:(UIMenuIdentifier)siblingIdentifier __attribute__((swift_name("insertSibling(_:beforeMenu:)")));





// - (void)insertSiblingMenu:(UIMenu *)siblingMenu afterMenuForIdentifier:(UIMenuIdentifier)siblingIdentifier __attribute__((swift_name("insertSibling(_:afterMenu:)")));





// - (void)insertChildMenu:(UIMenu *)childMenu atStartOfMenuForIdentifier:(UIMenuIdentifier)parentIdentifier __attribute__((swift_name("insertChild(_:atStartOfMenu:)")));





// - (void)insertChildMenu:(UIMenu *)childMenu atEndOfMenuForIdentifier:(UIMenuIdentifier)parentIdentifier __attribute__((swift_name("insertChild(_:atEndOfMenu:)")));




// - (void)removeMenuForIdentifier:(UIMenuIdentifier)removedIdentifier __attribute__((swift_name("remove(menu:)")));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) 
#ifndef _REWRITER_typedef_UIMenuSystem
#define _REWRITER_typedef_UIMenuSystem
typedef struct objc_object UIMenuSystem;
typedef struct {} _objc_exc_UIMenuSystem;
#endif

struct UIMenuSystem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property (class, nonatomic, readonly) UIMenuSystem *mainSystem;


@property (class, nonatomic, readonly) UIMenuSystem *contextSystem;

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// - (void)setNeedsRebuild;


// - (void)setNeedsRevalidate;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif








typedef UIMenu * _Nullable (*UIContextMenuActionProvider)(NSArray<UIMenuElement *> *suggestedActions);




typedef UIViewController * _Nullable (*UIContextMenuContentPreviewProvider)(void);


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIContextMenuConfiguration
#define _REWRITER_typedef_UIContextMenuConfiguration
typedef struct objc_object UIContextMenuConfiguration;
typedef struct {} _objc_exc_UIContextMenuConfiguration;
#endif

struct UIContextMenuConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) id<NSCopying> identifier;
#if 0
+ (instancetype)configurationWithIdentifier:(nullable id<NSCopying>)identifier
                            previewProvider:(nullable UIContextMenuContentPreviewProvider)previewProvider
                             actionProvider:(nullable UIContextMenuActionProvider)actionProvider;
#endif


/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UITargetedPreview;
#ifndef _REWRITER_typedef_UITargetedPreview
#define _REWRITER_typedef_UITargetedPreview
typedef struct objc_object UITargetedPreview;
typedef struct {} _objc_exc_UITargetedPreview;
#endif

// @protocol UIContextMenuInteractionDelegate;

typedef NSInteger UIContextMenuInteractionCommitStyle; enum {
    UIContextMenuInteractionCommitStyleDismiss = 0,
    UIContextMenuInteractionCommitStylePop,
} __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIContextMenuInteraction
#define _REWRITER_typedef_UIContextMenuInteraction
typedef struct objc_object UIContextMenuInteraction;
typedef struct {} _objc_exc_UIContextMenuInteraction;
#endif

struct UIContextMenuInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, weak, readonly) id<UIContextMenuInteractionDelegate> delegate;

// - (instancetype)initWithDelegate:(id<UIContextMenuInteractionDelegate>)delegate __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));






// - (CGPoint)locationInView:(nullable UIView *)view;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIContextMenuInteractionAnimating <NSObject>


// @property (nonatomic, readonly, nullable) UIViewController *previewViewController;

// - (void)addAnimations:(void (^)(void))animations;
// - (void)addCompletion:(void (^)(void))completion;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIContextMenuInteractionCommitAnimating <UIContextMenuInteractionAnimating>


// @property (nonatomic) UIContextMenuInteractionCommitStyle preferredCommitStyle;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIContextMenuInteractionDelegate <NSObject>
// - (nullable UIContextMenuConfiguration *)contextMenuInteraction:(UIContextMenuInteraction *)interaction configurationForMenuAtLocation:(CGPoint)location;

/* @optional */







// - (nullable UITargetedPreview *)contextMenuInteraction:(UIContextMenuInteraction *)interaction previewForHighlightingMenuWithConfiguration:(UIContextMenuConfiguration *)configuration;
// - (nullable UITargetedPreview *)contextMenuInteraction:(UIContextMenuInteraction *)interaction previewForDismissingMenuWithConfiguration:(UIContextMenuConfiguration *)configuration;
// - (void)contextMenuInteraction:(UIContextMenuInteraction *)interaction willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)configuration animator:(id<UIContextMenuInteractionCommitAnimating>)animator;
// - (void)contextMenuInteraction:(UIContextMenuInteraction *)interaction willDisplayMenuForConfiguration:(UIContextMenuConfiguration *)configuration animator:(nullable id<UIContextMenuInteractionAnimating>)animator;
// - (void)contextMenuInteraction:(UIContextMenuInteraction *)interaction willEndForConfiguration:(UIContextMenuConfiguration *)configuration animator:(nullable id<UIContextMenuInteractionAnimating>)animator;

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

// @class UIWindowScene;
#ifndef _REWRITER_typedef_UIWindowScene
#define _REWRITER_typedef_UIWindowScene
typedef struct objc_object UIWindowScene;
typedef struct {} _objc_exc_UIWindowScene;
#endif


__attribute__((availability(ios,introduced=13.0))) // @protocol UITextFormattingCoordinatorDelegate <NSObject>
// - (void)updateTextAttributesWithConversionHandler:(__attribute__((noescape)) UITextAttributesConversionHandler _Nonnull)conversionHandler __attribute__((availability(ios,introduced=13.0)));
/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=13.0)))


#ifndef _REWRITER_typedef_UITextFormattingCoordinator
#define _REWRITER_typedef_UITextFormattingCoordinator
typedef struct objc_object UITextFormattingCoordinator;
typedef struct {} _objc_exc_UITextFormattingCoordinator;
#endif

struct UITextFormattingCoordinator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property(nullable, nonatomic, weak) id<UITextFormattingCoordinatorDelegate> delegate;
@property(class, readonly, getter=isFontPanelVisible) BOOL fontPanelVisible;

// + (instancetype)textFormattingCoordinatorForWindowScene:(UIWindowScene *)windowScene;

// - (instancetype)initWithWindowScene:(UIWindowScene *)windowScene __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));


#if 0
- (void)setSelectedAttributes:(NSDictionary<NSAttributedStringKey, id> *)attributes
                   isMultiple:(BOOL)flag;
#endif



// + (void)toggleFontPanel:(id)sender;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIDocumentBrowserViewControllerDelegate;
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif

#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

#ifndef _REWRITER_typedef_UIDocumentBrowserAction
#define _REWRITER_typedef_UIDocumentBrowserAction
typedef struct objc_object UIDocumentBrowserAction;
typedef struct {} _objc_exc_UIDocumentBrowserAction;
#endif

#ifndef _REWRITER_typedef_UIDocumentBrowserTransitionController
#define _REWRITER_typedef_UIDocumentBrowserTransitionController
typedef struct objc_object UIDocumentBrowserTransitionController;
typedef struct {} _objc_exc_UIDocumentBrowserTransitionController;
#endif


extern NSErrorDomain const UIDocumentBrowserErrorDomain __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger UIDocumentBrowserErrorCode; enum {
    UIDocumentBrowserErrorGeneric = 1,
    UIDocumentBrowserErrorNoLocationAvailable __attribute__((availability(ios,introduced=12.0))) = 2,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIDocumentBrowserImportMode; enum {
    UIDocumentBrowserImportModeNone,
    UIDocumentBrowserImportModeCopy,
    UIDocumentBrowserImportModeMove,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserViewController.ImportMode")));

typedef NSUInteger UIDocumentBrowserUserInterfaceStyle; enum {
    UIDocumentBrowserUserInterfaceStyleWhite = 0,
    UIDocumentBrowserUserInterfaceStyleLight,
    UIDocumentBrowserUserInterfaceStyleDark,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserViewController.BrowserUserInterfaceStyle")));





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIDocumentBrowserViewController
#define _REWRITER_typedef_UIDocumentBrowserViewController
typedef struct objc_object UIDocumentBrowserViewController;
typedef struct {} _objc_exc_UIDocumentBrowserViewController;
#endif

struct UIDocumentBrowserViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initForOpeningFilesWithContentTypes:(nullable NSArray <NSString *> *)allowedContentTypes __attribute__((objc_designated_initializer));


// - (instancetype)initWithNibName:(nullable NSString *)nibName bundle:(nullable NSBundle *)bundle __attribute__((unavailable));

// @property (nullable, nonatomic, weak) id <UIDocumentBrowserViewControllerDelegate> delegate;





// @property (assign, nonatomic) BOOL allowsDocumentCreation;


// @property (assign, nonatomic) BOOL allowsPickingMultipleItems;

// @property (readonly, copy, nonatomic) NSArray<NSString *> *allowedContentTypes;





// @property (readonly, copy, nonatomic) NSArray<NSString *> *recentDocumentsContentTypes __attribute__((availability(ios,introduced=13.0)));


// @property (assign, nonatomic) BOOL shouldShowFileExtensions __attribute__((availability(ios,introduced=13.0)));




// @property (strong, nonatomic) NSArray <UIBarButtonItem *> *additionalLeadingNavigationBarButtonItems;


// @property (strong, nonatomic) NSArray <UIBarButtonItem *> *additionalTrailingNavigationBarButtonItems;






// - (void)revealDocumentAtURL:(NSURL *)url importIfNeeded:(BOOL)importIfNeeded completion:(nullable void(^)(NSURL * _Nullable revealedDocumentURL, NSError * _Nullable error))completion;





// - (void)importDocumentAtURL:(NSURL *)documentURL nextToDocumentAtURL:(NSURL *)neighbourURL mode:(UIDocumentBrowserImportMode)importMode completionHandler:(void (^)(NSURL * _Nullable, NSError * _Nullable))completion;





// - (UIDocumentBrowserTransitionController *)transitionControllerForDocumentAtURL:(NSURL *)documentURL __attribute__((availability(ios,introduced=12.0))) __attribute__((swift_name("transitionController(forDocumentAt:)")));

// - (UIDocumentBrowserTransitionController *)transitionControllerForDocumentURL:(NSURL *)documentURL __attribute__((availability(ios,introduced=11.0,deprecated=12.0,replacement="transitionControllerForDocumentAtURL:")));





// @property (copy, nonatomic) NSArray <UIDocumentBrowserAction *> *customActions;




// @property (assign, nonatomic) UIDocumentBrowserUserInterfaceStyle browserUserInterfaceStyle;


// @property(copy, nonatomic) NSString * localizedCreateDocumentActionTitle __attribute__((availability(ios,introduced=13.0)));


// @property(assign, nonatomic) CGFloat defaultDocumentAspectRatio __attribute__((availability(ios,introduced=13.0)));

/* @end */




__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UIDocumentBrowserViewControllerDelegate <NSObject>

/* @optional */



// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didPickDocumentURLs:(NSArray <NSURL *> *)documentURLs __attribute__((availability(ios,introduced=11.0,deprecated=12.0,replacement="documentBrowser:didPickDocumentsAtURLs:")));

// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didPickDocumentsAtURLs:(NSArray <NSURL *> *)documentURLs __attribute__((availability(ios,introduced=12.0)));
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didRequestDocumentCreationWithHandler:(void(^)(NSURL *_Nullable urlToImport, UIDocumentBrowserImportMode importMode))importHandler;
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didImportDocumentAtURL:(NSURL *)sourceURL toDestinationURL:(NSURL *)destinationURL;
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller failedToImportDocumentAtURL:(NSURL *)documentURL error:(NSError * _Nullable)error;




// - (NSArray<__kindof UIActivity *> *)documentBrowser:(UIDocumentBrowserViewController *)controller applicationActivitiesForDocumentURLs:(NSArray <NSURL *> *)documentURLs;


// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller willPresentActivityViewController:(UIActivityViewController *)activityViewController;

/* @end */








__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIDocumentBrowserTransitionController
#define _REWRITER_typedef_UIDocumentBrowserTransitionController
typedef struct objc_object UIDocumentBrowserTransitionController;
typedef struct {} _objc_exc_UIDocumentBrowserTransitionController;
#endif

struct UIDocumentBrowserTransitionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));


// @property (strong, nonatomic, nullable) NSProgress *loadingProgress;





// @property (weak, nullable, nonatomic) UIView *targetView;

/* @end */

#pragma clang assume_nonnull end
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger UIDocumentBrowserActionAvailability; enum {
    UIDocumentBrowserActionAvailabilityMenu = 1,
    UIDocumentBrowserActionAvailabilityNavigationBar = 1 << 1,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserAction.Availability")));


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentBrowserAction
#define _REWRITER_typedef_UIDocumentBrowserAction
typedef struct objc_object UIDocumentBrowserAction;
typedef struct {} _objc_exc_UIDocumentBrowserAction;
#endif

struct UIDocumentBrowserAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithIdentifier:(NSString *)identifier localizedTitle:(NSString *)localizedTitle availability:(UIDocumentBrowserActionAvailability)availability handler:(void(^)(NSArray <NSURL *> *))handler __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) NSString *identifier;
// @property (nonatomic, readonly) NSString *localizedTitle;
// @property (nonatomic, readonly) UIDocumentBrowserActionAvailability availability;

// @property (nonatomic, strong, nullable) UIImage *image;


// @property (nonatomic, copy) NSArray<NSString*> *supportedContentTypes;


// @property (nonatomic, assign) BOOL supportsMultipleItems;

/* @end */

#pragma clang assume_nonnull end











#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


typedef NSString * UIActivityType __attribute__((swift_wrapper(struct)));

extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFacebook __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTwitter __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToWeibo __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMessage __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMail __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePrint __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeCopyToPasteboard __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAssignToContact __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeSaveToCameraRoll __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAddToReadingList __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFlickr __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToVimeo __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTencentWeibo __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAirDrop __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeOpenInIBooks __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMarkupAsPDF __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIActivityCategory; enum {
    UIActivityCategoryAction,
    UIActivityCategoryShare,
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif

struct UIActivity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly) UIActivityCategory activityCategory __attribute__((availability(ios,introduced=7.0)));

// @property(nonatomic, readonly, nullable) UIActivityType activityType;
// @property(nonatomic, readonly, nullable) NSString *activityTitle;
// @property(nonatomic, readonly, nullable) UIImage *activityImage;

// - (BOOL)canPerformWithActivityItems:(NSArray *)activityItems;
// - (void)prepareWithActivityItems:(NSArray *)activityItems;

// @property(nonatomic, readonly, nullable) UIViewController *activityViewController;
// - (void)performActivity;



// - (void)activityDidFinish:(BOOL)completed;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIActivityViewController;
#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_LPLinkMetadata
#define _REWRITER_typedef_LPLinkMetadata
typedef struct objc_object LPLinkMetadata;
typedef struct {} _objc_exc_LPLinkMetadata;
#endif


// @protocol UIActivityItemSource <NSObject>

/* @required */

// - (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)activityViewController;
// - (nullable id)activityViewController:(UIActivityViewController *)activityViewController itemForActivityType:(nullable UIActivityType)activityType;

/* @optional */

// - (NSString *)activityViewController:(UIActivityViewController *)activityViewController subjectForActivityType:(nullable UIActivityType)activityType;
// - (NSString *)activityViewController:(UIActivityViewController *)activityViewController dataTypeIdentifierForActivityType:(nullable UIActivityType)activityType;
// - (nullable UIImage *)activityViewController:(UIActivityViewController *)activityViewController thumbnailImageForActivityType:(nullable UIActivityType)activityType suggestedSize:(CGSize)size;
// - (nullable LPLinkMetadata *)activityViewControllerLinkMetadata:(UIActivityViewController *)activityViewController __attribute__((availability(ios,introduced=13.0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivityItemProvider
#define _REWRITER_typedef_UIActivityItemProvider
typedef struct objc_object UIActivityItemProvider;
typedef struct {} _objc_exc_UIActivityItemProvider;
#endif

struct UIActivityItemProvider_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithPlaceholderItem:(id)placeholderItem __attribute__((objc_designated_initializer));

// @property(nullable,nonatomic,strong,readonly) id placeholderItem;
// @property(nullable,nonatomic,copy,readonly) UIActivityType activityType;

// @property(nonnull, nonatomic, readonly) id item;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef void (*UIActivityViewControllerCompletionHandler)(UIActivityType _Nullable activityType, BOOL completed);
typedef void (*UIActivityViewControllerCompletionWithItemsHandler)(UIActivityType _Nullable activityType, BOOL completed, NSArray * _Nullable returnedItems, NSError * _Nullable activityError);

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

struct UIActivityViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((unavailable));
// - (instancetype)initWithActivityItems:(NSArray *)activityItems applicationActivities:(nullable NSArray<__kindof UIActivity *> *)applicationActivities __attribute__((objc_designated_initializer));

// @property(nullable, nonatomic, copy) UIActivityViewControllerCompletionHandler completionHandler __attribute__((availability(ios,introduced=6.0,deprecated=8.0,replacement="completionWithItemsHandler")));
// @property(nullable, nonatomic, copy) UIActivityViewControllerCompletionWithItemsHandler completionWithItemsHandler __attribute__((availability(ios,introduced=8.0)));

// @property(nullable, nonatomic, copy) NSArray<UIActivityType> *excludedActivityTypes;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UIDocumentInteractionControllerDelegate;

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


__attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentInteractionController
#define _REWRITER_typedef_UIDocumentInteractionController
typedef struct objc_object UIDocumentInteractionController;
typedef struct {} _objc_exc_UIDocumentInteractionController;
#endif

struct UIDocumentInteractionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIDocumentInteractionController *)interactionControllerWithURL:(NSURL *)url;

// @property(nullable, nonatomic, weak) id<UIDocumentInteractionControllerDelegate> delegate;

// @property(nullable, strong) NSURL *URL;
// @property(nullable, nonatomic, copy) NSString *UTI;
// @property(nullable, copy) NSString *name;
// @property(nonatomic, readonly) NSArray<UIImage *> *icons;
// @property(nullable, nonatomic, strong) id annotation;






// - (BOOL)presentOptionsMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
// - (BOOL)presentOptionsMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;



// - (BOOL)presentPreviewAnimated:(BOOL)animated;




// - (BOOL)presentOpenInMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
// - (BOOL)presentOpenInMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;


// - (void)dismissPreviewAnimated:(BOOL)animated;


// - (void)dismissMenuAnimated:(BOOL)animated;



// @property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;

/* @end */


__attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,unavailable))) // @protocol UIDocumentInteractionControllerDelegate <NSObject>

/* @optional */




// - (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)controller;





// - (CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)controller;
// - (nullable UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionController:(UIDocumentInteractionController *)controller willBeginSendingToApplication:(nullable NSString *)application;
// - (void)documentInteractionController:(UIDocumentInteractionController *)controller didEndSendingToApplication:(nullable NSString *)application;


// - (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller canPerformAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));
// - (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller performAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));

/* @end */

#pragma clang assume_nonnull end

#ifndef _REWRITER_typedef_AppDelegate
#define _REWRITER_typedef_AppDelegate
typedef struct objc_object AppDelegate;
typedef struct {} _objc_exc_AppDelegate;
#endif

struct AppDelegate_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};



/* @end */


#pragma mark - struct __main_block_impl_0 -
struct __main_block_impl_0 {
  struct __block_impl impl;
  struct __main_block_desc_0* Desc;
  __main_block_impl_0(void *fp, struct __main_block_desc_0 *desc, int flags=0) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};

#pragma mark - struct __main_block_func_0 -
static void __main_block_func_0(struct __main_block_impl_0 *__cself) {

            NSLog((NSString *)&__NSConstantStringImpl__var_folders_1b_w5knk2_j31bc6sd266gjwj2w0000gn_T_main_7345c2_mi_0);
        }

#pragma mark - struct __main_block_desc_0_DATA -
static struct __main_block_desc_0 {
  size_t reserved;
  size_t Block_size;
} __main_block_desc_0_DATA = { 0, sizeof(struct __main_block_impl_0)};
int main(int argc, char * argv[]) {
    NSString * appDelegateClassName;
    /* @autoreleasepool */ { __AtAutoreleasePool __autoreleasepool; 

        appDelegateClassName = NSStringFromClass(((Class (*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("AppDelegate"), sel_registerName("class")));
        /**
         __main_block_impl_0,
         __main_block_func_0,
         __main_block_desc_0_DATA,
         __block_impl,
         搜索一下这四个struct.
         */
        
        void (*block)(void) = ((void (*)())&__main_block_impl_0((void *)__main_block_func_0, &__main_block_desc_0_DATA));
        /**
         // 1-1：创建__main_block_impl_0对象
         __main_block_impl_0 block_impl = __main_block_impl_0((void *)__main_block_func_0, &__main_block_desc_0_DATA);
         // 1-2: 将__main_block_impl_0强制转换为函数指针
         void (*block)(void) =  ((void (*)()) &block_impl;
         */
        
        ((void (*)(__block_impl *))((__block_impl *)block)->FuncPtr)((__block_impl *)block);
        /**
         // 2-1：定义另一个函数指针，并将__main_block_impl_0中的FuncPtr转换为定义的函数指针
         void(*block_call)(__block_impl *) = (void(*)(__block_impl *))((__block_impl *)block)->FuncPtr;
         // 2-2: 调用函数指针
         block_call((__block_impl *)block);
         */

        /**
         从上面我们可以看出，block的定义实际上就是创建了一个__main_block_impl_0对象，而block的调用，就是调用对象的函数指针FuncPtr。
         */
    }
    return UIApplicationMain(argc, argv, __null, appDelegateClassName);
}
static struct IMAGE_INFO { unsigned version; unsigned flag; } _OBJC_IMAGE_INFO = { 0, 2 };
